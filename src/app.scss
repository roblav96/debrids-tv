// Global SCSS styling
// @see https://docs.nativescript.org/ui/styling

.text-muted {
	@include colorize($color: disabled);
}

//* Workarounds and tweaks *//

// FormattedString Spans inherit the background of their parent
Label,
Button,
TextField,
TextView {
	> *,
	> * > * {
		background-color: transparent;
	}
}

ListView,
RadListView {
	min-height: 100;
}

Image {
	min-height: 20;
}

.nt-icon {
	font-size: const(btn-font-size);
}

@if $compat {
	#login-background {
		margin-top: -20;
		background-size: cover;
		background-position: center;
	}

	.login-wrap {
		padding: 0 40;
	}

	.logo-wrap {
		margin: 60 0 10 0;
		padding: 20 0;

		.login-logo {
			text-align: center;
			font-size: 30;
			font-weight: bold;
			margin-bottom: 10;
			opacity: 0.9;
		}

		.login-logo-sub {
			opacity: 0.8;
			text-align: center;
		}
	}

	.login-wrapper {
		padding: 20;
		background-color: #fff;
		border-radius: 3;

		TextField {
			padding: 10 10;
			margin: 10 0 0 0;
		}
	}

	.go-back {
		font-size: 14;
		text-align: center;
		margin-top: 10;
	}
}

// $focus is an internal variable to abstract the accent from the input
$focus: null !default;

@if (global_variable_exists('primary-palette-name')) {
	$focus: $primary-palette-name;
} @else {
	@if (global_variable_exists('accent')) {
		$focus: $accent;
	} @else {
		$focus: #30bcff;
	}
}

$accent-dark: transparent !default;
$disabled: mix($focus, $background, 40%) !default;
$border-color: $focus !default;

// Constants

$colors: (
	// Core colors
	'black': $black,
	'white': $white,
	grey: $grey,
	grey-light: $grey-background,
	charcoal: $charcoal,
	'transparent': transparent,
	// Accents
	aqua: #00caab,
	blue: #3a53ff,
	brown: #795548,
	forest: #006968,
	grey-dark: #5c687c,
	purple: #8130ff,
	lemon: #ffea00,
	lime: #aee406,
	orange: #f57c00,
	ruby: #ff1744,
	sky: #30bcff,
	error: #d50000
);

$constants: map-merge(
	$colors,
	(
		font-size: $font-size,
		// Buttons
		background-alt-10: $background-alt-10,
		btn-color-secondary: $btn-color-secondary,
		btn-color-disabled: $btn-color-disabled,
		btn-font-size: $btn-font-size,
		btn-min-width: $btn-min-width,
		btn-height: $btn-height,
		btn-padding-x: $btn-padding-x,
		btn-padding-y: $btn-padding-y,
		btn-margin-x: $btn-margin-x,
		btn-margin-y: $btn-margin-y,
		btn-radius: $btn-radius,
		// Headings
		headings-margin-bottom: $headings-margin-bottom,
		headings-font-weight: $headings-font-weight,
		// Borders
		border-width: $border-width,
		border-radius: $border-radius,
		border-radius-sm: $border-radius-sm,
		border-radius-lg: $border-radius-lg,
		// Icons
		icon-font-size: $font-size,
		icon-font-size-lg: $font-size + 4,
		// Misc
		disabled-opacity: $disabled-opacity,
	)
);

@import './light';
@import './dark';

// Core dark colors
$dark-colors: (
	primary: $primary-dark,
	background: $background-dark,
	secondary: $secondary-dark,
	accent: lighten($focus, 10%),
	complementary:
		if(
			light(complementary) == #fff,
			$background-dark,
			if($complementary-dark != transparent, $complementary-dark, light(complementary))
		),
	btn-color: $white,
	border-color: lighten($focus, 10%),
);

@if (global_variable_exists('theme-type')) {
	$dark-colors: map-merge(
		$dark-colors,
		(
			accent: lighten(get-base-hue($primary-palette-name, 500), 10%),
			complementary: get-base-hue($secondary-palette-name, 500),
			btn-color: map-get($material-dark-complimentary, base-bg),
			border-color: rgba(0, 0, 0, 0.08),
		)
	);

	$dark-colors: map-merge(
		$dark-colors,
		(
			disabled: mix(dark(accent), dark(background), 40%),
		)
	);
}

@if (global_variable_exists('body-bg')) {
	$dark-colors: map-merge(
		$dark-colors,
		(
			background: mix($body-bg, $charcoal, if(lightness($body-bg) > 0.5, 10%, 40%)),
		)
	);

	$dark-colors: map-merge(
		$dark-colors,
		(
			complementary: $card-cap-bg,
			primary: alternate(dark(background), 70%),
			border-color: lighten($background, 3%),
			btn-color: mix($secondary, $charcoal, 30%),
		)
	);
}

@if (global_variable_exists('bg-color')) {
	$dark-colors: map-merge(
		$dark-colors,
		(
			background: mix($bg-color, $charcoal, 10%),
		)
	);

	$dark-colors: map-merge(
		$dark-colors,
		(
			complementary: $accent,
			primary: alternate(dark(background), 70%),
			border-color: rgba(255, 255, 255, 0.08),
			btn-color: mix($base-bg, $charcoal, 10%),
		)
	);
}

$dark-colors: map-merge(
	$dark-colors,
	(
		accent: if($accent-dark != transparent, $accent-dark, dark(accent)),
	)
);

$dark-colors: map-merge(
	$dark-colors,
	(
		background-alt-5: lighten(dark(background), 5%),
		background-alt-10: lighten(dark(background), 10%),
		background-alt-20: lighten(dark(background), 20%),
		disabled: mix(dark(accent), dark(background), 40%),
		complementary:
			if(
				$complementary-dark != transparent,
				$complementary-dark,
				mix(dark(complementary), $black, 90%)
			),
		text-color: dark(primary),
		headings-color: dark(primary),
		tab-text-color: mix(const(gray), dark(accent), 70%),
		accent-dark: lighten(dark(accent), 20%),
		accent-light: lighten(dark(accent), 40%),
		accent-transparent: mix(transparent, dark(accent), 20%),
		primary-accent: mix(transparent, dark(accent), 60%),
		background-accent: mix(transparent, dark(accent), 90%),
		background-dark-accent: mix(transparent, dark(accent), 85%),
		item-active-color: mix(dark(primary), dark(background), 70%),
	)
);

$dark-colors: map-merge(
	$dark-colors,
	(
		item-active-background: dark(background-dark-accent),
		complementary-color:
			if(
				$complementary-color-dark != transparent,
				$complementary-color-dark,
				alternate(dark(complementary), 100%)
			),
		complementary-dark: darken(dark(complementary), 5%),
		item-active-icon-color: dark(item-active-color),
		btn-color-inverse: alternate(dark(accent)),
		btn-color-secondary: darken(dark(btn-color), 10%),
	)
);
