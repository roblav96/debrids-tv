declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export abstract class AbstractConcatenatedTimeline extends com.google.android.exoplayer2.Timeline {
					public static class: java.lang.Class<com.google.android.exoplayer2.AbstractConcatenatedTimeline>;
					public getLastWindowIndex(shuffleModeEnabled: boolean): number;
					public getChildIndexByChildUid(object0: any): number;
					public getChildIndexByWindowIndex(int0: number): number;
					public getFirstWindowIndex(shuffleModeEnabled: boolean): number;
					public getPeriodByUid(uid: any, period: com.google.android.exoplayer2.Timeline.Period): com.google.android.exoplayer2.Timeline.Period;
					public getNextWindowIndex(windowIndex: number, repeatMode: number, shuffleModeEnabled: boolean): number;
					/** @deprecated */
					public getWindow(windowIndex: number, window: com.google.android.exoplayer2.Timeline.Window, setTag: boolean): com.google.android.exoplayer2.Timeline.Window;
					public constructor();
					public getWindow(int0: number, window1: com.google.android.exoplayer2.Timeline.Window, long2: number): com.google.android.exoplayer2.Timeline.Window;
					public getFirstWindowIndexByChildIndex(int0: number): number;
					public getPeriod(periodIndex: number, period: com.google.android.exoplayer2.Timeline.Period): com.google.android.exoplayer2.Timeline.Period;
					public getUidOfPeriod(int0: number): any;
					public getChildUidByChildIndex(int0: number): any;
					public static getConcatenatedUid(childTimelineUid: any, childPeriodOrWindowUid: any): any;
					public getPreviousWindowIndex(windowIndex: number, repeatMode: number, shuffleModeEnabled: boolean): number;
					public getPeriod(periodIndex: number, period: com.google.android.exoplayer2.Timeline.Period, setIds: boolean): com.google.android.exoplayer2.Timeline.Period;
					public static getChildPeriodUidFromConcatenatedUid(concatenatedUid: any): any;
					public getPeriodByUid(periodUid: any, period: com.google.android.exoplayer2.Timeline.Period): com.google.android.exoplayer2.Timeline.Period;
					public getIndexOfPeriod(uid: any): number;
					public getIndexOfPeriod(object0: any): number;
					public getWindow(windowIndex: number, window: com.google.android.exoplayer2.Timeline.Window): com.google.android.exoplayer2.Timeline.Window;
					public getTimelineByChildIndex(int0: number): com.google.android.exoplayer2.Timeline;
					public getFirstPeriodIndexByChildIndex(int0: number): number;
					public getUidOfPeriod(periodIndex: number): any;
					public getChildIndexByPeriodIndex(int0: number): number;
					public getWindow(windowIndex: number, window: com.google.android.exoplayer2.Timeline.Window, defaultPositionProjectionUs: number): com.google.android.exoplayer2.Timeline.Window;
					public static getChildTimelineUidFromConcatenatedUid(concatenatedUid: any): any;
					public constructor(isAtomic: boolean, shuffleOrder: com.google.android.exoplayer2.source.ShuffleOrder);
					public getPeriod(int0: number, period1: com.google.android.exoplayer2.Timeline.Period, boolean2: boolean): com.google.android.exoplayer2.Timeline.Period;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class AudioBecomingNoisyManager extends java.lang.Object {
					public static class: java.lang.Class<com.google.android.exoplayer2.AudioBecomingNoisyManager>;
					public constructor(context: globalAndroid.content.Context, eventHandler: globalAndroid.os.Handler, listener: com.google.android.exoplayer2.AudioBecomingNoisyManager.EventListener);
					public setEnabled(enabled: boolean): void;
				}
				export module AudioBecomingNoisyManager {
					export class AudioBecomingNoisyReceiver extends globalAndroid.content.BroadcastReceiver implements java.lang.Runnable {
						public static class: java.lang.Class<com.google.android.exoplayer2.AudioBecomingNoisyManager.AudioBecomingNoisyReceiver>;
						public onReceive(context: globalAndroid.content.Context, intent: globalAndroid.content.Intent): void;
						public constructor();
						public run(): void;
						public onReceive(context0: globalAndroid.content.Context, intent1: globalAndroid.content.Intent): void;
						public constructor(param0: com.google.android.exoplayer2.AudioBecomingNoisyManager, eventHandler: globalAndroid.os.Handler, listener: com.google.android.exoplayer2.AudioBecomingNoisyManager.EventListener);
					}
					export class EventListener extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.AudioBecomingNoisyManager.EventListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.AudioBecomingNoisyManager() when extending the interface class.
						 */
						public constructor(implementation: {
							onAudioBecomingNoisy(): void;
						});
						public constructor();
						public onAudioBecomingNoisy(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class AudioFocusManager extends java.lang.Object {
					public static class: java.lang.Class<com.google.android.exoplayer2.AudioFocusManager>;
					public static PLAYER_COMMAND_DO_NOT_PLAY: number;
					public static PLAYER_COMMAND_WAIT_FOR_CALLBACK: number;
					public static PLAYER_COMMAND_PLAY_WHEN_READY: number;
					public getVolumeMultiplier(): number;
					public updateAudioFocus(playWhenReady: boolean, playbackState: number): number;
					public release(): void;
					public constructor(context: globalAndroid.content.Context, eventHandler: globalAndroid.os.Handler, playerControl: com.google.android.exoplayer2.AudioFocusManager.PlayerControl);
					public setAudioAttributes(audioAttributes: com.google.android.exoplayer2.audio.AudioAttributes): void;
				}
				export module AudioFocusManager {
					export class AudioFocusListener extends java.lang.Object implements globalAndroid.media.AudioManager.OnAudioFocusChangeListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.AudioFocusManager.AudioFocusListener>;
						public constructor(param0: com.google.android.exoplayer2.AudioFocusManager, eventHandler: globalAndroid.os.Handler);
						public onAudioFocusChange(focusChange: number): void;
					}
					export class PlayerCommand extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<com.google.android.exoplayer2.AudioFocusManager.PlayerCommand>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.AudioFocusManager() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class PlayerControl extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.AudioFocusManager.PlayerControl>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.AudioFocusManager() when extending the interface class.
						 */
						public constructor(implementation: {
							setVolumeMultiplier(float0: number): void;
							executePlayerCommand(int0: number): void;
						});
						public constructor();
						public executePlayerCommand(int0: number): void;
						public setVolumeMultiplier(float0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export abstract class BasePlayer extends java.lang.Object implements com.google.android.exoplayer2.Player {
					public static class: java.lang.Class<com.google.android.exoplayer2.BasePlayer>;
					public window: com.google.android.exoplayer2.Timeline.Window;
					public isCurrentWindowDynamic(): boolean;
					public getPlayWhenReady(): boolean;
					public getRendererCount(): number;
					public removeMediaItem(index: number): void;
					public setShuffleModeEnabled(boolean0: boolean): void;
					public setPlayWhenReady(boolean0: boolean): void;
					/** @deprecated */
					public getPlaybackError(): com.google.android.exoplayer2.ExoPlaybackException;
					public addMediaItem(index: number, mediaItem: com.google.android.exoplayer2.MediaItem): void;
					public hasNext(): boolean;
					/** @deprecated */
					public getCurrentTag(): any;
					public getContentPosition(): number;
					public constructor();
					public setMediaItem(mediaItem: com.google.android.exoplayer2.MediaItem, startPositionMs: number): void;
					public pause(): void;
					public getDeviceComponent(): com.google.android.exoplayer2.Player.DeviceComponent;
					public clearMediaItems(): void;
					public stop(boolean0: boolean): void;
					public getPlaybackSuppressionReason(): number;
					public getCurrentAdGroupIndex(): number;
					public getCurrentPeriodIndex(): number;
					public prepare(): void;
					public next(): void;
					public getMetadataComponent(): com.google.android.exoplayer2.Player.MetadataComponent;
					public removeListener(eventListener0: com.google.android.exoplayer2.Player.EventListener): void;
					public getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
					public getShuffleModeEnabled(): boolean;
					public getCurrentWindowIndex(): number;
					public previous(): void;
					public seekToDefaultPosition(windowIndex: number): void;
					public getRendererType(int0: number): number;
					public seekTo(int0: number, long1: number): void;
					public release(): void;
					public getMediaItemAt(index: number): com.google.android.exoplayer2.MediaItem;
					public getCurrentAdIndexInAdGroup(): number;
					public getPreviousWindowIndex(): number;
					public isCurrentWindowSeekable(): boolean;
					public getAudioComponent(): com.google.android.exoplayer2.Player.AudioComponent;
					public getCurrentLiveOffset(): number;
					public getPlayerError(): com.google.android.exoplayer2.ExoPlaybackException;
					public getContentBufferedPosition(): number;
					public getTrackSelector(): com.google.android.exoplayer2.trackselection.TrackSelector;
					public stop(): void;
					public setRepeatMode(int0: number): void;
					public play(): void;
					public setMediaItem(mediaItem: com.google.android.exoplayer2.MediaItem): void;
					public getPlaybackState(): number;
					public getCurrentTimeline(): com.google.android.exoplayer2.Timeline;
					public isLoading(): boolean;
					public getRepeatMode(): number;
					public addListener(eventListener0: com.google.android.exoplayer2.Player.EventListener): void;
					public getApplicationLooper(): globalAndroid.os.Looper;
					public getTextComponent(): com.google.android.exoplayer2.Player.TextComponent;
					public getDuration(): number;
					public isPlaying(): boolean;
					public hasPrevious(): boolean;
					public setMediaItems(list0: java.util.List<com.google.android.exoplayer2.MediaItem>, int1: number, long2: number): void;
					public getCurrentPosition(): number;
					public getCurrentTrackSelections(): com.google.android.exoplayer2.trackselection.TrackSelectionArray;
					public setPlaybackParameters(playbackParameters0: com.google.android.exoplayer2.PlaybackParameters): void;
					public setMediaItems(mediaItems: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
					public getNextWindowIndex(): number;
					public removeMediaItems(int0: number, int1: number): void;
					public getCurrentMediaItem(): com.google.android.exoplayer2.MediaItem;
					public getMediaItemCount(): number;
					public setMediaItem(mediaItem: com.google.android.exoplayer2.MediaItem, resetPosition: boolean): void;
					public addMediaItem(mediaItem: com.google.android.exoplayer2.MediaItem): void;
					public moveMediaItems(int0: number, int1: number, int2: number): void;
					public getVideoComponent(): com.google.android.exoplayer2.Player.VideoComponent;
					public addMediaItems(list0: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
					public addMediaItems(int0: number, list1: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
					public getTotalBufferedDuration(): number;
					public isCurrentWindowLive(): boolean;
					public isPlayingAd(): boolean;
					public getBufferedPercentage(): number;
					public moveMediaItem(currentIndex: number, newIndex: number): void;
					public seekToDefaultPosition(): void;
					public getBufferedPosition(): number;
					public seekTo(positionMs: number): void;
					public getCurrentManifest(): any;
					public getCurrentTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
					public getContentDuration(): number;
					public setMediaItems(list0: java.util.List<com.google.android.exoplayer2.MediaItem>, boolean1: boolean): void;
				}
				export module BasePlayer {
					export class ListenerHolder extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.BasePlayer.ListenerHolder>;
						public listener: com.google.android.exoplayer2.Player.EventListener;
						public invoke(listenerInvocation: com.google.android.exoplayer2.BasePlayer.ListenerInvocation): void;
						public equals(obj: any): boolean;
						public equals(other: any): boolean;
						public constructor(listener: com.google.android.exoplayer2.Player.EventListener);
						public hashCode(): number;
						public release(): void;
					}
					export class ListenerInvocation extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.BasePlayer.ListenerInvocation>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.BasePlayer() when extending the interface class.
						 */
						public constructor(implementation: {
							invokeListener(eventListener0: com.google.android.exoplayer2.Player.EventListener): void;
						});
						public constructor();
						public invokeListener(eventListener0: com.google.android.exoplayer2.Player.EventListener): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export abstract class BaseRenderer extends java.lang.Object implements com.google.android.exoplayer2.Renderer, com.google.android.exoplayer2.RendererCapabilities {
					public static class: java.lang.Class<com.google.android.exoplayer2.BaseRenderer>;
					public isReady(): boolean;
					public onStopped(): void;
					public getStreamFormats(): native.Array<com.google.android.exoplayer2.Format>;
					public onPositionReset(positionUs: number, joining: boolean): void;
					public getFormatHolder(): com.google.android.exoplayer2.FormatHolder;
					public supportsFormat(format0: com.google.android.exoplayer2.Format): number;
					public getStream(): com.google.android.exoplayer2.source.SampleStream;
					public static create(formatSupport: number, adaptiveSupport: number, tunnelingSupport: number): number;
					public skipSource(positionUs: number): number;
					public static getTunnelingSupport(supportFlags: number): number;
					public disable(): void;
					public static getFormatSupportString(formatSupport: number): string;
					public getIndex(): number;
					public setCurrentStreamFinal(): void;
					public getCapabilities(): com.google.android.exoplayer2.RendererCapabilities;
					public render(long0: number, long1: number): void;
					public hasReadStreamToEnd(): boolean;
					public replaceStream(formats: native.Array<com.google.android.exoplayer2.Format>, stream: com.google.android.exoplayer2.source.SampleStream, startPositionUs: number, offsetUs: number): void;
					public static create(formatSupport: number): number;
					public isCurrentStreamFinal(): boolean;
					public supportsMixedMimeTypeAdaptation(): number;
					public constructor(trackType: number);
					public readSource(formatHolder: com.google.android.exoplayer2.FormatHolder, buffer: com.google.android.exoplayer2.decoder.DecoderInputBuffer, formatRequired: boolean): number;
					public getMediaClock(): com.google.android.exoplayer2.util.MediaClock;
					public stop(): void;
					public onStarted(): void;
					public onEnabled(joining: boolean, mayRenderStartOfStream: boolean): void;
					public getState(): number;
					public getLastResetPositionUs(): number;
					public static getFormatSupport(supportFlags: number): number;
					public handleMessage(what: number, object: any): void;
					public getConfiguration(): com.google.android.exoplayer2.RendererConfiguration;
					public isSourceReady(): boolean;
					public start(): void;
					public onReset(): void;
					public onDisabled(): void;
					public enable(configuration: com.google.android.exoplayer2.RendererConfiguration, formats: native.Array<com.google.android.exoplayer2.Format>, stream: com.google.android.exoplayer2.source.SampleStream, positionUs: number, joining: boolean, mayRenderStartOfStream: boolean, startPositionUs: number, offsetUs: number): void;
					public getReadingPositionUs(): number;
					public getTrackType(): number;
					public reset(): void;
					public static getAdaptiveSupport(supportFlags: number): number;
					public onStreamChanged(formats: native.Array<com.google.android.exoplayer2.Format>, startPositionUs: number, offsetUs: number): void;
					public maybeThrowStreamError(): void;
					public isEnded(): boolean;
					public setIndex(index: number): void;
					public createRendererException(cause: java.lang.Exception, format: com.google.android.exoplayer2.Format): com.google.android.exoplayer2.ExoPlaybackException;
					public getName(): string;
					public setOperatingRate(operatingRate: number): void;
					public resetPosition(positionUs: number): void;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class ControlDispatcher extends java.lang.Object {
					public static class: java.lang.Class<com.google.android.exoplayer2.ControlDispatcher>;
					/**
					 * Constructs a new instance of the com.google.android.exoplayer2.ControlDispatcher interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						dispatchPrepare(player0: com.google.android.exoplayer2.Player): boolean;
						dispatchSetPlayWhenReady(player0: com.google.android.exoplayer2.Player, boolean1: boolean): boolean;
						dispatchSeekTo(player0: com.google.android.exoplayer2.Player, int1: number, long2: number): boolean;
						dispatchPrevious(player0: com.google.android.exoplayer2.Player): boolean;
						dispatchNext(player0: com.google.android.exoplayer2.Player): boolean;
						dispatchRewind(player0: com.google.android.exoplayer2.Player): boolean;
						dispatchFastForward(player0: com.google.android.exoplayer2.Player): boolean;
						dispatchSetRepeatMode(player0: com.google.android.exoplayer2.Player, int1: number): boolean;
						dispatchSetShuffleModeEnabled(player0: com.google.android.exoplayer2.Player, boolean1: boolean): boolean;
						dispatchStop(player0: com.google.android.exoplayer2.Player, boolean1: boolean): boolean;
						isRewindEnabled(): boolean;
						isFastForwardEnabled(): boolean;
					});
					public constructor();
					public dispatchSetRepeatMode(player0: com.google.android.exoplayer2.Player, int1: number): boolean;
					public dispatchSeekTo(player0: com.google.android.exoplayer2.Player, int1: number, long2: number): boolean;
					public dispatchStop(player0: com.google.android.exoplayer2.Player, boolean1: boolean): boolean;
					public isFastForwardEnabled(): boolean;
					public dispatchPrevious(player0: com.google.android.exoplayer2.Player): boolean;
					public dispatchFastForward(player0: com.google.android.exoplayer2.Player): boolean;
					public dispatchSetShuffleModeEnabled(player0: com.google.android.exoplayer2.Player, boolean1: boolean): boolean;
					public dispatchPrepare(player0: com.google.android.exoplayer2.Player): boolean;
					public dispatchNext(player0: com.google.android.exoplayer2.Player): boolean;
					public dispatchSetPlayWhenReady(player0: com.google.android.exoplayer2.Player, boolean1: boolean): boolean;
					public dispatchRewind(player0: com.google.android.exoplayer2.Player): boolean;
					public isRewindEnabled(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class DefaultControlDispatcher extends java.lang.Object implements com.google.android.exoplayer2.ControlDispatcher {
					public static class: java.lang.Class<com.google.android.exoplayer2.DefaultControlDispatcher>;
					public static DEFAULT_FAST_FORWARD_MS: number;
					public static DEFAULT_REWIND_MS: number;
					public dispatchSetRepeatMode(player: com.google.android.exoplayer2.Player, repeatMode: number): boolean;
					public isFastForwardEnabled(): boolean;
					public getRewindIncrementMs(): number;
					public dispatchPrevious(player: com.google.android.exoplayer2.Player): boolean;
					public dispatchStop(player: com.google.android.exoplayer2.Player, reset: boolean): boolean;
					public dispatchFastForward(player: com.google.android.exoplayer2.Player): boolean;
					public getFastForwardIncrementMs(): number;
					public dispatchSetShuffleModeEnabled(player: com.google.android.exoplayer2.Player, shuffleModeEnabled: boolean): boolean;
					public constructor();
					public dispatchRewind(player: com.google.android.exoplayer2.Player): boolean;
					public dispatchPrepare(player: com.google.android.exoplayer2.Player): boolean;
					public dispatchSeekTo(player: com.google.android.exoplayer2.Player, windowIndex: number, positionMs: number): boolean;
					/** @deprecated */
					public setFastForwardIncrementMs(fastForwardMs: number): void;
					public dispatchSetPlayWhenReady(player: com.google.android.exoplayer2.Player, playWhenReady: boolean): boolean;
					public constructor(fastForwardIncrementMs: number, rewindIncrementMs: number);
					/** @deprecated */
					public setRewindIncrementMs(rewindMs: number): void;
					public dispatchNext(player: com.google.android.exoplayer2.Player): boolean;
					public isRewindEnabled(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class DefaultLoadControl extends java.lang.Object implements com.google.android.exoplayer2.LoadControl {
					public static class: java.lang.Class<com.google.android.exoplayer2.DefaultLoadControl>;
					public static DEFAULT_MIN_BUFFER_MS: number;
					public static DEFAULT_MAX_BUFFER_MS: number;
					public static DEFAULT_BUFFER_FOR_PLAYBACK_MS: number;
					public static DEFAULT_BUFFER_FOR_PLAYBACK_AFTER_REBUFFER_MS: number;
					public static DEFAULT_TARGET_BUFFER_BYTES: number;
					public static DEFAULT_PRIORITIZE_TIME_OVER_SIZE_THRESHOLDS: boolean;
					public static DEFAULT_BACK_BUFFER_DURATION_MS: number;
					public static DEFAULT_RETAIN_BACK_BUFFER_FROM_KEYFRAME: boolean;
					public static DEFAULT_VIDEO_BUFFER_SIZE: number;
					public static DEFAULT_AUDIO_BUFFER_SIZE: number;
					public static DEFAULT_TEXT_BUFFER_SIZE: number;
					public static DEFAULT_METADATA_BUFFER_SIZE: number;
					public static DEFAULT_CAMERA_MOTION_BUFFER_SIZE: number;
					public static DEFAULT_MUXED_BUFFER_SIZE: number;
					public static DEFAULT_MIN_BUFFER_SIZE: number;
					public constructor(allocator: com.google.android.exoplayer2.upstream.DefaultAllocator, minBufferMs: number, maxBufferMs: number, bufferForPlaybackMs: number, bufferForPlaybackAfterRebufferMs: number, targetBufferBytes: number, prioritizeTimeOverSizeThresholds: boolean, backBufferDurationMs: number, retainBackBufferFromKeyframe: boolean);
					public onStopped(): void;
					public shouldContinueLoading(playbackPositionUs: number, bufferedDurationUs: number, playbackSpeed: number): boolean;
					public shouldStartPlayback(bufferedDurationUs: number, playbackSpeed: number, rebuffering: boolean): boolean;
					/** @deprecated */
					public constructor(allocator: com.google.android.exoplayer2.upstream.DefaultAllocator);
					public onTracksSelected(renderers: native.Array<com.google.android.exoplayer2.Renderer>, trackGroups: com.google.android.exoplayer2.source.TrackGroupArray, trackSelections: com.google.android.exoplayer2.trackselection.TrackSelectionArray): void;
					public onReleased(): void;
					public getAllocator(): com.google.android.exoplayer2.upstream.Allocator;
					public onPrepared(): void;
					public getBackBufferDurationUs(): number;
					public constructor();
					/** @deprecated */
					public constructor(allocator: com.google.android.exoplayer2.upstream.DefaultAllocator, minBufferMs: number, maxBufferMs: number, bufferForPlaybackMs: number, bufferForPlaybackAfterRebufferMs: number, targetBufferBytes: number, prioritizeTimeOverSizeThresholds: boolean);
					public retainBackBufferFromKeyframe(): boolean;
					public calculateTargetBufferBytes(renderers: native.Array<com.google.android.exoplayer2.Renderer>, trackSelectionArray: com.google.android.exoplayer2.trackselection.TrackSelectionArray): number;
				}
				export module DefaultLoadControl {
					export class Builder extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.DefaultLoadControl.Builder>;
						public constructor();
						public setBufferDurationsMs(minBufferMs: number, maxBufferMs: number, bufferForPlaybackMs: number, bufferForPlaybackAfterRebufferMs: number): com.google.android.exoplayer2.DefaultLoadControl.Builder;
						/** @deprecated */
						public createDefaultLoadControl(): com.google.android.exoplayer2.DefaultLoadControl;
						public setAllocator(allocator: com.google.android.exoplayer2.upstream.DefaultAllocator): com.google.android.exoplayer2.DefaultLoadControl.Builder;
						public setTargetBufferBytes(targetBufferBytes: number): com.google.android.exoplayer2.DefaultLoadControl.Builder;
						public build(): com.google.android.exoplayer2.DefaultLoadControl;
						public setBackBuffer(backBufferDurationMs: number, retainBackBufferFromKeyframe: boolean): com.google.android.exoplayer2.DefaultLoadControl.Builder;
						public setPrioritizeTimeOverSizeThresholds(prioritizeTimeOverSizeThresholds: boolean): com.google.android.exoplayer2.DefaultLoadControl.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class DefaultMediaClock extends java.lang.Object implements com.google.android.exoplayer2.util.MediaClock {
					public static class: java.lang.Class<com.google.android.exoplayer2.DefaultMediaClock>;
					public getPositionUs(): number;
					public onRendererDisabled(renderer: com.google.android.exoplayer2.Renderer): void;
					public syncAndGetPositionUs(isReadingAhead: boolean): number;
					public onRendererEnabled(renderer: com.google.android.exoplayer2.Renderer): void;
					public stop(): void;
					public resetPosition(positionUs: number): void;
					public constructor(listener: com.google.android.exoplayer2.DefaultMediaClock.PlaybackParametersListener, clock: com.google.android.exoplayer2.util.Clock);
					public start(): void;
					public setPlaybackParameters(playbackParameters: com.google.android.exoplayer2.PlaybackParameters): void;
					public getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
				}
				export module DefaultMediaClock {
					export class PlaybackParametersListener extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.DefaultMediaClock.PlaybackParametersListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.DefaultMediaClock() when extending the interface class.
						 */
						public constructor(implementation: {
							onPlaybackParametersChanged(playbackParameters0: com.google.android.exoplayer2.PlaybackParameters): void;
						});
						public constructor();
						public onPlaybackParametersChanged(playbackParameters0: com.google.android.exoplayer2.PlaybackParameters): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class DefaultRenderersFactory extends java.lang.Object implements com.google.android.exoplayer2.RenderersFactory {
					public static class: java.lang.Class<com.google.android.exoplayer2.DefaultRenderersFactory>;
					public static DEFAULT_ALLOWED_VIDEO_JOINING_TIME_MS: number;
					public static EXTENSION_RENDERER_MODE_OFF: number;
					public static EXTENSION_RENDERER_MODE_ON: number;
					public static EXTENSION_RENDERER_MODE_PREFER: number;
					public static MAX_DROPPED_VIDEO_FRAME_COUNT_TO_NOTIFY: number;
					public buildVideoRenderers(context: globalAndroid.content.Context, extensionRendererMode: number, mediaCodecSelector: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, enableDecoderFallback: boolean, eventHandler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.video.VideoRendererEventListener, allowedVideoJoiningTimeMs: number, out: java.util.ArrayList<com.google.android.exoplayer2.Renderer>): void;
					public buildAudioRenderers(context: globalAndroid.content.Context, extensionRendererMode: number, mediaCodecSelector: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, enableDecoderFallback: boolean, audioSink: com.google.android.exoplayer2.audio.AudioSink, eventHandler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.audio.AudioRendererEventListener, out: java.util.ArrayList<com.google.android.exoplayer2.Renderer>): void;
					public createRenderers(eventHandler: globalAndroid.os.Handler, videoRendererEventListener: com.google.android.exoplayer2.video.VideoRendererEventListener, audioRendererEventListener: com.google.android.exoplayer2.audio.AudioRendererEventListener, textRendererOutput: com.google.android.exoplayer2.text.TextOutput, metadataRendererOutput: com.google.android.exoplayer2.metadata.MetadataOutput): native.Array<com.google.android.exoplayer2.Renderer>;
					public buildTextRenderers(context: globalAndroid.content.Context, output: com.google.android.exoplayer2.text.TextOutput, outputLooper: globalAndroid.os.Looper, extensionRendererMode: number, out: java.util.ArrayList<com.google.android.exoplayer2.Renderer>): void;
					/** @deprecated */
					public constructor(context: globalAndroid.content.Context, extensionRendererMode: number);
					public experimentalSetVideoMediaCodecOperationMode(mode: number): com.google.android.exoplayer2.DefaultRenderersFactory;
					public setMediaCodecSelector(mediaCodecSelector: com.google.android.exoplayer2.mediacodec.MediaCodecSelector): com.google.android.exoplayer2.DefaultRenderersFactory;
					public buildAudioSink(context: globalAndroid.content.Context, enableFloatOutput: boolean, enableAudioTrackPlaybackParams: boolean, enableOffload: boolean): com.google.android.exoplayer2.audio.AudioSink;
					/** @deprecated */
					public constructor(context: globalAndroid.content.Context, extensionRendererMode: number, allowedVideoJoiningTimeMs: number);
					public setEnableAudioTrackPlaybackParams(enableAudioTrackPlaybackParams: boolean): com.google.android.exoplayer2.DefaultRenderersFactory;
					public setExtensionRendererMode(extensionRendererMode: number): com.google.android.exoplayer2.DefaultRenderersFactory;
					public setEnableAudioFloatOutput(enableFloatOutput: boolean): com.google.android.exoplayer2.DefaultRenderersFactory;
					public experimentalSetAudioMediaCodecOperationMode(mode: number): com.google.android.exoplayer2.DefaultRenderersFactory;
					public setEnableAudioOffload(enableOffload: boolean): com.google.android.exoplayer2.DefaultRenderersFactory;
					public experimentalSetMediaCodecOperationMode(mode: number): com.google.android.exoplayer2.DefaultRenderersFactory;
					public buildMetadataRenderers(context: globalAndroid.content.Context, output: com.google.android.exoplayer2.metadata.MetadataOutput, outputLooper: globalAndroid.os.Looper, extensionRendererMode: number, out: java.util.ArrayList<com.google.android.exoplayer2.Renderer>): void;
					public constructor(context: globalAndroid.content.Context);
					public setEnableDecoderFallback(enableDecoderFallback: boolean): com.google.android.exoplayer2.DefaultRenderersFactory;
					public buildMiscellaneousRenderers(context: globalAndroid.content.Context, eventHandler: globalAndroid.os.Handler, extensionRendererMode: number, out: java.util.ArrayList<com.google.android.exoplayer2.Renderer>): void;
					public setAllowedVideoJoiningTimeMs(allowedVideoJoiningTimeMs: number): com.google.android.exoplayer2.DefaultRenderersFactory;
					public buildCameraMotionRenderers(context: globalAndroid.content.Context, extensionRendererMode: number, out: java.util.ArrayList<com.google.android.exoplayer2.Renderer>): void;
				}
				export module DefaultRenderersFactory {
					export class ExtensionRendererMode extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<com.google.android.exoplayer2.DefaultRenderersFactory.ExtensionRendererMode>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.DefaultRenderersFactory() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class ExoPlaybackException extends java.lang.Exception {
					public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlaybackException>;
					public static TYPE_SOURCE: number;
					public static TYPE_RENDERER: number;
					public static TYPE_UNEXPECTED: number;
					public static TYPE_REMOTE: number;
					public static TYPE_OUT_OF_MEMORY: number;
					public static TYPE_TIMEOUT: number;
					public type: number;
					public static TIMEOUT_OPERATION_UNDEFINED: number;
					public static TIMEOUT_OPERATION_RELEASE: number;
					public static TIMEOUT_OPERATION_SET_FOREGROUND_MODE: number;
					public rendererName: string;
					public rendererIndex: number;
					public rendererFormat: com.google.android.exoplayer2.Format;
					public rendererFormatSupport: number;
					public timeoutOperation: number;
					public timestampMs: number;
					public mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
					public static createForUnexpected(cause: java.lang.RuntimeException): com.google.android.exoplayer2.ExoPlaybackException;
					public static createForOutOfMemory(cause: java.lang.OutOfMemoryError): com.google.android.exoplayer2.ExoPlaybackException;
					public static createForRenderer(cause: java.lang.Exception, rendererName: string, rendererIndex: number, rendererFormat: com.google.android.exoplayer2.Format, rendererFormatSupport: number): com.google.android.exoplayer2.ExoPlaybackException;
					public getSourceException(): java.io.IOException;
					public getTimeoutException(): java.util.concurrent.TimeoutException;
					public static createForTimeout(cause: java.util.concurrent.TimeoutException, timeoutOperation: number): com.google.android.exoplayer2.ExoPlaybackException;
					public static createForSource(cause: java.io.IOException): com.google.android.exoplayer2.ExoPlaybackException;
					public getRendererException(): java.lang.Exception;
					public getUnexpectedException(): java.lang.RuntimeException;
					public getOutOfMemoryError(): java.lang.OutOfMemoryError;
					public static createForRemote(message: string): com.google.android.exoplayer2.ExoPlaybackException;
				}
				export module ExoPlaybackException {
					export class TimeoutOperation extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlaybackException.TimeoutOperation>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.ExoPlaybackException() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class Type extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlaybackException.Type>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.ExoPlaybackException() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class ExoPlayer extends java.lang.Object implements com.google.android.exoplayer2.Player {
					public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlayer>;
					/**
					 * Constructs a new instance of the com.google.android.exoplayer2.ExoPlayer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getPlaybackLooper(): globalAndroid.os.Looper;
						retry(): void;
						prepare(mediaSource0: com.google.android.exoplayer2.source.MediaSource): void;
						prepare(mediaSource0: com.google.android.exoplayer2.source.MediaSource, boolean1: boolean, boolean2: boolean): void;
						setMediaSources(list0: java.util.List<com.google.android.exoplayer2.source.MediaSource>): void;
						setMediaSources(list0: java.util.List<com.google.android.exoplayer2.source.MediaSource>, boolean1: boolean): void;
						setMediaSources(list0: java.util.List<com.google.android.exoplayer2.source.MediaSource>, int1: number, long2: number): void;
						setMediaSource(mediaSource0: com.google.android.exoplayer2.source.MediaSource): void;
						setMediaSource(mediaSource0: com.google.android.exoplayer2.source.MediaSource, long1: number): void;
						setMediaSource(mediaSource0: com.google.android.exoplayer2.source.MediaSource, boolean1: boolean): void;
						addMediaSource(mediaSource0: com.google.android.exoplayer2.source.MediaSource): void;
						addMediaSource(int0: number, mediaSource1: com.google.android.exoplayer2.source.MediaSource): void;
						addMediaSources(list0: java.util.List<com.google.android.exoplayer2.source.MediaSource>): void;
						addMediaSources(int0: number, list1: java.util.List<com.google.android.exoplayer2.source.MediaSource>): void;
						setShuffleOrder(shuffleOrder0: com.google.android.exoplayer2.source.ShuffleOrder): void;
						createMessage(target0: com.google.android.exoplayer2.PlayerMessage.Target): com.google.android.exoplayer2.PlayerMessage;
						setSeekParameters(seekParameters0: com.google.android.exoplayer2.SeekParameters): void;
						getSeekParameters(): com.google.android.exoplayer2.SeekParameters;
						setForegroundMode(boolean0: boolean): void;
						setPauseAtEndOfMediaItems(boolean0: boolean): void;
						getPauseAtEndOfMediaItems(): boolean;
						experimentalSetOffloadSchedulingEnabled(boolean0: boolean): void;
						getAudioComponent(): com.google.android.exoplayer2.Player.AudioComponent;
						getVideoComponent(): com.google.android.exoplayer2.Player.VideoComponent;
						getTextComponent(): com.google.android.exoplayer2.Player.TextComponent;
						getMetadataComponent(): com.google.android.exoplayer2.Player.MetadataComponent;
						getDeviceComponent(): com.google.android.exoplayer2.Player.DeviceComponent;
						getApplicationLooper(): globalAndroid.os.Looper;
						addListener(eventListener0: com.google.android.exoplayer2.Player.EventListener): void;
						removeListener(eventListener0: com.google.android.exoplayer2.Player.EventListener): void;
						setMediaItems(list0: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
						setMediaItems(list0: java.util.List<com.google.android.exoplayer2.MediaItem>, boolean1: boolean): void;
						setMediaItems(list0: java.util.List<com.google.android.exoplayer2.MediaItem>, int1: number, long2: number): void;
						setMediaItem(mediaItem0: com.google.android.exoplayer2.MediaItem): void;
						setMediaItem(mediaItem0: com.google.android.exoplayer2.MediaItem, long1: number): void;
						setMediaItem(mediaItem0: com.google.android.exoplayer2.MediaItem, boolean1: boolean): void;
						addMediaItem(mediaItem0: com.google.android.exoplayer2.MediaItem): void;
						addMediaItem(int0: number, mediaItem1: com.google.android.exoplayer2.MediaItem): void;
						addMediaItems(list0: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
						addMediaItems(int0: number, list1: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
						moveMediaItem(int0: number, int1: number): void;
						moveMediaItems(int0: number, int1: number, int2: number): void;
						removeMediaItem(int0: number): void;
						removeMediaItems(int0: number, int1: number): void;
						clearMediaItems(): void;
						prepare(): void;
						getPlaybackState(): number;
						getPlaybackSuppressionReason(): number;
						isPlaying(): boolean;
						getPlayerError(): com.google.android.exoplayer2.ExoPlaybackException;
						getPlaybackError(): com.google.android.exoplayer2.ExoPlaybackException;
						play(): void;
						pause(): void;
						setPlayWhenReady(boolean0: boolean): void;
						getPlayWhenReady(): boolean;
						setRepeatMode(int0: number): void;
						getRepeatMode(): number;
						setShuffleModeEnabled(boolean0: boolean): void;
						getShuffleModeEnabled(): boolean;
						isLoading(): boolean;
						seekToDefaultPosition(): void;
						seekToDefaultPosition(int0: number): void;
						seekTo(long0: number): void;
						seekTo(int0: number, long1: number): void;
						hasPrevious(): boolean;
						previous(): void;
						hasNext(): boolean;
						next(): void;
						setPlaybackParameters(playbackParameters0: com.google.android.exoplayer2.PlaybackParameters): void;
						getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
						stop(): void;
						stop(boolean0: boolean): void;
						release(): void;
						getRendererCount(): number;
						getRendererType(int0: number): number;
						getTrackSelector(): com.google.android.exoplayer2.trackselection.TrackSelector;
						getCurrentTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
						getCurrentTrackSelections(): com.google.android.exoplayer2.trackselection.TrackSelectionArray;
						getCurrentManifest(): any;
						getCurrentTimeline(): com.google.android.exoplayer2.Timeline;
						getCurrentPeriodIndex(): number;
						getCurrentWindowIndex(): number;
						getNextWindowIndex(): number;
						getPreviousWindowIndex(): number;
						getCurrentTag(): any;
						getCurrentMediaItem(): com.google.android.exoplayer2.MediaItem;
						getMediaItemCount(): number;
						getMediaItemAt(int0: number): com.google.android.exoplayer2.MediaItem;
						getDuration(): number;
						getCurrentPosition(): number;
						getBufferedPosition(): number;
						getBufferedPercentage(): number;
						getTotalBufferedDuration(): number;
						isCurrentWindowDynamic(): boolean;
						isCurrentWindowLive(): boolean;
						getCurrentLiveOffset(): number;
						isCurrentWindowSeekable(): boolean;
						isPlayingAd(): boolean;
						getCurrentAdGroupIndex(): number;
						getCurrentAdIndexInAdGroup(): number;
						getContentDuration(): number;
						getContentPosition(): number;
						getContentBufferedPosition(): number;
					});
					public constructor();
					public static DISCONTINUITY_REASON_AD_INSERTION: number;
					public static PLAY_WHEN_READY_CHANGE_REASON_USER_REQUEST: number;
					public static TIMELINE_CHANGE_REASON_PLAYLIST_CHANGED: number;
					public static PLAYBACK_SUPPRESSION_REASON_NONE: number;
					public static PLAY_WHEN_READY_CHANGE_REASON_END_OF_MEDIA_ITEM: number;
					public static TIMELINE_CHANGE_REASON_SOURCE_UPDATE: number;
					public static DISCONTINUITY_REASON_INTERNAL: number;
					public static STATE_ENDED: number;
					public static PLAY_WHEN_READY_CHANGE_REASON_REMOTE: number;
					public static STATE_BUFFERING: number;
					public static DISCONTINUITY_REASON_PERIOD_TRANSITION: number;
					public static PLAYBACK_SUPPRESSION_REASON_TRANSIENT_AUDIO_FOCUS_LOSS: number;
					public static DISCONTINUITY_REASON_SEEK_ADJUSTMENT: number;
					public static PLAY_WHEN_READY_CHANGE_REASON_AUDIO_FOCUS_LOSS: number;
					public static REPEAT_MODE_OFF: number;
					public static PLAY_WHEN_READY_CHANGE_REASON_AUDIO_BECOMING_NOISY: number;
					public static STATE_READY: number;
					public static DISCONTINUITY_REASON_SEEK: number;
					public static MEDIA_ITEM_TRANSITION_REASON_REPEAT: number;
					public static MEDIA_ITEM_TRANSITION_REASON_PLAYLIST_CHANGED: number;
					public static REPEAT_MODE_ALL: number;
					public static STATE_IDLE: number;
					public static REPEAT_MODE_ONE: number;
					public static MEDIA_ITEM_TRANSITION_REASON_SEEK: number;
					public static MEDIA_ITEM_TRANSITION_REASON_AUTO: number;
					public getPlayWhenReady(): boolean;
					public getRendererCount(): number;
					public setShuffleModeEnabled(boolean0: boolean): void;
					/** @deprecated */
					public getPlaybackError(): com.google.android.exoplayer2.ExoPlaybackException;
					public removeMediaItem(int0: number): void;
					public setMediaItem(mediaItem0: com.google.android.exoplayer2.MediaItem): void;
					public hasNext(): boolean;
					public getContentPosition(): number;
					public pause(): void;
					public getDeviceComponent(): com.google.android.exoplayer2.Player.DeviceComponent;
					public getPlaybackSuppressionReason(): number;
					public getCurrentPeriodIndex(): number;
					public setMediaSource(mediaSource0: com.google.android.exoplayer2.source.MediaSource, long1: number): void;
					public prepare(): void;
					public getMetadataComponent(): com.google.android.exoplayer2.Player.MetadataComponent;
					public removeListener(eventListener0: com.google.android.exoplayer2.Player.EventListener): void;
					/** @deprecated */
					public prepare(mediaSource0: com.google.android.exoplayer2.source.MediaSource): void;
					public previous(): void;
					public getRendererType(int0: number): number;
					public moveMediaItem(int0: number, int1: number): void;
					public getAudioComponent(): com.google.android.exoplayer2.Player.AudioComponent;
					public getPreviousWindowIndex(): number;
					public getPlayerError(): com.google.android.exoplayer2.ExoPlaybackException;
					public getContentBufferedPosition(): number;
					/** @deprecated */
					public prepare(mediaSource0: com.google.android.exoplayer2.source.MediaSource, boolean1: boolean, boolean2: boolean): void;
					public getPlaybackState(): number;
					public getCurrentTimeline(): com.google.android.exoplayer2.Timeline;
					public getRepeatMode(): number;
					public setMediaItem(mediaItem0: com.google.android.exoplayer2.MediaItem, boolean1: boolean): void;
					public getDuration(): number;
					/** @deprecated */
					public retry(): void;
					public setMediaSources(list0: java.util.List<com.google.android.exoplayer2.source.MediaSource>, boolean1: boolean): void;
					public setMediaSources(list0: java.util.List<com.google.android.exoplayer2.source.MediaSource>): void;
					public setPlaybackParameters(playbackParameters0: com.google.android.exoplayer2.PlaybackParameters): void;
					public setMediaSource(mediaSource0: com.google.android.exoplayer2.source.MediaSource, boolean1: boolean): void;
					public setSeekParameters(seekParameters0: com.google.android.exoplayer2.SeekParameters): void;
					public addMediaSources(int0: number, list1: java.util.List<com.google.android.exoplayer2.source.MediaSource>): void;
					public getNextWindowIndex(): number;
					public getMediaItemCount(): number;
					public getTotalBufferedDuration(): number;
					public setMediaItem(mediaItem0: com.google.android.exoplayer2.MediaItem, long1: number): void;
					public seekToDefaultPosition(int0: number): void;
					public setForegroundMode(boolean0: boolean): void;
					public isPlayingAd(): boolean;
					public addMediaItem(int0: number, mediaItem1: com.google.android.exoplayer2.MediaItem): void;
					public setShuffleOrder(shuffleOrder0: com.google.android.exoplayer2.source.ShuffleOrder): void;
					public getCurrentTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
					public getCurrentManifest(): any;
					public setMediaItems(list0: java.util.List<com.google.android.exoplayer2.MediaItem>, boolean1: boolean): void;
					public isCurrentWindowDynamic(): boolean;
					public experimentalSetOffloadSchedulingEnabled(boolean0: boolean): void;
					public setPlayWhenReady(boolean0: boolean): void;
					public getPauseAtEndOfMediaItems(): boolean;
					public seekTo(long0: number): void;
					/** @deprecated */
					public getCurrentTag(): any;
					public addMediaSource(int0: number, mediaSource1: com.google.android.exoplayer2.source.MediaSource): void;
					public clearMediaItems(): void;
					public stop(boolean0: boolean): void;
					public getCurrentAdGroupIndex(): number;
					public addMediaSources(list0: java.util.List<com.google.android.exoplayer2.source.MediaSource>): void;
					public addMediaItem(mediaItem0: com.google.android.exoplayer2.MediaItem): void;
					public next(): void;
					public getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
					public setPauseAtEndOfMediaItems(boolean0: boolean): void;
					public getShuffleModeEnabled(): boolean;
					public getCurrentWindowIndex(): number;
					public seekTo(int0: number, long1: number): void;
					public release(): void;
					public getCurrentAdIndexInAdGroup(): number;
					public isCurrentWindowSeekable(): boolean;
					public getCurrentLiveOffset(): number;
					public getSeekParameters(): com.google.android.exoplayer2.SeekParameters;
					public getTrackSelector(): com.google.android.exoplayer2.trackselection.TrackSelector;
					public stop(): void;
					public setRepeatMode(int0: number): void;
					public play(): void;
					public isLoading(): boolean;
					public getPlaybackLooper(): globalAndroid.os.Looper;
					public setMediaSource(mediaSource0: com.google.android.exoplayer2.source.MediaSource): void;
					public addListener(eventListener0: com.google.android.exoplayer2.Player.EventListener): void;
					public getApplicationLooper(): globalAndroid.os.Looper;
					public getTextComponent(): com.google.android.exoplayer2.Player.TextComponent;
					public getMediaItemAt(int0: number): com.google.android.exoplayer2.MediaItem;
					public isPlaying(): boolean;
					public hasPrevious(): boolean;
					public setMediaItems(list0: java.util.List<com.google.android.exoplayer2.MediaItem>, int1: number, long2: number): void;
					public getCurrentPosition(): number;
					public getCurrentTrackSelections(): com.google.android.exoplayer2.trackselection.TrackSelectionArray;
					public removeMediaItems(int0: number, int1: number): void;
					public getCurrentMediaItem(): com.google.android.exoplayer2.MediaItem;
					public moveMediaItems(int0: number, int1: number, int2: number): void;
					public getVideoComponent(): com.google.android.exoplayer2.Player.VideoComponent;
					public setMediaItems(list0: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
					public addMediaItems(list0: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
					public addMediaItems(int0: number, list1: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
					public isCurrentWindowLive(): boolean;
					public getBufferedPercentage(): number;
					public seekToDefaultPosition(): void;
					public setMediaSources(list0: java.util.List<com.google.android.exoplayer2.source.MediaSource>, int1: number, long2: number): void;
					public getBufferedPosition(): number;
					public createMessage(target0: com.google.android.exoplayer2.PlayerMessage.Target): com.google.android.exoplayer2.PlayerMessage;
					public addMediaSource(mediaSource0: com.google.android.exoplayer2.source.MediaSource): void;
					public getContentDuration(): number;
				}
				export module ExoPlayer {
					export class Builder extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlayer.Builder>;
						public setLooper(looper: globalAndroid.os.Looper): com.google.android.exoplayer2.ExoPlayer.Builder;
						public setAnalyticsCollector(analyticsCollector: com.google.android.exoplayer2.analytics.AnalyticsCollector): com.google.android.exoplayer2.ExoPlayer.Builder;
						public experimentalSetThrowWhenStuckBuffering(throwWhenStuckBuffering: boolean): com.google.android.exoplayer2.ExoPlayer.Builder;
						public setPauseAtEndOfMediaItems(pauseAtEndOfMediaItems: boolean): com.google.android.exoplayer2.ExoPlayer.Builder;
						public experimentalSetReleaseTimeoutMs(timeoutMs: number): com.google.android.exoplayer2.ExoPlayer.Builder;
						public setBandwidthMeter(bandwidthMeter: com.google.android.exoplayer2.upstream.BandwidthMeter): com.google.android.exoplayer2.ExoPlayer.Builder;
						public build(): com.google.android.exoplayer2.ExoPlayer;
						public setTrackSelector(trackSelector: com.google.android.exoplayer2.trackselection.TrackSelector): com.google.android.exoplayer2.ExoPlayer.Builder;
						public setClock(clock: com.google.android.exoplayer2.util.Clock): com.google.android.exoplayer2.ExoPlayer.Builder;
						public setUseLazyPreparation(useLazyPreparation: boolean): com.google.android.exoplayer2.ExoPlayer.Builder;
						public constructor(renderers: native.Array<com.google.android.exoplayer2.Renderer>, trackSelector: com.google.android.exoplayer2.trackselection.TrackSelector, mediaSourceFactory: com.google.android.exoplayer2.source.MediaSourceFactory, loadControl: com.google.android.exoplayer2.LoadControl, bandwidthMeter: com.google.android.exoplayer2.upstream.BandwidthMeter);
						public constructor(context: globalAndroid.content.Context, renderers: native.Array<com.google.android.exoplayer2.Renderer>);
						public setMediaSourceFactory(mediaSourceFactory: com.google.android.exoplayer2.source.MediaSourceFactory): com.google.android.exoplayer2.ExoPlayer.Builder;
						public setLoadControl(loadControl: com.google.android.exoplayer2.LoadControl): com.google.android.exoplayer2.ExoPlayer.Builder;
						public setSeekParameters(seekParameters: com.google.android.exoplayer2.SeekParameters): com.google.android.exoplayer2.ExoPlayer.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class ExoPlayerFactory extends java.lang.Object {
					public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlayerFactory>;
					/** @deprecated */
					public static newSimpleInstance(context: globalAndroid.content.Context, renderersFactory: com.google.android.exoplayer2.RenderersFactory, trackSelector: com.google.android.exoplayer2.trackselection.TrackSelector): com.google.android.exoplayer2.SimpleExoPlayer;
					/** @deprecated */
					public static newInstance(context: globalAndroid.content.Context, renderers: native.Array<com.google.android.exoplayer2.Renderer>, trackSelector: com.google.android.exoplayer2.trackselection.TrackSelector, loadControl: com.google.android.exoplayer2.LoadControl, applicationLooper: globalAndroid.os.Looper): com.google.android.exoplayer2.ExoPlayer;
					/** @deprecated */
					public static newInstance(context: globalAndroid.content.Context, renderers: native.Array<com.google.android.exoplayer2.Renderer>, trackSelector: com.google.android.exoplayer2.trackselection.TrackSelector, loadControl: com.google.android.exoplayer2.LoadControl): com.google.android.exoplayer2.ExoPlayer;
					/** @deprecated */
					public static newInstance(context: globalAndroid.content.Context, renderers: native.Array<com.google.android.exoplayer2.Renderer>, trackSelector: com.google.android.exoplayer2.trackselection.TrackSelector): com.google.android.exoplayer2.ExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(context: globalAndroid.content.Context, renderersFactory: com.google.android.exoplayer2.RenderersFactory, trackSelector: com.google.android.exoplayer2.trackselection.TrackSelector, loadControl: com.google.android.exoplayer2.LoadControl): com.google.android.exoplayer2.SimpleExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(context: globalAndroid.content.Context): com.google.android.exoplayer2.SimpleExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(context: globalAndroid.content.Context, renderersFactory: com.google.android.exoplayer2.RenderersFactory, trackSelector: com.google.android.exoplayer2.trackselection.TrackSelector, loadControl: com.google.android.exoplayer2.LoadControl, applicationLooper: globalAndroid.os.Looper): com.google.android.exoplayer2.SimpleExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(context: globalAndroid.content.Context, renderersFactory: com.google.android.exoplayer2.RenderersFactory, trackSelector: com.google.android.exoplayer2.trackselection.TrackSelector, loadControl: com.google.android.exoplayer2.LoadControl, bandwidthMeter: com.google.android.exoplayer2.upstream.BandwidthMeter, analyticsCollector: com.google.android.exoplayer2.analytics.AnalyticsCollector, applicationLooper: globalAndroid.os.Looper): com.google.android.exoplayer2.SimpleExoPlayer;
					/** @deprecated */
					public static newInstance(context: globalAndroid.content.Context, renderers: native.Array<com.google.android.exoplayer2.Renderer>, trackSelector: com.google.android.exoplayer2.trackselection.TrackSelector, loadControl: com.google.android.exoplayer2.LoadControl, bandwidthMeter: com.google.android.exoplayer2.upstream.BandwidthMeter, applicationLooper: globalAndroid.os.Looper): com.google.android.exoplayer2.ExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(context: globalAndroid.content.Context, trackSelector: com.google.android.exoplayer2.trackselection.TrackSelector, loadControl: com.google.android.exoplayer2.LoadControl, extensionRendererMode: number, allowedVideoJoiningTimeMs: number): com.google.android.exoplayer2.SimpleExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(context: globalAndroid.content.Context, renderersFactory: com.google.android.exoplayer2.RenderersFactory, trackSelector: com.google.android.exoplayer2.trackselection.TrackSelector, loadControl: com.google.android.exoplayer2.LoadControl, bandwidthMeter: com.google.android.exoplayer2.upstream.BandwidthMeter): com.google.android.exoplayer2.SimpleExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(context: globalAndroid.content.Context, renderersFactory: com.google.android.exoplayer2.RenderersFactory, trackSelector: com.google.android.exoplayer2.trackselection.TrackSelector, loadControl: com.google.android.exoplayer2.LoadControl, analyticsCollector: com.google.android.exoplayer2.analytics.AnalyticsCollector): com.google.android.exoplayer2.SimpleExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(context: globalAndroid.content.Context, trackSelector: com.google.android.exoplayer2.trackselection.TrackSelector, loadControl: com.google.android.exoplayer2.LoadControl): com.google.android.exoplayer2.SimpleExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(context: globalAndroid.content.Context, renderersFactory: com.google.android.exoplayer2.RenderersFactory, trackSelector: com.google.android.exoplayer2.trackselection.TrackSelector, loadControl: com.google.android.exoplayer2.LoadControl, analyticsCollector: com.google.android.exoplayer2.analytics.AnalyticsCollector, applicationLooper: globalAndroid.os.Looper): com.google.android.exoplayer2.SimpleExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(context: globalAndroid.content.Context, trackSelector: com.google.android.exoplayer2.trackselection.TrackSelector, loadControl: com.google.android.exoplayer2.LoadControl, extensionRendererMode: number): com.google.android.exoplayer2.SimpleExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(context: globalAndroid.content.Context, trackSelector: com.google.android.exoplayer2.trackselection.TrackSelector): com.google.android.exoplayer2.SimpleExoPlayer;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class ExoPlayerImpl extends com.google.android.exoplayer2.BasePlayer implements com.google.android.exoplayer2.ExoPlayer {
					public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlayerImpl>;
					public stop(reset: boolean): void;
					public getPlayWhenReady(): boolean;
					public setShuffleModeEnabled(shuffleModeEnabled: boolean): void;
					public getRendererCount(): number;
					public addMediaSource(index: number, mediaSource: com.google.android.exoplayer2.source.MediaSource): void;
					public removeMediaItems(fromIndex: number, toIndex: number): void;
					/** @deprecated */
					public getPlaybackError(): com.google.android.exoplayer2.ExoPlaybackException;
					public setMediaSource(mediaSource: com.google.android.exoplayer2.source.MediaSource, startPositionMs: number): void;
					public addMediaItem(index: number, mediaItem: com.google.android.exoplayer2.MediaItem): void;
					public hasNext(): boolean;
					public setPauseAtEndOfMediaItems(pauseAtEndOfMediaItems: boolean): void;
					public getContentPosition(): number;
					public constructor();
					public setMediaItem(mediaItem: com.google.android.exoplayer2.MediaItem, startPositionMs: number): void;
					public pause(): void;
					public getDeviceComponent(): com.google.android.exoplayer2.Player.DeviceComponent;
					public setRepeatMode(repeatMode: number): void;
					public getPlaybackSuppressionReason(): number;
					public getCurrentPeriodIndex(): number;
					public prepare(): void;
					public getMetadataComponent(): com.google.android.exoplayer2.Player.MetadataComponent;
					public experimentalSetOffloadSchedulingEnabled(offloadSchedulingEnabled: boolean): void;
					public addMediaSources(mediaSources: java.util.List<com.google.android.exoplayer2.source.MediaSource>): void;
					public previous(): void;
					public getRendererType(index: number): number;
					public getAudioComponent(): com.google.android.exoplayer2.Player.AudioComponent;
					public getPreviousWindowIndex(): number;
					public removeListener(listener: com.google.android.exoplayer2.Player.EventListener): void;
					public getPlayerError(): com.google.android.exoplayer2.ExoPlaybackException;
					public getContentBufferedPosition(): number;
					/** @deprecated */
					public prepare(mediaSource: com.google.android.exoplayer2.source.MediaSource): void;
					public getPlaybackState(): number;
					public getCurrentTimeline(): com.google.android.exoplayer2.Timeline;
					public getRepeatMode(): number;
					public setMediaSource(mediaSource: com.google.android.exoplayer2.source.MediaSource, resetPosition: boolean): void;
					public getDuration(): number;
					/** @deprecated */
					public retry(): void;
					public addMediaSources(index: number, mediaSources: java.util.List<com.google.android.exoplayer2.source.MediaSource>): void;
					public addListener(listener: com.google.android.exoplayer2.Player.EventListener): void;
					public moveMediaItems(fromIndex: number, toIndex: number, newFromIndex: number): void;
					public addMediaSource(mediaSource: com.google.android.exoplayer2.source.MediaSource): void;
					public experimentalSetReleaseTimeoutMs(timeoutMs: number): void;
					public setMediaItems(mediaItems: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
					public getNextWindowIndex(): number;
					public setPlayWhenReady(playWhenReady: boolean): void;
					public getMediaItemCount(): number;
					public setMediaItem(mediaItem: com.google.android.exoplayer2.MediaItem, resetPosition: boolean): void;
					public getTotalBufferedDuration(): number;
					public setMediaItems(mediaItems: java.util.List<com.google.android.exoplayer2.MediaItem>, startWindowIndex: number, startPositionMs: number): void;
					public isPlayingAd(): boolean;
					public moveMediaItem(currentIndex: number, newIndex: number): void;
					public seekTo(positionMs: number): void;
					public setMediaSource(mediaSource: com.google.android.exoplayer2.source.MediaSource): void;
					public getCurrentTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
					public getCurrentManifest(): any;
					public setMediaSources(mediaSources: java.util.List<com.google.android.exoplayer2.source.MediaSource>, startWindowIndex: number, startPositionMs: number): void;
					public isCurrentWindowDynamic(): boolean;
					public removeMediaItem(index: number): void;
					public getPauseAtEndOfMediaItems(): boolean;
					public addMediaItems(mediaItems: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
					/** @deprecated */
					public getCurrentTag(): any;
					public setMediaSources(mediaSources: java.util.List<com.google.android.exoplayer2.source.MediaSource>, resetPosition: boolean): void;
					public clearMediaItems(): void;
					public getCurrentAdGroupIndex(): number;
					public addMediaItems(index: number, mediaItems: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
					public getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
					public next(): void;
					public getShuffleModeEnabled(): boolean;
					public getCurrentWindowIndex(): number;
					public setShuffleOrder(shuffleOrder: com.google.android.exoplayer2.source.ShuffleOrder): void;
					public setSeekParameters(seekParameters: com.google.android.exoplayer2.SeekParameters): void;
					public experimentalDisableThrowWhenStuckBuffering(): void;
					public seekToDefaultPosition(windowIndex: number): void;
					public release(): void;
					public getCurrentAdIndexInAdGroup(): number;
					public getMediaItemAt(index: number): com.google.android.exoplayer2.MediaItem;
					public isCurrentWindowSeekable(): boolean;
					public getCurrentLiveOffset(): number;
					public setMediaItems(mediaItems: java.util.List<com.google.android.exoplayer2.MediaItem>, resetPosition: boolean): void;
					public getSeekParameters(): com.google.android.exoplayer2.SeekParameters;
					public getTrackSelector(): com.google.android.exoplayer2.trackselection.TrackSelector;
					public stop(): void;
					public constructor(renderers: native.Array<com.google.android.exoplayer2.Renderer>, trackSelector: com.google.android.exoplayer2.trackselection.TrackSelector, mediaSourceFactory: com.google.android.exoplayer2.source.MediaSourceFactory, loadControl: com.google.android.exoplayer2.LoadControl, bandwidthMeter: com.google.android.exoplayer2.upstream.BandwidthMeter, analyticsCollector: com.google.android.exoplayer2.analytics.AnalyticsCollector, useLazyPreparation: boolean, seekParameters: com.google.android.exoplayer2.SeekParameters, pauseAtEndOfMediaItems: boolean, clock: com.google.android.exoplayer2.util.Clock, applicationLooper: globalAndroid.os.Looper);
					public play(): void;
					public setMediaItem(mediaItem: com.google.android.exoplayer2.MediaItem): void;
					public setPlayWhenReady(playWhenReady: boolean, playbackSuppressionReason: number, playWhenReadyChangeReason: number): void;
					public isLoading(): boolean;
					public getPlaybackLooper(): globalAndroid.os.Looper;
					public getApplicationLooper(): globalAndroid.os.Looper;
					public getTextComponent(): com.google.android.exoplayer2.Player.TextComponent;
					public isPlaying(): boolean;
					public hasPrevious(): boolean;
					public createMessage(target: com.google.android.exoplayer2.PlayerMessage.Target): com.google.android.exoplayer2.PlayerMessage;
					public setForegroundMode(foregroundMode: boolean): void;
					public setMediaSources(mediaSources: java.util.List<com.google.android.exoplayer2.source.MediaSource>): void;
					public getCurrentPosition(): number;
					public setPlaybackParameters(playbackParameters: com.google.android.exoplayer2.PlaybackParameters): void;
					/** @deprecated */
					public prepare(mediaSource: com.google.android.exoplayer2.source.MediaSource, resetPosition: boolean, resetState: boolean): void;
					public getCurrentTrackSelections(): com.google.android.exoplayer2.trackselection.TrackSelectionArray;
					public seekTo(windowIndex: number, positionMs: number): void;
					public getCurrentMediaItem(): com.google.android.exoplayer2.MediaItem;
					public addMediaItem(mediaItem: com.google.android.exoplayer2.MediaItem): void;
					public getVideoComponent(): com.google.android.exoplayer2.Player.VideoComponent;
					public isCurrentWindowLive(): boolean;
					public getBufferedPercentage(): number;
					public seekToDefaultPosition(): void;
					public getBufferedPosition(): number;
					public getContentDuration(): number;
				}
				export module ExoPlayerImpl {
					export class MediaSourceHolderSnapshot extends java.lang.Object implements com.google.android.exoplayer2.MediaSourceInfoHolder {
						public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlayerImpl.MediaSourceHolderSnapshot>;
						public constructor(uid: any, timeline: com.google.android.exoplayer2.Timeline);
						public getTimeline(): com.google.android.exoplayer2.Timeline;
						public getUid(): any;
					}
					export class PlaybackInfoUpdate extends java.lang.Object implements java.lang.Runnable {
						public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlayerImpl.PlaybackInfoUpdate>;
						public run(): void;
						public constructor(playbackInfo: com.google.android.exoplayer2.PlaybackInfo, previousPlaybackInfo: com.google.android.exoplayer2.PlaybackInfo, listeners: java.util.concurrent.CopyOnWriteArrayList<com.google.android.exoplayer2.BasePlayer.ListenerHolder>, trackSelector: com.google.android.exoplayer2.trackselection.TrackSelector, positionDiscontinuity: boolean, positionDiscontinuityReason: number, timelineChangeReason: number, mediaItemTransitioned: boolean, mediaItemTransitionReason: number, mediaItem: com.google.android.exoplayer2.MediaItem, playWhenReadyChangeReason: number, seekProcessed: boolean);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class ExoPlayerImplInternal extends java.lang.Object implements globalAndroid.os.Handler.Callback, com.google.android.exoplayer2.source.MediaPeriod.Callback, com.google.android.exoplayer2.trackselection.TrackSelector.InvalidationListener, com.google.android.exoplayer2.MediaSourceList.MediaSourceListInfoRefreshListener, com.google.android.exoplayer2.DefaultMediaClock.PlaybackParametersListener, com.google.android.exoplayer2.PlayerMessage.Sender {
					public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlayerImplInternal>;
					public setShuffleModeEnabled(shuffleModeEnabled: boolean): void;
					public constructor(renderers: native.Array<com.google.android.exoplayer2.Renderer>, trackSelector: com.google.android.exoplayer2.trackselection.TrackSelector, emptyTrackSelectorResult: com.google.android.exoplayer2.trackselection.TrackSelectorResult, loadControl: com.google.android.exoplayer2.LoadControl, bandwidthMeter: com.google.android.exoplayer2.upstream.BandwidthMeter, repeatMode: number, shuffleModeEnabled: boolean, analyticsCollector: com.google.android.exoplayer2.analytics.AnalyticsCollector, seekParameters: com.google.android.exoplayer2.SeekParameters, pauseAtEndOfWindow: boolean, applicationLooper: globalAndroid.os.Looper, clock: com.google.android.exoplayer2.util.Clock, playbackInfoUpdateListener: com.google.android.exoplayer2.ExoPlayerImplInternal.PlaybackInfoUpdateListener);
					public getPlaybackLooper(): globalAndroid.os.Looper;
					public removeMediaSources(fromIndex: number, toIndex: number, shuffleOrder: com.google.android.exoplayer2.source.ShuffleOrder): void;
					public setMediaSources(mediaSources: java.util.List<com.google.android.exoplayer2.MediaSourceList.MediaSourceHolder>, windowIndex: number, positionUs: number, shuffleOrder: com.google.android.exoplayer2.source.ShuffleOrder): void;
					public onPlaybackParametersChanged(newPlaybackParameters: com.google.android.exoplayer2.PlaybackParameters): void;
					public onContinueLoadingRequested(source: com.google.android.exoplayer2.source.MediaPeriod): void;
					public moveMediaSources(fromIndex: number, toIndex: number, newFromIndex: number, shuffleOrder: com.google.android.exoplayer2.source.ShuffleOrder): void;
					public handleMessage(msg: globalAndroid.os.Message): boolean;
					public setRepeatMode(repeatMode: number): void;
					public setPlaybackParameters(playbackParameters: com.google.android.exoplayer2.PlaybackParameters): void;
					public prepare(): void;
					public onPlaylistUpdateRequested(): void;
					public experimentalSetOffloadSchedulingEnabled(offloadSchedulingEnabled: boolean): void;
					public setPauseAtEndOfWindow(pauseAtEndOfWindow: boolean): void;
					public onTrackSelectionsInvalidated(): void;
					public setSeekParameters(seekParameters: com.google.android.exoplayer2.SeekParameters): void;
					public setShuffleOrder(shuffleOrder: com.google.android.exoplayer2.source.ShuffleOrder): void;
					public experimentalDisableThrowWhenStuckBuffering(): void;
					public addMediaSources(index: number, mediaSources: java.util.List<com.google.android.exoplayer2.MediaSourceList.MediaSourceHolder>, shuffleOrder: com.google.android.exoplayer2.source.ShuffleOrder): void;
					public setForegroundMode(foregroundMode: boolean): boolean;
					public setPlayWhenReady(playWhenReady: boolean, playbackSuppressionReason: number): void;
					public seekTo(timeline: com.google.android.exoplayer2.Timeline, windowIndex: number, positionUs: number): void;
					public onContinueLoadingRequested(sequenceableLoader0: any): void;
					public sendMessage(message: com.google.android.exoplayer2.PlayerMessage): void;
					public experimentalSetReleaseTimeoutMs(releaseTimeoutMs: number): void;
					public stop(): void;
					public release(): boolean;
					public onPrepared(source: com.google.android.exoplayer2.source.MediaPeriod): void;
				}
				export module ExoPlayerImplInternal {
					export class MediaSourceListUpdateMessage extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlayerImplInternal.MediaSourceListUpdateMessage>;
					}
					export class MoveMediaItemsMessage extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlayerImplInternal.MoveMediaItemsMessage>;
						public fromIndex: number;
						public toIndex: number;
						public newFromIndex: number;
						public shuffleOrder: com.google.android.exoplayer2.source.ShuffleOrder;
						public constructor(fromIndex: number, toIndex: number, newFromIndex: number, shuffleOrder: com.google.android.exoplayer2.source.ShuffleOrder);
					}
					export class PendingMessageInfo extends java.lang.Comparable<com.google.android.exoplayer2.ExoPlayerImplInternal.PendingMessageInfo> {
						public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlayerImplInternal.PendingMessageInfo>;
						public message: com.google.android.exoplayer2.PlayerMessage;
						public resolvedPeriodIndex: number;
						public resolvedPeriodTimeUs: number;
						public resolvedPeriodUid: any;
						public compareTo(other: com.google.android.exoplayer2.ExoPlayerImplInternal.PendingMessageInfo): number;
						public constructor(message: com.google.android.exoplayer2.PlayerMessage);
						public setResolvedPosition(periodIndex: number, periodTimeUs: number, periodUid: any): void;
					}
					export class PlaybackInfoUpdate extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlayerImplInternal.PlaybackInfoUpdate>;
						public playbackInfo: com.google.android.exoplayer2.PlaybackInfo;
						public operationAcks: number;
						public positionDiscontinuity: boolean;
						public discontinuityReason: number;
						public hasPlayWhenReadyChangeReason: boolean;
						public playWhenReadyChangeReason: number;
						public constructor(playbackInfo: com.google.android.exoplayer2.PlaybackInfo);
						public setPlayWhenReadyChangeReason(playWhenReadyChangeReason: number): void;
						public setPlaybackInfo(playbackInfo: com.google.android.exoplayer2.PlaybackInfo): void;
						public incrementPendingOperationAcks(operationAcks: number): void;
						public setPositionDiscontinuity(discontinuityReason: number): void;
					}
					export class PlaybackInfoUpdateListener extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlayerImplInternal.PlaybackInfoUpdateListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.ExoPlayerImplInternal() when extending the interface class.
						 */
						public constructor(implementation: {
							onPlaybackInfoUpdate(playbackInfoUpdate0: com.google.android.exoplayer2.ExoPlayerImplInternal.PlaybackInfoUpdate): void;
						});
						public constructor();
						public onPlaybackInfoUpdate(playbackInfoUpdate0: com.google.android.exoplayer2.ExoPlayerImplInternal.PlaybackInfoUpdate): void;
					}
					export class PositionUpdateForPlaylistChange extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlayerImplInternal.PositionUpdateForPlaylistChange>;
						public periodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
						public periodPositionUs: number;
						public requestedContentPositionUs: number;
						public forceBufferingState: boolean;
						public endPlayback: boolean;
						public constructor(periodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, periodPositionUs: number, requestedContentPositionUs: number, forceBufferingState: boolean, endPlayback: boolean);
					}
					export class SeekPosition extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlayerImplInternal.SeekPosition>;
						public timeline: com.google.android.exoplayer2.Timeline;
						public windowIndex: number;
						public windowPositionUs: number;
						public constructor(timeline: com.google.android.exoplayer2.Timeline, windowIndex: number, windowPositionUs: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class FormatHolder extends java.lang.Object {
					public static class: java.lang.Class<com.google.android.exoplayer2.FormatHolder>;
					public drmSession: com.google.android.exoplayer2.drm.DrmSession;
					public format: com.google.android.exoplayer2.Format;
					public constructor();
					public clear(): void;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class IllegalSeekPositionException extends java.lang.IllegalStateException {
					public static class: java.lang.Class<com.google.android.exoplayer2.IllegalSeekPositionException>;
					public timeline: com.google.android.exoplayer2.Timeline;
					public windowIndex: number;
					public positionMs: number;
					public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
					public constructor();
					public constructor(s: string);
					public constructor(cause: java.lang.Throwable);
					public constructor(timeline: com.google.android.exoplayer2.Timeline, windowIndex: number, positionMs: number);
					public constructor(message: string, cause: java.lang.Throwable);
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class LoadControl extends java.lang.Object {
					public static class: java.lang.Class<com.google.android.exoplayer2.LoadControl>;
					/**
					 * Constructs a new instance of the com.google.android.exoplayer2.LoadControl interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onPrepared(): void;
						onTracksSelected(renderers0: native.Array<com.google.android.exoplayer2.Renderer>, trackGroupArray1: com.google.android.exoplayer2.source.TrackGroupArray, trackSelectionArray2: com.google.android.exoplayer2.trackselection.TrackSelectionArray): void;
						onStopped(): void;
						onReleased(): void;
						getAllocator(): com.google.android.exoplayer2.upstream.Allocator;
						getBackBufferDurationUs(): number;
						retainBackBufferFromKeyframe(): boolean;
						shouldContinueLoading(long0: number, long1: number, float2: number): boolean;
						shouldStartPlayback(long0: number, float1: number, boolean2: boolean): boolean;
					});
					public constructor();
					public onTracksSelected(renderers0: native.Array<com.google.android.exoplayer2.Renderer>, trackGroupArray1: com.google.android.exoplayer2.source.TrackGroupArray, trackSelectionArray2: com.google.android.exoplayer2.trackselection.TrackSelectionArray): void;
					public onPrepared(): void;
					public onStopped(): void;
					public getBackBufferDurationUs(): number;
					public shouldContinueLoading(long0: number, long1: number, float2: number): boolean;
					public retainBackBufferFromKeyframe(): boolean;
					public shouldStartPlayback(long0: number, float1: number, boolean2: boolean): boolean;
					public onReleased(): void;
					public getAllocator(): com.google.android.exoplayer2.upstream.Allocator;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class MediaPeriodHolder extends java.lang.Object {
					public static class: java.lang.Class<com.google.android.exoplayer2.MediaPeriodHolder>;
					public mediaPeriod: com.google.android.exoplayer2.source.MediaPeriod;
					public uid: any;
					public sampleStreams: native.Array<com.google.android.exoplayer2.source.SampleStream>;
					public prepared: boolean;
					public hasEnabledTracks: boolean;
					public info: com.google.android.exoplayer2.MediaPeriodInfo;
					public allRenderersEnabled: boolean;
					public continueLoading(rendererPositionUs: number): void;
					public getTrackSelectorResult(): com.google.android.exoplayer2.trackselection.TrackSelectorResult;
					public getStartPositionRendererTime(): number;
					public toRendererTime(periodTimeUs: number): number;
					public handlePrepared(playbackSpeed: number, timeline: com.google.android.exoplayer2.Timeline): void;
					public selectTracks(playbackSpeed: number, timeline: com.google.android.exoplayer2.Timeline): com.google.android.exoplayer2.trackselection.TrackSelectorResult;
					public applyTrackSelection(newTrackSelectorResult: com.google.android.exoplayer2.trackselection.TrackSelectorResult, positionUs: number, forceRecreateStreams: boolean, streamResetFlags: native.Array<boolean>): number;
					public getTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
					public getBufferedPositionUs(): number;
					public release(): void;
					public getNext(): com.google.android.exoplayer2.MediaPeriodHolder;
					public setNext(nextMediaPeriodHolder: com.google.android.exoplayer2.MediaPeriodHolder): void;
					public getRendererOffset(): number;
					public isFullyBuffered(): boolean;
					public getNextLoadPositionUs(): number;
					public reevaluateBuffer(rendererPositionUs: number): void;
					public constructor(rendererCapabilities: native.Array<com.google.android.exoplayer2.RendererCapabilities>, rendererPositionOffsetUs: number, trackSelector: com.google.android.exoplayer2.trackselection.TrackSelector, allocator: com.google.android.exoplayer2.upstream.Allocator, mediaSourceList: com.google.android.exoplayer2.MediaSourceList, info: com.google.android.exoplayer2.MediaPeriodInfo, emptyTrackSelectorResult: com.google.android.exoplayer2.trackselection.TrackSelectorResult);
					public toPeriodTime(rendererTimeUs: number): number;
					public setRendererOffset(rendererPositionOffsetUs: number): void;
					public applyTrackSelection(trackSelectorResult: com.google.android.exoplayer2.trackselection.TrackSelectorResult, positionUs: number, forceRecreateStreams: boolean): number;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class MediaPeriodInfo extends java.lang.Object {
					public static class: java.lang.Class<com.google.android.exoplayer2.MediaPeriodInfo>;
					public id: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
					public startPositionUs: number;
					public requestedContentPositionUs: number;
					public endPositionUs: number;
					public durationUs: number;
					public isLastInTimelinePeriod: boolean;
					public isLastInTimelineWindow: boolean;
					public isFinal: boolean;
					public equals(obj: any): boolean;
					public copyWithStartPositionUs(startPositionUs: number): com.google.android.exoplayer2.MediaPeriodInfo;
					public equals(o: any): boolean;
					public hashCode(): number;
					public copyWithRequestedContentPositionUs(requestedContentPositionUs: number): com.google.android.exoplayer2.MediaPeriodInfo;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class MediaPeriodQueue extends java.lang.Object {
					public static class: java.lang.Class<com.google.android.exoplayer2.MediaPeriodQueue>;
					public resolveMediaPeriodIdForAds(timeline: com.google.android.exoplayer2.Timeline, periodUid: any, positionUs: number): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
					public updateRepeatMode(timeline: com.google.android.exoplayer2.Timeline, repeatMode: number): boolean;
					public enqueueNextMediaPeriodHolder(rendererCapabilities: native.Array<com.google.android.exoplayer2.RendererCapabilities>, trackSelector: com.google.android.exoplayer2.trackselection.TrackSelector, allocator: com.google.android.exoplayer2.upstream.Allocator, mediaSourceList: com.google.android.exoplayer2.MediaSourceList, info: com.google.android.exoplayer2.MediaPeriodInfo, emptyTrackSelectorResult: com.google.android.exoplayer2.trackselection.TrackSelectorResult): com.google.android.exoplayer2.MediaPeriodHolder;
					public shouldLoadNextMediaPeriod(): boolean;
					public getPlayingPeriod(): com.google.android.exoplayer2.MediaPeriodHolder;
					public advanceReadingPeriod(): com.google.android.exoplayer2.MediaPeriodHolder;
					public removeAfter(mediaPeriodHolder: com.google.android.exoplayer2.MediaPeriodHolder): boolean;
					public getLoadingPeriod(): com.google.android.exoplayer2.MediaPeriodHolder;
					public isLoading(mediaPeriod: com.google.android.exoplayer2.source.MediaPeriod): boolean;
					public getReadingPeriod(): com.google.android.exoplayer2.MediaPeriodHolder;
					public getUpdatedMediaPeriodInfo(timeline: com.google.android.exoplayer2.Timeline, info: com.google.android.exoplayer2.MediaPeriodInfo): com.google.android.exoplayer2.MediaPeriodInfo;
					public updateShuffleModeEnabled(timeline: com.google.android.exoplayer2.Timeline, shuffleModeEnabled: boolean): boolean;
					public clear(): void;
					public getNextMediaPeriodInfo(rendererPositionUs: number, playbackInfo: com.google.android.exoplayer2.PlaybackInfo): com.google.android.exoplayer2.MediaPeriodInfo;
					public updateQueuedPeriods(timeline: com.google.android.exoplayer2.Timeline, rendererPositionUs: number, maxRendererReadPositionUs: number): boolean;
					public reevaluateBuffer(rendererPositionUs: number): void;
					public advancePlayingPeriod(): com.google.android.exoplayer2.MediaPeriodHolder;
					public constructor(analyticsCollector: com.google.android.exoplayer2.analytics.AnalyticsCollector, analyticsCollectorHandler: globalAndroid.os.Handler);
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class MediaSourceInfoHolder extends java.lang.Object {
					public static class: java.lang.Class<com.google.android.exoplayer2.MediaSourceInfoHolder>;
					/**
					 * Constructs a new instance of the com.google.android.exoplayer2.MediaSourceInfoHolder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getUid(): any;
						getTimeline(): com.google.android.exoplayer2.Timeline;
					});
					public constructor();
					public getUid(): any;
					public getTimeline(): com.google.android.exoplayer2.Timeline;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class MediaSourceList extends java.lang.Object {
					public static class: java.lang.Class<com.google.android.exoplayer2.MediaSourceList>;
					public addMediaSources(index: number, holders: java.util.List<com.google.android.exoplayer2.MediaSourceList.MediaSourceHolder>, shuffleOrder: com.google.android.exoplayer2.source.ShuffleOrder): com.google.android.exoplayer2.Timeline;
					public moveMediaSource(currentIndex: number, newIndex: number, shuffleOrder: com.google.android.exoplayer2.source.ShuffleOrder): com.google.android.exoplayer2.Timeline;
					public setMediaSources(holders: java.util.List<com.google.android.exoplayer2.MediaSourceList.MediaSourceHolder>, shuffleOrder: com.google.android.exoplayer2.source.ShuffleOrder): com.google.android.exoplayer2.Timeline;
					public isPrepared(): boolean;
					public createPeriod(id: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, allocator: com.google.android.exoplayer2.upstream.Allocator, startPositionUs: number): com.google.android.exoplayer2.source.MediaPeriod;
					public constructor(listener: com.google.android.exoplayer2.MediaSourceList.MediaSourceListInfoRefreshListener, analyticsCollector: com.google.android.exoplayer2.analytics.AnalyticsCollector, analyticsCollectorHandler: globalAndroid.os.Handler);
					public releasePeriod(mediaPeriod: com.google.android.exoplayer2.source.MediaPeriod): void;
					public release(): void;
					public getSize(): number;
					public clear(shuffleOrder: com.google.android.exoplayer2.source.ShuffleOrder): com.google.android.exoplayer2.Timeline;
					public removeMediaSourceRange(fromIndex: number, toIndex: number, shuffleOrder: com.google.android.exoplayer2.source.ShuffleOrder): com.google.android.exoplayer2.Timeline;
					public prepare(mediaTransferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
					public setShuffleOrder(shuffleOrder: com.google.android.exoplayer2.source.ShuffleOrder): com.google.android.exoplayer2.Timeline;
					public moveMediaSourceRange(fromIndex: number, toIndex: number, newFromIndex: number, shuffleOrder: com.google.android.exoplayer2.source.ShuffleOrder): com.google.android.exoplayer2.Timeline;
					public createTimeline(): com.google.android.exoplayer2.Timeline;
				}
				export module MediaSourceList {
					export class ForwardingEventListener extends java.lang.Object implements com.google.android.exoplayer2.source.MediaSourceEventListener, com.google.android.exoplayer2.drm.DrmSessionEventListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.MediaSourceList.ForwardingEventListener>;
						public onLoadStarted(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onLoadError(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData, error: java.io.IOException, wasCanceled: boolean): void;
						public onDrmKeysLoaded(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public onLoadCompleted(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onLoadCompleted(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventData: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public constructor(param0: com.google.android.exoplayer2.MediaSourceList, id: com.google.android.exoplayer2.MediaSourceList.MediaSourceHolder);
						public onLoadError(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventData: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData, error: java.io.IOException, wasCanceled: boolean): void;
						public onDrmSessionReleased(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public onDrmKeysRemoved(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public onDrmSessionAcquired(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public onDrmSessionManagerError(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, error: java.lang.Exception): void;
						public onLoadCanceled(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onLoadStarted(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventData: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onDownstreamFormatChanged(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onDrmKeysRestored(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public onUpstreamDiscarded(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onLoadCanceled(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventData: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
					}
					export class MediaSourceAndListener extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.MediaSourceList.MediaSourceAndListener>;
						public mediaSource: com.google.android.exoplayer2.source.MediaSource;
						public caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller;
						public eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener;
						public constructor(mediaSource: com.google.android.exoplayer2.source.MediaSource, caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener);
					}
					export class MediaSourceHolder extends java.lang.Object implements com.google.android.exoplayer2.MediaSourceInfoHolder {
						public static class: java.lang.Class<com.google.android.exoplayer2.MediaSourceList.MediaSourceHolder>;
						public mediaSource: com.google.android.exoplayer2.source.MaskingMediaSource;
						public uid: any;
						public activeMediaPeriodIds: java.util.List<com.google.android.exoplayer2.source.MediaSource.MediaPeriodId>;
						public firstWindowIndexInChild: number;
						public isRemoved: boolean;
						public reset(firstWindowIndexInChild: number): void;
						public getTimeline(): com.google.android.exoplayer2.Timeline;
						public constructor(mediaSource: com.google.android.exoplayer2.source.MediaSource, useLazyPreparation: boolean);
						public getUid(): any;
					}
					export class MediaSourceListInfoRefreshListener extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.MediaSourceList.MediaSourceListInfoRefreshListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.MediaSourceList() when extending the interface class.
						 */
						public constructor(implementation: {
							onPlaylistUpdateRequested(): void;
						});
						public constructor();
						public onPlaylistUpdateRequested(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class MetadataRetriever extends java.lang.Object {
					public static class: java.lang.Class<com.google.android.exoplayer2.MetadataRetriever>;
					public static retrieveMetadata(mediaSourceFactory: com.google.android.exoplayer2.source.MediaSourceFactory, mediaItem: com.google.android.exoplayer2.MediaItem): com.google.common.util.concurrent.ListenableFuture<com.google.android.exoplayer2.source.TrackGroupArray>;
					public static retrieveMetadata(context: globalAndroid.content.Context, mediaItem: com.google.android.exoplayer2.MediaItem): com.google.common.util.concurrent.ListenableFuture<com.google.android.exoplayer2.source.TrackGroupArray>;
				}
				export module MetadataRetriever {
					export class MetadataRetrieverInternal extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.MetadataRetriever.MetadataRetrieverInternal>;
						public constructor(mediaSourceFactory: com.google.android.exoplayer2.source.MediaSourceFactory);
						public retrieveMetadata(mediaItem: com.google.android.exoplayer2.MediaItem): com.google.common.util.concurrent.ListenableFuture<com.google.android.exoplayer2.source.TrackGroupArray>;
					}
					export module MetadataRetrieverInternal {
						export class MediaSourceHandlerCallback extends java.lang.Object implements globalAndroid.os.Handler.Callback {
							public static class: java.lang.Class<com.google.android.exoplayer2.MetadataRetriever.MetadataRetrieverInternal.MediaSourceHandlerCallback>;
							public handleMessage(msg: globalAndroid.os.Message): boolean;
							public constructor(param0: com.google.android.exoplayer2.MetadataRetriever.MetadataRetrieverInternal);
						}
						export module MediaSourceHandlerCallback {
							export class MediaSourceCaller extends java.lang.Object implements com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller {
								public static class: java.lang.Class<com.google.android.exoplayer2.MetadataRetriever.MetadataRetrieverInternal.MediaSourceHandlerCallback.MediaSourceCaller>;
								public constructor(param0: com.google.android.exoplayer2.MetadataRetriever.MetadataRetrieverInternal.MediaSourceHandlerCallback);
								public onSourceInfoRefreshed(source: com.google.android.exoplayer2.source.MediaSource, timeline: com.google.android.exoplayer2.Timeline): void;
							}
							export module MediaSourceCaller {
								export class MediaPeriodCallback extends java.lang.Object implements com.google.android.exoplayer2.source.MediaPeriod.Callback {
									public static class: java.lang.Class<com.google.android.exoplayer2.MetadataRetriever.MetadataRetrieverInternal.MediaSourceHandlerCallback.MediaSourceCaller.MediaPeriodCallback>;
									public onPrepared(mediaPeriod: com.google.android.exoplayer2.source.MediaPeriod): void;
									public onContinueLoadingRequested(mediaPeriod: com.google.android.exoplayer2.source.MediaPeriod): void;
									public onContinueLoadingRequested(sequenceableLoader0: any): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export abstract class NoSampleRenderer extends java.lang.Object implements com.google.android.exoplayer2.Renderer, com.google.android.exoplayer2.RendererCapabilities {
					public static class: java.lang.Class<com.google.android.exoplayer2.NoSampleRenderer>;
					public isReady(): boolean;
					public static getFormatSupport(supportFlags: number): number;
					public handleMessage(what: number, object: any): void;
					public onStopped(): void;
					public getConfiguration(): com.google.android.exoplayer2.RendererConfiguration;
					public start(): void;
					public onPositionReset(positionUs: number, joining: boolean): void;
					public onReset(): void;
					public getStream(): com.google.android.exoplayer2.source.SampleStream;
					public static create(formatSupport: number, adaptiveSupport: number, tunnelingSupport: number): number;
					public onDisabled(): void;
					public static getTunnelingSupport(supportFlags: number): number;
					public disable(): void;
					public supportsFormat(format: com.google.android.exoplayer2.Format): number;
					public onEnabled(joining: boolean): void;
					public constructor();
					public enable(configuration: com.google.android.exoplayer2.RendererConfiguration, formats: native.Array<com.google.android.exoplayer2.Format>, stream: com.google.android.exoplayer2.source.SampleStream, positionUs: number, joining: boolean, mayRenderStartOfStream: boolean, startPositionUs: number, offsetUs: number): void;
					public getReadingPositionUs(): number;
					public getTrackType(): number;
					public static getFormatSupportString(formatSupport: number): string;
					public getIndex(): number;
					public setCurrentStreamFinal(): void;
					public reset(): void;
					public getCapabilities(): com.google.android.exoplayer2.RendererCapabilities;
					public static getAdaptiveSupport(supportFlags: number): number;
					public render(long0: number, long1: number): void;
					public hasReadStreamToEnd(): boolean;
					public replaceStream(formats: native.Array<com.google.android.exoplayer2.Format>, stream: com.google.android.exoplayer2.source.SampleStream, startPositionUs: number, offsetUs: number): void;
					public static create(formatSupport: number): number;
					public maybeThrowStreamError(): void;
					public isEnded(): boolean;
					public isCurrentStreamFinal(): boolean;
					public supportsMixedMimeTypeAdaptation(): number;
					public setIndex(index: number): void;
					public getName(): string;
					public getMediaClock(): com.google.android.exoplayer2.util.MediaClock;
					public setOperatingRate(operatingRate: number): void;
					public resetPosition(positionUs: number): void;
					public stop(): void;
					public onRendererOffsetChanged(offsetUs: number): void;
					public onStarted(): void;
					public getState(): number;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class PlaybackInfo extends java.lang.Object {
					public static class: java.lang.Class<com.google.android.exoplayer2.PlaybackInfo>;
					public timeline: com.google.android.exoplayer2.Timeline;
					public periodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
					public requestedContentPositionUs: number;
					public playbackState: number;
					public playbackError: com.google.android.exoplayer2.ExoPlaybackException;
					public isLoading: boolean;
					public trackGroups: com.google.android.exoplayer2.source.TrackGroupArray;
					public trackSelectorResult: com.google.android.exoplayer2.trackselection.TrackSelectorResult;
					public loadingMediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
					public playWhenReady: boolean;
					public playbackSuppressionReason: number;
					public playbackParameters: com.google.android.exoplayer2.PlaybackParameters;
					public offloadSchedulingEnabled: boolean;
					public bufferedPositionUs: number;
					public totalBufferedDurationUs: number;
					public positionUs: number;
					public copyWithNewPosition(periodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, positionUs: number, requestedContentPositionUs: number, totalBufferedDurationUs: number, trackGroups: com.google.android.exoplayer2.source.TrackGroupArray, trackSelectorResult: com.google.android.exoplayer2.trackselection.TrackSelectorResult): com.google.android.exoplayer2.PlaybackInfo;
					public copyWithTimeline(timeline: com.google.android.exoplayer2.Timeline): com.google.android.exoplayer2.PlaybackInfo;
					public copyWithIsLoading(isLoading: boolean): com.google.android.exoplayer2.PlaybackInfo;
					public static getDummyPeriodForEmptyTimeline(): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
					public copyWithPlaybackState(playbackState: number): com.google.android.exoplayer2.PlaybackInfo;
					public copyWithPlaybackError(playbackError: com.google.android.exoplayer2.ExoPlaybackException): com.google.android.exoplayer2.PlaybackInfo;
					public copyWithPlayWhenReady(playWhenReady: boolean, playbackSuppressionReason: number): com.google.android.exoplayer2.PlaybackInfo;
					public static createDummy(emptyTrackSelectorResult: com.google.android.exoplayer2.trackselection.TrackSelectorResult): com.google.android.exoplayer2.PlaybackInfo;
					public copyWithLoadingMediaPeriodId(loadingMediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.PlaybackInfo;
					public copyWithOffloadSchedulingEnabled(offloadSchedulingEnabled: boolean): com.google.android.exoplayer2.PlaybackInfo;
					public constructor(timeline: com.google.android.exoplayer2.Timeline, periodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, requestedContentPositionUs: number, playbackState: number, playbackError: com.google.android.exoplayer2.ExoPlaybackException, isLoading: boolean, trackGroups: com.google.android.exoplayer2.source.TrackGroupArray, trackSelectorResult: com.google.android.exoplayer2.trackselection.TrackSelectorResult, loadingMediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, playWhenReady: boolean, playbackSuppressionReason: number, playbackParameters: com.google.android.exoplayer2.PlaybackParameters, bufferedPositionUs: number, totalBufferedDurationUs: number, positionUs: number, offloadSchedulingEnabled: boolean);
					public copyWithPlaybackParameters(playbackParameters: com.google.android.exoplayer2.PlaybackParameters): com.google.android.exoplayer2.PlaybackInfo;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class PlaybackParameters extends java.lang.Object {
					public static class: java.lang.Class<com.google.android.exoplayer2.PlaybackParameters>;
					public static DEFAULT: com.google.android.exoplayer2.PlaybackParameters;
					public speed: number;
					public pitch: number;
					public constructor(speed: number);
					public equals(obj: any): boolean;
					public toString(): string;
					public getMediaTimeUsForPlayoutTimeMs(timeMs: number): number;
					public hashCode(): number;
					public constructor(speed: number, pitch: number);
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class PlaybackPreparer extends java.lang.Object {
					public static class: java.lang.Class<com.google.android.exoplayer2.PlaybackPreparer>;
					/**
					 * Constructs a new instance of the com.google.android.exoplayer2.PlaybackPreparer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						preparePlayback(): void;
					});
					public constructor();
					/** @deprecated */
					public preparePlayback(): void;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class Player extends java.lang.Object {
					public static class: java.lang.Class<com.google.android.exoplayer2.Player>;
					/**
					 * Constructs a new instance of the com.google.android.exoplayer2.Player interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getAudioComponent(): com.google.android.exoplayer2.Player.AudioComponent;
						getVideoComponent(): com.google.android.exoplayer2.Player.VideoComponent;
						getTextComponent(): com.google.android.exoplayer2.Player.TextComponent;
						getMetadataComponent(): com.google.android.exoplayer2.Player.MetadataComponent;
						getDeviceComponent(): com.google.android.exoplayer2.Player.DeviceComponent;
						getApplicationLooper(): globalAndroid.os.Looper;
						addListener(eventListener0: com.google.android.exoplayer2.Player.EventListener): void;
						removeListener(eventListener0: com.google.android.exoplayer2.Player.EventListener): void;
						setMediaItems(list0: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
						setMediaItems(list0: java.util.List<com.google.android.exoplayer2.MediaItem>, boolean1: boolean): void;
						setMediaItems(list0: java.util.List<com.google.android.exoplayer2.MediaItem>, int1: number, long2: number): void;
						setMediaItem(mediaItem0: com.google.android.exoplayer2.MediaItem): void;
						setMediaItem(mediaItem0: com.google.android.exoplayer2.MediaItem, long1: number): void;
						setMediaItem(mediaItem0: com.google.android.exoplayer2.MediaItem, boolean1: boolean): void;
						addMediaItem(mediaItem0: com.google.android.exoplayer2.MediaItem): void;
						addMediaItem(int0: number, mediaItem1: com.google.android.exoplayer2.MediaItem): void;
						addMediaItems(list0: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
						addMediaItems(int0: number, list1: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
						moveMediaItem(int0: number, int1: number): void;
						moveMediaItems(int0: number, int1: number, int2: number): void;
						removeMediaItem(int0: number): void;
						removeMediaItems(int0: number, int1: number): void;
						clearMediaItems(): void;
						prepare(): void;
						getPlaybackState(): number;
						getPlaybackSuppressionReason(): number;
						isPlaying(): boolean;
						getPlayerError(): com.google.android.exoplayer2.ExoPlaybackException;
						getPlaybackError(): com.google.android.exoplayer2.ExoPlaybackException;
						play(): void;
						pause(): void;
						setPlayWhenReady(boolean0: boolean): void;
						getPlayWhenReady(): boolean;
						setRepeatMode(int0: number): void;
						getRepeatMode(): number;
						setShuffleModeEnabled(boolean0: boolean): void;
						getShuffleModeEnabled(): boolean;
						isLoading(): boolean;
						seekToDefaultPosition(): void;
						seekToDefaultPosition(int0: number): void;
						seekTo(long0: number): void;
						seekTo(int0: number, long1: number): void;
						hasPrevious(): boolean;
						previous(): void;
						hasNext(): boolean;
						next(): void;
						setPlaybackParameters(playbackParameters0: com.google.android.exoplayer2.PlaybackParameters): void;
						getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
						stop(): void;
						stop(boolean0: boolean): void;
						release(): void;
						getRendererCount(): number;
						getRendererType(int0: number): number;
						getTrackSelector(): com.google.android.exoplayer2.trackselection.TrackSelector;
						getCurrentTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
						getCurrentTrackSelections(): com.google.android.exoplayer2.trackselection.TrackSelectionArray;
						getCurrentManifest(): any;
						getCurrentTimeline(): com.google.android.exoplayer2.Timeline;
						getCurrentPeriodIndex(): number;
						getCurrentWindowIndex(): number;
						getNextWindowIndex(): number;
						getPreviousWindowIndex(): number;
						getCurrentTag(): any;
						getCurrentMediaItem(): com.google.android.exoplayer2.MediaItem;
						getMediaItemCount(): number;
						getMediaItemAt(int0: number): com.google.android.exoplayer2.MediaItem;
						getDuration(): number;
						getCurrentPosition(): number;
						getBufferedPosition(): number;
						getBufferedPercentage(): number;
						getTotalBufferedDuration(): number;
						isCurrentWindowDynamic(): boolean;
						isCurrentWindowLive(): boolean;
						getCurrentLiveOffset(): number;
						isCurrentWindowSeekable(): boolean;
						isPlayingAd(): boolean;
						getCurrentAdGroupIndex(): number;
						getCurrentAdIndexInAdGroup(): number;
						getContentDuration(): number;
						getContentPosition(): number;
						getContentBufferedPosition(): number;
					});
					public constructor();
					public static DISCONTINUITY_REASON_AD_INSERTION: number;
					public static PLAY_WHEN_READY_CHANGE_REASON_USER_REQUEST: number;
					public static TIMELINE_CHANGE_REASON_PLAYLIST_CHANGED: number;
					public static PLAYBACK_SUPPRESSION_REASON_NONE: number;
					public static PLAY_WHEN_READY_CHANGE_REASON_END_OF_MEDIA_ITEM: number;
					public static TIMELINE_CHANGE_REASON_SOURCE_UPDATE: number;
					public static DISCONTINUITY_REASON_INTERNAL: number;
					public static STATE_ENDED: number;
					public static PLAY_WHEN_READY_CHANGE_REASON_REMOTE: number;
					public static STATE_BUFFERING: number;
					public static DISCONTINUITY_REASON_PERIOD_TRANSITION: number;
					public static PLAYBACK_SUPPRESSION_REASON_TRANSIENT_AUDIO_FOCUS_LOSS: number;
					public static DISCONTINUITY_REASON_SEEK_ADJUSTMENT: number;
					public static PLAY_WHEN_READY_CHANGE_REASON_AUDIO_FOCUS_LOSS: number;
					public static REPEAT_MODE_OFF: number;
					public static PLAY_WHEN_READY_CHANGE_REASON_AUDIO_BECOMING_NOISY: number;
					public static STATE_READY: number;
					public static DISCONTINUITY_REASON_SEEK: number;
					public static MEDIA_ITEM_TRANSITION_REASON_REPEAT: number;
					public static MEDIA_ITEM_TRANSITION_REASON_PLAYLIST_CHANGED: number;
					public static REPEAT_MODE_ALL: number;
					public static STATE_IDLE: number;
					public static REPEAT_MODE_ONE: number;
					public static MEDIA_ITEM_TRANSITION_REASON_SEEK: number;
					public static MEDIA_ITEM_TRANSITION_REASON_AUTO: number;
					public getPlayWhenReady(): boolean;
					public getRendererCount(): number;
					public isCurrentWindowDynamic(): boolean;
					public setShuffleModeEnabled(boolean0: boolean): void;
					public setPlayWhenReady(boolean0: boolean): void;
					/** @deprecated */
					public getPlaybackError(): com.google.android.exoplayer2.ExoPlaybackException;
					public removeMediaItem(int0: number): void;
					public setMediaItem(mediaItem0: com.google.android.exoplayer2.MediaItem): void;
					public hasNext(): boolean;
					public seekTo(long0: number): void;
					/** @deprecated */
					public getCurrentTag(): any;
					public getContentPosition(): number;
					public pause(): void;
					public getDeviceComponent(): com.google.android.exoplayer2.Player.DeviceComponent;
					public clearMediaItems(): void;
					public stop(boolean0: boolean): void;
					public getPlaybackSuppressionReason(): number;
					public getCurrentAdGroupIndex(): number;
					public getCurrentPeriodIndex(): number;
					public addMediaItem(mediaItem0: com.google.android.exoplayer2.MediaItem): void;
					public prepare(): void;
					public getMetadataComponent(): com.google.android.exoplayer2.Player.MetadataComponent;
					public removeListener(eventListener0: com.google.android.exoplayer2.Player.EventListener): void;
					public next(): void;
					public getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
					public getShuffleModeEnabled(): boolean;
					public getCurrentWindowIndex(): number;
					public previous(): void;
					public getRendererType(int0: number): number;
					public seekTo(int0: number, long1: number): void;
					public release(): void;
					public moveMediaItem(int0: number, int1: number): void;
					public getCurrentAdIndexInAdGroup(): number;
					public getAudioComponent(): com.google.android.exoplayer2.Player.AudioComponent;
					public getPreviousWindowIndex(): number;
					public isCurrentWindowSeekable(): boolean;
					public getCurrentLiveOffset(): number;
					public getPlayerError(): com.google.android.exoplayer2.ExoPlaybackException;
					public getContentBufferedPosition(): number;
					public getTrackSelector(): com.google.android.exoplayer2.trackselection.TrackSelector;
					public stop(): void;
					public setRepeatMode(int0: number): void;
					public play(): void;
					public getPlaybackState(): number;
					public getCurrentTimeline(): com.google.android.exoplayer2.Timeline;
					public isLoading(): boolean;
					public getRepeatMode(): number;
					public setMediaItem(mediaItem0: com.google.android.exoplayer2.MediaItem, boolean1: boolean): void;
					public addListener(eventListener0: com.google.android.exoplayer2.Player.EventListener): void;
					public getApplicationLooper(): globalAndroid.os.Looper;
					public getTextComponent(): com.google.android.exoplayer2.Player.TextComponent;
					public getDuration(): number;
					public getMediaItemAt(int0: number): com.google.android.exoplayer2.MediaItem;
					public isPlaying(): boolean;
					public hasPrevious(): boolean;
					public setMediaItems(list0: java.util.List<com.google.android.exoplayer2.MediaItem>, int1: number, long2: number): void;
					public getCurrentPosition(): number;
					public getCurrentTrackSelections(): com.google.android.exoplayer2.trackselection.TrackSelectionArray;
					public setPlaybackParameters(playbackParameters0: com.google.android.exoplayer2.PlaybackParameters): void;
					public removeMediaItems(int0: number, int1: number): void;
					public getNextWindowIndex(): number;
					public getCurrentMediaItem(): com.google.android.exoplayer2.MediaItem;
					public getMediaItemCount(): number;
					public moveMediaItems(int0: number, int1: number, int2: number): void;
					public getVideoComponent(): com.google.android.exoplayer2.Player.VideoComponent;
					public setMediaItems(list0: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
					public addMediaItems(list0: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
					public addMediaItems(int0: number, list1: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
					public getTotalBufferedDuration(): number;
					public isCurrentWindowLive(): boolean;
					public setMediaItem(mediaItem0: com.google.android.exoplayer2.MediaItem, long1: number): void;
					public seekToDefaultPosition(int0: number): void;
					public isPlayingAd(): boolean;
					public getBufferedPercentage(): number;
					public seekToDefaultPosition(): void;
					public addMediaItem(int0: number, mediaItem1: com.google.android.exoplayer2.MediaItem): void;
					public getBufferedPosition(): number;
					public getCurrentTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
					public getCurrentManifest(): any;
					public setMediaItems(list0: java.util.List<com.google.android.exoplayer2.MediaItem>, boolean1: boolean): void;
					public getContentDuration(): number;
				}
				export module Player {
					export class AudioComponent extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.Player.AudioComponent>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Player() when extending the interface class.
						 */
						public constructor(implementation: {
							addAudioListener(audioListener0: com.google.android.exoplayer2.audio.AudioListener): void;
							removeAudioListener(audioListener0: com.google.android.exoplayer2.audio.AudioListener): void;
							setAudioAttributes(audioAttributes0: com.google.android.exoplayer2.audio.AudioAttributes): void;
							setAudioAttributes(audioAttributes0: com.google.android.exoplayer2.audio.AudioAttributes, boolean1: boolean): void;
							getAudioAttributes(): com.google.android.exoplayer2.audio.AudioAttributes;
							setAudioSessionId(int0: number): void;
							getAudioSessionId(): number;
							setAuxEffectInfo(auxEffectInfo0: com.google.android.exoplayer2.audio.AuxEffectInfo): void;
							clearAuxEffectInfo(): void;
							setVolume(float0: number): void;
							getVolume(): number;
							setSkipSilenceEnabled(boolean0: boolean): void;
							getSkipSilenceEnabled(): boolean;
						});
						public constructor();
						/** @deprecated */
						public setAudioAttributes(audioAttributes0: com.google.android.exoplayer2.audio.AudioAttributes): void;
						public addAudioListener(audioListener0: com.google.android.exoplayer2.audio.AudioListener): void;
						public getAudioAttributes(): com.google.android.exoplayer2.audio.AudioAttributes;
						public setAuxEffectInfo(auxEffectInfo0: com.google.android.exoplayer2.audio.AuxEffectInfo): void;
						public removeAudioListener(audioListener0: com.google.android.exoplayer2.audio.AudioListener): void;
						public setSkipSilenceEnabled(boolean0: boolean): void;
						public clearAuxEffectInfo(): void;
						public getVolume(): number;
						public setAudioSessionId(int0: number): void;
						public setAudioAttributes(audioAttributes0: com.google.android.exoplayer2.audio.AudioAttributes, boolean1: boolean): void;
						public getAudioSessionId(): number;
						public setVolume(float0: number): void;
						public getSkipSilenceEnabled(): boolean;
					}
					export abstract class DefaultEventListener extends java.lang.Object implements com.google.android.exoplayer2.Player.EventListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.Player.DefaultEventListener>;
						/** @deprecated */
						public onTimelineChanged(timeline: com.google.android.exoplayer2.Timeline, manifest: any): void;
						/** @deprecated */
						public onTimelineChanged(timeline: com.google.android.exoplayer2.Timeline, manifest: any, reason: number): void;
						public onPlaybackSuppressionReasonChanged(playbackSuppressionReason: number): void;
						public constructor();
						public onTimelineChanged(timeline: com.google.android.exoplayer2.Timeline, manifest: any, reason: number): void;
						public onIsPlayingChanged(isPlaying: boolean): void;
						public onExperimentalOffloadSchedulingEnabledChanged(offloadSchedulingEnabled: boolean): void;
						public onIsLoadingChanged(isLoading: boolean): void;
						public onShuffleModeEnabledChanged(shuffleModeEnabled: boolean): void;
						public onPlayWhenReadyChanged(playWhenReady: boolean, reason: number): void;
						public onPlayerError(error: com.google.android.exoplayer2.ExoPlaybackException): void;
						/** @deprecated */
						public onSeekProcessed(): void;
						public onRepeatModeChanged(repeatMode: number): void;
						public onPositionDiscontinuity(reason: number): void;
						public onTimelineChanged(timeline: com.google.android.exoplayer2.Timeline, reason: number): void;
						public onPlaybackStateChanged(state: number): void;
						/** @deprecated */
						public onLoadingChanged(isLoading: boolean): void;
						/** @deprecated */
						public onPlayerStateChanged(playWhenReady: boolean, playbackState: number): void;
						public onTracksChanged(trackGroups: com.google.android.exoplayer2.source.TrackGroupArray, trackSelections: com.google.android.exoplayer2.trackselection.TrackSelectionArray): void;
						public onPlaybackParametersChanged(playbackParameters: com.google.android.exoplayer2.PlaybackParameters): void;
						public onMediaItemTransition(mediaItem: com.google.android.exoplayer2.MediaItem, reason: number): void;
					}
					export class DeviceComponent extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.Player.DeviceComponent>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Player() when extending the interface class.
						 */
						public constructor(implementation: {
							addDeviceListener(deviceListener0: com.google.android.exoplayer2.device.DeviceListener): void;
							removeDeviceListener(deviceListener0: com.google.android.exoplayer2.device.DeviceListener): void;
							getDeviceInfo(): com.google.android.exoplayer2.device.DeviceInfo;
							getDeviceVolume(): number;
							isDeviceMuted(): boolean;
							setDeviceVolume(int0: number): void;
							increaseDeviceVolume(): void;
							decreaseDeviceVolume(): void;
							setDeviceMuted(boolean0: boolean): void;
						});
						public constructor();
						public setDeviceMuted(boolean0: boolean): void;
						public increaseDeviceVolume(): void;
						public setDeviceVolume(int0: number): void;
						public getDeviceVolume(): number;
						public addDeviceListener(deviceListener0: com.google.android.exoplayer2.device.DeviceListener): void;
						public decreaseDeviceVolume(): void;
						public removeDeviceListener(deviceListener0: com.google.android.exoplayer2.device.DeviceListener): void;
						public getDeviceInfo(): com.google.android.exoplayer2.device.DeviceInfo;
						public isDeviceMuted(): boolean;
					}
					export class DiscontinuityReason extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<com.google.android.exoplayer2.Player.DiscontinuityReason>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Player() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class EventListener extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.Player.EventListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Player() when extending the interface class.
						 */
						public constructor(implementation: {
							onTimelineChanged(timeline: com.google.android.exoplayer2.Timeline, reason: number): void;
							onTimelineChanged(timeline: com.google.android.exoplayer2.Timeline, manifest: any, reason: number): void;
							onMediaItemTransition(mediaItem: com.google.android.exoplayer2.MediaItem, reason: number): void;
							onTracksChanged(trackGroups: com.google.android.exoplayer2.source.TrackGroupArray, trackSelections: com.google.android.exoplayer2.trackselection.TrackSelectionArray): void;
							onIsLoadingChanged(isLoading: boolean): void;
							onLoadingChanged(isLoading: boolean): void;
							onPlayerStateChanged(playWhenReady: boolean, playbackState: number): void;
							onPlaybackStateChanged(state: number): void;
							onPlayWhenReadyChanged(playWhenReady: boolean, reason: number): void;
							onPlaybackSuppressionReasonChanged(playbackSuppressionReason: number): void;
							onIsPlayingChanged(isPlaying: boolean): void;
							onRepeatModeChanged(repeatMode: number): void;
							onShuffleModeEnabledChanged(shuffleModeEnabled: boolean): void;
							onPlayerError(error: com.google.android.exoplayer2.ExoPlaybackException): void;
							onPositionDiscontinuity(reason: number): void;
							onPlaybackParametersChanged(playbackParameters: com.google.android.exoplayer2.PlaybackParameters): void;
							onSeekProcessed(): void;
							onExperimentalOffloadSchedulingEnabledChanged(offloadSchedulingEnabled: boolean): void;
						});
						public constructor();
						/** @deprecated */
						public onTimelineChanged(timeline: com.google.android.exoplayer2.Timeline, manifest: any, reason: number): void;
						public onPlaybackSuppressionReasonChanged(playbackSuppressionReason: number): void;
						public onIsPlayingChanged(isPlaying: boolean): void;
						public onExperimentalOffloadSchedulingEnabledChanged(offloadSchedulingEnabled: boolean): void;
						public onIsLoadingChanged(isLoading: boolean): void;
						public onShuffleModeEnabledChanged(shuffleModeEnabled: boolean): void;
						public onPlayWhenReadyChanged(playWhenReady: boolean, reason: number): void;
						public onPlayerError(error: com.google.android.exoplayer2.ExoPlaybackException): void;
						/** @deprecated */
						public onSeekProcessed(): void;
						public onRepeatModeChanged(repeatMode: number): void;
						public onPositionDiscontinuity(reason: number): void;
						public onTimelineChanged(timeline: com.google.android.exoplayer2.Timeline, reason: number): void;
						public onPlaybackStateChanged(state: number): void;
						/** @deprecated */
						public onLoadingChanged(isLoading: boolean): void;
						/** @deprecated */
						public onPlayerStateChanged(playWhenReady: boolean, playbackState: number): void;
						public onTracksChanged(trackGroups: com.google.android.exoplayer2.source.TrackGroupArray, trackSelections: com.google.android.exoplayer2.trackselection.TrackSelectionArray): void;
						public onPlaybackParametersChanged(playbackParameters: com.google.android.exoplayer2.PlaybackParameters): void;
						public onMediaItemTransition(mediaItem: com.google.android.exoplayer2.MediaItem, reason: number): void;
					}
					export class MediaItemTransitionReason extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<com.google.android.exoplayer2.Player.MediaItemTransitionReason>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Player() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class MetadataComponent extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.Player.MetadataComponent>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Player() when extending the interface class.
						 */
						public constructor(implementation: {
							addMetadataOutput(metadataOutput0: com.google.android.exoplayer2.metadata.MetadataOutput): void;
							removeMetadataOutput(metadataOutput0: com.google.android.exoplayer2.metadata.MetadataOutput): void;
						});
						public constructor();
						public removeMetadataOutput(metadataOutput0: com.google.android.exoplayer2.metadata.MetadataOutput): void;
						public addMetadataOutput(metadataOutput0: com.google.android.exoplayer2.metadata.MetadataOutput): void;
					}
					export class PlayWhenReadyChangeReason extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<com.google.android.exoplayer2.Player.PlayWhenReadyChangeReason>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Player() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class PlaybackSuppressionReason extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<com.google.android.exoplayer2.Player.PlaybackSuppressionReason>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Player() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class RepeatMode extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<com.google.android.exoplayer2.Player.RepeatMode>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Player() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class State extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<com.google.android.exoplayer2.Player.State>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Player() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class TextComponent extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.Player.TextComponent>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Player() when extending the interface class.
						 */
						public constructor(implementation: {
							addTextOutput(textOutput0: com.google.android.exoplayer2.text.TextOutput): void;
							removeTextOutput(textOutput0: com.google.android.exoplayer2.text.TextOutput): void;
							getCurrentCues(): java.util.List<com.google.android.exoplayer2.text.Cue>;
						});
						public constructor();
						public removeTextOutput(textOutput0: com.google.android.exoplayer2.text.TextOutput): void;
						public addTextOutput(textOutput0: com.google.android.exoplayer2.text.TextOutput): void;
						public getCurrentCues(): java.util.List<com.google.android.exoplayer2.text.Cue>;
					}
					export class TimelineChangeReason extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<com.google.android.exoplayer2.Player.TimelineChangeReason>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Player() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class VideoComponent extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.Player.VideoComponent>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Player() when extending the interface class.
						 */
						public constructor(implementation: {
							setVideoScalingMode(int0: number): void;
							getVideoScalingMode(): number;
							addVideoListener(videoListener0: com.google.android.exoplayer2.video.VideoListener): void;
							removeVideoListener(videoListener0: com.google.android.exoplayer2.video.VideoListener): void;
							setVideoFrameMetadataListener(videoFrameMetadataListener0: com.google.android.exoplayer2.video.VideoFrameMetadataListener): void;
							clearVideoFrameMetadataListener(videoFrameMetadataListener0: com.google.android.exoplayer2.video.VideoFrameMetadataListener): void;
							setCameraMotionListener(cameraMotionListener0: com.google.android.exoplayer2.video.spherical.CameraMotionListener): void;
							clearCameraMotionListener(cameraMotionListener0: com.google.android.exoplayer2.video.spherical.CameraMotionListener): void;
							clearVideoSurface(): void;
							clearVideoSurface(surface0: globalAndroid.view.Surface): void;
							setVideoSurface(surface0: globalAndroid.view.Surface): void;
							setVideoSurfaceHolder(surfaceHolder0: globalAndroid.view.SurfaceHolder): void;
							clearVideoSurfaceHolder(surfaceHolder0: globalAndroid.view.SurfaceHolder): void;
							setVideoSurfaceView(surfaceView0: globalAndroid.view.SurfaceView): void;
							clearVideoSurfaceView(surfaceView0: globalAndroid.view.SurfaceView): void;
							setVideoTextureView(textureView0: globalAndroid.view.TextureView): void;
							clearVideoTextureView(textureView0: globalAndroid.view.TextureView): void;
							setVideoDecoderOutputBufferRenderer(videoDecoderOutputBufferRenderer0: com.google.android.exoplayer2.video.VideoDecoderOutputBufferRenderer): void;
							clearVideoDecoderOutputBufferRenderer(): void;
							clearVideoDecoderOutputBufferRenderer(videoDecoderOutputBufferRenderer0: com.google.android.exoplayer2.video.VideoDecoderOutputBufferRenderer): void;
						});
						public constructor();
						public clearCameraMotionListener(cameraMotionListener0: com.google.android.exoplayer2.video.spherical.CameraMotionListener): void;
						public setVideoFrameMetadataListener(videoFrameMetadataListener0: com.google.android.exoplayer2.video.VideoFrameMetadataListener): void;
						public clearVideoTextureView(textureView0: globalAndroid.view.TextureView): void;
						public clearVideoSurfaceHolder(surfaceHolder0: globalAndroid.view.SurfaceHolder): void;
						public setVideoDecoderOutputBufferRenderer(videoDecoderOutputBufferRenderer0: com.google.android.exoplayer2.video.VideoDecoderOutputBufferRenderer): void;
						public setVideoScalingMode(int0: number): void;
						public setVideoSurfaceHolder(surfaceHolder0: globalAndroid.view.SurfaceHolder): void;
						public clearVideoSurfaceView(surfaceView0: globalAndroid.view.SurfaceView): void;
						public clearVideoSurface(): void;
						public setVideoSurface(surface0: globalAndroid.view.Surface): void;
						public clearVideoDecoderOutputBufferRenderer(): void;
						public setCameraMotionListener(cameraMotionListener0: com.google.android.exoplayer2.video.spherical.CameraMotionListener): void;
						public clearVideoSurface(surface0: globalAndroid.view.Surface): void;
						public getVideoScalingMode(): number;
						public clearVideoDecoderOutputBufferRenderer(videoDecoderOutputBufferRenderer0: com.google.android.exoplayer2.video.VideoDecoderOutputBufferRenderer): void;
						public setVideoSurfaceView(surfaceView0: globalAndroid.view.SurfaceView): void;
						public addVideoListener(videoListener0: com.google.android.exoplayer2.video.VideoListener): void;
						public clearVideoFrameMetadataListener(videoFrameMetadataListener0: com.google.android.exoplayer2.video.VideoFrameMetadataListener): void;
						public removeVideoListener(videoListener0: com.google.android.exoplayer2.video.VideoListener): void;
						public setVideoTextureView(textureView0: globalAndroid.view.TextureView): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class PlayerMessage extends java.lang.Object {
					public static class: java.lang.Class<com.google.android.exoplayer2.PlayerMessage>;
					public getType(): number;
					public getPositionMs(): number;
					public getTimeline(): com.google.android.exoplayer2.Timeline;
					public cancel(): com.google.android.exoplayer2.PlayerMessage;
					public markAsProcessed(isDelivered: boolean): void;
					public send(): com.google.android.exoplayer2.PlayerMessage;
					public blockUntilDelivered(): boolean;
					public getPayload(): any;
					public setPosition(positionMs: number): com.google.android.exoplayer2.PlayerMessage;
					public isCanceled(): boolean;
					public constructor(sender: com.google.android.exoplayer2.PlayerMessage.Sender, target: com.google.android.exoplayer2.PlayerMessage.Target, timeline: com.google.android.exoplayer2.Timeline, defaultWindowIndex: number, defaultHandler: globalAndroid.os.Handler);
					public getWindowIndex(): number;
					public setHandler(handler: globalAndroid.os.Handler): com.google.android.exoplayer2.PlayerMessage;
					public setDeleteAfterDelivery(deleteAfterDelivery: boolean): com.google.android.exoplayer2.PlayerMessage;
					public getHandler(): globalAndroid.os.Handler;
					public experimentalBlockUntilDelivered(timeoutMs: number): boolean;
					public getDeleteAfterDelivery(): boolean;
					public getTarget(): com.google.android.exoplayer2.PlayerMessage.Target;
					public setPayload(payload: any): com.google.android.exoplayer2.PlayerMessage;
					public setType(messageType: number): com.google.android.exoplayer2.PlayerMessage;
					public setPosition(windowIndex: number, positionMs: number): com.google.android.exoplayer2.PlayerMessage;
				}
				export module PlayerMessage {
					export class Sender extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.PlayerMessage.Sender>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.PlayerMessage() when extending the interface class.
						 */
						public constructor(implementation: {
							sendMessage(playerMessage0: com.google.android.exoplayer2.PlayerMessage): void;
						});
						public constructor();
						public sendMessage(playerMessage0: com.google.android.exoplayer2.PlayerMessage): void;
					}
					export class Target extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.PlayerMessage.Target>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.PlayerMessage() when extending the interface class.
						 */
						public constructor(implementation: {
							handleMessage(int0: number, object1: any): void;
						});
						public constructor();
						public handleMessage(int0: number, object1: any): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class PlaylistTimeline extends com.google.android.exoplayer2.AbstractConcatenatedTimeline {
					public static class: java.lang.Class<com.google.android.exoplayer2.PlaylistTimeline>;
					public constructor(mediaSourceInfoHolders: java.util.Collection<any>, shuffleOrder: com.google.android.exoplayer2.source.ShuffleOrder);
					public getChildIndexByChildUid(childUid: any): number;
					public getChildUidByChildIndex(int0: number): any;
					public getChildIndexByChildUid(object0: any): number;
					public getChildIndexByWindowIndex(windowIndex: number): number;
					public getChildIndexByWindowIndex(int0: number): number;
					public getChildUidByChildIndex(childIndex: number): any;
					public getTimelineByChildIndex(childIndex: number): com.google.android.exoplayer2.Timeline;
					public getChildIndexByPeriodIndex(periodIndex: number): number;
					public getWindowCount(): number;
					public getTimelineByChildIndex(int0: number): com.google.android.exoplayer2.Timeline;
					public getFirstPeriodIndexByChildIndex(int0: number): number;
					public constructor();
					public getChildIndexByPeriodIndex(int0: number): number;
					public constructor(isAtomic: boolean, shuffleOrder: com.google.android.exoplayer2.source.ShuffleOrder);
					public getFirstWindowIndexByChildIndex(int0: number): number;
					public getPeriodCount(): number;
					public getFirstPeriodIndexByChildIndex(childIndex: number): number;
					public getFirstWindowIndexByChildIndex(childIndex: number): number;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class Renderer extends java.lang.Object implements com.google.android.exoplayer2.PlayerMessage.Target {
					public static class: java.lang.Class<com.google.android.exoplayer2.Renderer>;
					/**
					 * Constructs a new instance of the com.google.android.exoplayer2.Renderer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getName(): string;
						getTrackType(): number;
						getCapabilities(): com.google.android.exoplayer2.RendererCapabilities;
						setIndex(int0: number): void;
						getMediaClock(): com.google.android.exoplayer2.util.MediaClock;
						getState(): number;
						enable(rendererConfiguration0: com.google.android.exoplayer2.RendererConfiguration, formats1: native.Array<com.google.android.exoplayer2.Format>, sampleStream2: com.google.android.exoplayer2.source.SampleStream, long3: number, boolean4: boolean, boolean5: boolean, long6: number, long7: number): void;
						start(): void;
						replaceStream(formats0: native.Array<com.google.android.exoplayer2.Format>, sampleStream1: com.google.android.exoplayer2.source.SampleStream, long2: number, long3: number): void;
						getStream(): com.google.android.exoplayer2.source.SampleStream;
						hasReadStreamToEnd(): boolean;
						getReadingPositionUs(): number;
						setCurrentStreamFinal(): void;
						isCurrentStreamFinal(): boolean;
						maybeThrowStreamError(): void;
						resetPosition(long0: number): void;
						setOperatingRate(operatingRate: number): void;
						render(long0: number, long1: number): void;
						isReady(): boolean;
						isEnded(): boolean;
						stop(): void;
						disable(): void;
						reset(): void;
						handleMessage(int0: number, object1: any): void;
					});
					public constructor();
					public static VIDEO_SCALING_MODE_SCALE_TO_FIT: number;
					public static MSG_SET_AUDIO_SESSION_ID: number;
					public static MSG_SET_SKIP_SILENCE_ENABLED: number;
					public static STATE_DISABLED: number;
					public static MSG_CUSTOM_BASE: number;
					public static VIDEO_SCALING_MODE_SCALE_TO_FIT_WITH_CROPPING: number;
					public static MSG_SET_SURFACE: number;
					public static MSG_SET_WAKEUP_LISTENER: number;
					public static VIDEO_SCALING_MODE_DEFAULT: number;
					public static STATE_STARTED: number;
					public static MSG_SET_VIDEO_DECODER_OUTPUT_BUFFER_RENDERER: number;
					public static MSG_SET_SCALING_MODE: number;
					public static MSG_SET_AUDIO_ATTRIBUTES: number;
					public static STATE_ENABLED: number;
					public static MSG_SET_VOLUME: number;
					public static MSG_SET_AUX_EFFECT_INFO: number;
					public static MSG_SET_VIDEO_FRAME_METADATA_LISTENER: number;
					public static MSG_SET_CAMERA_MOTION_LISTENER: number;
					public isReady(): boolean;
					public setCurrentStreamFinal(): void;
					public reset(): void;
					public getCapabilities(): com.google.android.exoplayer2.RendererCapabilities;
					public render(long0: number, long1: number): void;
					public hasReadStreamToEnd(): boolean;
					public resetPosition(long0: number): void;
					public maybeThrowStreamError(): void;
					public isEnded(): boolean;
					public start(): void;
					public isCurrentStreamFinal(): boolean;
					public getStream(): com.google.android.exoplayer2.source.SampleStream;
					public enable(rendererConfiguration0: com.google.android.exoplayer2.RendererConfiguration, formats1: native.Array<com.google.android.exoplayer2.Format>, sampleStream2: com.google.android.exoplayer2.source.SampleStream, long3: number, boolean4: boolean, boolean5: boolean, long6: number, long7: number): void;
					public setIndex(int0: number): void;
					public disable(): void;
					public getName(): string;
					public replaceStream(formats0: native.Array<com.google.android.exoplayer2.Format>, sampleStream1: com.google.android.exoplayer2.source.SampleStream, long2: number, long3: number): void;
					public getMediaClock(): com.google.android.exoplayer2.util.MediaClock;
					public setOperatingRate(operatingRate: number): void;
					public stop(): void;
					public handleMessage(int0: number, object1: any): void;
					public getReadingPositionUs(): number;
					public getTrackType(): number;
					public getState(): number;
				}
				export module Renderer {
					export class State extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<com.google.android.exoplayer2.Renderer.State>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Renderer() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class VideoScalingMode extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<com.google.android.exoplayer2.Renderer.VideoScalingMode>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Renderer() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class WakeupListener extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.Renderer.WakeupListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Renderer() when extending the interface class.
						 */
						public constructor(implementation: {
							onSleep(long0: number): void;
							onWakeup(): void;
						});
						public constructor();
						public onSleep(long0: number): void;
						public onWakeup(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class RendererCapabilities extends java.lang.Object {
					public static class: java.lang.Class<com.google.android.exoplayer2.RendererCapabilities>;
					/**
					 * Constructs a new instance of the com.google.android.exoplayer2.RendererCapabilities interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						create(formatSupport: number): number;
						create(formatSupport: number, adaptiveSupport: number, tunnelingSupport: number): number;
						getFormatSupport(supportFlags: number): number;
						getAdaptiveSupport(supportFlags: number): number;
						getTunnelingSupport(supportFlags: number): number;
						getFormatSupportString(formatSupport: number): string;
						getName(): string;
						getTrackType(): number;
						supportsFormat(format0: com.google.android.exoplayer2.Format): number;
						supportsMixedMimeTypeAdaptation(): number;
					});
					public constructor();
					public static TUNNELING_SUPPORT_MASK: number;
					public static ADAPTIVE_SUPPORT_MASK: number;
					public static FORMAT_SUPPORT_MASK: number;
					public static FORMAT_UNSUPPORTED_DRM: number;
					public static ADAPTIVE_SEAMLESS: number;
					public static TUNNELING_NOT_SUPPORTED: number;
					public static FORMAT_UNSUPPORTED_TYPE: number;
					public static ADAPTIVE_NOT_SEAMLESS: number;
					public static ADAPTIVE_NOT_SUPPORTED: number;
					public static FORMAT_EXCEEDS_CAPABILITIES: number;
					public static FORMAT_HANDLED: number;
					public static TUNNELING_SUPPORTED: number;
					public static FORMAT_UNSUPPORTED_SUBTYPE: number;
					public static getFormatSupport(supportFlags: number): number;
					public static getTunnelingSupport(supportFlags: number): number;
					public static getAdaptiveSupport(supportFlags: number): number;
					public getName(): string;
					public static create(formatSupport: number): number;
					public supportsFormat(format0: com.google.android.exoplayer2.Format): number;
					public getTrackType(): number;
					public supportsMixedMimeTypeAdaptation(): number;
					public static create(formatSupport: number, adaptiveSupport: number, tunnelingSupport: number): number;
					public static getFormatSupportString(formatSupport: number): string;
				}
				export module RendererCapabilities {
					export class AdaptiveSupport extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<com.google.android.exoplayer2.RendererCapabilities.AdaptiveSupport>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.RendererCapabilities() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class Capabilities extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<com.google.android.exoplayer2.RendererCapabilities.Capabilities>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.RendererCapabilities() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class FormatSupport extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<com.google.android.exoplayer2.RendererCapabilities.FormatSupport>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.RendererCapabilities() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class TunnelingSupport extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<com.google.android.exoplayer2.RendererCapabilities.TunnelingSupport>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.RendererCapabilities() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class RendererConfiguration extends java.lang.Object {
					public static class: java.lang.Class<com.google.android.exoplayer2.RendererConfiguration>;
					public static DEFAULT: com.google.android.exoplayer2.RendererConfiguration;
					public tunnelingAudioSessionId: number;
					public equals(obj: any): boolean;
					public constructor(tunnelingAudioSessionId: number);
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class RenderersFactory extends java.lang.Object {
					public static class: java.lang.Class<com.google.android.exoplayer2.RenderersFactory>;
					/**
					 * Constructs a new instance of the com.google.android.exoplayer2.RenderersFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						createRenderers(handler0: globalAndroid.os.Handler, videoRendererEventListener1: com.google.android.exoplayer2.video.VideoRendererEventListener, audioRendererEventListener2: com.google.android.exoplayer2.audio.AudioRendererEventListener, textOutput3: com.google.android.exoplayer2.text.TextOutput, metadataOutput4: com.google.android.exoplayer2.metadata.MetadataOutput): native.Array<com.google.android.exoplayer2.Renderer>;
					});
					public constructor();
					public createRenderers(handler0: globalAndroid.os.Handler, videoRendererEventListener1: com.google.android.exoplayer2.video.VideoRendererEventListener, audioRendererEventListener2: com.google.android.exoplayer2.audio.AudioRendererEventListener, textOutput3: com.google.android.exoplayer2.text.TextOutput, metadataOutput4: com.google.android.exoplayer2.metadata.MetadataOutput): native.Array<com.google.android.exoplayer2.Renderer>;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class SeekParameters extends java.lang.Object {
					public static class: java.lang.Class<com.google.android.exoplayer2.SeekParameters>;
					public static EXACT: com.google.android.exoplayer2.SeekParameters;
					public static CLOSEST_SYNC: com.google.android.exoplayer2.SeekParameters;
					public static PREVIOUS_SYNC: com.google.android.exoplayer2.SeekParameters;
					public static NEXT_SYNC: com.google.android.exoplayer2.SeekParameters;
					public static DEFAULT: com.google.android.exoplayer2.SeekParameters;
					public toleranceBeforeUs: number;
					public toleranceAfterUs: number;
					public equals(obj: any): boolean;
					public constructor(toleranceBeforeUs: number, toleranceAfterUs: number);
					public resolveSeekPositionUs(positionUs: number, firstSyncUs: number, secondSyncUs: number): number;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class SimpleExoPlayer extends com.google.android.exoplayer2.BasePlayer implements com.google.android.exoplayer2.ExoPlayer, com.google.android.exoplayer2.Player.AudioComponent, com.google.android.exoplayer2.Player.VideoComponent, com.google.android.exoplayer2.Player.TextComponent, com.google.android.exoplayer2.Player.MetadataComponent, com.google.android.exoplayer2.Player.DeviceComponent {
					public static class: java.lang.Class<com.google.android.exoplayer2.SimpleExoPlayer>;
					public renderers: native.Array<com.google.android.exoplayer2.Renderer>;
					public stop(reset: boolean): void;
					/** @deprecated */
					public setAudioAttributes(audioAttributes: com.google.android.exoplayer2.audio.AudioAttributes): void;
					public getPlayWhenReady(): boolean;
					public setShuffleModeEnabled(shuffleModeEnabled: boolean): void;
					public getRendererCount(): number;
					public clearVideoSurface(): void;
					public addMediaSource(index: number, mediaSource: com.google.android.exoplayer2.source.MediaSource): void;
					public removeMediaItems(fromIndex: number, toIndex: number): void;
					public removeVideoListener(listener: com.google.android.exoplayer2.video.VideoListener): void;
					/** @deprecated */
					public getPlaybackError(): com.google.android.exoplayer2.ExoPlaybackException;
					public setVideoSurface(surface: globalAndroid.view.Surface): void;
					public setMediaSource(mediaSource: com.google.android.exoplayer2.source.MediaSource, startPositionMs: number): void;
					public getAudioFormat(): com.google.android.exoplayer2.Format;
					public addMediaItem(index: number, mediaItem: com.google.android.exoplayer2.MediaItem): void;
					public hasNext(): boolean;
					public setPauseAtEndOfMediaItems(pauseAtEndOfMediaItems: boolean): void;
					public getContentPosition(): number;
					public getDeviceVolume(): number;
					public constructor();
					public setMediaItem(mediaItem: com.google.android.exoplayer2.MediaItem, startPositionMs: number): void;
					public pause(): void;
					public getDeviceComponent(): com.google.android.exoplayer2.Player.DeviceComponent;
					public clearCameraMotionListener(listener: com.google.android.exoplayer2.video.spherical.CameraMotionListener): void;
					public setRepeatMode(repeatMode: number): void;
					public getPlaybackSuppressionReason(): number;
					public getCurrentPeriodIndex(): number;
					public getAudioDecoderCounters(): com.google.android.exoplayer2.decoder.DecoderCounters;
					public removeAudioListener(listener: com.google.android.exoplayer2.audio.AudioListener): void;
					public prepare(): void;
					public getMetadataComponent(): com.google.android.exoplayer2.Player.MetadataComponent;
					public experimentalSetOffloadSchedulingEnabled(offloadSchedulingEnabled: boolean): void;
					/** @deprecated */
					public setTextOutput(output: com.google.android.exoplayer2.text.TextOutput): void;
					public addMediaSources(mediaSources: java.util.List<com.google.android.exoplayer2.source.MediaSource>): void;
					public setDeviceVolume(volume: number): void;
					public setHandleAudioBecomingNoisy(handleAudioBecomingNoisy: boolean): void;
					public setVideoFrameMetadataListener(listener: com.google.android.exoplayer2.video.VideoFrameMetadataListener): void;
					public previous(): void;
					public getRendererType(index: number): number;
					public decreaseDeviceVolume(): void;
					public getAudioAttributes(): com.google.android.exoplayer2.audio.AudioAttributes;
					public getAudioComponent(): com.google.android.exoplayer2.Player.AudioComponent;
					public getPreviousWindowIndex(): number;
					/** @deprecated */
					public removeAudioDebugListener(listener: com.google.android.exoplayer2.audio.AudioRendererEventListener): void;
					public removeListener(listener: com.google.android.exoplayer2.Player.EventListener): void;
					public getPlayerError(): com.google.android.exoplayer2.ExoPlaybackException;
					public getSkipSilenceEnabled(): boolean;
					public getContentBufferedPosition(): number;
					/** @deprecated */
					public prepare(mediaSource: com.google.android.exoplayer2.source.MediaSource): void;
					public setVideoSurfaceHolder(surfaceHolder: globalAndroid.view.SurfaceHolder): void;
					public clearVideoSurfaceHolder(surfaceHolder: globalAndroid.view.SurfaceHolder): void;
					public getPlaybackState(): number;
					public getCurrentTimeline(): com.google.android.exoplayer2.Timeline;
					public getRepeatMode(): number;
					public clearVideoSurface(surface: globalAndroid.view.Surface): void;
					public setMediaSource(mediaSource: com.google.android.exoplayer2.source.MediaSource, resetPosition: boolean): void;
					public getVideoDecoderCounters(): com.google.android.exoplayer2.decoder.DecoderCounters;
					public getDeviceInfo(): com.google.android.exoplayer2.device.DeviceInfo;
					public setThrowsWhenUsingWrongThread(throwsWhenUsingWrongThread: boolean): void;
					public removeAnalyticsListener(listener: com.google.android.exoplayer2.analytics.AnalyticsListener): void;
					/** @deprecated */
					public addVideoDebugListener(listener: com.google.android.exoplayer2.video.VideoRendererEventListener): void;
					public constructor(builder: com.google.android.exoplayer2.SimpleExoPlayer.Builder);
					public getDuration(): number;
					/** @deprecated */
					public retry(): void;
					public removeDeviceListener(listener: com.google.android.exoplayer2.device.DeviceListener): void;
					public addMediaSources(index: number, mediaSources: java.util.List<com.google.android.exoplayer2.source.MediaSource>): void;
					public addAnalyticsListener(listener: com.google.android.exoplayer2.analytics.AnalyticsListener): void;
					/** @deprecated */
					public setAudioStreamType(streamType: number): void;
					public addListener(listener: com.google.android.exoplayer2.Player.EventListener): void;
					/** @deprecated */
					public setMetadataOutput(output: com.google.android.exoplayer2.metadata.MetadataOutput): void;
					public addMediaSource(mediaSource: com.google.android.exoplayer2.source.MediaSource): void;
					public setSkipSilenceEnabled(skipSilenceEnabled: boolean): void;
					public setCameraMotionListener(listener: com.google.android.exoplayer2.video.spherical.CameraMotionListener): void;
					public getAnalyticsCollector(): com.google.android.exoplayer2.analytics.AnalyticsCollector;
					public setMediaItems(mediaItems: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
					public getNextWindowIndex(): number;
					public setPlayWhenReady(playWhenReady: boolean): void;
					public getMediaItemCount(): number;
					public setMediaItem(mediaItem: com.google.android.exoplayer2.MediaItem, resetPosition: boolean): void;
					public getVideoScalingMode(): number;
					public getTotalBufferedDuration(): number;
					public setMediaItems(mediaItems: java.util.List<com.google.android.exoplayer2.MediaItem>, startWindowIndex: number, startPositionMs: number): void;
					public isPlayingAd(): boolean;
					public moveMediaItem(currentIndex: number, newIndex: number): void;
					public increaseDeviceVolume(): void;
					public seekTo(positionMs: number): void;
					public setMediaSource(mediaSource: com.google.android.exoplayer2.source.MediaSource): void;
					public getCurrentTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
					public getCurrentManifest(): any;
					public setMediaSources(mediaSources: java.util.List<com.google.android.exoplayer2.source.MediaSource>, startWindowIndex: number, startPositionMs: number): void;
					public isCurrentWindowDynamic(): boolean;
					public setVideoSurfaceView(surfaceView: globalAndroid.view.SurfaceView): void;
					public clearVideoTextureView(textureView: globalAndroid.view.TextureView): void;
					public removeMediaItem(index: number): void;
					public getVolume(): number;
					/** @deprecated */
					public setVideoListener(listener: com.google.android.exoplayer2.SimpleExoPlayer.VideoListener): void;
					public getPauseAtEndOfMediaItems(): boolean;
					public clearAuxEffectInfo(): void;
					public addMediaItems(mediaItems: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
					/** @deprecated */
					public getCurrentTag(): any;
					public setMediaSources(mediaSources: java.util.List<com.google.android.exoplayer2.source.MediaSource>, resetPosition: boolean): void;
					public clearMediaItems(): void;
					/** @deprecated */
					public setAudioDebugListener(listener: com.google.android.exoplayer2.audio.AudioRendererEventListener): void;
					public clearVideoFrameMetadataListener(listener: com.google.android.exoplayer2.video.VideoFrameMetadataListener): void;
					public getCurrentAdGroupIndex(): number;
					/** @deprecated */
					public setVideoDebugListener(listener: com.google.android.exoplayer2.video.VideoRendererEventListener): void;
					public addMediaItems(index: number, mediaItems: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
					public getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
					public next(): void;
					public removeMetadataOutput(listener: com.google.android.exoplayer2.metadata.MetadataOutput): void;
					public getVideoFormat(): com.google.android.exoplayer2.Format;
					public getShuffleModeEnabled(): boolean;
					public moveMediaItems(fromIndex: number, toIndex: number, newIndex: number): void;
					public getCurrentWindowIndex(): number;
					public getAudioSessionId(): number;
					public setShuffleOrder(shuffleOrder: com.google.android.exoplayer2.source.ShuffleOrder): void;
					public setSeekParameters(seekParameters: com.google.android.exoplayer2.SeekParameters): void;
					public clearVideoSurfaceView(surfaceView: globalAndroid.view.SurfaceView): void;
					/** @deprecated */
					public addAudioDebugListener(listener: com.google.android.exoplayer2.audio.AudioRendererEventListener): void;
					public seekToDefaultPosition(windowIndex: number): void;
					public setVideoTextureView(textureView: globalAndroid.view.TextureView): void;
					public release(): void;
					public getCurrentAdIndexInAdGroup(): number;
					public getMediaItemAt(index: number): com.google.android.exoplayer2.MediaItem;
					/** @deprecated */
					public clearMetadataOutput(output: com.google.android.exoplayer2.metadata.MetadataOutput): void;
					/** @deprecated */
					public clearVideoListener(listener: com.google.android.exoplayer2.SimpleExoPlayer.VideoListener): void;
					public isCurrentWindowSeekable(): boolean;
					public getCurrentLiveOffset(): number;
					public addAudioListener(listener: com.google.android.exoplayer2.audio.AudioListener): void;
					public setMediaItems(mediaItems: java.util.List<com.google.android.exoplayer2.MediaItem>, resetPosition: boolean): void;
					public setAudioSessionId(audioSessionId: number): void;
					public addDeviceListener(listener: com.google.android.exoplayer2.device.DeviceListener): void;
					public getSeekParameters(): com.google.android.exoplayer2.SeekParameters;
					public getTrackSelector(): com.google.android.exoplayer2.trackselection.TrackSelector;
					public setAudioAttributes(audioAttributes: com.google.android.exoplayer2.audio.AudioAttributes, handleAudioFocus: boolean): void;
					public stop(): void;
					/** @deprecated */
					public setHandleWakeLock(handleWakeLock: boolean): void;
					public clearVideoDecoderOutputBufferRenderer(): void;
					public play(): void;
					public setMediaItem(mediaItem: com.google.android.exoplayer2.MediaItem): void;
					public isDeviceMuted(): boolean;
					public isLoading(): boolean;
					public getPlaybackLooper(): globalAndroid.os.Looper;
					/** @deprecated */
					public constructor(context: globalAndroid.content.Context, renderersFactory: com.google.android.exoplayer2.RenderersFactory, trackSelector: com.google.android.exoplayer2.trackselection.TrackSelector, mediaSourceFactory: com.google.android.exoplayer2.source.MediaSourceFactory, loadControl: com.google.android.exoplayer2.LoadControl, bandwidthMeter: com.google.android.exoplayer2.upstream.BandwidthMeter, analyticsCollector: com.google.android.exoplayer2.analytics.AnalyticsCollector, useLazyPreparation: boolean, clock: com.google.android.exoplayer2.util.Clock, applicationLooper: globalAndroid.os.Looper);
					public setWakeMode(wakeMode: number): void;
					public setAudioAttributes(audioAttributes: com.google.android.exoplayer2.audio.AudioAttributes): void;
					public getApplicationLooper(): globalAndroid.os.Looper;
					public getTextComponent(): com.google.android.exoplayer2.Player.TextComponent;
					/** @deprecated */
					public setPlaybackParams(params: globalAndroid.media.PlaybackParams): void;
					public isPlaying(): boolean;
					public hasPrevious(): boolean;
					/** @deprecated */
					public getAudioStreamType(): number;
					public createMessage(target: com.google.android.exoplayer2.PlayerMessage.Target): com.google.android.exoplayer2.PlayerMessage;
					public removeTextOutput(listener: com.google.android.exoplayer2.text.TextOutput): void;
					/** @deprecated */
					public clearTextOutput(output: com.google.android.exoplayer2.text.TextOutput): void;
					public setForegroundMode(foregroundMode: boolean): void;
					public setMediaSources(mediaSources: java.util.List<com.google.android.exoplayer2.source.MediaSource>): void;
					public getCurrentPosition(): number;
					public addMetadataOutput(listener: com.google.android.exoplayer2.metadata.MetadataOutput): void;
					public setPlaybackParameters(playbackParameters: com.google.android.exoplayer2.PlaybackParameters): void;
					public addVideoListener(listener: com.google.android.exoplayer2.video.VideoListener): void;
					public setVideoDecoderOutputBufferRenderer(videoDecoderOutputBufferRenderer: com.google.android.exoplayer2.video.VideoDecoderOutputBufferRenderer): void;
					/** @deprecated */
					public prepare(mediaSource: com.google.android.exoplayer2.source.MediaSource, resetPosition: boolean, resetState: boolean): void;
					public getCurrentCues(): java.util.List<com.google.android.exoplayer2.text.Cue>;
					public getCurrentTrackSelections(): com.google.android.exoplayer2.trackselection.TrackSelectionArray;
					public setPriorityTaskManager(priorityTaskManager: com.google.android.exoplayer2.util.PriorityTaskManager): void;
					public seekTo(windowIndex: number, positionMs: number): void;
					public setVolume(audioVolume: number): void;
					/** @deprecated */
					public removeVideoDebugListener(listener: com.google.android.exoplayer2.video.VideoRendererEventListener): void;
					public getCurrentMediaItem(): com.google.android.exoplayer2.MediaItem;
					public addMediaItem(mediaItem: com.google.android.exoplayer2.MediaItem): void;
					public setAuxEffectInfo(auxEffectInfo: com.google.android.exoplayer2.audio.AuxEffectInfo): void;
					public getVideoComponent(): com.google.android.exoplayer2.Player.VideoComponent;
					public isCurrentWindowLive(): boolean;
					public getBufferedPercentage(): number;
					public addTextOutput(listener: com.google.android.exoplayer2.text.TextOutput): void;
					public seekToDefaultPosition(): void;
					public getBufferedPosition(): number;
					public setVideoScalingMode(videoScalingMode: number): void;
					public setDeviceMuted(muted: boolean): void;
					public clearVideoDecoderOutputBufferRenderer(videoDecoderOutputBufferRenderer: com.google.android.exoplayer2.video.VideoDecoderOutputBufferRenderer): void;
					public getContentDuration(): number;
				}
				export module SimpleExoPlayer {
					export class Builder extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.SimpleExoPlayer.Builder>;
						public constructor(context: globalAndroid.content.Context, extractorsFactory: com.google.android.exoplayer2.extractor.ExtractorsFactory);
						public setSkipSilenceEnabled(skipSilenceEnabled: boolean): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public setHandleAudioBecomingNoisy(handleAudioBecomingNoisy: boolean): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public setBandwidthMeter(bandwidthMeter: com.google.android.exoplayer2.upstream.BandwidthMeter): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public constructor(context: globalAndroid.content.Context, renderersFactory: com.google.android.exoplayer2.RenderersFactory, extractorsFactory: com.google.android.exoplayer2.extractor.ExtractorsFactory);
						public setWakeMode(wakeMode: number): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public setPauseAtEndOfMediaItems(pauseAtEndOfMediaItems: boolean): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public constructor(context: globalAndroid.content.Context, renderersFactory: com.google.android.exoplayer2.RenderersFactory, trackSelector: com.google.android.exoplayer2.trackselection.TrackSelector, mediaSourceFactory: com.google.android.exoplayer2.source.MediaSourceFactory, loadControl: com.google.android.exoplayer2.LoadControl, bandwidthMeter: com.google.android.exoplayer2.upstream.BandwidthMeter, analyticsCollector: com.google.android.exoplayer2.analytics.AnalyticsCollector);
						public experimentalSetThrowWhenStuckBuffering(throwWhenStuckBuffering: boolean): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public build(): com.google.android.exoplayer2.SimpleExoPlayer;
						public setMediaSourceFactory(mediaSourceFactory: com.google.android.exoplayer2.source.MediaSourceFactory): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public setPriorityTaskManager(priorityTaskManager: com.google.android.exoplayer2.util.PriorityTaskManager): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public setLooper(looper: globalAndroid.os.Looper): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public setTrackSelector(trackSelector: com.google.android.exoplayer2.trackselection.TrackSelector): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public setSeekParameters(seekParameters: com.google.android.exoplayer2.SeekParameters): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public setVideoScalingMode(videoScalingMode: number): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public setUseLazyPreparation(useLazyPreparation: boolean): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public constructor(context: globalAndroid.content.Context, renderersFactory: com.google.android.exoplayer2.RenderersFactory);
						public setAnalyticsCollector(analyticsCollector: com.google.android.exoplayer2.analytics.AnalyticsCollector): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public setLoadControl(loadControl: com.google.android.exoplayer2.LoadControl): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public setAudioAttributes(audioAttributes: com.google.android.exoplayer2.audio.AudioAttributes, handleAudioFocus: boolean): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public setClock(clock: com.google.android.exoplayer2.util.Clock): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public constructor(context: globalAndroid.content.Context);
					}
					export class ComponentListener extends java.lang.Object implements com.google.android.exoplayer2.video.VideoRendererEventListener, com.google.android.exoplayer2.audio.AudioRendererEventListener, com.google.android.exoplayer2.text.TextOutput, com.google.android.exoplayer2.metadata.MetadataOutput, globalAndroid.view.SurfaceHolder.Callback, globalAndroid.view.TextureView.SurfaceTextureListener, com.google.android.exoplayer2.AudioFocusManager.PlayerControl, com.google.android.exoplayer2.AudioBecomingNoisyManager.EventListener, com.google.android.exoplayer2.StreamVolumeManager.Listener, com.google.android.exoplayer2.Player.EventListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.SimpleExoPlayer.ComponentListener>;
						public onAudioSessionId(sessionId: number): void;
						public onSurfaceTextureDestroyed(surfaceTexture: globalAndroid.graphics.SurfaceTexture): boolean;
						public onAudioSessionId(audioSessionId: number): void;
						public onVideoEnabled(counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onIsLoadingChanged(isLoading: boolean): void;
						public onVideoSizeChanged(width: number, height: number, unappliedRotationDegrees: number, pixelWidthHeightRatio: number): void;
						public onRepeatModeChanged(repeatMode: number): void;
						public onPositionDiscontinuity(reason: number): void;
						public surfaceChanged(holder: globalAndroid.view.SurfaceHolder, format: number, width: number, height: number): void;
						public onAudioEnabled(counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onAudioBecomingNoisy(): void;
						public onIsPlayingChanged(isPlaying: boolean): void;
						public executePlayerCommand(playerCommand: number): void;
						public onDroppedFrames(count: number, elapsedMs: number): void;
						public onPlayWhenReadyChanged(playWhenReady: boolean, reason: number): void;
						public onStreamVolumeChanged(streamVolume: number, streamMuted: boolean): void;
						/** @deprecated */
						public onSeekProcessed(): void;
						public onAudioPositionAdvancing(playoutStartSystemTimeMs: number): void;
						public onPlaybackStateChanged(playbackState: number): void;
						public onMetadata(metadata: com.google.android.exoplayer2.metadata.Metadata): void;
						/** @deprecated */
						public onPlayerStateChanged(playWhenReady: boolean, playbackState: number): void;
						public onAudioDisabled(counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public surfaceCreated(holder: globalAndroid.view.SurfaceHolder): void;
						public onMediaItemTransition(mediaItem: com.google.android.exoplayer2.MediaItem, reason: number): void;
						public onVideoDecoderInitialized(decoderName: string, initializedTimestampMs: number, initializationDurationMs: number): void;
						public onAudioUnderrun(bufferSize: number, bufferSizeMs: number, elapsedSinceLastFeedMs: number): void;
						/** @deprecated */
						public onTimelineChanged(timeline: com.google.android.exoplayer2.Timeline, manifest: any, reason: number): void;
						public onSurfaceTextureUpdated(surfaceTexture: globalAndroid.graphics.SurfaceTexture): void;
						public onPlaybackSuppressionReasonChanged(playbackSuppressionReason: number): void;
						public onExperimentalOffloadSchedulingEnabledChanged(offloadSchedulingEnabled: boolean): void;
						public onPlayerError(error: com.google.android.exoplayer2.ExoPlaybackException): void;
						public onAudioInputFormatChanged(format: com.google.android.exoplayer2.Format): void;
						public onSkipSilenceEnabledChanged(skipSilenceEnabled: boolean): void;
						public onTimelineChanged(timeline: com.google.android.exoplayer2.Timeline, reason: number): void;
						public onRenderedFirstFrame(surface: globalAndroid.view.Surface): void;
						public onVideoFrameProcessingOffset(totalProcessingOffsetUs: number, frameCount: number): void;
						/** @deprecated */
						public onLoadingChanged(isLoading: boolean): void;
						public onTracksChanged(trackGroups: com.google.android.exoplayer2.source.TrackGroupArray, trackSelections: com.google.android.exoplayer2.trackselection.TrackSelectionArray): void;
						public onPlaybackParametersChanged(playbackParameters: com.google.android.exoplayer2.PlaybackParameters): void;
						public onDroppedFrames(count: number, elapsed: number): void;
						public setVolumeMultiplier(volumeMultiplier: number): void;
						public onVideoInputFormatChanged(format: com.google.android.exoplayer2.Format): void;
						public onCues(cues: java.util.List<com.google.android.exoplayer2.text.Cue>): void;
						public onShuffleModeEnabledChanged(shuffleModeEnabled: boolean): void;
						public onVideoDisabled(counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public surfaceDestroyed(holder: globalAndroid.view.SurfaceHolder): void;
						public onSurfaceTextureSizeChanged(surfaceTexture: globalAndroid.graphics.SurfaceTexture, width: number, height: number): void;
						public onPlaybackStateChanged(state: number): void;
						public onStreamTypeChanged(streamType: number): void;
						public onSurfaceTextureAvailable(surfaceTexture: globalAndroid.graphics.SurfaceTexture, width: number, height: number): void;
						public onAudioDecoderInitialized(decoderName: string, initializedTimestampMs: number, initializationDurationMs: number): void;
					}
					export class VideoListener extends java.lang.Object implements com.google.android.exoplayer2.video.VideoListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.SimpleExoPlayer.VideoListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.SimpleExoPlayer() when extending the interface class.
						 */
						public constructor(implementation: {
							onVideoSizeChanged(width: number, height: number, unappliedRotationDegrees: number, pixelWidthHeightRatio: number): void;
							onSurfaceSizeChanged(width: number, height: number): void;
							onRenderedFirstFrame(): void;
						});
						public constructor();
						public onSurfaceSizeChanged(width: number, height: number): void;
						public onRenderedFirstFrame(): void;
						public onVideoSizeChanged(width: number, height: number, unappliedRotationDegrees: number, pixelWidthHeightRatio: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class StreamVolumeManager extends java.lang.Object {
					public static class: java.lang.Class<com.google.android.exoplayer2.StreamVolumeManager>;
					public increaseVolume(): void;
					public getMaxVolume(): number;
					public setVolume(volume: number): void;
					public isMuted(): boolean;
					public setMuted(muted: boolean): void;
					public getVolume(): number;
					public decreaseVolume(): void;
					public constructor(context: globalAndroid.content.Context, eventHandler: globalAndroid.os.Handler, listener: com.google.android.exoplayer2.StreamVolumeManager.Listener);
					public release(): void;
					public setStreamType(streamType: number): void;
					public getMinVolume(): number;
				}
				export module StreamVolumeManager {
					export class Listener extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.StreamVolumeManager.Listener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.StreamVolumeManager() when extending the interface class.
						 */
						public constructor(implementation: {
							onStreamTypeChanged(int0: number): void;
							onStreamVolumeChanged(int0: number, boolean1: boolean): void;
						});
						public constructor();
						public onStreamTypeChanged(int0: number): void;
						public onStreamVolumeChanged(int0: number, boolean1: boolean): void;
					}
					export class VolumeChangeReceiver extends globalAndroid.content.BroadcastReceiver {
						public static class: java.lang.Class<com.google.android.exoplayer2.StreamVolumeManager.VolumeChangeReceiver>;
						public onReceive(context: globalAndroid.content.Context, intent: globalAndroid.content.Intent): void;
						public onReceive(context0: globalAndroid.content.Context, intent1: globalAndroid.content.Intent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export abstract class Timeline extends java.lang.Object {
					public static class: java.lang.Class<com.google.android.exoplayer2.Timeline>;
					public static EMPTY: com.google.android.exoplayer2.Timeline;
					public getUidOfPeriod(int0: number): any;
					public getLastWindowIndex(shuffleModeEnabled: boolean): number;
					public equals(obj: any): boolean;
					public isEmpty(): boolean;
					public getPreviousWindowIndex(windowIndex: number, repeatMode: number, shuffleModeEnabled: boolean): number;
					public isLastPeriod(periodIndex: number, period: com.google.android.exoplayer2.Timeline.Period, window: com.google.android.exoplayer2.Timeline.Window, repeatMode: number, shuffleModeEnabled: boolean): boolean;
					public getFirstWindowIndex(shuffleModeEnabled: boolean): number;
					public getPeriodPosition(window: com.google.android.exoplayer2.Timeline.Window, period: com.google.android.exoplayer2.Timeline.Period, windowIndex: number, windowPositionUs: number, defaultPositionProjectionUs: number): globalAndroid.util.Pair<any,java.lang.Long>;
					public getPeriodByUid(periodUid: any, period: com.google.android.exoplayer2.Timeline.Period): com.google.android.exoplayer2.Timeline.Period;
					public getNextWindowIndex(windowIndex: number, repeatMode: number, shuffleModeEnabled: boolean): number;
					/** @deprecated */
					public getWindow(windowIndex: number, window: com.google.android.exoplayer2.Timeline.Window, setTag: boolean): com.google.android.exoplayer2.Timeline.Window;
					public getPeriodPosition(window: com.google.android.exoplayer2.Timeline.Window, period: com.google.android.exoplayer2.Timeline.Period, windowIndex: number, windowPositionUs: number): globalAndroid.util.Pair<any,java.lang.Long>;
					public getWindowCount(): number;
					public getIndexOfPeriod(object0: any): number;
					public getWindow(windowIndex: number, window: com.google.android.exoplayer2.Timeline.Window): com.google.android.exoplayer2.Timeline.Window;
					public constructor();
					public getWindow(int0: number, window1: com.google.android.exoplayer2.Timeline.Window, long2: number): com.google.android.exoplayer2.Timeline.Window;
					public getNextPeriodIndex(periodIndex: number, period: com.google.android.exoplayer2.Timeline.Period, window: com.google.android.exoplayer2.Timeline.Window, repeatMode: number, shuffleModeEnabled: boolean): number;
					public getPeriod(int0: number, period1: com.google.android.exoplayer2.Timeline.Period, boolean2: boolean): com.google.android.exoplayer2.Timeline.Period;
					public hashCode(): number;
					public getPeriodCount(): number;
					public getPeriod(periodIndex: number, period: com.google.android.exoplayer2.Timeline.Period): com.google.android.exoplayer2.Timeline.Period;
				}
				export module Timeline {
					export class Period extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.Timeline.Period>;
						public id: any;
						public uid: any;
						public windowIndex: number;
						public durationUs: number;
						public getNextAdIndexToPlay(adGroupIndex: number, lastPlayedAdIndex: number): number;
						public getDurationUs(): number;
						public constructor();
						public equals(obj: any): boolean;
						public getPositionInWindowUs(): number;
						public getAdGroupTimeUs(adGroupIndex: number): number;
						public getAdGroupIndexAfterPositionUs(positionUs: number): number;
						public hashCode(): number;
						public getAdDurationUs(adGroupIndex: number, adIndexInAdGroup: number): number;
						public getAdGroupCount(): number;
						public getAdResumePositionUs(): number;
						public getAdCountInAdGroup(adGroupIndex: number): number;
						public set(id: any, uid: any, windowIndex: number, durationUs: number, positionInWindowUs: number): com.google.android.exoplayer2.Timeline.Period;
						public getDurationMs(): number;
						public getPositionInWindowMs(): number;
						public hasPlayedAdGroup(adGroupIndex: number): boolean;
						public getAdGroupIndexForPositionUs(positionUs: number): number;
						public getFirstAdIndexToPlay(adGroupIndex: number): number;
						public isAdAvailable(adGroupIndex: number, adIndexInAdGroup: number): boolean;
						public set(id: any, uid: any, windowIndex: number, durationUs: number, positionInWindowUs: number, adPlaybackState: com.google.android.exoplayer2.source.ads.AdPlaybackState): com.google.android.exoplayer2.Timeline.Period;
					}
					export class Window extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.Timeline.Window>;
						public static SINGLE_WINDOW_UID: any;
						public uid: any;
						public tag: any;
						public mediaItem: com.google.android.exoplayer2.MediaItem;
						public manifest: any;
						public presentationStartTimeMs: number;
						public windowStartTimeMs: number;
						public elapsedRealtimeEpochOffsetMs: number;
						public isSeekable: boolean;
						public isDynamic: boolean;
						public isLive: boolean;
						public isPlaceholder: boolean;
						public firstPeriodIndex: number;
						public lastPeriodIndex: number;
						public defaultPositionUs: number;
						public durationUs: number;
						public positionInFirstPeriodUs: number;
						public getDurationMs(): number;
						public getDurationUs(): number;
						public constructor();
						public equals(obj: any): boolean;
						public getDefaultPositionMs(): number;
						public getDefaultPositionUs(): number;
						public hashCode(): number;
						public getCurrentUnixTimeMs(): number;
						public getPositionInFirstPeriodMs(): number;
						public getPositionInFirstPeriodUs(): number;
						public set(uid: any, mediaItem: com.google.android.exoplayer2.MediaItem, manifest: any, presentationStartTimeMs: number, windowStartTimeMs: number, elapsedRealtimeEpochOffsetMs: number, isSeekable: boolean, isDynamic: boolean, isLive: boolean, defaultPositionUs: number, durationUs: number, firstPeriodIndex: number, lastPeriodIndex: number, positionInFirstPeriodUs: number): com.google.android.exoplayer2.Timeline.Window;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class WakeLockManager extends java.lang.Object {
					public static class: java.lang.Class<com.google.android.exoplayer2.WakeLockManager>;
					public constructor(context: globalAndroid.content.Context);
					public setStayAwake(stayAwake: boolean): void;
					public setEnabled(enabled: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class WifiLockManager extends java.lang.Object {
					public static class: java.lang.Class<com.google.android.exoplayer2.WifiLockManager>;
					public constructor(context: globalAndroid.content.Context);
					public setStayAwake(stayAwake: boolean): void;
					public setEnabled(enabled: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module analytics {
					export class AnalyticsCollector extends java.lang.Object implements com.google.android.exoplayer2.Player.EventListener, com.google.android.exoplayer2.metadata.MetadataOutput, com.google.android.exoplayer2.audio.AudioRendererEventListener, com.google.android.exoplayer2.video.VideoRendererEventListener, com.google.android.exoplayer2.source.MediaSourceEventListener, com.google.android.exoplayer2.upstream.BandwidthMeter.EventListener, com.google.android.exoplayer2.drm.DrmSessionEventListener, com.google.android.exoplayer2.video.VideoListener, com.google.android.exoplayer2.audio.AudioListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.analytics.AnalyticsCollector>;
						public onSurfaceSizeChanged(width: number, height: number): void;
						public onLoadError(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData, error: java.io.IOException, wasCanceled: boolean): void;
						public onSeekProcessed(): void;
						public onAudioSessionId(audioSessionId: number): void;
						public setPlayer(player: com.google.android.exoplayer2.Player): void;
						public onVideoEnabled(counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onIsLoadingChanged(isLoading: boolean): void;
						public onVideoSizeChanged(width: number, height: number, unappliedRotationDegrees: number, pixelWidthHeightRatio: number): void;
						public onRepeatModeChanged(repeatMode: number): void;
						public onPositionDiscontinuity(reason: number): void;
						public onVolumeChanged(volume: number): void;
						public onAudioEnabled(counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onDownstreamFormatChanged(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public constructor(clock: com.google.android.exoplayer2.util.Clock);
						public onDrmKeysLoaded(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public addListener(listener: com.google.android.exoplayer2.analytics.AnalyticsListener): void;
						public onIsPlayingChanged(isPlaying: boolean): void;
						public onDrmSessionReleased(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public updateMediaPeriodQueueInfo(queue: java.util.List<com.google.android.exoplayer2.source.MediaSource.MediaPeriodId>, readingPeriod: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public onDroppedFrames(count: number, elapsedMs: number): void;
						public onDrmKeysRemoved(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public onPlayWhenReadyChanged(playWhenReady: boolean, reason: number): void;
						public notifySeekStarted(): void;
						public onBandwidthSample(elapsedMs: number, bytes: number, bitrate: number): void;
						/** @deprecated */
						public onSeekProcessed(): void;
						public onVolumeChanged(audioVolume: number): void;
						public onDrmSessionAcquired(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public onAudioPositionAdvancing(playoutStartSystemTimeMs: number): void;
						public onMetadata(metadata: com.google.android.exoplayer2.metadata.Metadata): void;
						public onPlayerStateChanged(playWhenReady: boolean, playbackState: number): void;
						/** @deprecated */
						public onPlayerStateChanged(playWhenReady: boolean, playbackState: number): void;
						public onUpstreamDiscarded(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onAudioDisabled(counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onMediaItemTransition(mediaItem: com.google.android.exoplayer2.MediaItem, reason: number): void;
						public onVideoDecoderInitialized(decoderName: string, initializedTimestampMs: number, initializationDurationMs: number): void;
						public onAudioUnderrun(bufferSize: number, bufferSizeMs: number, elapsedSinceLastFeedMs: number): void;
						/** @deprecated */
						public onTimelineChanged(timeline: com.google.android.exoplayer2.Timeline, manifest: any, reason: number): void;
						public onRenderedFirstFrame(): void;
						public onPlaybackSuppressionReasonChanged(playbackSuppressionReason: number): void;
						public onExperimentalOffloadSchedulingEnabledChanged(offloadSchedulingEnabled: boolean): void;
						public onPlayerError(error: com.google.android.exoplayer2.ExoPlaybackException): void;
						public onAudioInputFormatChanged(format: com.google.android.exoplayer2.Format): void;
						public onSkipSilenceEnabledChanged(skipSilenceEnabled: boolean): void;
						public onLoadCanceled(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onTimelineChanged(timeline: com.google.android.exoplayer2.Timeline, reason: number): void;
						public onAudioAttributesChanged(audioAttributes: com.google.android.exoplayer2.audio.AudioAttributes): void;
						public onRenderedFirstFrame(surface: globalAndroid.view.Surface): void;
						public onVideoFrameProcessingOffset(totalProcessingOffsetUs: number, frameCount: number): void;
						/** @deprecated */
						public onLoadingChanged(isLoading: boolean): void;
						public onTracksChanged(trackGroups: com.google.android.exoplayer2.source.TrackGroupArray, trackSelections: com.google.android.exoplayer2.trackselection.TrackSelectionArray): void;
						public onPlaybackParametersChanged(playbackParameters: com.google.android.exoplayer2.PlaybackParameters): void;
						public onLoadStarted(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onVideoInputFormatChanged(format: com.google.android.exoplayer2.Format): void;
						public onLoadCompleted(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onShuffleModeEnabledChanged(shuffleModeEnabled: boolean): void;
						public onVideoDisabled(counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public resetForNewPlaylist(): void;
						public onDrmSessionManagerError(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, error: java.lang.Exception): void;
						public generateEventTime(timeline: com.google.android.exoplayer2.Timeline, windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime;
						public onDrmKeysRestored(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public onPlaybackStateChanged(state: number): void;
						public removeListener(listener: com.google.android.exoplayer2.analytics.AnalyticsListener): void;
						public onAudioDecoderInitialized(decoderName: string, initializedTimestampMs: number, initializationDurationMs: number): void;
					}
					export module AnalyticsCollector {
						export class MediaPeriodQueueTracker extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.analytics.AnalyticsCollector.MediaPeriodQueueTracker>;
							public getReadingMediaPeriod(): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
							public onQueueUpdated(queue: java.util.List<com.google.android.exoplayer2.source.MediaSource.MediaPeriodId>, readingPeriod: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, player: com.google.android.exoplayer2.Player): void;
							public getLoadingMediaPeriod(): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
							public getPlayingMediaPeriod(): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
							public onPositionDiscontinuity(player: com.google.android.exoplayer2.Player): void;
							public constructor(period: com.google.android.exoplayer2.Timeline.Period);
							public getMediaPeriodIdTimeline(mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.Timeline;
							public getCurrentPlayerMediaPeriod(): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
							public onTimelineChanged(player: com.google.android.exoplayer2.Player): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module analytics {
					export class AnalyticsListener extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.analytics.AnalyticsListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.analytics.AnalyticsListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onPlayerStateChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, playWhenReady: boolean, playbackState: number): void;
							onPlaybackStateChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, state: number): void;
							onPlayWhenReadyChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, playWhenReady: boolean, reason: number): void;
							onPlaybackSuppressionReasonChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, playbackSuppressionReason: number): void;
							onIsPlayingChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, isPlaying: boolean): void;
							onTimelineChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, reason: number): void;
							onMediaItemTransition(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, mediaItem: com.google.android.exoplayer2.MediaItem, reason: number): void;
							onPositionDiscontinuity(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, reason: number): void;
							onSeekStarted(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
							onSeekProcessed(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
							onPlaybackParametersChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, playbackParameters: com.google.android.exoplayer2.PlaybackParameters): void;
							onRepeatModeChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, repeatMode: number): void;
							onShuffleModeChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, shuffleModeEnabled: boolean): void;
							onIsLoadingChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, isLoading: boolean): void;
							onLoadingChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, isLoading: boolean): void;
							onPlayerError(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, error: com.google.android.exoplayer2.ExoPlaybackException): void;
							onTracksChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, trackGroups: com.google.android.exoplayer2.source.TrackGroupArray, trackSelections: com.google.android.exoplayer2.trackselection.TrackSelectionArray): void;
							onLoadStarted(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							onLoadCompleted(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							onLoadCanceled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							onLoadError(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData, error: java.io.IOException, wasCanceled: boolean): void;
							onDownstreamFormatChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							onUpstreamDiscarded(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							onBandwidthEstimate(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, totalLoadTimeMs: number, totalBytesLoaded: number, bitrateEstimate: number): void;
							onMetadata(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, metadata: com.google.android.exoplayer2.metadata.Metadata): void;
							onDecoderEnabled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, trackType: number, decoderCounters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
							onDecoderInitialized(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, trackType: number, decoderName: string, initializationDurationMs: number): void;
							onDecoderInputFormatChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, trackType: number, format: com.google.android.exoplayer2.Format): void;
							onDecoderDisabled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, trackType: number, decoderCounters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
							onAudioEnabled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
							onAudioDecoderInitialized(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, decoderName: string, initializationDurationMs: number): void;
							onAudioInputFormatChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, format: com.google.android.exoplayer2.Format): void;
							onAudioPositionAdvancing(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, playoutStartSystemTimeMs: number): void;
							onAudioUnderrun(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, bufferSize: number, bufferSizeMs: number, elapsedSinceLastFeedMs: number): void;
							onAudioDisabled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
							onAudioSessionId(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, audioSessionId: number): void;
							onAudioAttributesChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, audioAttributes: com.google.android.exoplayer2.audio.AudioAttributes): void;
							onSkipSilenceEnabledChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, skipSilenceEnabled: boolean): void;
							onVolumeChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, volume: number): void;
							onVideoEnabled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
							onVideoDecoderInitialized(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, decoderName: string, initializationDurationMs: number): void;
							onVideoInputFormatChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, format: com.google.android.exoplayer2.Format): void;
							onDroppedVideoFrames(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, droppedFrames: number, elapsedMs: number): void;
							onVideoDisabled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
							onVideoFrameProcessingOffset(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, totalProcessingOffsetUs: number, frameCount: number): void;
							onRenderedFirstFrame(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, surface: globalAndroid.view.Surface): void;
							onVideoSizeChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, width: number, height: number, unappliedRotationDegrees: number, pixelWidthHeightRatio: number): void;
							onSurfaceSizeChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, width: number, height: number): void;
							onDrmSessionAcquired(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
							onDrmKeysLoaded(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
							onDrmSessionManagerError(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, error: java.lang.Exception): void;
							onDrmKeysRestored(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
							onDrmKeysRemoved(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
							onDrmSessionReleased(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						});
						public constructor();
						public onSeekStarted(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onTracksChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, trackGroups: com.google.android.exoplayer2.source.TrackGroupArray, trackSelections: com.google.android.exoplayer2.trackselection.TrackSelectionArray): void;
						public onAudioDisabled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onRepeatModeChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, repeatMode: number): void;
						public onPlaybackSuppressionReasonChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, playbackSuppressionReason: number): void;
						public onAudioPositionAdvancing(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, playoutStartSystemTimeMs: number): void;
						public onLoadCompleted(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onDownstreamFormatChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						/** @deprecated */
						public onDecoderInputFormatChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, trackType: number, format: com.google.android.exoplayer2.Format): void;
						public onVideoDisabled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onBandwidthEstimate(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, totalLoadTimeMs: number, totalBytesLoaded: number, bitrateEstimate: number): void;
						public onDrmSessionAcquired(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onLoadCanceled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onAudioAttributesChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, audioAttributes: com.google.android.exoplayer2.audio.AudioAttributes): void;
						public onMetadata(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, metadata: com.google.android.exoplayer2.metadata.Metadata): void;
						/** @deprecated */
						public onLoadingChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, isLoading: boolean): void;
						/** @deprecated */
						public onPlayerStateChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, playWhenReady: boolean, playbackState: number): void;
						public onAudioSessionId(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, audioSessionId: number): void;
						public onShuffleModeChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, shuffleModeEnabled: boolean): void;
						public onPlayWhenReadyChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, playWhenReady: boolean, reason: number): void;
						public onVideoInputFormatChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, format: com.google.android.exoplayer2.Format): void;
						/** @deprecated */
						public onDecoderInitialized(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, trackType: number, decoderName: string, initializationDurationMs: number): void;
						public onPlaybackStateChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, state: number): void;
						public onAudioInputFormatChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, format: com.google.android.exoplayer2.Format): void;
						public onDrmSessionManagerError(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, error: java.lang.Exception): void;
						public onDroppedVideoFrames(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, droppedFrames: number, elapsedMs: number): void;
						public onAudioDecoderInitialized(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, decoderName: string, initializationDurationMs: number): void;
						public onSkipSilenceEnabledChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, skipSilenceEnabled: boolean): void;
						public onVideoEnabled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onLoadStarted(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onSurfaceSizeChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, width: number, height: number): void;
						public onPlayerError(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, error: com.google.android.exoplayer2.ExoPlaybackException): void;
						public onPositionDiscontinuity(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, reason: number): void;
						public onVolumeChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, volume: number): void;
						public onIsPlayingChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, isPlaying: boolean): void;
						public onPlaybackParametersChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, playbackParameters: com.google.android.exoplayer2.PlaybackParameters): void;
						public onIsLoadingChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, isLoading: boolean): void;
						public onVideoSizeChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, width: number, height: number, unappliedRotationDegrees: number, pixelWidthHeightRatio: number): void;
						public onDrmKeysRestored(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onDrmSessionReleased(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onMediaItemTransition(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, mediaItem: com.google.android.exoplayer2.MediaItem, reason: number): void;
						public onAudioUnderrun(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, bufferSize: number, bufferSizeMs: number, elapsedSinceLastFeedMs: number): void;
						public onVideoFrameProcessingOffset(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, totalProcessingOffsetUs: number, frameCount: number): void;
						public onAudioEnabled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onDrmKeysRemoved(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onTimelineChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, reason: number): void;
						public onUpstreamDiscarded(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						/** @deprecated */
						public onDecoderEnabled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, trackType: number, decoderCounters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onRenderedFirstFrame(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, surface: globalAndroid.view.Surface): void;
						public onDrmKeysLoaded(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						/** @deprecated */
						public onSeekProcessed(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onLoadError(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData, error: java.io.IOException, wasCanceled: boolean): void;
						/** @deprecated */
						public onDecoderDisabled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, trackType: number, decoderCounters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onVideoDecoderInitialized(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, decoderName: string, initializationDurationMs: number): void;
					}
					export module AnalyticsListener {
						export class EventTime extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime>;
							public realtimeMs: number;
							public timeline: com.google.android.exoplayer2.Timeline;
							public windowIndex: number;
							public mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
							public eventPlaybackPositionMs: number;
							public currentTimeline: com.google.android.exoplayer2.Timeline;
							public currentWindowIndex: number;
							public currentMediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
							public currentPlaybackPositionMs: number;
							public totalBufferedDurationMs: number;
							public hashCode(): number;
							public equals(obj: any): boolean;
							public equals(o: any): boolean;
							public constructor(realtimeMs: number, timeline: com.google.android.exoplayer2.Timeline, windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, eventPlaybackPositionMs: number, currentTimeline: com.google.android.exoplayer2.Timeline, currentWindowIndex: number, currentMediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, currentPlaybackPositionMs: number, totalBufferedDurationMs: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module analytics {
					export abstract class DefaultAnalyticsListener extends java.lang.Object implements com.google.android.exoplayer2.analytics.AnalyticsListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.analytics.DefaultAnalyticsListener>;
						public onSeekStarted(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onTracksChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, trackGroups: com.google.android.exoplayer2.source.TrackGroupArray, trackSelections: com.google.android.exoplayer2.trackselection.TrackSelectionArray): void;
						public onAudioDisabled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onRepeatModeChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, repeatMode: number): void;
						public onPlaybackSuppressionReasonChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, playbackSuppressionReason: number): void;
						public onAudioPositionAdvancing(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, playoutStartSystemTimeMs: number): void;
						public onLoadCompleted(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onDownstreamFormatChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						/** @deprecated */
						public onDecoderInputFormatChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, trackType: number, format: com.google.android.exoplayer2.Format): void;
						public onVideoDisabled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onBandwidthEstimate(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, totalLoadTimeMs: number, totalBytesLoaded: number, bitrateEstimate: number): void;
						public onDrmSessionAcquired(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onLoadCanceled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onAudioAttributesChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, audioAttributes: com.google.android.exoplayer2.audio.AudioAttributes): void;
						public constructor();
						public onMetadata(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, metadata: com.google.android.exoplayer2.metadata.Metadata): void;
						/** @deprecated */
						public onLoadingChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, isLoading: boolean): void;
						/** @deprecated */
						public onPlayerStateChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, playWhenReady: boolean, playbackState: number): void;
						public onAudioSessionId(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, audioSessionId: number): void;
						public onShuffleModeChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, shuffleModeEnabled: boolean): void;
						public onPlayWhenReadyChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, playWhenReady: boolean, reason: number): void;
						public onVideoInputFormatChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, format: com.google.android.exoplayer2.Format): void;
						/** @deprecated */
						public onDecoderInitialized(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, trackType: number, decoderName: string, initializationDurationMs: number): void;
						public onPlaybackStateChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, state: number): void;
						public onAudioInputFormatChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, format: com.google.android.exoplayer2.Format): void;
						public onDrmSessionManagerError(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, error: java.lang.Exception): void;
						public onDroppedVideoFrames(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, droppedFrames: number, elapsedMs: number): void;
						public onAudioDecoderInitialized(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, decoderName: string, initializationDurationMs: number): void;
						public onSkipSilenceEnabledChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, skipSilenceEnabled: boolean): void;
						public onVideoEnabled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onLoadStarted(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onSurfaceSizeChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, width: number, height: number): void;
						public onPlayerError(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, error: com.google.android.exoplayer2.ExoPlaybackException): void;
						public onPositionDiscontinuity(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, reason: number): void;
						public onVolumeChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, volume: number): void;
						public onIsPlayingChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, isPlaying: boolean): void;
						public onPlaybackParametersChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, playbackParameters: com.google.android.exoplayer2.PlaybackParameters): void;
						public onIsLoadingChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, isLoading: boolean): void;
						public onVideoSizeChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, width: number, height: number, unappliedRotationDegrees: number, pixelWidthHeightRatio: number): void;
						public onDrmKeysRestored(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onDrmSessionReleased(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onMediaItemTransition(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, mediaItem: com.google.android.exoplayer2.MediaItem, reason: number): void;
						public onAudioUnderrun(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, bufferSize: number, bufferSizeMs: number, elapsedSinceLastFeedMs: number): void;
						public onVideoFrameProcessingOffset(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, totalProcessingOffsetUs: number, frameCount: number): void;
						public onAudioEnabled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onDrmKeysRemoved(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onTimelineChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, reason: number): void;
						public onUpstreamDiscarded(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						/** @deprecated */
						public onDecoderEnabled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, trackType: number, decoderCounters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onRenderedFirstFrame(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, surface: globalAndroid.view.Surface): void;
						public onDrmKeysLoaded(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						/** @deprecated */
						public onSeekProcessed(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onLoadError(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData, error: java.io.IOException, wasCanceled: boolean): void;
						/** @deprecated */
						public onDecoderDisabled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, trackType: number, decoderCounters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onVideoDecoderInitialized(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, decoderName: string, initializationDurationMs: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module analytics {
					export class DefaultPlaybackSessionManager extends java.lang.Object implements com.google.android.exoplayer2.analytics.PlaybackSessionManager {
						public static class: java.lang.Class<com.google.android.exoplayer2.analytics.DefaultPlaybackSessionManager>;
						public static DEFAULT_SESSION_ID_GENERATOR: com.google.common.base.Supplier<string>;
						public updateSessions(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public constructor();
						public belongsToSession(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, sessionId: string): boolean;
						public updateSessionsWithTimelineChange(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public updateSessionsWithDiscontinuity(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, reason: number): void;
						public getSessionForMediaPeriodId(timeline: com.google.android.exoplayer2.Timeline, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): string;
						public finishAllSessions(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public constructor(sessionIdGenerator: com.google.common.base.Supplier<string>);
						public setListener(listener: com.google.android.exoplayer2.analytics.PlaybackSessionManager.Listener): void;
					}
					export module DefaultPlaybackSessionManager {
						export class SessionDescriptor extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.analytics.DefaultPlaybackSessionManager.SessionDescriptor>;
							public belongsToSession(eventWindowIndex: number, eventMediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): boolean;
							public maybeSetWindowSequenceNumber(eventWindowIndex: number, eventMediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
							public isFinishedAtEventTime(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): boolean;
							public tryResolvingToNewTimeline(oldTimeline: com.google.android.exoplayer2.Timeline, newTimeline: com.google.android.exoplayer2.Timeline): boolean;
							public constructor(param0: com.google.android.exoplayer2.analytics.DefaultPlaybackSessionManager, sessionId: string, windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module analytics {
					export class PlaybackSessionManager extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.analytics.PlaybackSessionManager>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.analytics.PlaybackSessionManager interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setListener(listener0: com.google.android.exoplayer2.analytics.PlaybackSessionManager.Listener): void;
							getSessionForMediaPeriodId(timeline0: com.google.android.exoplayer2.Timeline, mediaPeriodId1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): string;
							belongsToSession(eventTime0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, string1: string): boolean;
							updateSessions(eventTime0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
							updateSessionsWithTimelineChange(eventTime0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
							updateSessionsWithDiscontinuity(eventTime0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, int1: number): void;
							finishAllSessions(eventTime0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						});
						public constructor();
						public updateSessionsWithDiscontinuity(eventTime0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, int1: number): void;
						public belongsToSession(eventTime0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, string1: string): boolean;
						public finishAllSessions(eventTime0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public updateSessionsWithTimelineChange(eventTime0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public setListener(listener0: com.google.android.exoplayer2.analytics.PlaybackSessionManager.Listener): void;
						public updateSessions(eventTime0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public getSessionForMediaPeriodId(timeline0: com.google.android.exoplayer2.Timeline, mediaPeriodId1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): string;
					}
					export module PlaybackSessionManager {
						export class Listener extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.analytics.PlaybackSessionManager.Listener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.analytics.PlaybackSessionManager() when extending the interface class.
							 */
							public constructor(implementation: {
								onSessionCreated(eventTime0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, string1: string): void;
								onSessionActive(eventTime0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, string1: string): void;
								onAdPlaybackStarted(eventTime0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, string1: string, string2: string): void;
								onSessionFinished(eventTime0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, string1: string, boolean2: boolean): void;
							});
							public constructor();
							public onSessionActive(eventTime0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, string1: string): void;
							public onSessionFinished(eventTime0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, string1: string, boolean2: boolean): void;
							public onSessionCreated(eventTime0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, string1: string): void;
							public onAdPlaybackStarted(eventTime0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, string1: string, string2: string): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module analytics {
					export class PlaybackStats extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.analytics.PlaybackStats>;
						public static PLAYBACK_STATE_NOT_STARTED: number;
						public static PLAYBACK_STATE_JOINING_BACKGROUND: number;
						public static PLAYBACK_STATE_JOINING_FOREGROUND: number;
						public static PLAYBACK_STATE_PLAYING: number;
						public static PLAYBACK_STATE_PAUSED: number;
						public static PLAYBACK_STATE_SEEKING: number;
						public static PLAYBACK_STATE_BUFFERING: number;
						public static PLAYBACK_STATE_PAUSED_BUFFERING: number;
						public static PLAYBACK_STATE_SUPPRESSED: number;
						public static PLAYBACK_STATE_SUPPRESSED_BUFFERING: number;
						public static PLAYBACK_STATE_ENDED: number;
						public static PLAYBACK_STATE_STOPPED: number;
						public static PLAYBACK_STATE_FAILED: number;
						public static PLAYBACK_STATE_INTERRUPTED_BY_AD: number;
						public static PLAYBACK_STATE_ABANDONED: number;
						public static EMPTY: com.google.android.exoplayer2.analytics.PlaybackStats;
						public playbackCount: number;
						public playbackStateHistory: java.util.List<com.google.android.exoplayer2.analytics.PlaybackStats.EventTimeAndPlaybackState>;
						public mediaTimeHistory: java.util.List<native.Array<number>>;
						public firstReportedTimeMs: number;
						public foregroundPlaybackCount: number;
						public abandonedBeforeReadyCount: number;
						public endedCount: number;
						public backgroundJoiningCount: number;
						public totalValidJoinTimeMs: number;
						public validJoinTimeCount: number;
						public totalPauseCount: number;
						public totalPauseBufferCount: number;
						public totalSeekCount: number;
						public totalRebufferCount: number;
						public maxRebufferTimeMs: number;
						public adPlaybackCount: number;
						public videoFormatHistory: java.util.List<com.google.android.exoplayer2.analytics.PlaybackStats.EventTimeAndFormat>;
						public audioFormatHistory: java.util.List<com.google.android.exoplayer2.analytics.PlaybackStats.EventTimeAndFormat>;
						public totalVideoFormatHeightTimeMs: number;
						public totalVideoFormatHeightTimeProduct: number;
						public totalVideoFormatBitrateTimeMs: number;
						public totalVideoFormatBitrateTimeProduct: number;
						public totalAudioFormatTimeMs: number;
						public totalAudioFormatBitrateTimeProduct: number;
						public initialVideoFormatHeightCount: number;
						public initialVideoFormatBitrateCount: number;
						public totalInitialVideoFormatHeight: number;
						public totalInitialVideoFormatBitrate: number;
						public initialAudioFormatBitrateCount: number;
						public totalInitialAudioFormatBitrate: number;
						public totalBandwidthTimeMs: number;
						public totalBandwidthBytes: number;
						public totalDroppedFrames: number;
						public totalAudioUnderruns: number;
						public fatalErrorPlaybackCount: number;
						public fatalErrorCount: number;
						public nonFatalErrorCount: number;
						public fatalErrorHistory: java.util.List<com.google.android.exoplayer2.analytics.PlaybackStats.EventTimeAndException>;
						public nonFatalErrorHistory: java.util.List<com.google.android.exoplayer2.analytics.PlaybackStats.EventTimeAndException>;
						public getMeanSeekTimeMs(): number;
						public getMeanTimeBetweenRebuffers(): number;
						public getMeanInitialVideoFormatBitrate(): number;
						public getMeanSingleRebufferTimeMs(): number;
						public getAudioUnderrunRate(): number;
						public getJoinTimeRatio(): number;
						public getMeanTimeBetweenFatalErrors(): number;
						public getMeanVideoFormatHeight(): number;
						public getTotalElapsedTimeMs(): number;
						public getWaitTimeRatio(): number;
						public getPlaybackStateDurationMs(playbackState: number): number;
						public getFatalErrorRate(): number;
						public getTotalPlayTimeMs(): number;
						public getMeanNonFatalErrorCount(): number;
						public getMeanPlayTimeMs(): number;
						public getFatalErrorRatio(): number;
						public getDroppedFramesRate(): number;
						public getMeanWaitTimeMs(): number;
						public getPlaybackStateAtTime(realtimeMs: number): number;
						public getMeanJoinTimeMs(): number;
						public getMeanElapsedTimeMs(): number;
						public getTotalPlayAndWaitTimeMs(): number;
						public getMeanPauseCount(): number;
						public getRebufferTimeRatio(): number;
						public getMeanPauseBufferCount(): number;
						public getMeanTimeBetweenNonFatalErrors(): number;
						public static merge(playbackStats: native.Array<com.google.android.exoplayer2.analytics.PlaybackStats>): com.google.android.exoplayer2.analytics.PlaybackStats;
						public getRebufferRate(): number;
						public getMeanInitialAudioFormatBitrate(): number;
						public getAbandonedBeforeReadyRatio(): number;
						public getMeanPausedTimeMs(): number;
						public getTotalWaitTimeMs(): number;
						public getTotalPausedTimeMs(): number;
						public getMeanRebufferCount(): number;
						public getTotalSeekTimeMs(): number;
						public getTotalRebufferTimeMs(): number;
						public getMeanBandwidth(): number;
						public getMeanRebufferTimeMs(): number;
						public getMeanVideoFormatBitrate(): number;
						public getMediaTimeMsAtRealtimeMs(realtimeMs: number): number;
						public getMeanAudioFormatBitrate(): number;
						public getSeekTimeRatio(): number;
						public getNonFatalErrorRate(): number;
						public getMeanSingleSeekTimeMs(): number;
						public getMeanPlayAndWaitTimeMs(): number;
						public getMeanSeekCount(): number;
						public getEndedRatio(): number;
						public getTotalJoinTimeMs(): number;
						public getMeanInitialVideoFormatHeight(): number;
					}
					export module PlaybackStats {
						export class EventTimeAndException extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.analytics.PlaybackStats.EventTimeAndException>;
							public eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime;
							public exception: java.lang.Exception;
							public hashCode(): number;
							public constructor(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, exception: java.lang.Exception);
							public equals(obj: any): boolean;
							public equals(o: any): boolean;
						}
						export class EventTimeAndFormat extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.analytics.PlaybackStats.EventTimeAndFormat>;
							public eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime;
							public format: com.google.android.exoplayer2.Format;
							public constructor(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, format: com.google.android.exoplayer2.Format);
							public hashCode(): number;
							public equals(obj: any): boolean;
							public equals(o: any): boolean;
						}
						export class EventTimeAndPlaybackState extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.analytics.PlaybackStats.EventTimeAndPlaybackState>;
							public eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime;
							public playbackState: number;
							public hashCode(): number;
							public equals(obj: any): boolean;
							public equals(o: any): boolean;
							public constructor(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, playbackState: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module analytics {
					export class PlaybackStatsListener extends java.lang.Object implements com.google.android.exoplayer2.analytics.AnalyticsListener, com.google.android.exoplayer2.analytics.PlaybackSessionManager.Listener {
						public static class: java.lang.Class<com.google.android.exoplayer2.analytics.PlaybackStatsListener>;
						public onSeekStarted(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onTracksChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, trackGroups: com.google.android.exoplayer2.source.TrackGroupArray, trackSelections: com.google.android.exoplayer2.trackselection.TrackSelectionArray): void;
						public onAudioDisabled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onRepeatModeChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, repeatMode: number): void;
						public onPlaybackSuppressionReasonChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, playbackSuppressionReason: number): void;
						public onAudioPositionAdvancing(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, playoutStartSystemTimeMs: number): void;
						public onLoadCompleted(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onDownstreamFormatChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						/** @deprecated */
						public onDecoderInputFormatChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, trackType: number, format: com.google.android.exoplayer2.Format): void;
						public onVideoDisabled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onBandwidthEstimate(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, totalLoadTimeMs: number, totalBytesLoaded: number, bitrateEstimate: number): void;
						public onDrmSessionAcquired(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onLoadCanceled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onAudioAttributesChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, audioAttributes: com.google.android.exoplayer2.audio.AudioAttributes): void;
						public onMetadata(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, metadata: com.google.android.exoplayer2.metadata.Metadata): void;
						public onSessionActive(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, session: string): void;
						/** @deprecated */
						public onLoadingChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, isLoading: boolean): void;
						/** @deprecated */
						public onPlayerStateChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, playWhenReady: boolean, playbackState: number): void;
						public onAudioSessionId(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, audioSessionId: number): void;
						public onSessionFinished(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, session: string, automaticTransition: boolean): void;
						public onShuffleModeChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, shuffleModeEnabled: boolean): void;
						public onPlayWhenReadyChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, playWhenReady: boolean, reason: number): void;
						public onVideoInputFormatChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, format: com.google.android.exoplayer2.Format): void;
						/** @deprecated */
						public onDecoderInitialized(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, trackType: number, decoderName: string, initializationDurationMs: number): void;
						public onPlaybackStateChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, state: number): void;
						public onDrmSessionManagerError(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, error: java.lang.Exception): void;
						public onAudioInputFormatChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, format: com.google.android.exoplayer2.Format): void;
						public onSessionCreated(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, session: string): void;
						public onDroppedVideoFrames(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, droppedFrames: number, elapsedMs: number): void;
						public onAudioDecoderInitialized(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, decoderName: string, initializationDurationMs: number): void;
						public onSkipSilenceEnabledChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, skipSilenceEnabled: boolean): void;
						public onVideoEnabled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public constructor(keepHistory: boolean, callback: com.google.android.exoplayer2.analytics.PlaybackStatsListener.Callback);
						public onLoadStarted(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onSurfaceSizeChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, width: number, height: number): void;
						public onPlayerError(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, error: com.google.android.exoplayer2.ExoPlaybackException): void;
						public getPlaybackStats(): com.google.android.exoplayer2.analytics.PlaybackStats;
						public onPositionDiscontinuity(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, reason: number): void;
						public onVolumeChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, volume: number): void;
						public getCombinedPlaybackStats(): com.google.android.exoplayer2.analytics.PlaybackStats;
						public onPlaybackParametersChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, playbackParameters: com.google.android.exoplayer2.PlaybackParameters): void;
						public onIsPlayingChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, isPlaying: boolean): void;
						public onIsLoadingChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, isLoading: boolean): void;
						public finishAllSessions(): void;
						public onVideoSizeChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, width: number, height: number, unappliedRotationDegrees: number, pixelWidthHeightRatio: number): void;
						public onDrmKeysRestored(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onDrmSessionReleased(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onAdPlaybackStarted(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, contentSession: string, adSession: string): void;
						public onMediaItemTransition(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, mediaItem: com.google.android.exoplayer2.MediaItem, reason: number): void;
						public onAudioUnderrun(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, bufferSize: number, bufferSizeMs: number, elapsedSinceLastFeedMs: number): void;
						public onVideoFrameProcessingOffset(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, totalProcessingOffsetUs: number, frameCount: number): void;
						public onAudioEnabled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onDrmKeysRemoved(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onTimelineChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, reason: number): void;
						public onUpstreamDiscarded(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						/** @deprecated */
						public onDecoderEnabled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, trackType: number, decoderCounters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onRenderedFirstFrame(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, surface: globalAndroid.view.Surface): void;
						public onDrmKeysLoaded(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						/** @deprecated */
						public onSeekProcessed(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onLoadError(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData, error: java.io.IOException, wasCanceled: boolean): void;
						/** @deprecated */
						public onDecoderDisabled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, trackType: number, decoderCounters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onVideoDecoderInitialized(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, decoderName: string, initializationDurationMs: number): void;
					}
					export module PlaybackStatsListener {
						export class Callback extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.analytics.PlaybackStatsListener.Callback>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.analytics.PlaybackStatsListener() when extending the interface class.
							 */
							public constructor(implementation: {
								onPlaybackStatsReady(eventTime0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, playbackStats1: com.google.android.exoplayer2.analytics.PlaybackStats): void;
							});
							public constructor();
							public onPlaybackStatsReady(eventTime0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, playbackStats1: com.google.android.exoplayer2.analytics.PlaybackStats): void;
						}
						export class PlaybackStatsTracker extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.analytics.PlaybackStatsListener.PlaybackStatsTracker>;
							public onVideoSizeChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, width: number, height: number): void;
							public onAudioUnderrun(): void;
							public onPlayWhenReadyChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, playWhenReady: boolean, belongsToPlayback: boolean): void;
							public onDroppedVideoFrames(droppedFrames: number): void;
							public onPositionDiscontinuity(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, isSeek: boolean): void;
							public onDownstreamFormatChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							public onBandwidthData(timeMs: number, bytes: number): void;
							public onPlaybackSpeedChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, playbackSpeed: number): void;
							public onLoadStarted(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
							public onPlaybackStateChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, state: number, belongsToPlayback: boolean): void;
							public onIsSuppressedChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, isSuppressed: boolean, belongsToPlayback: boolean): void;
							public constructor(keepHistory: boolean, startTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime);
							public onNonFatalError(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, error: java.lang.Exception): void;
							public onInterruptedByAd(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
							public onTracksChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, trackSelections: com.google.android.exoplayer2.trackselection.TrackSelectionArray): void;
							public onSeekStarted(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, belongsToPlayback: boolean): void;
							public onForeground(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
							public onFatalError(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, error: java.lang.Exception): void;
							public onFinished(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
							public build(isFinal: boolean): com.google.android.exoplayer2.analytics.PlaybackStats;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class AudioCapabilities extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioCapabilities>;
						public static DEFAULT_AUDIO_CAPABILITIES: com.google.android.exoplayer2.audio.AudioCapabilities;
						public getMaxChannelCount(): number;
						public equals(obj: any): boolean;
						public equals(other: any): boolean;
						public supportsEncoding(encoding: number): boolean;
						public constructor(supportedEncodings: native.Array<number>, maxChannelCount: number);
						public hashCode(): number;
						public static getCapabilities(context: globalAndroid.content.Context): com.google.android.exoplayer2.audio.AudioCapabilities;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class AudioCapabilitiesReceiver extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver>;
						public unregister(): void;
						public register(): com.google.android.exoplayer2.audio.AudioCapabilities;
						public constructor(context: globalAndroid.content.Context, listener: com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver.Listener);
					}
					export module AudioCapabilitiesReceiver {
						export class ExternalSurroundSoundSettingObserver extends globalAndroid.database.ContentObserver {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver.ExternalSurroundSoundSettingObserver>;
							public unregister(): void;
							public onChange(selfChange: boolean): void;
							public constructor(handler: globalAndroid.os.Handler);
							public onChange(selfChange: boolean, uri: globalAndroid.net.Uri): void;
							public constructor(param0: com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver, handler: globalAndroid.os.Handler, resolver: globalAndroid.content.ContentResolver, settingUri: globalAndroid.net.Uri);
							public register(): void;
						}
						export class HdmiAudioPlugBroadcastReceiver extends globalAndroid.content.BroadcastReceiver {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver.HdmiAudioPlugBroadcastReceiver>;
							public onReceive(context: globalAndroid.content.Context, intent: globalAndroid.content.Intent): void;
							public onReceive(context0: globalAndroid.content.Context, intent1: globalAndroid.content.Intent): void;
						}
						export class Listener extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver.Listener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver() when extending the interface class.
							 */
							public constructor(implementation: {
								onAudioCapabilitiesChanged(audioCapabilities0: com.google.android.exoplayer2.audio.AudioCapabilities): void;
							});
							public constructor();
							public onAudioCapabilitiesChanged(audioCapabilities0: com.google.android.exoplayer2.audio.AudioCapabilities): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class AudioListener extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.audio.AudioListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onAudioSessionId(audioSessionId: number): void;
							onAudioAttributesChanged(audioAttributes: com.google.android.exoplayer2.audio.AudioAttributes): void;
							onVolumeChanged(volume: number): void;
							onSkipSilenceEnabledChanged(skipSilenceEnabled: boolean): void;
						});
						public constructor();
						public onVolumeChanged(volume: number): void;
						public onAudioSessionId(audioSessionId: number): void;
						public onAudioAttributesChanged(audioAttributes: com.google.android.exoplayer2.audio.AudioAttributes): void;
						public onSkipSilenceEnabledChanged(skipSilenceEnabled: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class AudioProcessor extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioProcessor>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.audio.AudioProcessor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							configure(audioFormat0: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
							isActive(): boolean;
							queueInput(byteBuffer0: java.nio.ByteBuffer): void;
							queueEndOfStream(): void;
							getOutput(): java.nio.ByteBuffer;
							isEnded(): boolean;
							flush(): void;
							reset(): void;
						});
						public constructor();
						public static EMPTY_BUFFER: java.nio.ByteBuffer;
						public configure(audioFormat0: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public queueEndOfStream(): void;
						public getOutput(): java.nio.ByteBuffer;
						public flush(): void;
						public isEnded(): boolean;
						public queueInput(byteBuffer0: java.nio.ByteBuffer): void;
						public reset(): void;
						public isActive(): boolean;
					}
					export module AudioProcessor {
						export class AudioFormat extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat>;
							public static NOT_SET: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
							public sampleRate: number;
							public channelCount: number;
							public encoding: number;
							public bytesPerFrame: number;
							public constructor(sampleRate: number, channelCount: number, encoding: number);
							public toString(): string;
						}
						export class UnhandledAudioFormatException extends java.lang.Exception {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioProcessor.UnhandledAudioFormatException>;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(message: string);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
							public constructor(inputAudioFormat: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class AudioRendererEventListener extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioRendererEventListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.audio.AudioRendererEventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onAudioEnabled(counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
							onAudioSessionId(audioSessionId: number): void;
							onAudioDecoderInitialized(decoderName: string, initializedTimestampMs: number, initializationDurationMs: number): void;
							onAudioInputFormatChanged(format: com.google.android.exoplayer2.Format): void;
							onAudioPositionAdvancing(playoutStartSystemTimeMs: number): void;
							onAudioUnderrun(bufferSize: number, bufferSizeMs: number, elapsedSinceLastFeedMs: number): void;
							onAudioDisabled(counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
							onSkipSilenceEnabledChanged(skipSilenceEnabled: boolean): void;
						});
						public constructor();
						public onAudioUnderrun(bufferSize: number, bufferSizeMs: number, elapsedSinceLastFeedMs: number): void;
						public onAudioSessionId(audioSessionId: number): void;
						public onAudioEnabled(counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onAudioInputFormatChanged(format: com.google.android.exoplayer2.Format): void;
						public onAudioDisabled(counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onSkipSilenceEnabledChanged(skipSilenceEnabled: boolean): void;
						public onAudioDecoderInitialized(decoderName: string, initializedTimestampMs: number, initializationDurationMs: number): void;
						public onAudioPositionAdvancing(playoutStartSystemTimeMs: number): void;
					}
					export module AudioRendererEventListener {
						export class EventDispatcher extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioRendererEventListener.EventDispatcher>;
							public skipSilenceEnabledChanged(skipSilenceEnabled: boolean): void;
							public underrun(bufferSize: number, bufferSizeMs: number, elapsedSinceLastFeedMs: number): void;
							public enabled(decoderCounters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
							public positionAdvancing(playoutStartSystemTimeMs: number): void;
							public constructor(handler: globalAndroid.os.Handler, listener: com.google.android.exoplayer2.audio.AudioRendererEventListener);
							public disabled(counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
							public inputFormatChanged(format: com.google.android.exoplayer2.Format): void;
							public decoderInitialized(decoderName: string, initializedTimestampMs: number, initializationDurationMs: number): void;
							public audioSessionId(audioSessionId: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class AudioSink extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioSink>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.audio.AudioSink interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setListener(listener0: com.google.android.exoplayer2.audio.AudioSink.Listener): void;
							supportsFormat(format0: com.google.android.exoplayer2.Format): boolean;
							getFormatSupport(format0: com.google.android.exoplayer2.Format): number;
							getCurrentPositionUs(boolean0: boolean): number;
							configure(format0: com.google.android.exoplayer2.Format, int1: number, ints2: native.Array<number>): void;
							play(): void;
							handleDiscontinuity(): void;
							handleBuffer(byteBuffer0: java.nio.ByteBuffer, long1: number, int2: number): boolean;
							playToEndOfStream(): void;
							isEnded(): boolean;
							hasPendingData(): boolean;
							setPlaybackParameters(playbackParameters0: com.google.android.exoplayer2.PlaybackParameters): void;
							getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
							setSkipSilenceEnabled(boolean0: boolean): void;
							getSkipSilenceEnabled(): boolean;
							setAudioAttributes(audioAttributes0: com.google.android.exoplayer2.audio.AudioAttributes): void;
							setAudioSessionId(int0: number): void;
							setAuxEffectInfo(auxEffectInfo0: com.google.android.exoplayer2.audio.AuxEffectInfo): void;
							enableTunnelingV21(int0: number): void;
							disableTunneling(): void;
							setVolume(float0: number): void;
							pause(): void;
							flush(): void;
							experimentalFlushWithoutAudioTrackRelease(): void;
							reset(): void;
						});
						public constructor();
						public static SINK_FORMAT_UNSUPPORTED: number;
						public static SINK_FORMAT_SUPPORTED_DIRECTLY: number;
						public static CURRENT_POSITION_NOT_SET: number;
						public static SINK_FORMAT_SUPPORTED_WITH_TRANSCODING: number;
						public enableTunnelingV21(int0: number): void;
						public setAudioAttributes(audioAttributes0: com.google.android.exoplayer2.audio.AudioAttributes): void;
						public setAuxEffectInfo(auxEffectInfo0: com.google.android.exoplayer2.audio.AuxEffectInfo): void;
						public pause(): void;
						public setPlaybackParameters(playbackParameters0: com.google.android.exoplayer2.PlaybackParameters): void;
						public handleDiscontinuity(): void;
						public getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
						public hasPendingData(): boolean;
						public isEnded(): boolean;
						public disableTunneling(): void;
						public supportsFormat(format0: com.google.android.exoplayer2.Format): boolean;
						public setListener(listener0: com.google.android.exoplayer2.audio.AudioSink.Listener): void;
						public playToEndOfStream(): void;
						public experimentalFlushWithoutAudioTrackRelease(): void;
						public flush(): void;
						public handleBuffer(byteBuffer0: java.nio.ByteBuffer, long1: number, int2: number): boolean;
						public setSkipSilenceEnabled(boolean0: boolean): void;
						public getCurrentPositionUs(boolean0: boolean): number;
						public getFormatSupport(format0: com.google.android.exoplayer2.Format): number;
						public setAudioSessionId(int0: number): void;
						public play(): void;
						public setVolume(float0: number): void;
						public reset(): void;
						public configure(format0: com.google.android.exoplayer2.Format, int1: number, ints2: native.Array<number>): void;
						public getSkipSilenceEnabled(): boolean;
					}
					export module AudioSink {
						export class ConfigurationException extends java.lang.Exception {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioSink.ConfigurationException>;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(message: string);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
						export class InitializationException extends java.lang.Exception {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioSink.InitializationException>;
							public audioTrackState: number;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(message: string);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
							public constructor(audioTrackState: number, sampleRate: number, channelConfig: number, bufferSize: number);
						}
						export class Listener extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioSink.Listener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.audio.AudioSink() when extending the interface class.
							 */
							public constructor(implementation: {
								onAudioSessionId(int0: number): void;
								onPositionDiscontinuity(): void;
								onPositionAdvancing(playoutStartSystemTimeMs: number): void;
								onUnderrun(int0: number, long1: number, long2: number): void;
								onSkipSilenceEnabledChanged(boolean0: boolean): void;
								onOffloadBufferEmptying(): void;
								onOffloadBufferFull(bufferEmptyingDeadlineMs: number): void;
							});
							public constructor();
							public onPositionAdvancing(playoutStartSystemTimeMs: number): void;
							public onAudioSessionId(int0: number): void;
							public onOffloadBufferEmptying(): void;
							public onSkipSilenceEnabledChanged(boolean0: boolean): void;
							public onOffloadBufferFull(bufferEmptyingDeadlineMs: number): void;
							public onUnderrun(int0: number, long1: number, long2: number): void;
							public onPositionDiscontinuity(): void;
						}
						export class SinkFormatSupport extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioSink.SinkFormatSupport>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.audio.AudioSink() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
						export class WriteException extends java.lang.Exception {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioSink.WriteException>;
							public errorCode: number;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(message: string);
							public constructor(errorCode: number);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class AudioTimestampPoller extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioTimestampPoller>;
						public getTimestampPositionFrames(): number;
						public acceptTimestamp(): void;
						public hasTimestamp(): boolean;
						public rejectTimestamp(): void;
						public hasAdvancingTimestamp(): boolean;
						public getTimestampSystemTimeUs(): number;
						public constructor(audioTrack: globalAndroid.media.AudioTrack);
						public maybePollTimestamp(systemTimeUs: number): boolean;
						public reset(): void;
					}
					export module AudioTimestampPoller {
						export class AudioTimestampV19 extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioTimestampPoller.AudioTimestampV19>;
							public getTimestampSystemTimeUs(): number;
							public maybeUpdateTimestamp(): boolean;
							public constructor(audioTrack: globalAndroid.media.AudioTrack);
							public getTimestampPositionFrames(): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class AudioTrackPositionTracker extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioTrackPositionTracker>;
						public constructor(listener: com.google.android.exoplayer2.audio.AudioTrackPositionTracker.Listener);
						public getCurrentPositionUs(sourceEnded: boolean): number;
						public isPlaying(): boolean;
						public isStalled(writtenFrames: number): boolean;
						public handleEndOfStream(writtenFrames: number): void;
						public getAvailableBufferSize(writtenBytes: number): number;
						public pause(): boolean;
						public setAudioTrack(audioTrack: globalAndroid.media.AudioTrack, isPassthrough: boolean, outputEncoding: number, outputPcmFrameSize: number, bufferSize: number): void;
						public start(): void;
						public mayHandleBuffer(writtenFrames: number): boolean;
						public getPendingBufferDurationMs(writtenFrames: number): number;
						public hasPendingData(writtenFrames: number): boolean;
						public setAudioTrackPlaybackSpeed(audioTrackPlaybackSpeed: number): void;
						public reset(): void;
					}
					export module AudioTrackPositionTracker {
						export class Listener extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioTrackPositionTracker.Listener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.audio.AudioTrackPositionTracker() when extending the interface class.
							 */
							public constructor(implementation: {
								onPositionAdvancing(long0: number): void;
								onPositionFramesMismatch(long0: number, long1: number, long2: number, long3: number): void;
								onSystemTimeUsMismatch(long0: number, long1: number, long2: number, long3: number): void;
								onInvalidLatency(long0: number): void;
								onUnderrun(int0: number, long1: number): void;
							});
							public constructor();
							public onInvalidLatency(long0: number): void;
							public onUnderrun(int0: number, long1: number): void;
							public onPositionFramesMismatch(long0: number, long1: number, long2: number, long3: number): void;
							public onSystemTimeUsMismatch(long0: number, long1: number, long2: number, long3: number): void;
							public onPositionAdvancing(long0: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class AuxEffectInfo extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.AuxEffectInfo>;
						public static NO_AUX_EFFECT_ID: number;
						public effectId: number;
						public sendLevel: number;
						public equals(obj: any): boolean;
						public constructor(effectId: number, sendLevel: number);
						public hashCode(): number;
						public equals(o: any): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export abstract class BaseAudioProcessor extends java.lang.Object implements com.google.android.exoplayer2.audio.AudioProcessor {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.BaseAudioProcessor>;
						public inputAudioFormat: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public outputAudioFormat: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public constructor();
						public queueEndOfStream(): void;
						public replaceOutputBuffer(count: number): java.nio.ByteBuffer;
						public flush(): void;
						public onQueueEndOfStream(): void;
						public hasPendingOutput(): boolean;
						public onFlush(): void;
						public configure(inputAudioFormat: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public getOutput(): java.nio.ByteBuffer;
						public onConfigure(inputAudioFormat: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public onReset(): void;
						public isEnded(): boolean;
						public queueInput(byteBuffer0: java.nio.ByteBuffer): void;
						public reset(): void;
						public isActive(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class ChannelMappingAudioProcessor extends com.google.android.exoplayer2.audio.BaseAudioProcessor {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.ChannelMappingAudioProcessor>;
						public queueInput(inputBuffer: java.nio.ByteBuffer): void;
						public onFlush(): void;
						public configure(inputAudioFormat: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public queueEndOfStream(): void;
						public setChannelMap(outputChannels: native.Array<number>): void;
						public getOutput(): java.nio.ByteBuffer;
						public onConfigure(inputAudioFormat: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public onReset(): void;
						public flush(): void;
						public isEnded(): boolean;
						public reset(): void;
						public isActive(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export abstract class DecoderAudioRenderer<T>  extends com.google.android.exoplayer2.BaseRenderer implements com.google.android.exoplayer2.util.MediaClock  {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.DecoderAudioRenderer<any>>;
						public render(positionUs: number, elapsedRealtimeUs: number): void;
						public onAudioSessionId(audioSessionId: number): void;
						public getOutputFormat(decoder0: any): com.google.android.exoplayer2.Format;
						public getPositionUs(): number;
						public resetPosition(positionUs: number): void;
						public createDecoder(format0: com.google.android.exoplayer2.Format, exoMediaCrypto1: com.google.android.exoplayer2.drm.ExoMediaCrypto): any;
						public static create(formatSupport: number, adaptiveSupport: number, tunnelingSupport: number): number;
						public getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
						public getStream(): com.google.android.exoplayer2.source.SampleStream;
						public static create(formatSupport: number): number;
						public onDisabled(): void;
						public isEnded(): boolean;
						public constructor();
						public onPositionDiscontinuity(): void;
						public setCurrentStreamFinal(): void;
						public onEnabled(joining: boolean, mayRenderStartOfStream: boolean): void;
						public isReady(): boolean;
						public enable(configuration: com.google.android.exoplayer2.RendererConfiguration, formats: native.Array<com.google.android.exoplayer2.Format>, stream: com.google.android.exoplayer2.source.SampleStream, positionUs: number, joining: boolean, mayRenderStartOfStream: boolean, startPositionUs: number, offsetUs: number): void;
						public disable(): void;
						public static getFormatSupportString(formatSupport: number): string;
						public start(): void;
						public getState(): number;
						public onStopped(): void;
						public getReadingPositionUs(): number;
						public handleMessage(what: number, object: any): void;
						public reset(): void;
						public experimentalSetEnableKeepAudioTrackOnSeek(enableKeepAudioTrackOnSeek: boolean): void;
						public supportsFormat(format: com.google.android.exoplayer2.Format): number;
						public setOperatingRate(operatingRate: number): void;
						public onStarted(): void;
						public canKeepCodec(oldFormat: com.google.android.exoplayer2.Format, newFormat: com.google.android.exoplayer2.Format): boolean;
						public getName(): string;
						public static getFormatSupport(supportFlags: number): number;
						public getMediaClock(): com.google.android.exoplayer2.util.MediaClock;
						public isCurrentStreamFinal(): boolean;
						public constructor(trackType: number);
						public static getAdaptiveSupport(supportFlags: number): number;
						public getCapabilities(): com.google.android.exoplayer2.RendererCapabilities;
						public static getTunnelingSupport(supportFlags: number): number;
						public constructor(eventHandler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.audio.AudioRendererEventListener, audioProcessors: native.Array<com.google.android.exoplayer2.audio.AudioProcessor>);
						public onPositionReset(positionUs: number, joining: boolean): void;
						public handleMessage(messageType: number, message: any): void;
						public setPlaybackParameters(playbackParameters: com.google.android.exoplayer2.PlaybackParameters): void;
						public constructor(eventHandler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.audio.AudioRendererEventListener, audioCapabilities: com.google.android.exoplayer2.audio.AudioCapabilities, audioProcessors: native.Array<com.google.android.exoplayer2.audio.AudioProcessor>);
						public hasReadStreamToEnd(): boolean;
						public getTrackType(): number;
						public supportsMixedMimeTypeAdaptation(): number;
						public stop(): void;
						public getSinkFormatSupport(format: com.google.android.exoplayer2.Format): number;
						public sinkSupportsFormat(format: com.google.android.exoplayer2.Format): boolean;
						public constructor(eventHandler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.audio.AudioRendererEventListener, audioSink: com.google.android.exoplayer2.audio.AudioSink);
						public setIndex(index: number): void;
						public maybeThrowStreamError(): void;
						public supportsFormatInternal(format0: com.google.android.exoplayer2.Format): number;
						public replaceStream(formats: native.Array<com.google.android.exoplayer2.Format>, stream: com.google.android.exoplayer2.source.SampleStream, startPositionUs: number, offsetUs: number): void;
					}
					export module DecoderAudioRenderer {
						export class AudioSinkListener extends java.lang.Object implements com.google.android.exoplayer2.audio.AudioSink.Listener {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.DecoderAudioRenderer.AudioSinkListener>;
							public onPositionAdvancing(playoutStartSystemTimeMs: number): void;
							public onOffloadBufferEmptying(): void;
							public onSkipSilenceEnabledChanged(skipSilenceEnabled: boolean): void;
							public onUnderrun(bufferSize: number, bufferSizeMs: number, elapsedSinceLastFeedMs: number): void;
							public onOffloadBufferFull(bufferEmptyingDeadlineMs: number): void;
							public onAudioSessionId(audioSessionId: number): void;
							public onPositionDiscontinuity(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class DefaultAudioSink extends java.lang.Object implements com.google.android.exoplayer2.audio.AudioSink {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.DefaultAudioSink>;
						public static DEFAULT_PLAYBACK_SPEED: number;
						public static MIN_PLAYBACK_SPEED: number;
						public static MAX_PLAYBACK_SPEED: number;
						public static MIN_PITCH: number;
						public static MAX_PITCH: number;
						public static enablePreV21AudioSessionWorkaround: boolean;
						public static failOnSpuriousAudioTimestamp: boolean;
						public getCurrentPositionUs(sourceEnded: boolean): number;
						public pause(): void;
						public handleDiscontinuity(): void;
						public enableTunnelingV21(tunnelingAudioSessionId: number): void;
						public getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
						public hasPendingData(): boolean;
						public isEnded(): boolean;
						public setSkipSilenceEnabled(skipSilenceEnabled: boolean): void;
						public disableTunneling(): void;
						public handleBuffer(buffer: java.nio.ByteBuffer, presentationTimeUs: number, encodedAccessUnitCount: number): boolean;
						public constructor(audioCapabilities: com.google.android.exoplayer2.audio.AudioCapabilities, audioProcessorChain: com.google.android.exoplayer2.audio.DefaultAudioSink.AudioProcessorChain, enableFloatOutput: boolean, enableAudioTrackPlaybackParams: boolean, enableOffload: boolean);
						public configure(inputFormat: com.google.android.exoplayer2.Format, specifiedBufferSize: number, outputChannels: native.Array<number>): void;
						public setAuxEffectInfo(auxEffectInfo: com.google.android.exoplayer2.audio.AuxEffectInfo): void;
						public playToEndOfStream(): void;
						public experimentalFlushWithoutAudioTrackRelease(): void;
						public constructor(audioCapabilities: com.google.android.exoplayer2.audio.AudioCapabilities, audioProcessors: native.Array<com.google.android.exoplayer2.audio.AudioProcessor>, enableFloatOutput: boolean);
						public setPlaybackParameters(playbackParameters: com.google.android.exoplayer2.PlaybackParameters): void;
						public flush(): void;
						public getFormatSupport(format: com.google.android.exoplayer2.Format): number;
						public constructor(audioCapabilities: com.google.android.exoplayer2.audio.AudioCapabilities, audioProcessors: native.Array<com.google.android.exoplayer2.audio.AudioProcessor>);
						public setAudioSessionId(audioSessionId: number): void;
						public setListener(listener: com.google.android.exoplayer2.audio.AudioSink.Listener): void;
						public setAudioAttributes(audioAttributes: com.google.android.exoplayer2.audio.AudioAttributes): void;
						public supportsFormat(format: com.google.android.exoplayer2.Format): boolean;
						public setVolume(volume: number): void;
						public play(): void;
						public reset(): void;
						public getSkipSilenceEnabled(): boolean;
					}
					export module DefaultAudioSink {
						export class AudioProcessorChain extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.DefaultAudioSink.AudioProcessorChain>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.audio.DefaultAudioSink() when extending the interface class.
							 */
							public constructor(implementation: {
								getAudioProcessors(): native.Array<com.google.android.exoplayer2.audio.AudioProcessor>;
								applyPlaybackParameters(playbackParameters0: com.google.android.exoplayer2.PlaybackParameters): com.google.android.exoplayer2.PlaybackParameters;
								applySkipSilenceEnabled(boolean0: boolean): boolean;
								getMediaDuration(long0: number): number;
								getSkippedOutputFrameCount(): number;
							});
							public constructor();
							public getMediaDuration(long0: number): number;
							public getAudioProcessors(): native.Array<com.google.android.exoplayer2.audio.AudioProcessor>;
							public applyPlaybackParameters(playbackParameters0: com.google.android.exoplayer2.PlaybackParameters): com.google.android.exoplayer2.PlaybackParameters;
							public getSkippedOutputFrameCount(): number;
							public applySkipSilenceEnabled(boolean0: boolean): boolean;
						}
						export class Configuration extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.DefaultAudioSink.Configuration>;
							public inputFormat: com.google.android.exoplayer2.Format;
							public inputPcmFrameSize: number;
							public outputMode: number;
							public outputPcmFrameSize: number;
							public outputSampleRate: number;
							public outputChannelConfig: number;
							public outputEncoding: number;
							public bufferSize: number;
							public canApplyPlaybackParameters: boolean;
							public availableAudioProcessors: native.Array<com.google.android.exoplayer2.audio.AudioProcessor>;
							public canReuseAudioTrack(audioTrackConfiguration: com.google.android.exoplayer2.audio.DefaultAudioSink.Configuration): boolean;
							public framesToDurationUs(frameCount: number): number;
							public constructor(inputFormat: com.google.android.exoplayer2.Format, inputPcmFrameSize: number, outputMode: number, outputPcmFrameSize: number, outputSampleRate: number, outputChannelConfig: number, outputEncoding: number, specifiedBufferSize: number, enableAudioTrackPlaybackParams: boolean, canApplyPlaybackParameters: boolean, availableAudioProcessors: native.Array<com.google.android.exoplayer2.audio.AudioProcessor>);
							public buildAudioTrack(tunneling: boolean, audioAttributes: com.google.android.exoplayer2.audio.AudioAttributes, audioSessionId: number): globalAndroid.media.AudioTrack;
							public inputFramesToDurationUs(frameCount: number): number;
							public durationUsToFrames(durationUs: number): number;
							public outputModeIsOffload(): boolean;
						}
						export class DefaultAudioProcessorChain extends java.lang.Object implements com.google.android.exoplayer2.audio.DefaultAudioSink.AudioProcessorChain {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.DefaultAudioSink.DefaultAudioProcessorChain>;
							public applyPlaybackParameters(playbackParameters: com.google.android.exoplayer2.PlaybackParameters): com.google.android.exoplayer2.PlaybackParameters;
							public constructor(audioProcessors: native.Array<com.google.android.exoplayer2.audio.AudioProcessor>, silenceSkippingAudioProcessor: com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor, sonicAudioProcessor: com.google.android.exoplayer2.audio.SonicAudioProcessor);
							public constructor(audioProcessors: native.Array<com.google.android.exoplayer2.audio.AudioProcessor>);
							public getAudioProcessors(): native.Array<com.google.android.exoplayer2.audio.AudioProcessor>;
							public getSkippedOutputFrameCount(): number;
							public getMediaDuration(playoutDuration: number): number;
							public applySkipSilenceEnabled(skipSilenceEnabled: boolean): boolean;
						}
						export class InvalidAudioTrackTimestampException extends java.lang.RuntimeException {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.DefaultAudioSink.InvalidAudioTrackTimestampException>;
						}
						export class MediaPositionParameters extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.DefaultAudioSink.MediaPositionParameters>;
							public playbackParameters: com.google.android.exoplayer2.PlaybackParameters;
							public skipSilence: boolean;
							public mediaTimeUs: number;
							public audioTrackPositionUs: number;
						}
						export class PositionTrackerListener extends java.lang.Object implements com.google.android.exoplayer2.audio.AudioTrackPositionTracker.Listener {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.DefaultAudioSink.PositionTrackerListener>;
							public onPositionAdvancing(playoutStartSystemTimeMs: number): void;
							public onSystemTimeUsMismatch(audioTimestampPositionFrames: number, audioTimestampSystemTimeUs: number, systemTimeUs: number, playbackPositionUs: number): void;
							public onUnderrun(bufferSize: number, bufferSizeMs: number): void;
							public onInvalidLatency(latencyUs: number): void;
							public onPositionFramesMismatch(audioTimestampPositionFrames: number, audioTimestampSystemTimeUs: number, systemTimeUs: number, playbackPositionUs: number): void;
						}
						export class StreamEventCallbackV29 extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.DefaultAudioSink.StreamEventCallbackV29>;
							public unregister(audioTrack: globalAndroid.media.AudioTrack): void;
							public constructor(param0: com.google.android.exoplayer2.audio.DefaultAudioSink);
							public register(audioTrack: globalAndroid.media.AudioTrack): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class FloatResamplingAudioProcessor extends com.google.android.exoplayer2.audio.BaseAudioProcessor {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.FloatResamplingAudioProcessor>;
						public queueInput(inputBuffer: java.nio.ByteBuffer): void;
						public configure(inputAudioFormat: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public queueEndOfStream(): void;
						public getOutput(): java.nio.ByteBuffer;
						public onConfigure(inputAudioFormat: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public flush(): void;
						public isEnded(): boolean;
						public reset(): void;
						public isActive(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class ForwardingAudioSink extends java.lang.Object implements com.google.android.exoplayer2.audio.AudioSink {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.ForwardingAudioSink>;
						public constructor(sink: com.google.android.exoplayer2.audio.AudioSink);
						public getCurrentPositionUs(sourceEnded: boolean): number;
						public pause(): void;
						public handleDiscontinuity(): void;
						public enableTunnelingV21(tunnelingAudioSessionId: number): void;
						public getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
						public hasPendingData(): boolean;
						public isEnded(): boolean;
						public setSkipSilenceEnabled(skipSilenceEnabled: boolean): void;
						public disableTunneling(): void;
						public handleBuffer(buffer: java.nio.ByteBuffer, presentationTimeUs: number, encodedAccessUnitCount: number): boolean;
						public configure(inputFormat: com.google.android.exoplayer2.Format, specifiedBufferSize: number, outputChannels: native.Array<number>): void;
						public setAuxEffectInfo(auxEffectInfo: com.google.android.exoplayer2.audio.AuxEffectInfo): void;
						public playToEndOfStream(): void;
						public experimentalFlushWithoutAudioTrackRelease(): void;
						public setPlaybackParameters(playbackParameters: com.google.android.exoplayer2.PlaybackParameters): void;
						public flush(): void;
						public getFormatSupport(format: com.google.android.exoplayer2.Format): number;
						public setAudioSessionId(audioSessionId: number): void;
						public setListener(listener: com.google.android.exoplayer2.audio.AudioSink.Listener): void;
						public setAudioAttributes(audioAttributes: com.google.android.exoplayer2.audio.AudioAttributes): void;
						public supportsFormat(format: com.google.android.exoplayer2.Format): boolean;
						public setVolume(volume: number): void;
						public play(): void;
						public reset(): void;
						public getSkipSilenceEnabled(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class MediaCodecAudioRenderer extends com.google.android.exoplayer2.mediacodec.MediaCodecRenderer implements com.google.android.exoplayer2.util.MediaClock {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.MediaCodecAudioRenderer>;
						public onAudioSessionId(audioSessionId: number): void;
						public render(positionUs: number, elapsedRealtimeUs: number): void;
						public getCodecMaxInputSize(codecInfo: com.google.android.exoplayer2.mediacodec.MediaCodecInfo, format: com.google.android.exoplayer2.Format, streamFormats: native.Array<com.google.android.exoplayer2.Format>): number;
						public constructor(context: globalAndroid.content.Context, mediaCodecSelector: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, eventHandler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.audio.AudioRendererEventListener, audioCapabilities: com.google.android.exoplayer2.audio.AudioCapabilities, audioProcessors: native.Array<com.google.android.exoplayer2.audio.AudioProcessor>);
						public getPositionUs(): number;
						public resetPosition(positionUs: number): void;
						public supportsFormat(mediaCodecSelector0: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, format1: com.google.android.exoplayer2.Format): number;
						public static create(formatSupport: number, adaptiveSupport: number, tunnelingSupport: number): number;
						public getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
						public getStream(): com.google.android.exoplayer2.source.SampleStream;
						public static create(formatSupport: number): number;
						public configureCodec(mediaCodecInfo0: com.google.android.exoplayer2.mediacodec.MediaCodecInfo, mediaCodecAdapter1: com.google.android.exoplayer2.mediacodec.MediaCodecAdapter, format2: com.google.android.exoplayer2.Format, mediaCrypto3: globalAndroid.media.MediaCrypto, float4: number): void;
						public onDisabled(): void;
						public onOutputFormatChanged(format: com.google.android.exoplayer2.Format, mediaFormat: globalAndroid.media.MediaFormat): void;
						public isEnded(): boolean;
						public shouldUseBypass(format: com.google.android.exoplayer2.Format): boolean;
						public canKeepCodecWithFlush(oldFormat: com.google.android.exoplayer2.Format, newFormat: com.google.android.exoplayer2.Format): boolean;
						public onPositionDiscontinuity(): void;
						public setCurrentStreamFinal(): void;
						public configureCodec(codecInfo: com.google.android.exoplayer2.mediacodec.MediaCodecInfo, codecAdapter: com.google.android.exoplayer2.mediacodec.MediaCodecAdapter, format: com.google.android.exoplayer2.Format, crypto: globalAndroid.media.MediaCrypto, codecOperatingRate: number): void;
						public onEnabled(joining: boolean, mayRenderStartOfStream: boolean): void;
						public getDecoderInfos(mediaCodecSelector0: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, format1: com.google.android.exoplayer2.Format, boolean2: boolean): java.util.List<com.google.android.exoplayer2.mediacodec.MediaCodecInfo>;
						public isReady(): boolean;
						public onQueueInputBuffer(buffer: com.google.android.exoplayer2.decoder.DecoderInputBuffer): void;
						public enable(configuration: com.google.android.exoplayer2.RendererConfiguration, formats: native.Array<com.google.android.exoplayer2.Format>, stream: com.google.android.exoplayer2.source.SampleStream, positionUs: number, joining: boolean, mayRenderStartOfStream: boolean, startPositionUs: number, offsetUs: number): void;
						public disable(): void;
						public static getFormatSupportString(formatSupport: number): string;
						public constructor(context: globalAndroid.content.Context, mediaCodecSelector: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, eventHandler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.audio.AudioRendererEventListener);
						public getDecoderInfos(mediaCodecSelector: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, format: com.google.android.exoplayer2.Format, requiresSecureDecoder: boolean): java.util.List<com.google.android.exoplayer2.mediacodec.MediaCodecInfo>;
						public onCodecInitialized(name: string, initializedTimestampMs: number, initializationDurationMs: number): void;
						public start(): void;
						public getState(): number;
						public onReset(): void;
						public onStopped(): void;
						public constructor(context: globalAndroid.content.Context, mediaCodecSelector: com.google.android.exoplayer2.mediacodec.MediaCodecSelector);
						public getReadingPositionUs(): number;
						public handleMessage(what: number, object: any): void;
						public supportsFormat(mediaCodecSelector: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, format: com.google.android.exoplayer2.Format): number;
						public reset(): void;
						public constructor(context: globalAndroid.content.Context, mediaCodecSelector: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, enableDecoderFallback: boolean, eventHandler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.audio.AudioRendererEventListener, audioSink: com.google.android.exoplayer2.audio.AudioSink);
						public experimentalSetEnableKeepAudioTrackOnSeek(enableKeepAudioTrackOnSeek: boolean): void;
						public supportsFormat(format: com.google.android.exoplayer2.Format): number;
						public setOperatingRate(operatingRate: number): void;
						public onStarted(): void;
						public getName(): string;
						public static getFormatSupport(supportFlags: number): number;
						public getMediaClock(): com.google.android.exoplayer2.util.MediaClock;
						public isCurrentStreamFinal(): boolean;
						public constructor(context: globalAndroid.content.Context, mediaCodecSelector: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, eventHandler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.audio.AudioRendererEventListener, audioSink: com.google.android.exoplayer2.audio.AudioSink);
						public constructor(trackType: number);
						public processOutputBuffer(positionUs: number, elapsedRealtimeUs: number, codec: globalAndroid.media.MediaCodec, buffer: java.nio.ByteBuffer, bufferIndex: number, bufferFlags: number, sampleCount: number, bufferPresentationTimeUs: number, isDecodeOnlyBuffer: boolean, isLastBuffer: boolean, format: com.google.android.exoplayer2.Format): boolean;
						public static getAdaptiveSupport(supportFlags: number): number;
						public getCapabilities(): com.google.android.exoplayer2.RendererCapabilities;
						public static getTunnelingSupport(supportFlags: number): number;
						public onPositionReset(positionUs: number, joining: boolean): void;
						public handleMessage(messageType: number, message: any): void;
						public constructor(trackType: number, mediaCodecSelector: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, enableDecoderFallback: boolean, assumedMinimumCodecOperatingRate: number);
						public setPlaybackParameters(playbackParameters: com.google.android.exoplayer2.PlaybackParameters): void;
						public hasReadStreamToEnd(): boolean;
						public onProcessedStreamChange(): void;
						public getTrackType(): number;
						public supportsMixedMimeTypeAdaptation(): number;
						public stop(): void;
						public processOutputBuffer(long0: number, long1: number, mediaCodec2: globalAndroid.media.MediaCodec, byteBuffer3: java.nio.ByteBuffer, int4: number, int5: number, int6: number, long7: number, boolean8: boolean, boolean9: boolean, format10: com.google.android.exoplayer2.Format): boolean;
						public getMediaFormat(format: com.google.android.exoplayer2.Format, codecMimeType: string, codecMaxInputSize: number, codecOperatingRate: number): globalAndroid.media.MediaFormat;
						public setIndex(index: number): void;
						public maybeThrowStreamError(): void;
						public renderToEndOfStream(): void;
						public canKeepCodec(codec: globalAndroid.media.MediaCodec, codecInfo: com.google.android.exoplayer2.mediacodec.MediaCodecInfo, oldFormat: com.google.android.exoplayer2.Format, newFormat: com.google.android.exoplayer2.Format): number;
						public getCodecOperatingRateV23(operatingRate: number, format: com.google.android.exoplayer2.Format, streamFormats: native.Array<com.google.android.exoplayer2.Format>): number;
						public onInputFormatChanged(formatHolder: com.google.android.exoplayer2.FormatHolder): void;
						public replaceStream(formats: native.Array<com.google.android.exoplayer2.Format>, stream: com.google.android.exoplayer2.source.SampleStream, startPositionUs: number, offsetUs: number): void;
					}
					export module MediaCodecAudioRenderer {
						export class AudioSinkListener extends java.lang.Object implements com.google.android.exoplayer2.audio.AudioSink.Listener {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.MediaCodecAudioRenderer.AudioSinkListener>;
							public onPositionAdvancing(playoutStartSystemTimeMs: number): void;
							public onOffloadBufferEmptying(): void;
							public onSkipSilenceEnabledChanged(skipSilenceEnabled: boolean): void;
							public onUnderrun(bufferSize: number, bufferSizeMs: number, elapsedSinceLastFeedMs: number): void;
							public onOffloadBufferFull(bufferEmptyingDeadlineMs: number): void;
							public onAudioSessionId(audioSessionId: number): void;
							public onPositionDiscontinuity(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class ResamplingAudioProcessor extends com.google.android.exoplayer2.audio.BaseAudioProcessor {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.ResamplingAudioProcessor>;
						public queueInput(inputBuffer: java.nio.ByteBuffer): void;
						public configure(inputAudioFormat: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public queueEndOfStream(): void;
						public getOutput(): java.nio.ByteBuffer;
						public onConfigure(inputAudioFormat: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public flush(): void;
						public isEnded(): boolean;
						public reset(): void;
						public isActive(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class SilenceSkippingAudioProcessor extends com.google.android.exoplayer2.audio.BaseAudioProcessor {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor>;
						public static DEFAULT_MINIMUM_SILENCE_DURATION_US: number;
						public static DEFAULT_PADDING_SILENCE_US: number;
						public static DEFAULT_SILENCE_THRESHOLD_LEVEL: number;
						public queueInput(inputBuffer: java.nio.ByteBuffer): void;
						public constructor();
						public queueEndOfStream(): void;
						public constructor(minimumSilenceDurationUs: number, paddingSilenceUs: number, silenceThresholdLevel: number);
						public flush(): void;
						public onQueueEndOfStream(): void;
						public setEnabled(enabled: boolean): void;
						public onFlush(): void;
						public configure(inputAudioFormat: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public getOutput(): java.nio.ByteBuffer;
						public onConfigure(inputAudioFormat: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public getSkippedFrames(): number;
						public onReset(): void;
						public isEnded(): boolean;
						public reset(): void;
						public isActive(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class Sonic extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.Sonic>;
						public queueEndOfStream(): void;
						public queueInput(buffer: java.nio.ShortBuffer): void;
						public getPendingInputBytes(): number;
						public getOutput(buffer: java.nio.ShortBuffer): void;
						public flush(): void;
						public getOutputSize(): number;
						public constructor(inputSampleRateHz: number, channelCount: number, speed: number, pitch: number, outputSampleRateHz: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class SonicAudioProcessor extends java.lang.Object implements com.google.android.exoplayer2.audio.AudioProcessor {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.SonicAudioProcessor>;
						public static SAMPLE_RATE_NO_CHANGE: number;
						public queueInput(inputBuffer: java.nio.ByteBuffer): void;
						public constructor();
						public queueEndOfStream(): void;
						public flush(): void;
						public getMediaDuration(playoutDuration: number): number;
						public setPitch(pitch: number): void;
						public configure(inputAudioFormat: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public getOutput(): java.nio.ByteBuffer;
						public setOutputSampleRateHz(sampleRateHz: number): void;
						public isEnded(): boolean;
						public reset(): void;
						public setSpeed(speed: number): void;
						public isActive(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class TeeAudioProcessor extends com.google.android.exoplayer2.audio.BaseAudioProcessor {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.TeeAudioProcessor>;
						public queueInput(inputBuffer: java.nio.ByteBuffer): void;
						public constructor();
						public queueEndOfStream(): void;
						public constructor(audioBufferSink: com.google.android.exoplayer2.audio.TeeAudioProcessor.AudioBufferSink);
						public flush(): void;
						public onQueueEndOfStream(): void;
						public onFlush(): void;
						public configure(inputAudioFormat: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public getOutput(): java.nio.ByteBuffer;
						public onConfigure(inputAudioFormat: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public onReset(): void;
						public isEnded(): boolean;
						public reset(): void;
						public isActive(): boolean;
					}
					export module TeeAudioProcessor {
						export class AudioBufferSink extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.TeeAudioProcessor.AudioBufferSink>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.audio.TeeAudioProcessor() when extending the interface class.
							 */
							public constructor(implementation: {
								flush(int0: number, int1: number, int2: number): void;
								handleBuffer(byteBuffer0: java.nio.ByteBuffer): void;
							});
							public constructor();
							public handleBuffer(byteBuffer0: java.nio.ByteBuffer): void;
							public flush(int0: number, int1: number, int2: number): void;
						}
						export class WavFileAudioBufferSink extends java.lang.Object implements com.google.android.exoplayer2.audio.TeeAudioProcessor.AudioBufferSink {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.TeeAudioProcessor.WavFileAudioBufferSink>;
							public constructor(outputFileNamePrefix: string);
							public handleBuffer(buffer: java.nio.ByteBuffer): void;
							public flush(sampleRateHz: number, channelCount: number, encoding: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class TrimmingAudioProcessor extends com.google.android.exoplayer2.audio.BaseAudioProcessor {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.TrimmingAudioProcessor>;
						public queueInput(inputBuffer: java.nio.ByteBuffer): void;
						public constructor();
						public queueEndOfStream(): void;
						public flush(): void;
						public onQueueEndOfStream(): void;
						public onFlush(): void;
						public configure(inputAudioFormat: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public getOutput(): java.nio.ByteBuffer;
						public setTrimFrameCount(trimStartFrames: number, trimEndFrames: number): void;
						public resetTrimmedFrameCount(): void;
						public getTrimmedFrameCount(): number;
						public onConfigure(inputAudioFormat: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public onReset(): void;
						public isEnded(): boolean;
						public reset(): void;
						public isActive(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module core {
					export class BuildConfig extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.core.BuildConfig>;
						public static DEBUG: boolean;
						public static LIBRARY_PACKAGE_NAME: string;
						public static APPLICATION_ID: string;
						public static BUILD_TYPE: string;
						public static FLAVOR: string;
						public static VERSION_CODE: number;
						public static VERSION_NAME: string;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module database {
					export class DatabaseIOException extends java.io.IOException {
						public static class: java.lang.Class<com.google.android.exoplayer2.database.DatabaseIOException>;
						public constructor();
						public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						public constructor(message: string, cause: java.lang.Throwable);
						public constructor(cause: java.lang.Throwable);
						public constructor(message: string);
						public constructor(cause: globalAndroid.database.SQLException);
						public constructor(cause: globalAndroid.database.SQLException, message: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module database {
					export class DatabaseProvider extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.database.DatabaseProvider>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.database.DatabaseProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getWritableDatabase(): globalAndroid.database.sqlite.SQLiteDatabase;
							getReadableDatabase(): globalAndroid.database.sqlite.SQLiteDatabase;
						});
						public constructor();
						public static TABLE_PREFIX: string;
						public getWritableDatabase(): globalAndroid.database.sqlite.SQLiteDatabase;
						public getReadableDatabase(): globalAndroid.database.sqlite.SQLiteDatabase;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module database {
					export class DefaultDatabaseProvider extends java.lang.Object implements com.google.android.exoplayer2.database.DatabaseProvider {
						public static class: java.lang.Class<com.google.android.exoplayer2.database.DefaultDatabaseProvider>;
						public constructor(sqliteOpenHelper: globalAndroid.database.sqlite.SQLiteOpenHelper);
						public getWritableDatabase(): globalAndroid.database.sqlite.SQLiteDatabase;
						public getReadableDatabase(): globalAndroid.database.sqlite.SQLiteDatabase;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module database {
					export class ExoDatabaseProvider extends globalAndroid.database.sqlite.SQLiteOpenHelper implements com.google.android.exoplayer2.database.DatabaseProvider {
						public static class: java.lang.Class<com.google.android.exoplayer2.database.ExoDatabaseProvider>;
						public static DATABASE_NAME: string;
						public constructor(context: globalAndroid.content.Context, name: string, factory: globalAndroid.database.sqlite.SQLiteDatabase.CursorFactory, version: number);
						public constructor(context: globalAndroid.content.Context, name: string, version: number, openParams: globalAndroid.database.sqlite.SQLiteDatabase.OpenParams);
						public onCreate(db: globalAndroid.database.sqlite.SQLiteDatabase): void;
						public close(): void;
						public getWritableDatabase(): globalAndroid.database.sqlite.SQLiteDatabase;
						public onUpgrade(sQLiteDatabase0: globalAndroid.database.sqlite.SQLiteDatabase, int1: number, int2: number): void;
						public onDowngrade(db: globalAndroid.database.sqlite.SQLiteDatabase, oldVersion: number, newVersion: number): void;
						public constructor(context: globalAndroid.content.Context, name: string, factory: globalAndroid.database.sqlite.SQLiteDatabase.CursorFactory, version: number, errorHandler: globalAndroid.database.DatabaseErrorHandler);
						public constructor(context: globalAndroid.content.Context);
						public onCreate(sQLiteDatabase0: globalAndroid.database.sqlite.SQLiteDatabase): void;
						public onUpgrade(db: globalAndroid.database.sqlite.SQLiteDatabase, oldVersion: number, newVersion: number): void;
						public getReadableDatabase(): globalAndroid.database.sqlite.SQLiteDatabase;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module database {
					export class VersionTable extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.database.VersionTable>;
						public static VERSION_UNSET: number;
						public static FEATURE_OFFLINE: number;
						public static FEATURE_CACHE_CONTENT_METADATA: number;
						public static FEATURE_CACHE_FILE_METADATA: number;
						public static FEATURE_EXTERNAL: number;
						public static removeVersion(writableDatabase: globalAndroid.database.sqlite.SQLiteDatabase, feature: number, instanceUid: string): void;
						public static getVersion(database: globalAndroid.database.sqlite.SQLiteDatabase, feature: number, instanceUid: string): number;
						public static setVersion(writableDatabase: globalAndroid.database.sqlite.SQLiteDatabase, feature: number, instanceUid: string, version: number): void;
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module decoder {
					export class Decoder<I, O, E>  extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.decoder.Decoder<any,any,any>>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.decoder.Decoder<any,any,any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getName(): string;
							dequeueInputBuffer(): I;
							queueInputBuffer(object0: I): void;
							dequeueOutputBuffer(): O;
							flush(): void;
							release(): void;
						});
						public constructor();
						public dequeueOutputBuffer(): O;
						public dequeueInputBuffer(): I;
						public queueInputBuffer(object0: I): void;
						public flush(): void;
						public release(): void;
						public getName(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module decoder {
					export class DecoderCounters extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.decoder.DecoderCounters>;
						public decoderInitCount: number;
						public decoderReleaseCount: number;
						public inputBufferCount: number;
						public skippedInputBufferCount: number;
						public renderedOutputBufferCount: number;
						public skippedOutputBufferCount: number;
						public droppedBufferCount: number;
						public maxConsecutiveDroppedBufferCount: number;
						public droppedToKeyframeCount: number;
						public totalVideoFrameProcessingOffsetUs: number;
						public videoFrameProcessingOffsetCount: number;
						public constructor();
						public addVideoFrameProcessingOffset(processingOffsetUs: number): void;
						public merge(other: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public ensureUpdated(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module decoder {
					export class DecoderException extends java.lang.Exception {
						public static class: java.lang.Class<com.google.android.exoplayer2.decoder.DecoderException>;
						public constructor();
						public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						public constructor(message: string, cause: java.lang.Throwable);
						public constructor(cause: java.lang.Throwable);
						public constructor(message: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module decoder {
					export abstract class OutputBuffer extends com.google.android.exoplayer2.decoder.Buffer {
						public static class: java.lang.Class<com.google.android.exoplayer2.decoder.OutputBuffer>;
						public timeUs: number;
						public skippedOutputBufferCount: number;
						public constructor();
						public release(): void;
					}
					export module OutputBuffer {
						export class Owner<S>  extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.decoder.OutputBuffer.Owner<any>>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.decoder.OutputBuffer() when extending the interface class.
							 */
							public constructor(implementation: {
								releaseOutputBuffer(outputBuffer0: S): void;
							});
							public constructor();
							public releaseOutputBuffer(outputBuffer0: S): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module decoder {
					export abstract class SimpleDecoder<I, O, E>  extends com.google.android.exoplayer2.decoder.Decoder<any,any,any> {
						public static class: java.lang.Class<com.google.android.exoplayer2.decoder.SimpleDecoder<any,any,any>>;
						public setInitialInputBufferSize(size: number): void;
						public createUnexpectedDecodeException(throwable0: java.lang.Throwable): any;
						public createOutputBuffer(): any;
						public releaseOutputBuffer(outputBuffer: any): void;
						public constructor(inputBuffers: native.Array<any>, outputBuffers: native.Array<any>);
						public dequeueInputBuffer(): any;
						public flush(): void;
						public release(): void;
						public getName(): string;
						public createInputBuffer(): any;
						public decode(decoderInputBuffer0: any, outputBuffer1: any, boolean2: boolean): any;
						public queueInputBuffer(object0: any): void;
						public queueInputBuffer(inputBuffer: any): void;
						public dequeueOutputBuffer(): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module decoder {
					export class SimpleOutputBuffer extends com.google.android.exoplayer2.decoder.OutputBuffer {
						public static class: java.lang.Class<com.google.android.exoplayer2.decoder.SimpleOutputBuffer>;
						public data: java.nio.ByteBuffer;
						public constructor();
						public constructor(owner: com.google.android.exoplayer2.decoder.OutputBuffer.Owner<com.google.android.exoplayer2.decoder.SimpleOutputBuffer>);
						public init(timeUs: number, size: number): java.nio.ByteBuffer;
						public clear(): void;
						public release(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module device {
					export class DeviceListener extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.device.DeviceListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.device.DeviceListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onDeviceInfoChanged(deviceInfo: com.google.android.exoplayer2.device.DeviceInfo): void;
							onDeviceVolumeChanged(volume: number, muted: boolean): void;
						});
						public constructor();
						public onDeviceInfoChanged(deviceInfo: com.google.android.exoplayer2.device.DeviceInfo): void;
						public onDeviceVolumeChanged(volume: number, muted: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class ClearKeyUtil extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.ClearKeyUtil>;
						public static adjustRequestData(request: native.Array<number>): native.Array<number>;
						public static adjustResponseData(response: native.Array<number>): native.Array<number>;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class DecryptionException extends java.lang.Exception {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.DecryptionException>;
						public errorCode: number;
						public constructor();
						public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						public constructor(errorCode: number, message: string);
						public constructor(message: string, cause: java.lang.Throwable);
						public constructor(cause: java.lang.Throwable);
						public constructor(message: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class DefaultDrmSession extends java.lang.Object implements com.google.android.exoplayer2.drm.DrmSession {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.DefaultDrmSession>;
						public schemeDatas: java.util.List<com.google.android.exoplayer2.drm.DrmInitData.SchemeData>;
						public provision(): void;
						public onProvisionCompleted(): void;
						public static replaceSession(previousSession: com.google.android.exoplayer2.drm.DrmSession, newSession: com.google.android.exoplayer2.drm.DrmSession): void;
						public release(eventDispatcher: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher): void;
						public onMediaDrmEvent(what: number): void;
						public onProvisionError(error: java.lang.Exception): void;
						public getError(): com.google.android.exoplayer2.drm.DrmSession.DrmSessionException;
						public getState(): number;
						public getOfflineLicenseKeySetId(): native.Array<number>;
						public constructor(uuid: java.util.UUID, mediaDrm: com.google.android.exoplayer2.drm.ExoMediaDrm, provisioningManager: com.google.android.exoplayer2.drm.DefaultDrmSession.ProvisioningManager, referenceCountListener: com.google.android.exoplayer2.drm.DefaultDrmSession.ReferenceCountListener, schemeDatas: java.util.List<com.google.android.exoplayer2.drm.DrmInitData.SchemeData>, mode: number, playClearSamplesWithoutKeys: boolean, isPlaceholderSession: boolean, offlineLicenseKeySetId: native.Array<number>, keyRequestParameters: java.util.HashMap<string,string>, callback: com.google.android.exoplayer2.drm.MediaDrmCallback, playbackLooper: globalAndroid.os.Looper, loadErrorHandlingPolicy: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy);
						public hasSessionId(sessionId: native.Array<number>): boolean;
						public queryKeyStatus(): java.util.Map<string,string>;
						public acquire(eventDispatcher: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher): void;
						public getMediaCrypto(): com.google.android.exoplayer2.drm.ExoMediaCrypto;
						public playClearSamplesWithoutKeys(): boolean;
					}
					export module DefaultDrmSession {
						export class ProvisioningManager extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DefaultDrmSession.ProvisioningManager>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.drm.DefaultDrmSession() when extending the interface class.
							 */
							public constructor(implementation: {
								provisionRequired(defaultDrmSession0: com.google.android.exoplayer2.drm.DefaultDrmSession): void;
								onProvisionError(exception0: java.lang.Exception): void;
								onProvisionCompleted(): void;
							});
							public constructor();
							public onProvisionError(exception0: java.lang.Exception): void;
							public provisionRequired(defaultDrmSession0: com.google.android.exoplayer2.drm.DefaultDrmSession): void;
							public onProvisionCompleted(): void;
						}
						export class ReferenceCountListener extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DefaultDrmSession.ReferenceCountListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.drm.DefaultDrmSession() when extending the interface class.
							 */
							public constructor(implementation: {
								onReferenceCountIncremented(defaultDrmSession0: com.google.android.exoplayer2.drm.DefaultDrmSession, int1: number): void;
								onReferenceCountDecremented(defaultDrmSession0: com.google.android.exoplayer2.drm.DefaultDrmSession, int1: number): void;
							});
							public constructor();
							public onReferenceCountIncremented(defaultDrmSession0: com.google.android.exoplayer2.drm.DefaultDrmSession, int1: number): void;
							public onReferenceCountDecremented(defaultDrmSession0: com.google.android.exoplayer2.drm.DefaultDrmSession, int1: number): void;
						}
						export class RequestHandler extends globalAndroid.os.Handler {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DefaultDrmSession.RequestHandler>;
							public constructor();
							public constructor(param0: com.google.android.exoplayer2.drm.DefaultDrmSession, backgroundLooper: globalAndroid.os.Looper);
							public constructor(callback: globalAndroid.os.Handler.Callback);
							public handleMessage(msg: globalAndroid.os.Message): void;
							public constructor(looper: globalAndroid.os.Looper);
							public constructor(looper: globalAndroid.os.Looper, callback: globalAndroid.os.Handler.Callback);
						}
						export class RequestTask extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DefaultDrmSession.RequestTask>;
							public taskId: number;
							public allowRetry: boolean;
							public startTimeMs: number;
							public request: any;
							public errorCount: number;
							public constructor(taskId: number, allowRetry: boolean, startTimeMs: number, request: any);
						}
						export class ResponseHandler extends globalAndroid.os.Handler {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DefaultDrmSession.ResponseHandler>;
							public constructor();
							public constructor(param0: com.google.android.exoplayer2.drm.DefaultDrmSession, looper: globalAndroid.os.Looper);
							public constructor(callback: globalAndroid.os.Handler.Callback);
							public handleMessage(msg: globalAndroid.os.Message): void;
							public constructor(looper: globalAndroid.os.Looper);
							public constructor(looper: globalAndroid.os.Looper, callback: globalAndroid.os.Handler.Callback);
						}
						export class UnexpectedDrmSessionException extends java.io.IOException {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DefaultDrmSession.UnexpectedDrmSessionException>;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(message: string);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class DefaultDrmSessionManager extends java.lang.Object implements com.google.android.exoplayer2.drm.DrmSessionManager {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.DefaultDrmSessionManager>;
						public static PLAYREADY_CUSTOM_DATA_KEY: string;
						public static MODE_PLAYBACK: number;
						public static MODE_QUERY: number;
						public static MODE_DOWNLOAD: number;
						public static MODE_RELEASE: number;
						public static INITIAL_DRM_REQUEST_RETRY_COUNT: number;
						public static DEFAULT_SESSION_KEEPALIVE_MS: number;
						public acquireSession(playbackLooper: globalAndroid.os.Looper, eventDispatcher: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher, format: com.google.android.exoplayer2.Format): com.google.android.exoplayer2.drm.DrmSession;
						/** @deprecated */
						public constructor(uuid: java.util.UUID, exoMediaDrm: com.google.android.exoplayer2.drm.ExoMediaDrm, callback: com.google.android.exoplayer2.drm.MediaDrmCallback, keyRequestParameters: java.util.HashMap<string,string>, multiSession: boolean);
						/** @deprecated */
						public constructor(uuid: java.util.UUID, exoMediaDrm: com.google.android.exoplayer2.drm.ExoMediaDrm, callback: com.google.android.exoplayer2.drm.MediaDrmCallback, keyRequestParameters: java.util.HashMap<string,string>);
						public setMode(mode: number, offlineLicenseKeySetId: native.Array<number>): void;
						public prepare(): void;
						public getExoMediaCryptoType(format: com.google.android.exoplayer2.Format): java.lang.Class<any>;
						public static getDummyDrmSessionManager(): com.google.android.exoplayer2.drm.DrmSessionManager;
						public release(): void;
						/** @deprecated */
						public constructor(uuid: java.util.UUID, exoMediaDrm: com.google.android.exoplayer2.drm.ExoMediaDrm, callback: com.google.android.exoplayer2.drm.MediaDrmCallback, keyRequestParameters: java.util.HashMap<string,string>, multiSession: boolean, initialDrmRequestRetryCount: number);
					}
					export module DefaultDrmSessionManager {
						export class Builder extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DefaultDrmSessionManager.Builder>;
							public constructor();
							public setSessionKeepaliveMs(sessionKeepaliveMs: number): com.google.android.exoplayer2.drm.DefaultDrmSessionManager.Builder;
							public setMultiSession(multiSession: boolean): com.google.android.exoplayer2.drm.DefaultDrmSessionManager.Builder;
							public setUseDrmSessionsForClearContent(useDrmSessionsForClearContentTrackTypes: native.Array<number>): com.google.android.exoplayer2.drm.DefaultDrmSessionManager.Builder;
							public setKeyRequestParameters(keyRequestParameters: java.util.Map<string,string>): com.google.android.exoplayer2.drm.DefaultDrmSessionManager.Builder;
							public build(mediaDrmCallback: com.google.android.exoplayer2.drm.MediaDrmCallback): com.google.android.exoplayer2.drm.DefaultDrmSessionManager;
							public setLoadErrorHandlingPolicy(loadErrorHandlingPolicy: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy): com.google.android.exoplayer2.drm.DefaultDrmSessionManager.Builder;
							public setPlayClearSamplesWithoutKeys(playClearSamplesWithoutKeys: boolean): com.google.android.exoplayer2.drm.DefaultDrmSessionManager.Builder;
							public setUuidAndExoMediaDrmProvider(uuid: java.util.UUID, exoMediaDrmProvider: com.google.android.exoplayer2.drm.ExoMediaDrm.Provider): com.google.android.exoplayer2.drm.DefaultDrmSessionManager.Builder;
						}
						export class MediaDrmEventListener extends java.lang.Object implements com.google.android.exoplayer2.drm.ExoMediaDrm.OnEventListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DefaultDrmSessionManager.MediaDrmEventListener>;
							public onEvent(md: com.google.android.exoplayer2.drm.ExoMediaDrm, sessionId: native.Array<number>, event: number, extra: number, data: native.Array<number>): void;
						}
						export class MediaDrmHandler extends globalAndroid.os.Handler {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DefaultDrmSessionManager.MediaDrmHandler>;
							public constructor();
							public constructor(callback: globalAndroid.os.Handler.Callback);
							public handleMessage(msg: globalAndroid.os.Message): void;
							public constructor(looper: globalAndroid.os.Looper);
							public constructor(param0: com.google.android.exoplayer2.drm.DefaultDrmSessionManager, looper: globalAndroid.os.Looper);
							public constructor(looper: globalAndroid.os.Looper, callback: globalAndroid.os.Handler.Callback);
						}
						export class MissingSchemeDataException extends java.lang.Exception {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DefaultDrmSessionManager.MissingSchemeDataException>;
						}
						export class Mode extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DefaultDrmSessionManager.Mode>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.drm.DefaultDrmSessionManager() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
						export class ProvisioningManagerImpl extends java.lang.Object implements com.google.android.exoplayer2.drm.DefaultDrmSession.ProvisioningManager {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DefaultDrmSessionManager.ProvisioningManagerImpl>;
							public provisionRequired(session: com.google.android.exoplayer2.drm.DefaultDrmSession): void;
							public onProvisionError(error: java.lang.Exception): void;
							public onProvisionCompleted(): void;
						}
						export class ReferenceCountListenerImpl extends java.lang.Object implements com.google.android.exoplayer2.drm.DefaultDrmSession.ReferenceCountListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DefaultDrmSessionManager.ReferenceCountListenerImpl>;
							public onReferenceCountIncremented(session: com.google.android.exoplayer2.drm.DefaultDrmSession, newReferenceCount: number): void;
							public onReferenceCountDecremented(session: com.google.android.exoplayer2.drm.DefaultDrmSession, newReferenceCount: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class DrmSession extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.DrmSession>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.drm.DrmSession interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							replaceSession(previousSession: com.google.android.exoplayer2.drm.DrmSession, newSession: com.google.android.exoplayer2.drm.DrmSession): void;
							getState(): number;
							playClearSamplesWithoutKeys(): boolean;
							getError(): com.google.android.exoplayer2.drm.DrmSession.DrmSessionException;
							getMediaCrypto(): com.google.android.exoplayer2.drm.ExoMediaCrypto;
							queryKeyStatus(): java.util.Map<string,string>;
							getOfflineLicenseKeySetId(): native.Array<number>;
							acquire(eventDispatcher0: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher): void;
							release(eventDispatcher0: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher): void;
						});
						public constructor();
						public static STATE_OPENING: number;
						public static STATE_OPENED_WITH_KEYS: number;
						public static STATE_RELEASED: number;
						public static STATE_OPENED: number;
						public static STATE_ERROR: number;
						public getError(): com.google.android.exoplayer2.drm.DrmSession.DrmSessionException;
						public acquire(eventDispatcher0: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher): void;
						public static replaceSession(previousSession: com.google.android.exoplayer2.drm.DrmSession, newSession: com.google.android.exoplayer2.drm.DrmSession): void;
						public release(eventDispatcher0: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher): void;
						public getState(): number;
						public getOfflineLicenseKeySetId(): native.Array<number>;
						public queryKeyStatus(): java.util.Map<string,string>;
						public getMediaCrypto(): com.google.android.exoplayer2.drm.ExoMediaCrypto;
						public playClearSamplesWithoutKeys(): boolean;
					}
					export module DrmSession {
						export class DrmSessionException extends java.io.IOException {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DrmSession.DrmSessionException>;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(message: string);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
						export class State extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DrmSession.State>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.drm.DrmSession() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class DrmSessionEventListener extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.DrmSessionEventListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.drm.DrmSessionEventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onDrmSessionAcquired(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
							onDrmKeysLoaded(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
							onDrmSessionManagerError(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, error: java.lang.Exception): void;
							onDrmKeysRestored(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
							onDrmKeysRemoved(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
							onDrmSessionReleased(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						});
						public constructor();
						public onDrmKeysLoaded(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public onDrmKeysRestored(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public onDrmSessionReleased(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public onDrmKeysRemoved(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public onDrmSessionAcquired(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public onDrmSessionManagerError(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, error: java.lang.Exception): void;
					}
					export module DrmSessionEventListener {
						export class EventDispatcher extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher>;
							public windowIndex: number;
							public mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
							public constructor();
							public drmKeysLoaded(): void;
							public drmSessionAcquired(): void;
							public drmSessionReleased(): void;
							public withParameters(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher;
							public drmSessionManagerError(error: java.lang.Exception): void;
							public drmKeysRemoved(): void;
							public addEventListener(handler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
							public removeEventListener(eventListener: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
							public drmKeysRestored(): void;
						}
						export module EventDispatcher {
							export class ListenerAndHandler extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher.ListenerAndHandler>;
								public handler: globalAndroid.os.Handler;
								public listener: com.google.android.exoplayer2.drm.DrmSessionEventListener;
								public constructor(handler: globalAndroid.os.Handler, listener: com.google.android.exoplayer2.drm.DrmSessionEventListener);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class DrmSessionManager extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.DrmSessionManager>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.drm.DrmSessionManager interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getDummyDrmSessionManager(): com.google.android.exoplayer2.drm.DrmSessionManager;
							prepare(): void;
							release(): void;
							acquireSession(looper0: globalAndroid.os.Looper, eventDispatcher1: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher, format2: com.google.android.exoplayer2.Format): com.google.android.exoplayer2.drm.DrmSession;
							getExoMediaCryptoType(format0: com.google.android.exoplayer2.Format): java.lang.Class<any>;
						});
						public constructor();
						public static DUMMY: com.google.android.exoplayer2.drm.DrmSessionManager;
						public getExoMediaCryptoType(format0: com.google.android.exoplayer2.Format): java.lang.Class<any>;
						public static getDummyDrmSessionManager(): com.google.android.exoplayer2.drm.DrmSessionManager;
						public prepare(): void;
						public acquireSession(looper0: globalAndroid.os.Looper, eventDispatcher1: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher, format2: com.google.android.exoplayer2.Format): com.google.android.exoplayer2.drm.DrmSession;
						public release(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class DummyExoMediaDrm extends java.lang.Object implements com.google.android.exoplayer2.drm.ExoMediaDrm {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.DummyExoMediaDrm>;
						public constructor();
						public getMetrics(): any;
						public getKeyRequest(scope: native.Array<number>, schemeDatas: java.util.List<com.google.android.exoplayer2.drm.DrmInitData.SchemeData>, keyType: number, optionalParameters: java.util.HashMap<string,string>): com.google.android.exoplayer2.drm.ExoMediaDrm.KeyRequest;
						public provideProvisionResponse(response: native.Array<number>): void;
						public acquire(): void;
						public getProvisionRequest(): com.google.android.exoplayer2.drm.ExoMediaDrm.ProvisionRequest;
						public setOnEventListener(listener: com.google.android.exoplayer2.drm.ExoMediaDrm.OnEventListener): void;
						public getExoMediaCryptoType(): java.lang.Class<com.google.android.exoplayer2.drm.UnsupportedMediaCrypto>;
						public restoreKeys(sessionId: native.Array<number>, keySetId: native.Array<number>): void;
						public closeSession(sessionId: native.Array<number>): void;
						public getPropertyByteArray(propertyName: string): native.Array<number>;
						public setOnExpirationUpdateListener(listener: com.google.android.exoplayer2.drm.ExoMediaDrm.OnExpirationUpdateListener): void;
						public release(): void;
						public getPropertyString(propertyName: string): string;
						public setPropertyByteArray(propertyName: string, value: native.Array<number>): void;
						public queryKeyStatus(sessionId: native.Array<number>): java.util.Map<string,string>;
						public setOnKeyStatusChangeListener(listener: com.google.android.exoplayer2.drm.ExoMediaDrm.OnKeyStatusChangeListener): void;
						public openSession(): native.Array<number>;
						public getExoMediaCryptoType(): java.lang.Class<any>;
						public setPropertyString(propertyName: string, value: string): void;
						public static getInstance(): com.google.android.exoplayer2.drm.DummyExoMediaDrm;
						public createMediaCrypto(sessionId: native.Array<number>): com.google.android.exoplayer2.drm.ExoMediaCrypto;
						public provideKeyResponse(scope: native.Array<number>, response: native.Array<number>): native.Array<number>;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class ErrorStateDrmSession extends java.lang.Object implements com.google.android.exoplayer2.drm.DrmSession {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.ErrorStateDrmSession>;
						public getError(): com.google.android.exoplayer2.drm.DrmSession.DrmSessionException;
						public static replaceSession(previousSession: com.google.android.exoplayer2.drm.DrmSession, newSession: com.google.android.exoplayer2.drm.DrmSession): void;
						public getState(): number;
						public getOfflineLicenseKeySetId(): native.Array<number>;
						public release(eventDispatcher: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher): void;
						public queryKeyStatus(): java.util.Map<string,string>;
						public constructor(error: com.google.android.exoplayer2.drm.DrmSession.DrmSessionException);
						public acquire(eventDispatcher: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher): void;
						public getMediaCrypto(): com.google.android.exoplayer2.drm.ExoMediaCrypto;
						public playClearSamplesWithoutKeys(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class ExoMediaDrm extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.ExoMediaDrm>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.drm.ExoMediaDrm interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setOnEventListener(onEventListener0: com.google.android.exoplayer2.drm.ExoMediaDrm.OnEventListener): void;
							setOnKeyStatusChangeListener(onKeyStatusChangeListener0: com.google.android.exoplayer2.drm.ExoMediaDrm.OnKeyStatusChangeListener): void;
							setOnExpirationUpdateListener(onExpirationUpdateListener0: com.google.android.exoplayer2.drm.ExoMediaDrm.OnExpirationUpdateListener): void;
							openSession(): native.Array<number>;
							closeSession(bytes0: native.Array<number>): void;
							getKeyRequest(bytes0: native.Array<number>, list1: java.util.List<com.google.android.exoplayer2.drm.DrmInitData.SchemeData>, int2: number, hashMap3: java.util.HashMap<string,string>): com.google.android.exoplayer2.drm.ExoMediaDrm.KeyRequest;
							provideKeyResponse(bytes0: native.Array<number>, bytes1: native.Array<number>): native.Array<number>;
							getProvisionRequest(): com.google.android.exoplayer2.drm.ExoMediaDrm.ProvisionRequest;
							provideProvisionResponse(bytes0: native.Array<number>): void;
							queryKeyStatus(bytes0: native.Array<number>): java.util.Map<string,string>;
							acquire(): void;
							release(): void;
							restoreKeys(bytes0: native.Array<number>, bytes1: native.Array<number>): void;
							getMetrics(): any;
							getPropertyString(string0: string): string;
							getPropertyByteArray(string0: string): native.Array<number>;
							setPropertyString(string0: string, string1: string): void;
							setPropertyByteArray(string0: string, bytes1: native.Array<number>): void;
							createMediaCrypto(bytes0: native.Array<number>): com.google.android.exoplayer2.drm.ExoMediaCrypto;
							getExoMediaCryptoType(): java.lang.Class<any>;
						});
						public constructor();
						public static KEY_TYPE_RELEASE: number;
						public static KEY_TYPE_STREAMING: number;
						public static EVENT_KEY_REQUIRED: number;
						public static EVENT_KEY_EXPIRED: number;
						public static EVENT_PROVISION_REQUIRED: number;
						public static KEY_TYPE_OFFLINE: number;
						public provideProvisionResponse(bytes0: native.Array<number>): void;
						public getMetrics(): any;
						public provideKeyResponse(bytes0: native.Array<number>, bytes1: native.Array<number>): native.Array<number>;
						public acquire(): void;
						public getProvisionRequest(): com.google.android.exoplayer2.drm.ExoMediaDrm.ProvisionRequest;
						public setPropertyString(string0: string, string1: string): void;
						public getKeyRequest(bytes0: native.Array<number>, list1: java.util.List<com.google.android.exoplayer2.drm.DrmInitData.SchemeData>, int2: number, hashMap3: java.util.HashMap<string,string>): com.google.android.exoplayer2.drm.ExoMediaDrm.KeyRequest;
						public release(): void;
						public getPropertyByteArray(string0: string): native.Array<number>;
						public setOnEventListener(onEventListener0: com.google.android.exoplayer2.drm.ExoMediaDrm.OnEventListener): void;
						public openSession(): native.Array<number>;
						public getExoMediaCryptoType(): java.lang.Class<any>;
						public setPropertyByteArray(string0: string, bytes1: native.Array<number>): void;
						public setOnExpirationUpdateListener(onExpirationUpdateListener0: com.google.android.exoplayer2.drm.ExoMediaDrm.OnExpirationUpdateListener): void;
						public closeSession(bytes0: native.Array<number>): void;
						public getPropertyString(string0: string): string;
						public createMediaCrypto(bytes0: native.Array<number>): com.google.android.exoplayer2.drm.ExoMediaCrypto;
						public queryKeyStatus(bytes0: native.Array<number>): java.util.Map<string,string>;
						public restoreKeys(bytes0: native.Array<number>, bytes1: native.Array<number>): void;
						public setOnKeyStatusChangeListener(onKeyStatusChangeListener0: com.google.android.exoplayer2.drm.ExoMediaDrm.OnKeyStatusChangeListener): void;
					}
					export module ExoMediaDrm {
						export class AppManagedProvider extends java.lang.Object implements com.google.android.exoplayer2.drm.ExoMediaDrm.Provider {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.ExoMediaDrm.AppManagedProvider>;
							public constructor(exoMediaDrm: com.google.android.exoplayer2.drm.ExoMediaDrm);
							public acquireExoMediaDrm(uuid: java.util.UUID): com.google.android.exoplayer2.drm.ExoMediaDrm;
						}
						export class KeyRequest extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.ExoMediaDrm.KeyRequest>;
							public getLicenseServerUrl(): string;
							public getData(): native.Array<number>;
							public constructor(data: native.Array<number>, licenseServerUrl: string);
						}
						export class KeyStatus extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.ExoMediaDrm.KeyStatus>;
							public getStatusCode(): number;
							public getKeyId(): native.Array<number>;
							public constructor(statusCode: number, keyId: native.Array<number>);
						}
						export class OnEventListener extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.ExoMediaDrm.OnEventListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.drm.ExoMediaDrm() when extending the interface class.
							 */
							public constructor(implementation: {
								onEvent(exoMediaDrm0: com.google.android.exoplayer2.drm.ExoMediaDrm, bytes1: native.Array<number>, int2: number, int3: number, bytes4: native.Array<number>): void;
							});
							public constructor();
							public onEvent(exoMediaDrm0: com.google.android.exoplayer2.drm.ExoMediaDrm, bytes1: native.Array<number>, int2: number, int3: number, bytes4: native.Array<number>): void;
						}
						export class OnExpirationUpdateListener extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.ExoMediaDrm.OnExpirationUpdateListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.drm.ExoMediaDrm() when extending the interface class.
							 */
							public constructor(implementation: {
								onExpirationUpdate(exoMediaDrm0: com.google.android.exoplayer2.drm.ExoMediaDrm, bytes1: native.Array<number>, long2: number): void;
							});
							public constructor();
							public onExpirationUpdate(exoMediaDrm0: com.google.android.exoplayer2.drm.ExoMediaDrm, bytes1: native.Array<number>, long2: number): void;
						}
						export class OnKeyStatusChangeListener extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.ExoMediaDrm.OnKeyStatusChangeListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.drm.ExoMediaDrm() when extending the interface class.
							 */
							public constructor(implementation: {
								onKeyStatusChange(exoMediaDrm0: com.google.android.exoplayer2.drm.ExoMediaDrm, bytes1: native.Array<number>, list2: java.util.List<com.google.android.exoplayer2.drm.ExoMediaDrm.KeyStatus>, boolean3: boolean): void;
							});
							public constructor();
							public onKeyStatusChange(exoMediaDrm0: com.google.android.exoplayer2.drm.ExoMediaDrm, bytes1: native.Array<number>, list2: java.util.List<com.google.android.exoplayer2.drm.ExoMediaDrm.KeyStatus>, boolean3: boolean): void;
						}
						export class Provider extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.ExoMediaDrm.Provider>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.drm.ExoMediaDrm() when extending the interface class.
							 */
							public constructor(implementation: {
								acquireExoMediaDrm(uUID0: java.util.UUID): com.google.android.exoplayer2.drm.ExoMediaDrm;
							});
							public constructor();
							public acquireExoMediaDrm(uUID0: java.util.UUID): com.google.android.exoplayer2.drm.ExoMediaDrm;
						}
						export class ProvisionRequest extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.ExoMediaDrm.ProvisionRequest>;
							public getDefaultUrl(): string;
							public getData(): native.Array<number>;
							public constructor(data: native.Array<number>, defaultUrl: string);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class FrameworkMediaCrypto extends java.lang.Object implements com.google.android.exoplayer2.drm.ExoMediaCrypto {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.FrameworkMediaCrypto>;
						public static WORKAROUND_DEVICE_NEEDS_KEYS_TO_CONFIGURE_CODEC: boolean;
						public uuid: java.util.UUID;
						public sessionId: native.Array<number>;
						public forceAllowInsecureDecoderComponents: boolean;
						public constructor(uuid: java.util.UUID, sessionId: native.Array<number>, forceAllowInsecureDecoderComponents: boolean);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class FrameworkMediaDrm extends java.lang.Object implements com.google.android.exoplayer2.drm.ExoMediaDrm {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.FrameworkMediaDrm>;
						public static DEFAULT_PROVIDER: com.google.android.exoplayer2.drm.ExoMediaDrm.Provider;
						public static newInstance(uuid: java.util.UUID): com.google.android.exoplayer2.drm.FrameworkMediaDrm;
						public getMetrics(): any;
						public getKeyRequest(scope: native.Array<number>, schemeDatas: java.util.List<com.google.android.exoplayer2.drm.DrmInitData.SchemeData>, keyType: number, optionalParameters: java.util.HashMap<string,string>): com.google.android.exoplayer2.drm.ExoMediaDrm.KeyRequest;
						public provideProvisionResponse(response: native.Array<number>): void;
						public acquire(): void;
						public getProvisionRequest(): com.google.android.exoplayer2.drm.ExoMediaDrm.ProvisionRequest;
						public setOnEventListener(listener: com.google.android.exoplayer2.drm.ExoMediaDrm.OnEventListener): void;
						public restoreKeys(sessionId: native.Array<number>, keySetId: native.Array<number>): void;
						public closeSession(sessionId: native.Array<number>): void;
						public getPropertyByteArray(propertyName: string): native.Array<number>;
						public getExoMediaCryptoType(): java.lang.Class<com.google.android.exoplayer2.drm.FrameworkMediaCrypto>;
						public setOnExpirationUpdateListener(listener: com.google.android.exoplayer2.drm.ExoMediaDrm.OnExpirationUpdateListener): void;
						public release(): void;
						public static isCryptoSchemeSupported(uuid: java.util.UUID): boolean;
						public getPropertyString(propertyName: string): string;
						public setPropertyByteArray(propertyName: string, value: native.Array<number>): void;
						public createMediaCrypto(initData: native.Array<number>): com.google.android.exoplayer2.drm.FrameworkMediaCrypto;
						public queryKeyStatus(sessionId: native.Array<number>): java.util.Map<string,string>;
						public setOnKeyStatusChangeListener(listener: com.google.android.exoplayer2.drm.ExoMediaDrm.OnKeyStatusChangeListener): void;
						public openSession(): native.Array<number>;
						public getExoMediaCryptoType(): java.lang.Class<any>;
						public setPropertyString(propertyName: string, value: string): void;
						public createMediaCrypto(bytes0: native.Array<number>): com.google.android.exoplayer2.drm.ExoMediaCrypto;
						public provideKeyResponse(scope: native.Array<number>, response: native.Array<number>): native.Array<number>;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class HttpMediaDrmCallback extends java.lang.Object implements com.google.android.exoplayer2.drm.MediaDrmCallback {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.HttpMediaDrmCallback>;
						public constructor(defaultLicenseUrl: string, dataSourceFactory: com.google.android.exoplayer2.upstream.HttpDataSource.Factory);
						public executeProvisionRequest(uuid: java.util.UUID, request: com.google.android.exoplayer2.drm.ExoMediaDrm.ProvisionRequest): native.Array<number>;
						public clearAllKeyRequestProperties(): void;
						public executeKeyRequest(uuid: java.util.UUID, request: com.google.android.exoplayer2.drm.ExoMediaDrm.KeyRequest): native.Array<number>;
						public constructor(defaultLicenseUrl: string, forceDefaultLicenseUrl: boolean, dataSourceFactory: com.google.android.exoplayer2.upstream.HttpDataSource.Factory);
						public setKeyRequestProperty(name: string, value: string): void;
						public clearKeyRequestProperty(name: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class KeysExpiredException extends java.lang.Exception {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.KeysExpiredException>;
						public constructor();
						public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						public constructor(message: string, cause: java.lang.Throwable);
						public constructor(cause: java.lang.Throwable);
						public constructor(message: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class LocalMediaDrmCallback extends java.lang.Object implements com.google.android.exoplayer2.drm.MediaDrmCallback {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.LocalMediaDrmCallback>;
						public constructor(keyResponse: native.Array<number>);
						public executeProvisionRequest(uuid: java.util.UUID, request: com.google.android.exoplayer2.drm.ExoMediaDrm.ProvisionRequest): native.Array<number>;
						public executeKeyRequest(uuid: java.util.UUID, request: com.google.android.exoplayer2.drm.ExoMediaDrm.KeyRequest): native.Array<number>;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class MediaDrmCallback extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.MediaDrmCallback>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.drm.MediaDrmCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							executeProvisionRequest(uUID0: java.util.UUID, provisionRequest1: com.google.android.exoplayer2.drm.ExoMediaDrm.ProvisionRequest): native.Array<number>;
							executeKeyRequest(uUID0: java.util.UUID, keyRequest1: com.google.android.exoplayer2.drm.ExoMediaDrm.KeyRequest): native.Array<number>;
						});
						public constructor();
						public executeProvisionRequest(uUID0: java.util.UUID, provisionRequest1: com.google.android.exoplayer2.drm.ExoMediaDrm.ProvisionRequest): native.Array<number>;
						public executeKeyRequest(uUID0: java.util.UUID, keyRequest1: com.google.android.exoplayer2.drm.ExoMediaDrm.KeyRequest): native.Array<number>;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class MediaDrmCallbackException extends java.io.IOException {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.MediaDrmCallbackException>;
						public dataSpec: com.google.android.exoplayer2.upstream.DataSpec;
						public uriAfterRedirects: globalAndroid.net.Uri;
						public responseHeaders: java.util.Map<string,java.util.List<string>>;
						public bytesLoaded: number;
						public constructor();
						public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						public constructor(dataSpec: com.google.android.exoplayer2.upstream.DataSpec, uriAfterRedirects: globalAndroid.net.Uri, responseHeaders: java.util.Map<string,java.util.List<string>>, bytesLoaded: number, cause: java.lang.Throwable);
						public constructor(message: string, cause: java.lang.Throwable);
						public constructor(cause: java.lang.Throwable);
						public constructor(message: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class OfflineLicenseHelper extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.OfflineLicenseHelper>;
						public static newWidevineInstance(defaultLicenseUrl: string, forceDefaultLicenseUrl: boolean, httpDataSourceFactory: com.google.android.exoplayer2.upstream.HttpDataSource.Factory, optionalKeyRequestParameters: java.util.Map<string,string>, eventDispatcher: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher): com.google.android.exoplayer2.drm.OfflineLicenseHelper;
						public downloadLicense(format: com.google.android.exoplayer2.Format): native.Array<number>;
						public static newWidevineInstance(defaultLicenseUrl: string, httpDataSourceFactory: com.google.android.exoplayer2.upstream.HttpDataSource.Factory, eventDispatcher: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher): com.google.android.exoplayer2.drm.OfflineLicenseHelper;
						public releaseLicense(offlineLicenseKeySetId: native.Array<number>): void;
						public constructor(defaultDrmSessionManager: com.google.android.exoplayer2.drm.DefaultDrmSessionManager, eventDispatcher: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher);
						public release(): void;
						public static newWidevineInstance(defaultLicenseUrl: string, forceDefaultLicenseUrl: boolean, httpDataSourceFactory: com.google.android.exoplayer2.upstream.HttpDataSource.Factory, eventDispatcher: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher): com.google.android.exoplayer2.drm.OfflineLicenseHelper;
						/** @deprecated */
						public constructor(uuid: java.util.UUID, mediaDrmProvider: com.google.android.exoplayer2.drm.ExoMediaDrm.Provider, callback: com.google.android.exoplayer2.drm.MediaDrmCallback, optionalKeyRequestParameters: java.util.Map<string,string>, eventDispatcher: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher);
						public renewLicense(offlineLicenseKeySetId: native.Array<number>): native.Array<number>;
						public getLicenseDurationRemainingSec(offlineLicenseKeySetId: native.Array<number>): globalAndroid.util.Pair<java.lang.Long,java.lang.Long>;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class UnsupportedDrmException extends java.lang.Exception {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.UnsupportedDrmException>;
						public static REASON_UNSUPPORTED_SCHEME: number;
						public static REASON_INSTANTIATION_ERROR: number;
						public reason: number;
						public constructor();
						public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						public constructor(message: string, cause: java.lang.Throwable);
						public constructor(cause: java.lang.Throwable);
						public constructor(message: string);
						public constructor(reason: number);
						public constructor(reason: number, cause: java.lang.Exception);
					}
					export module UnsupportedDrmException {
						export class Reason extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.UnsupportedDrmException.Reason>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.drm.UnsupportedDrmException() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class WidevineUtil extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.WidevineUtil>;
						public static PROPERTY_LICENSE_DURATION_REMAINING: string;
						public static PROPERTY_PLAYBACK_DURATION_REMAINING: string;
						public static getLicenseDurationRemainingSec(drmSession: com.google.android.exoplayer2.drm.DrmSession): globalAndroid.util.Pair<java.lang.Long,java.lang.Long>;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module mediacodec {
					export class AsynchronousMediaCodecAdapter extends globalAndroid.media.MediaCodec.Callback implements com.google.android.exoplayer2.mediacodec.MediaCodecAdapter {
						public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.AsynchronousMediaCodecAdapter>;
						public queueSecureInputBuffer(index: number, offset: number, info: com.google.android.exoplayer2.decoder.CryptoInfo, presentationTimeUs: number, flags: number): void;
						public getCodec(): globalAndroid.media.MediaCodec;
						public onOutputFormatChanged(mediaCodec0: globalAndroid.media.MediaCodec, mediaFormat1: globalAndroid.media.MediaFormat): void;
						public queueInputBuffer(index: number, offset: number, size: number, presentationTimeUs: number, flags: number): void;
						public flush(): void;
						public dequeueInputBufferIndex(): number;
						public onInputBufferAvailable(codec: globalAndroid.media.MediaCodec, index: number): void;
						public onOutputFormatChanged(codec: globalAndroid.media.MediaCodec, format: globalAndroid.media.MediaFormat): void;
						public dequeueOutputBufferIndex(bufferInfo: globalAndroid.media.MediaCodec.BufferInfo): number;
						public onInputBufferAvailable(mediaCodec0: globalAndroid.media.MediaCodec, int1: number): void;
						public shutdown(): void;
						public start(): void;
						public onError(mediaCodec0: globalAndroid.media.MediaCodec, codecException1: globalAndroid.media.MediaCodec.CodecException): void;
						public getOutputFormat(): globalAndroid.media.MediaFormat;
						public onOutputBufferAvailable(codec: globalAndroid.media.MediaCodec, index: number, info: globalAndroid.media.MediaCodec.BufferInfo): void;
						public configure(mediaFormat: globalAndroid.media.MediaFormat, surface: globalAndroid.view.Surface, crypto: globalAndroid.media.MediaCrypto, flags: number): void;
						public onOutputBufferAvailable(mediaCodec0: globalAndroid.media.MediaCodec, int1: number, bufferInfo2: globalAndroid.media.MediaCodec.BufferInfo): void;
						public onError(codec: globalAndroid.media.MediaCodec, e: globalAndroid.media.MediaCodec.CodecException): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module mediacodec {
					export class AsynchronousMediaCodecBufferEnqueuer extends java.lang.Object implements com.google.android.exoplayer2.mediacodec.MediaCodecInputBufferEnqueuer {
						public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.AsynchronousMediaCodecBufferEnqueuer>;
						public constructor(codec: globalAndroid.media.MediaCodec, trackType: number);
						public shutdown(): void;
						public queueSecureInputBuffer(index: number, offset: number, info: com.google.android.exoplayer2.decoder.CryptoInfo, presentationTimeUs: number, flags: number): void;
						public start(): void;
						public queueInputBuffer(index: number, offset: number, size: number, presentationTimeUs: number, flags: number): void;
						public flush(): void;
					}
					export module AsynchronousMediaCodecBufferEnqueuer {
						export class MessageParams extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.AsynchronousMediaCodecBufferEnqueuer.MessageParams>;
							public index: number;
							public offset: number;
							public size: number;
							public cryptoInfo: globalAndroid.media.MediaCodec.CryptoInfo;
							public presentationTimeUs: number;
							public flags: number;
							public setQueueParams(index: number, offset: number, size: number, presentationTimeUs: number, flags: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module mediacodec {
					export class BatchBuffer extends com.google.android.exoplayer2.decoder.DecoderInputBuffer {
						public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.BatchBuffer>;
						public static DEFAULT_BATCH_SIZE_ACCESS_UNITS: number;
						public constructor();
						public getMaxAccessUnitCount(): number;
						public getFirstAccessUnitTimeUs(): number;
						public flush(): void;
						public commitNextAccessUnit(): void;
						public getAccessUnitCount(): number;
						public constructor(bufferReplacementMode: number, paddingSize: number);
						public getNextAccessUnitBuffer(): com.google.android.exoplayer2.decoder.DecoderInputBuffer;
						public isEmpty(): boolean;
						public clear(): void;
						public isFull(): boolean;
						public setMaxAccessUnitCount(maxAccessUnitCount: number): void;
						public getLastAccessUnitTimeUs(): number;
						public constructor(bufferReplacementMode: number);
						public batchWasConsumed(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module mediacodec {
					export class C2Mp3TimestampTracker extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.C2Mp3TimestampTracker>;
						public updateAndGetPresentationTimeUs(format: com.google.android.exoplayer2.Format, buffer: com.google.android.exoplayer2.decoder.DecoderInputBuffer): number;
						public reset(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module mediacodec {
					export class MediaCodecAdapter extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaCodecAdapter>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.mediacodec.MediaCodecAdapter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							configure(mediaFormat0: globalAndroid.media.MediaFormat, surface1: globalAndroid.view.Surface, mediaCrypto2: globalAndroid.media.MediaCrypto, int3: number): void;
							start(): void;
							dequeueInputBufferIndex(): number;
							dequeueOutputBufferIndex(bufferInfo0: globalAndroid.media.MediaCodec.BufferInfo): number;
							getOutputFormat(): globalAndroid.media.MediaFormat;
							queueInputBuffer(int0: number, int1: number, int2: number, long3: number, int4: number): void;
							queueSecureInputBuffer(int0: number, int1: number, cryptoInfo2: com.google.android.exoplayer2.decoder.CryptoInfo, long3: number, int4: number): void;
							flush(): void;
							shutdown(): void;
							getCodec(): globalAndroid.media.MediaCodec;
						});
						public constructor();
						public shutdown(): void;
						public dequeueOutputBufferIndex(bufferInfo0: globalAndroid.media.MediaCodec.BufferInfo): number;
						public start(): void;
						public getCodec(): globalAndroid.media.MediaCodec;
						public configure(mediaFormat0: globalAndroid.media.MediaFormat, surface1: globalAndroid.view.Surface, mediaCrypto2: globalAndroid.media.MediaCrypto, int3: number): void;
						public getOutputFormat(): globalAndroid.media.MediaFormat;
						public flush(): void;
						public queueInputBuffer(int0: number, int1: number, int2: number, long3: number, int4: number): void;
						public dequeueInputBufferIndex(): number;
						public queueSecureInputBuffer(int0: number, int1: number, cryptoInfo2: com.google.android.exoplayer2.decoder.CryptoInfo, long3: number, int4: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module mediacodec {
					export class MediaCodecAsyncCallback extends globalAndroid.media.MediaCodec.Callback {
						public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaCodecAsyncCallback>;
						public constructor();
						public onError(mediaCodec: globalAndroid.media.MediaCodec, e: globalAndroid.media.MediaCodec.CodecException): void;
						public onOutputFormatChanged(mediaCodec0: globalAndroid.media.MediaCodec, mediaFormat1: globalAndroid.media.MediaFormat): void;
						public flush(): void;
						public onOutputBufferAvailable(mediaCodec: globalAndroid.media.MediaCodec, index: number, bufferInfo: globalAndroid.media.MediaCodec.BufferInfo): void;
						public dequeueInputBufferIndex(): number;
						public dequeueOutputBufferIndex(bufferInfo: globalAndroid.media.MediaCodec.BufferInfo): number;
						public onInputBufferAvailable(mediaCodec0: globalAndroid.media.MediaCodec, int1: number): void;
						public onOutputFormatChanged(mediaCodec: globalAndroid.media.MediaCodec, mediaFormat: globalAndroid.media.MediaFormat): void;
						public onInputBufferAvailable(mediaCodec: globalAndroid.media.MediaCodec, index: number): void;
						public onError(mediaCodec0: globalAndroid.media.MediaCodec, codecException1: globalAndroid.media.MediaCodec.CodecException): void;
						public getOutputFormat(): globalAndroid.media.MediaFormat;
						public onOutputBufferAvailable(mediaCodec0: globalAndroid.media.MediaCodec, int1: number, bufferInfo2: globalAndroid.media.MediaCodec.BufferInfo): void;
						public maybeThrowMediaCodecException(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module mediacodec {
					export class MediaCodecDecoderException extends com.google.android.exoplayer2.decoder.DecoderException {
						public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaCodecDecoderException>;
						public codecInfo: com.google.android.exoplayer2.mediacodec.MediaCodecInfo;
						public diagnosticInfo: string;
						public constructor();
						public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						public constructor(cause: java.lang.Throwable, codecInfo: com.google.android.exoplayer2.mediacodec.MediaCodecInfo);
						public constructor(cause: java.lang.Throwable);
						public constructor(message: string, cause: java.lang.Throwable);
						public constructor(message: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module mediacodec {
					export class MediaCodecInfo extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaCodecInfo>;
						public static TAG: string;
						public static MAX_SUPPORTED_INSTANCES_UNKNOWN: number;
						public name: string;
						public mimeType: string;
						public codecMimeType: string;
						public capabilities: globalAndroid.media.MediaCodecInfo.CodecCapabilities;
						public adaptive: boolean;
						public tunneling: boolean;
						public secure: boolean;
						public hardwareAccelerated: boolean;
						public softwareOnly: boolean;
						public vendor: boolean;
						public alignVideoSizeV21(width: number, height: number): globalAndroid.graphics.Point;
						public static newInstance(name: string, mimeType: string, codecMimeType: string, capabilities: globalAndroid.media.MediaCodecInfo.CodecCapabilities, hardwareAccelerated: boolean, softwareOnly: boolean, vendor: boolean, forceDisableAdaptive: boolean, forceSecure: boolean): com.google.android.exoplayer2.mediacodec.MediaCodecInfo;
						public isHdr10PlusOutOfBandMetadataSupported(): boolean;
						public toString(): string;
						public isAudioChannelCountSupportedV21(channelCount: number): boolean;
						public isCodecSupported(format: com.google.android.exoplayer2.Format): boolean;
						public isVideoSizeAndRateSupportedV21(width: number, height: number, frameRate: number): boolean;
						public getProfileLevels(): native.Array<globalAndroid.media.MediaCodecInfo.CodecProfileLevel>;
						public getMaxSupportedInstances(): number;
						public isAudioSampleRateSupportedV21(sampleRate: number): boolean;
						public isSeamlessAdaptationSupported(oldFormat: com.google.android.exoplayer2.Format, newFormat: com.google.android.exoplayer2.Format, isNewFormatComplete: boolean): boolean;
						public isSeamlessAdaptationSupported(format: com.google.android.exoplayer2.Format): boolean;
						public isFormatSupported(format: com.google.android.exoplayer2.Format): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module mediacodec {
					export class MediaCodecInputBufferEnqueuer extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaCodecInputBufferEnqueuer>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.mediacodec.MediaCodecInputBufferEnqueuer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							start(): void;
							queueInputBuffer(int0: number, int1: number, int2: number, long3: number, int4: number): void;
							queueSecureInputBuffer(int0: number, int1: number, cryptoInfo2: com.google.android.exoplayer2.decoder.CryptoInfo, long3: number, int4: number): void;
							flush(): void;
							shutdown(): void;
						});
						public constructor();
						public shutdown(): void;
						public start(): void;
						public flush(): void;
						public queueInputBuffer(int0: number, int1: number, int2: number, long3: number, int4: number): void;
						public queueSecureInputBuffer(int0: number, int1: number, cryptoInfo2: com.google.android.exoplayer2.decoder.CryptoInfo, long3: number, int4: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module mediacodec {
					export abstract class MediaCodecRenderer extends com.google.android.exoplayer2.BaseRenderer {
						public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaCodecRenderer>;
						public static OPERATION_MODE_SYNCHRONOUS: number;
						public static OPERATION_MODE_ASYNCHRONOUS_DEDICATED_THREAD: number;
						public static OPERATION_MODE_ASYNCHRONOUS_DEDICATED_THREAD_ASYNCHRONOUS_QUEUEING: number;
						public static CODEC_OPERATING_RATE_UNSET: number;
						public static KEEP_CODEC_RESULT_NO: number;
						public static KEEP_CODEC_RESULT_YES_WITH_FLUSH: number;
						public static KEEP_CODEC_RESULT_YES_WITH_RECONFIGURATION: number;
						public static KEEP_CODEC_RESULT_YES_WITHOUT_RECONFIGURATION: number;
						public decoderCounters: com.google.android.exoplayer2.decoder.DecoderCounters;
						public getOutputStreamStartPositionUs(): number;
						public render(positionUs: number, elapsedRealtimeUs: number): void;
						public setRenderTimeLimitMs(renderTimeLimitMs: number): void;
						public resetCodecStateForRelease(): void;
						public getCodecInfo(): com.google.android.exoplayer2.mediacodec.MediaCodecInfo;
						public resetPosition(positionUs: number): void;
						public supportsFormat(mediaCodecSelector0: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, format1: com.google.android.exoplayer2.Format): number;
						public static create(formatSupport: number, adaptiveSupport: number, tunnelingSupport: number): number;
						public getStream(): com.google.android.exoplayer2.source.SampleStream;
						public static create(formatSupport: number): number;
						public configureCodec(mediaCodecInfo0: com.google.android.exoplayer2.mediacodec.MediaCodecInfo, mediaCodecAdapter1: com.google.android.exoplayer2.mediacodec.MediaCodecAdapter, format2: com.google.android.exoplayer2.Format, mediaCrypto3: globalAndroid.media.MediaCrypto, float4: number): void;
						public onDisabled(): void;
						public getLargestQueuedPresentationTimeUs(): number;
						public onOutputFormatChanged(format: com.google.android.exoplayer2.Format, mediaFormat: globalAndroid.media.MediaFormat): void;
						public isEnded(): boolean;
						public shouldUseBypass(format: com.google.android.exoplayer2.Format): boolean;
						public getCodecOutputMediaFormat(): globalAndroid.media.MediaFormat;
						public releaseCodec(): void;
						public resetCodecStateForFlush(): void;
						public setCurrentStreamFinal(): void;
						public getOutputFormat(): com.google.android.exoplayer2.Format;
						public onEnabled(joining: boolean, mayRenderStartOfStream: boolean): void;
						public getDecoderInfos(mediaCodecSelector0: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, format1: com.google.android.exoplayer2.Format, boolean2: boolean): java.util.List<com.google.android.exoplayer2.mediacodec.MediaCodecInfo>;
						public onQueueInputBuffer(buffer: com.google.android.exoplayer2.decoder.DecoderInputBuffer): void;
						public isReady(): boolean;
						public enable(configuration: com.google.android.exoplayer2.RendererConfiguration, formats: native.Array<com.google.android.exoplayer2.Format>, stream: com.google.android.exoplayer2.source.SampleStream, positionUs: number, joining: boolean, mayRenderStartOfStream: boolean, startPositionUs: number, offsetUs: number): void;
						public disable(): void;
						public static getFormatSupportString(formatSupport: number): string;
						public handleInputBufferSupplementalData(buffer: com.google.android.exoplayer2.decoder.DecoderInputBuffer): void;
						public onCodecInitialized(name: string, initializedTimestampMs: number, initializationDurationMs: number): void;
						public start(): void;
						public getState(): number;
						public onReset(): void;
						public createDecoderException(cause: java.lang.Throwable, codecInfo: com.google.android.exoplayer2.mediacodec.MediaCodecInfo): com.google.android.exoplayer2.mediacodec.MediaCodecDecoderException;
						public onStopped(): void;
						public onStreamChanged(formats: native.Array<com.google.android.exoplayer2.Format>, startPositionUs: number, offsetUs: number): void;
						public getReadingPositionUs(): number;
						public reset(): void;
						public flushOrReleaseCodec(): boolean;
						public supportsFormat(format: com.google.android.exoplayer2.Format): number;
						public getCodecOperatingRate(): number;
						public getCodecNeedsEosPropagation(): boolean;
						public setOperatingRate(operatingRate: number): void;
						public maybeInitCodecOrBypass(): void;
						public onStarted(): void;
						public getOperatingRate(): number;
						public static supportsFormatDrm(format: com.google.android.exoplayer2.Format): boolean;
						public getName(): string;
						public static getFormatSupport(supportFlags: number): number;
						public onProcessedOutputBuffer(presentationTimeUs: number): void;
						public getMediaClock(): com.google.android.exoplayer2.util.MediaClock;
						public isCurrentStreamFinal(): boolean;
						public constructor(trackType: number);
						public getInputFormat(): com.google.android.exoplayer2.Format;
						public static getAdaptiveSupport(supportFlags: number): number;
						public legacyKeepAvailableCodecInfosWithoutCodec(): boolean;
						public getOutputStreamOffsetUs(): number;
						public getCapabilities(): com.google.android.exoplayer2.RendererCapabilities;
						public static getTunnelingSupport(supportFlags: number): number;
						public onPositionReset(positionUs: number, joining: boolean): void;
						public updateOutputFormatForTime(presentationTimeUs: number): void;
						public getCodec(): globalAndroid.media.MediaCodec;
						public constructor(trackType: number, mediaCodecSelector: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, enableDecoderFallback: boolean, assumedMinimumCodecOperatingRate: number);
						public hasReadStreamToEnd(): boolean;
						public supportsMixedMimeTypeAdaptation(): number;
						public onProcessedStreamChange(): void;
						public getTrackType(): number;
						public stop(): void;
						public flushOrReinitializeCodec(): boolean;
						public processOutputBuffer(long0: number, long1: number, mediaCodec2: globalAndroid.media.MediaCodec, byteBuffer3: java.nio.ByteBuffer, int4: number, int5: number, int6: number, long7: number, boolean8: boolean, boolean9: boolean, format10: com.google.android.exoplayer2.Format): boolean;
						public setIndex(index: number): void;
						public setPendingOutputEndOfStream(): void;
						public maybeThrowStreamError(): void;
						public shouldInitCodec(codecInfo: com.google.android.exoplayer2.mediacodec.MediaCodecInfo): boolean;
						public renderToEndOfStream(): void;
						public canKeepCodec(codec: globalAndroid.media.MediaCodec, codecInfo: com.google.android.exoplayer2.mediacodec.MediaCodecInfo, oldFormat: com.google.android.exoplayer2.Format, newFormat: com.google.android.exoplayer2.Format): number;
						public getCodecOperatingRateV23(operatingRate: number, format: com.google.android.exoplayer2.Format, streamFormats: native.Array<com.google.android.exoplayer2.Format>): number;
						public onInputFormatChanged(formatHolder: com.google.android.exoplayer2.FormatHolder): void;
						public setPendingPlaybackException(exception: com.google.android.exoplayer2.ExoPlaybackException): void;
						public experimentalSetMediaCodecOperationMode(mode: number): void;
						public replaceStream(formats: native.Array<com.google.android.exoplayer2.Format>, stream: com.google.android.exoplayer2.source.SampleStream, startPositionUs: number, offsetUs: number): void;
					}
					export module MediaCodecRenderer {
						export class DecoderInitializationException extends java.lang.Exception {
							public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.DecoderInitializationException>;
							public mimeType: string;
							public secureDecoderRequired: boolean;
							public codecInfo: com.google.android.exoplayer2.mediacodec.MediaCodecInfo;
							public diagnosticInfo: string;
							public fallbackDecoderInitializationException: com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.DecoderInitializationException;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(format: com.google.android.exoplayer2.Format, cause: java.lang.Throwable, secureDecoderRequired: boolean, mediaCodecInfo: com.google.android.exoplayer2.mediacodec.MediaCodecInfo);
							public constructor(message: string);
							public constructor(format: com.google.android.exoplayer2.Format, cause: java.lang.Throwable, secureDecoderRequired: boolean, errorCode: number);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
						export class MediaCodecOperationMode extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.MediaCodecOperationMode>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.mediacodec.MediaCodecRenderer() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module mediacodec {
					export class MediaCodecSelector extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaCodecSelector>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.mediacodec.MediaCodecSelector interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getDecoderInfos(string0: string, boolean1: boolean, boolean2: boolean): java.util.List<com.google.android.exoplayer2.mediacodec.MediaCodecInfo>;
						});
						public constructor();
						public static DEFAULT: com.google.android.exoplayer2.mediacodec.MediaCodecSelector;
						public getDecoderInfos(string0: string, boolean1: boolean, boolean2: boolean): java.util.List<com.google.android.exoplayer2.mediacodec.MediaCodecInfo>;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module mediacodec {
					export class MediaCodecUtil extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaCodecUtil>;
						public static warmDecoderInfoCache(mimeType: string, secure: boolean, tunneling: boolean): void;
						public static getDecoderInfos(mimeType: string, secure: boolean, tunneling: boolean): java.util.List<com.google.android.exoplayer2.mediacodec.MediaCodecInfo>;
						public static getDecoderInfo(mimeType: string, secure: boolean, tunneling: boolean): com.google.android.exoplayer2.mediacodec.MediaCodecInfo;
						public static maxH264DecodableFrameSize(): number;
						public static getCodecProfileAndLevel(format: com.google.android.exoplayer2.Format): globalAndroid.util.Pair<java.lang.Integer,java.lang.Integer>;
						public static getDecryptOnlyDecoderInfo(): com.google.android.exoplayer2.mediacodec.MediaCodecInfo;
						public static getDecoderInfosSortedByFormatSupport(decoderInfos: java.util.List<com.google.android.exoplayer2.mediacodec.MediaCodecInfo>, format: com.google.android.exoplayer2.Format): java.util.List<com.google.android.exoplayer2.mediacodec.MediaCodecInfo>;
					}
					export module MediaCodecUtil {
						export class CodecKey extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaCodecUtil.CodecKey>;
							public mimeType: string;
							public secure: boolean;
							public tunneling: boolean;
							public hashCode(): number;
							public equals(obj: any): boolean;
							public constructor(mimeType: string, secure: boolean, tunneling: boolean);
						}
						export class DecoderQueryException extends java.lang.Exception {
							public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaCodecUtil.DecoderQueryException>;
						}
						export class MediaCodecListCompat extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaCodecUtil.MediaCodecListCompat>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.mediacodec.MediaCodecUtil() when extending the interface class.
							 */
							public constructor(implementation: {
								getCodecCount(): number;
								getCodecInfoAt(int0: number): globalAndroid.media.MediaCodecInfo;
								secureDecodersExplicit(): boolean;
								isFeatureSupported(string0: string, string1: string, codecCapabilities2: globalAndroid.media.MediaCodecInfo.CodecCapabilities): boolean;
								isFeatureRequired(string0: string, string1: string, codecCapabilities2: globalAndroid.media.MediaCodecInfo.CodecCapabilities): boolean;
							});
							public constructor();
							public isFeatureRequired(string0: string, string1: string, codecCapabilities2: globalAndroid.media.MediaCodecInfo.CodecCapabilities): boolean;
							public secureDecodersExplicit(): boolean;
							public isFeatureSupported(string0: string, string1: string, codecCapabilities2: globalAndroid.media.MediaCodecInfo.CodecCapabilities): boolean;
							public getCodecInfoAt(int0: number): globalAndroid.media.MediaCodecInfo;
							public getCodecCount(): number;
						}
						export class MediaCodecListCompatV16 extends java.lang.Object implements com.google.android.exoplayer2.mediacodec.MediaCodecUtil.MediaCodecListCompat {
							public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaCodecUtil.MediaCodecListCompatV16>;
							public getCodecInfoAt(index: number): globalAndroid.media.MediaCodecInfo;
							public secureDecodersExplicit(): boolean;
							public isFeatureRequired(feature: string, mimeType: string, capabilities: globalAndroid.media.MediaCodecInfo.CodecCapabilities): boolean;
							public getCodecCount(): number;
							public isFeatureSupported(feature: string, mimeType: string, capabilities: globalAndroid.media.MediaCodecInfo.CodecCapabilities): boolean;
						}
						export class MediaCodecListCompatV21 extends java.lang.Object implements com.google.android.exoplayer2.mediacodec.MediaCodecUtil.MediaCodecListCompat {
							public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaCodecUtil.MediaCodecListCompatV21>;
							public getCodecInfoAt(index: number): globalAndroid.media.MediaCodecInfo;
							public secureDecodersExplicit(): boolean;
							public constructor(includeSecure: boolean, includeTunneling: boolean);
							public isFeatureRequired(feature: string, mimeType: string, capabilities: globalAndroid.media.MediaCodecInfo.CodecCapabilities): boolean;
							public getCodecCount(): number;
							public isFeatureSupported(feature: string, mimeType: string, capabilities: globalAndroid.media.MediaCodecInfo.CodecCapabilities): boolean;
						}
						export class ScoreProvider<T>  extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaCodecUtil.ScoreProvider<any>>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.mediacodec.MediaCodecUtil() when extending the interface class.
							 */
							public constructor(implementation: {
								getScore(object0: T): number;
							});
							public constructor();
							public getScore(object0: T): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module mediacodec {
					export class MediaFormatUtil extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaFormatUtil>;
						public static maybeSetInteger(format: globalAndroid.media.MediaFormat, key: string, value: number): void;
						public static maybeSetFloat(format: globalAndroid.media.MediaFormat, key: string, value: number): void;
						public static setCsdBuffers(format: globalAndroid.media.MediaFormat, csdBuffers: java.util.List<native.Array<number>>): void;
						public static maybeSetByteBuffer(format: globalAndroid.media.MediaFormat, key: string, value: native.Array<number>): void;
						public static maybeSetColorInfo(format: globalAndroid.media.MediaFormat, colorInfo: com.google.android.exoplayer2.video.ColorInfo): void;
						public static setString(format: globalAndroid.media.MediaFormat, key: string, value: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module mediacodec {
					export class SynchronousMediaCodecAdapter extends java.lang.Object implements com.google.android.exoplayer2.mediacodec.MediaCodecAdapter {
						public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.SynchronousMediaCodecAdapter>;
						public dequeueOutputBufferIndex(bufferInfo: globalAndroid.media.MediaCodec.BufferInfo): number;
						public shutdown(): void;
						public queueSecureInputBuffer(index: number, offset: number, info: com.google.android.exoplayer2.decoder.CryptoInfo, presentationTimeUs: number, flags: number): void;
						public start(): void;
						public getCodec(): globalAndroid.media.MediaCodec;
						public constructor(mediaCodec: globalAndroid.media.MediaCodec);
						public queueInputBuffer(index: number, offset: number, size: number, presentationTimeUs: number, flags: number): void;
						public getOutputFormat(): globalAndroid.media.MediaFormat;
						public flush(): void;
						public configure(mediaFormat: globalAndroid.media.MediaFormat, surface: globalAndroid.view.Surface, crypto: globalAndroid.media.MediaCrypto, flags: number): void;
						public dequeueInputBufferIndex(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module mediacodec {
					export class SynchronousMediaCodecBufferEnqueuer extends java.lang.Object implements com.google.android.exoplayer2.mediacodec.MediaCodecInputBufferEnqueuer {
						public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.SynchronousMediaCodecBufferEnqueuer>;
						public shutdown(): void;
						public queueSecureInputBuffer(index: number, offset: number, info: com.google.android.exoplayer2.decoder.CryptoInfo, presentationTimeUs: number, flags: number): void;
						public start(): void;
						public queueInputBuffer(index: number, offset: number, size: number, presentationTimeUs: number, flags: number): void;
						public flush(): void;
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export class MetadataDecoderFactory extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.metadata.MetadataDecoderFactory>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.metadata.MetadataDecoderFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							supportsFormat(format0: com.google.android.exoplayer2.Format): boolean;
							createDecoder(format0: com.google.android.exoplayer2.Format): com.google.android.exoplayer2.metadata.MetadataDecoder;
						});
						public constructor();
						public static DEFAULT: com.google.android.exoplayer2.metadata.MetadataDecoderFactory;
						public createDecoder(format0: com.google.android.exoplayer2.Format): com.google.android.exoplayer2.metadata.MetadataDecoder;
						public supportsFormat(format0: com.google.android.exoplayer2.Format): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export class MetadataOutput extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.metadata.MetadataOutput>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.metadata.MetadataOutput interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onMetadata(metadata0: com.google.android.exoplayer2.metadata.Metadata): void;
						});
						public constructor();
						public onMetadata(metadata0: com.google.android.exoplayer2.metadata.Metadata): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export class MetadataRenderer extends com.google.android.exoplayer2.BaseRenderer implements globalAndroid.os.Handler.Callback {
						public static class: java.lang.Class<com.google.android.exoplayer2.metadata.MetadataRenderer>;
						public render(positionUs: number, elapsedRealtimeUs: number): void;
						public supportsFormat(format: com.google.android.exoplayer2.Format): number;
						public setOperatingRate(operatingRate: number): void;
						public getName(): string;
						public handleMessage(msg: globalAndroid.os.Message): boolean;
						public static getFormatSupport(supportFlags: number): number;
						public getMediaClock(): com.google.android.exoplayer2.util.MediaClock;
						public isCurrentStreamFinal(): boolean;
						public resetPosition(positionUs: number): void;
						public constructor(trackType: number);
						public static create(formatSupport: number, adaptiveSupport: number, tunnelingSupport: number): number;
						public getStream(): com.google.android.exoplayer2.source.SampleStream;
						public static create(formatSupport: number): number;
						public onDisabled(): void;
						public static getAdaptiveSupport(supportFlags: number): number;
						public isEnded(): boolean;
						public getCapabilities(): com.google.android.exoplayer2.RendererCapabilities;
						public static getTunnelingSupport(supportFlags: number): number;
						public constructor(output: com.google.android.exoplayer2.metadata.MetadataOutput, outputLooper: globalAndroid.os.Looper);
						public onPositionReset(positionUs: number, joining: boolean): void;
						public setCurrentStreamFinal(): void;
						public hasReadStreamToEnd(): boolean;
						public isReady(): boolean;
						public enable(configuration: com.google.android.exoplayer2.RendererConfiguration, formats: native.Array<com.google.android.exoplayer2.Format>, stream: com.google.android.exoplayer2.source.SampleStream, positionUs: number, joining: boolean, mayRenderStartOfStream: boolean, startPositionUs: number, offsetUs: number): void;
						public disable(): void;
						public getTrackType(): number;
						public supportsMixedMimeTypeAdaptation(): number;
						public stop(): void;
						public constructor(output: com.google.android.exoplayer2.metadata.MetadataOutput, outputLooper: globalAndroid.os.Looper, decoderFactory: com.google.android.exoplayer2.metadata.MetadataDecoderFactory);
						public static getFormatSupportString(formatSupport: number): string;
						public start(): void;
						public setIndex(index: number): void;
						public getState(): number;
						public maybeThrowStreamError(): void;
						public onStreamChanged(formats: native.Array<com.google.android.exoplayer2.Format>, startPositionUs: number, offsetUs: number): void;
						public getReadingPositionUs(): number;
						public handleMessage(what: number, object: any): void;
						public reset(): void;
						public replaceStream(formats: native.Array<com.google.android.exoplayer2.Format>, stream: com.google.android.exoplayer2.source.SampleStream, startPositionUs: number, offsetUs: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module dvbsi {
						export class AppInfoTable extends java.lang.Object implements com.google.android.exoplayer2.metadata.Metadata.Entry {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.dvbsi.AppInfoTable>;
							public static CONTROL_CODE_AUTOSTART: number;
							public static CONTROL_CODE_PRESENT: number;
							public controlCode: number;
							public url: string;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.dvbsi.AppInfoTable>;
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public constructor(controlCode: number, url: string);
							public describeContents(): number;
							public writeToParcel(parcel: globalAndroid.os.Parcel, i: number): void;
							public getWrappedMetadataBytes(): native.Array<number>;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module dvbsi {
						export class AppInfoTableDecoder extends com.google.android.exoplayer2.metadata.SimpleMetadataDecoder {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.dvbsi.AppInfoTableDecoder>;
							public static APPLICATION_INFORMATION_TABLE_ID: number;
							public constructor();
							public decode(metadataInputBuffer0: com.google.android.exoplayer2.metadata.MetadataInputBuffer, byteBuffer1: java.nio.ByteBuffer): com.google.android.exoplayer2.metadata.Metadata;
							public decode(inputBuffer: com.google.android.exoplayer2.metadata.MetadataInputBuffer, buffer: java.nio.ByteBuffer): com.google.android.exoplayer2.metadata.Metadata;
							public decode(inputBuffer: com.google.android.exoplayer2.metadata.MetadataInputBuffer): com.google.android.exoplayer2.metadata.Metadata;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module icy {
						export class IcyDecoder extends com.google.android.exoplayer2.metadata.SimpleMetadataDecoder {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.icy.IcyDecoder>;
							public constructor();
							public decode(metadataInputBuffer0: com.google.android.exoplayer2.metadata.MetadataInputBuffer, byteBuffer1: java.nio.ByteBuffer): com.google.android.exoplayer2.metadata.Metadata;
							public decode(inputBuffer: com.google.android.exoplayer2.metadata.MetadataInputBuffer, buffer: java.nio.ByteBuffer): com.google.android.exoplayer2.metadata.Metadata;
							public decode(inputBuffer: com.google.android.exoplayer2.metadata.MetadataInputBuffer): com.google.android.exoplayer2.metadata.Metadata;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module icy {
						export class IcyHeaders extends java.lang.Object implements com.google.android.exoplayer2.metadata.Metadata.Entry {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.icy.IcyHeaders>;
							public static REQUEST_HEADER_ENABLE_METADATA_NAME: string;
							public static REQUEST_HEADER_ENABLE_METADATA_VALUE: string;
							public bitrate: number;
							public genre: string;
							public name: string;
							public url: string;
							public isPublic: boolean;
							public metadataInterval: number;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.icy.IcyHeaders>;
							public static parse(responseHeaders: java.util.Map<string,java.util.List<string>>): com.google.android.exoplayer2.metadata.icy.IcyHeaders;
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public hashCode(): number;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public describeContents(): number;
							public getWrappedMetadataBytes(): native.Array<number>;
							public equals(obj: any): boolean;
							public toString(): string;
							public constructor(bitrate: number, genre: string, name: string, url: string, isPublic: boolean, metadataInterval: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module icy {
						export class IcyInfo extends java.lang.Object implements com.google.android.exoplayer2.metadata.Metadata.Entry {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.icy.IcyInfo>;
							public rawMetadata: native.Array<number>;
							public title: string;
							public url: string;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.icy.IcyInfo>;
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public hashCode(): number;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public describeContents(): number;
							public getWrappedMetadataBytes(): native.Array<number>;
							public equals(obj: any): boolean;
							public toString(): string;
							public constructor(rawMetadata: native.Array<number>, title: string, url: string);
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module scte35 {
						export class PrivateCommand extends com.google.android.exoplayer2.metadata.scte35.SpliceCommand {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.scte35.PrivateCommand>;
							public ptsAdjustment: number;
							public identifier: number;
							public commandBytes: native.Array<number>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.scte35.PrivateCommand>;
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public getWrappedMetadataBytes(): native.Array<number>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module scte35 {
						export abstract class SpliceCommand extends java.lang.Object implements com.google.android.exoplayer2.metadata.Metadata.Entry {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.scte35.SpliceCommand>;
							public constructor();
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(parcel0: globalAndroid.os.Parcel, int1: number): void;
							public describeContents(): number;
							public getWrappedMetadataBytes(): native.Array<number>;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module scte35 {
						export class SpliceInfoDecoder extends com.google.android.exoplayer2.metadata.SimpleMetadataDecoder {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.scte35.SpliceInfoDecoder>;
							public constructor();
							public decode(metadataInputBuffer0: com.google.android.exoplayer2.metadata.MetadataInputBuffer, byteBuffer1: java.nio.ByteBuffer): com.google.android.exoplayer2.metadata.Metadata;
							public decode(inputBuffer: com.google.android.exoplayer2.metadata.MetadataInputBuffer, buffer: java.nio.ByteBuffer): com.google.android.exoplayer2.metadata.Metadata;
							public decode(inputBuffer: com.google.android.exoplayer2.metadata.MetadataInputBuffer): com.google.android.exoplayer2.metadata.Metadata;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module scte35 {
						export class SpliceInsertCommand extends com.google.android.exoplayer2.metadata.scte35.SpliceCommand {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand>;
							public spliceEventId: number;
							public spliceEventCancelIndicator: boolean;
							public outOfNetworkIndicator: boolean;
							public programSpliceFlag: boolean;
							public spliceImmediateFlag: boolean;
							public programSplicePts: number;
							public programSplicePlaybackPositionUs: number;
							public componentSpliceList: java.util.List<com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand.ComponentSplice>;
							public autoReturn: boolean;
							public breakDurationUs: number;
							public uniqueProgramId: number;
							public availNum: number;
							public availsExpected: number;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand>;
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public getWrappedMetadataBytes(): native.Array<number>;
						}
						export module SpliceInsertCommand {
							export class ComponentSplice extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand.ComponentSplice>;
								public componentTag: number;
								public componentSplicePts: number;
								public componentSplicePlaybackPositionUs: number;
								public static createFromParcel(in0: globalAndroid.os.Parcel): com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand.ComponentSplice;
								public writeToParcel(dest: globalAndroid.os.Parcel): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module scte35 {
						export class SpliceNullCommand extends com.google.android.exoplayer2.metadata.scte35.SpliceCommand {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.scte35.SpliceNullCommand>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.scte35.SpliceNullCommand>;
							public constructor();
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public getWrappedMetadataBytes(): native.Array<number>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module scte35 {
						export class SpliceScheduleCommand extends com.google.android.exoplayer2.metadata.scte35.SpliceCommand {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand>;
							public events: java.util.List<com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand.Event>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand>;
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public getWrappedMetadataBytes(): native.Array<number>;
						}
						export module SpliceScheduleCommand {
							export class ComponentSplice extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand.ComponentSplice>;
								public componentTag: number;
								public utcSpliceTime: number;
							}
							export class Event extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand.Event>;
								public spliceEventId: number;
								public spliceEventCancelIndicator: boolean;
								public outOfNetworkIndicator: boolean;
								public programSpliceFlag: boolean;
								public utcSpliceTime: number;
								public componentSpliceList: java.util.List<com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand.ComponentSplice>;
								public autoReturn: boolean;
								public breakDurationUs: number;
								public uniqueProgramId: number;
								public availNum: number;
								public availsExpected: number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module scte35 {
						export class TimeSignalCommand extends com.google.android.exoplayer2.metadata.scte35.SpliceCommand {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand>;
							public ptsTime: number;
							public playbackPositionUs: number;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand>;
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public getWrappedMetadataBytes(): native.Array<number>;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class ActionFile extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.ActionFile>;
						public delete(): void;
						public exists(): boolean;
						public load(): native.Array<com.google.android.exoplayer2.offline.DownloadRequest>;
						public constructor(actionFile: java.io.File);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class ActionFileUpgradeUtil extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.ActionFileUpgradeUtil>;
						public static upgradeAndDelete(actionFilePath: java.io.File, downloadIdProvider: com.google.android.exoplayer2.offline.ActionFileUpgradeUtil.DownloadIdProvider, downloadIndex: com.google.android.exoplayer2.offline.DefaultDownloadIndex, deleteOnFailure: boolean, addNewDownloadsAsCompleted: boolean): void;
					}
					export module ActionFileUpgradeUtil {
						export class DownloadIdProvider extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.ActionFileUpgradeUtil.DownloadIdProvider>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.offline.ActionFileUpgradeUtil() when extending the interface class.
							 */
							public constructor(implementation: {
								getId(downloadRequest0: com.google.android.exoplayer2.offline.DownloadRequest): string;
							});
							public constructor();
							public getId(downloadRequest0: com.google.android.exoplayer2.offline.DownloadRequest): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class DefaultDownloadIndex extends java.lang.Object implements com.google.android.exoplayer2.offline.WritableDownloadIndex {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.DefaultDownloadIndex>;
						public constructor(databaseProvider: com.google.android.exoplayer2.database.DatabaseProvider);
						public getDownload(id: string): com.google.android.exoplayer2.offline.Download;
						public setStopReason(stopReason: number): void;
						public setDownloadingStatesToQueued(): void;
						public setStopReason(id: string, stopReason: number): void;
						public setStatesToRemoving(): void;
						public putDownload(download: com.google.android.exoplayer2.offline.Download): void;
						public removeDownload(id: string): void;
						public constructor(databaseProvider: com.google.android.exoplayer2.database.DatabaseProvider, name: string);
						public getDownloads(states: native.Array<number>): com.google.android.exoplayer2.offline.DownloadCursor;
					}
					export module DefaultDownloadIndex {
						export class DownloadCursorImpl extends java.lang.Object implements com.google.android.exoplayer2.offline.DownloadCursor {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.DefaultDownloadIndex.DownloadCursorImpl>;
							public moveToNext(): boolean;
							public close(): void;
							public isAfterLast(): boolean;
							public getPosition(): number;
							public isClosed(): boolean;
							public moveToLast(): boolean;
							public getCount(): number;
							public moveToFirst(): boolean;
							public isFirst(): boolean;
							public getDownload(): com.google.android.exoplayer2.offline.Download;
							public moveToPosition(position: number): boolean;
							public isLast(): boolean;
							public moveToPrevious(): boolean;
							public isBeforeFirst(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class DefaultDownloaderFactory extends java.lang.Object implements com.google.android.exoplayer2.offline.DownloaderFactory {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.DefaultDownloaderFactory>;
						/** @deprecated */
						public constructor(cacheDataSourceFactory: com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory);
						public constructor(cacheDataSourceFactory: com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory, executor: java.util.concurrent.Executor);
						public createDownloader(request: com.google.android.exoplayer2.offline.DownloadRequest): com.google.android.exoplayer2.offline.Downloader;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class Download extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.Download>;
						public static STATE_QUEUED: number;
						public static STATE_STOPPED: number;
						public static STATE_DOWNLOADING: number;
						public static STATE_COMPLETED: number;
						public static STATE_FAILED: number;
						public static STATE_REMOVING: number;
						public static STATE_RESTARTING: number;
						public static FAILURE_REASON_NONE: number;
						public static FAILURE_REASON_UNKNOWN: number;
						public static STOP_REASON_NONE: number;
						public request: com.google.android.exoplayer2.offline.DownloadRequest;
						public state: number;
						public startTimeMs: number;
						public updateTimeMs: number;
						public contentLength: number;
						public stopReason: number;
						public failureReason: number;
						public getBytesDownloaded(): number;
						public getPercentDownloaded(): number;
						public constructor(request: com.google.android.exoplayer2.offline.DownloadRequest, state: number, startTimeMs: number, updateTimeMs: number, contentLength: number, stopReason: number, failureReason: number, progress: com.google.android.exoplayer2.offline.DownloadProgress);
						public constructor(request: com.google.android.exoplayer2.offline.DownloadRequest, state: number, startTimeMs: number, updateTimeMs: number, contentLength: number, stopReason: number, failureReason: number);
						public isTerminalState(): boolean;
					}
					export module Download {
						export class FailureReason extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.Download.FailureReason>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.offline.Download() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
						export class State extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.Download.State>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.offline.Download() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class DownloadCursor extends java.lang.Object implements java.io.Closeable {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadCursor>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.offline.DownloadCursor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getDownload(): com.google.android.exoplayer2.offline.Download;
							getCount(): number;
							getPosition(): number;
							moveToPosition(int0: number): boolean;
							moveToFirst(): boolean;
							moveToLast(): boolean;
							moveToNext(): boolean;
							moveToPrevious(): boolean;
							isFirst(): boolean;
							isLast(): boolean;
							isBeforeFirst(): boolean;
							isAfterLast(): boolean;
							isClosed(): boolean;
							close(): void;
							close(): void;
							close(): void;
						});
						public constructor();
						public isFirst(): boolean;
						public close(): void;
						public getPosition(): number;
						public getCount(): number;
						public isBeforeFirst(): boolean;
						public isLast(): boolean;
						public moveToPosition(int0: number): boolean;
						public moveToFirst(): boolean;
						public isClosed(): boolean;
						public getDownload(): com.google.android.exoplayer2.offline.Download;
						public moveToPrevious(): boolean;
						public moveToLast(): boolean;
						public isAfterLast(): boolean;
						public moveToNext(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class DownloadException extends java.io.IOException {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadException>;
						public constructor();
						public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						public constructor(message: string, cause: java.lang.Throwable);
						public constructor(cause: java.lang.Throwable);
						public constructor(message: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class DownloadHelper extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadHelper>;
						public static DEFAULT_TRACK_SELECTOR_PARAMETERS_WITHOUT_CONTEXT: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters;
						public static DEFAULT_TRACK_SELECTOR_PARAMETERS_WITHOUT_VIEWPORT: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters;
						public static DEFAULT_TRACK_SELECTOR_PARAMETERS: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters;
						public replaceTrackSelections(periodIndex: number, trackSelectorParameters: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters): void;
						public static getDefaultTrackSelectorParameters(context: globalAndroid.content.Context): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters;
						/** @deprecated */
						public static forProgressive(context: globalAndroid.content.Context, uri: globalAndroid.net.Uri, cacheKey: string): com.google.android.exoplayer2.offline.DownloadHelper;
						public static forMediaItem(context: globalAndroid.content.Context, mediaItem: com.google.android.exoplayer2.MediaItem, renderersFactory: com.google.android.exoplayer2.RenderersFactory, dataSourceFactory: com.google.android.exoplayer2.upstream.DataSource.Factory): com.google.android.exoplayer2.offline.DownloadHelper;
						public static createMediaSource(downloadRequest: com.google.android.exoplayer2.offline.DownloadRequest, dataSourceFactory: com.google.android.exoplayer2.upstream.DataSource.Factory, drmSessionManager: com.google.android.exoplayer2.drm.DrmSessionManager): com.google.android.exoplayer2.source.MediaSource;
						/** @deprecated */
						public static forProgressive(context: globalAndroid.content.Context, uri: globalAndroid.net.Uri): com.google.android.exoplayer2.offline.DownloadHelper;
						/** @deprecated */
						public static forDash(context: globalAndroid.content.Context, uri: globalAndroid.net.Uri, dataSourceFactory: com.google.android.exoplayer2.upstream.DataSource.Factory, renderersFactory: com.google.android.exoplayer2.RenderersFactory): com.google.android.exoplayer2.offline.DownloadHelper;
						public addAudioLanguagesToSelection(languages: native.Array<string>): void;
						public getTrackSelections(periodIndex: number, rendererIndex: number): java.util.List<com.google.android.exoplayer2.trackselection.TrackSelection>;
						public getMappedTrackInfo(periodIndex: number): com.google.android.exoplayer2.trackselection.MappingTrackSelector.MappedTrackInfo;
						/** @deprecated */
						public static forSmoothStreaming(uri: globalAndroid.net.Uri, dataSourceFactory: com.google.android.exoplayer2.upstream.DataSource.Factory, renderersFactory: com.google.android.exoplayer2.RenderersFactory, drmSessionManager: com.google.android.exoplayer2.drm.DrmSessionManager, trackSelectorParameters: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters): com.google.android.exoplayer2.offline.DownloadHelper;
						public addTrackSelectionForSingleRenderer(periodIndex: number, rendererIndex: number, trackSelectorParameters: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters, overrides: java.util.List<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.SelectionOverride>): void;
						/** @deprecated */
						public static forHls(context: globalAndroid.content.Context, uri: globalAndroid.net.Uri, dataSourceFactory: com.google.android.exoplayer2.upstream.DataSource.Factory, renderersFactory: com.google.android.exoplayer2.RenderersFactory): com.google.android.exoplayer2.offline.DownloadHelper;
						public getTrackGroups(periodIndex: number): com.google.android.exoplayer2.source.TrackGroupArray;
						public getPeriodCount(): number;
						public static forMediaItem(mediaItem: com.google.android.exoplayer2.MediaItem, trackSelectorParameters: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters, renderersFactory: com.google.android.exoplayer2.RenderersFactory, dataSourceFactory: com.google.android.exoplayer2.upstream.DataSource.Factory): com.google.android.exoplayer2.offline.DownloadHelper;
						public static getRendererCapabilities(renderersFactory: com.google.android.exoplayer2.RenderersFactory): native.Array<com.google.android.exoplayer2.RendererCapabilities>;
						/** @deprecated */
						public static forHls(uri: globalAndroid.net.Uri, dataSourceFactory: com.google.android.exoplayer2.upstream.DataSource.Factory, renderersFactory: com.google.android.exoplayer2.RenderersFactory, drmSessionManager: com.google.android.exoplayer2.drm.DrmSessionManager, trackSelectorParameters: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters): com.google.android.exoplayer2.offline.DownloadHelper;
						public constructor(mediaItem: com.google.android.exoplayer2.MediaItem, mediaSource: com.google.android.exoplayer2.source.MediaSource, trackSelectorParameters: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters, rendererCapabilities: native.Array<com.google.android.exoplayer2.RendererCapabilities>);
						public static createMediaSource(downloadRequest: com.google.android.exoplayer2.offline.DownloadRequest, dataSourceFactory: com.google.android.exoplayer2.upstream.DataSource.Factory): com.google.android.exoplayer2.source.MediaSource;
						public release(): void;
						/** @deprecated */
						public static forSmoothStreaming(uri: globalAndroid.net.Uri, dataSourceFactory: com.google.android.exoplayer2.upstream.DataSource.Factory, renderersFactory: com.google.android.exoplayer2.RenderersFactory): com.google.android.exoplayer2.offline.DownloadHelper;
						/** @deprecated */
						public static forDash(uri: globalAndroid.net.Uri, dataSourceFactory: com.google.android.exoplayer2.upstream.DataSource.Factory, renderersFactory: com.google.android.exoplayer2.RenderersFactory, drmSessionManager: com.google.android.exoplayer2.drm.DrmSessionManager, trackSelectorParameters: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters): com.google.android.exoplayer2.offline.DownloadHelper;
						/** @deprecated */
						public static forSmoothStreaming(context: globalAndroid.content.Context, uri: globalAndroid.net.Uri, dataSourceFactory: com.google.android.exoplayer2.upstream.DataSource.Factory, renderersFactory: com.google.android.exoplayer2.RenderersFactory): com.google.android.exoplayer2.offline.DownloadHelper;
						public clearTrackSelections(periodIndex: number): void;
						public prepare(callback: com.google.android.exoplayer2.offline.DownloadHelper.Callback): void;
						public addTextLanguagesToSelection(selectUndeterminedTextLanguage: boolean, languages: native.Array<string>): void;
						public static forMediaItem(mediaItem: com.google.android.exoplayer2.MediaItem, trackSelectorParameters: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters, renderersFactory: com.google.android.exoplayer2.RenderersFactory, dataSourceFactory: com.google.android.exoplayer2.upstream.DataSource.Factory, drmSessionManager: com.google.android.exoplayer2.drm.DrmSessionManager): com.google.android.exoplayer2.offline.DownloadHelper;
						public getDownloadRequest(data: native.Array<number>): com.google.android.exoplayer2.offline.DownloadRequest;
						public static forMediaItem(context: globalAndroid.content.Context, mediaItem: com.google.android.exoplayer2.MediaItem): com.google.android.exoplayer2.offline.DownloadHelper;
						public getDownloadRequest(id: string, data: native.Array<number>): com.google.android.exoplayer2.offline.DownloadRequest;
						public addTrackSelection(periodIndex: number, trackSelectorParameters: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters): void;
						public getManifest(): any;
					}
					export module DownloadHelper {
						export class Callback extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadHelper.Callback>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.offline.DownloadHelper() when extending the interface class.
							 */
							public constructor(implementation: {
								onPrepared(downloadHelper0: com.google.android.exoplayer2.offline.DownloadHelper): void;
								onPrepareError(downloadHelper0: com.google.android.exoplayer2.offline.DownloadHelper, iOException1: java.io.IOException): void;
							});
							public constructor();
							public onPrepared(downloadHelper0: com.google.android.exoplayer2.offline.DownloadHelper): void;
							public onPrepareError(downloadHelper0: com.google.android.exoplayer2.offline.DownloadHelper, iOException1: java.io.IOException): void;
						}
						export class DownloadTrackSelection extends com.google.android.exoplayer2.trackselection.BaseTrackSelection {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadHelper.DownloadTrackSelection>;
							public onDiscontinuity(): void;
							public getSelectionReason(): number;
							public indexOf(indexInTrackGroup: number): number;
							public onPlaybackSpeed(playbackSpeed: number): void;
							public constructor(group: com.google.android.exoplayer2.source.TrackGroup, tracks: native.Array<number>);
							public shouldCancelChunkLoad(playbackPositionUs: number, loadingChunk: com.google.android.exoplayer2.source.chunk.Chunk, queue: java.util.List<any>): boolean;
							public getSelectedIndexInTrackGroup(): number;
							public constructor(trackGroup: com.google.android.exoplayer2.source.TrackGroup, tracks: native.Array<number>);
							public length(): number;
							public getIndexInTrackGroup(index: number): number;
							public getSelectedFormat(): com.google.android.exoplayer2.Format;
							public evaluateQueueSize(playbackPositionUs: number, queue: java.util.List<any>): number;
							public disable(): void;
							public getTrackGroup(): com.google.android.exoplayer2.source.TrackGroup;
							public getSelectionData(): any;
							public indexOf(format: com.google.android.exoplayer2.Format): number;
							public getFormat(index: number): com.google.android.exoplayer2.Format;
							public getSelectedIndex(): number;
							public enable(): void;
							public blacklist(index: number, exclusionDurationMs: number): boolean;
							public updateSelectedTrack(playbackPositionUs: number, bufferedDurationUs: number, availableDurationUs: number, queue: java.util.List<any>, mediaChunkIterators: native.Array<com.google.android.exoplayer2.source.chunk.MediaChunkIterator>): void;
						}
						export module DownloadTrackSelection {
							export class Factory extends java.lang.Object implements com.google.android.exoplayer2.trackselection.TrackSelection.Factory {
								public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadHelper.DownloadTrackSelection.Factory>;
								public createTrackSelections(definitions: native.Array<com.google.android.exoplayer2.trackselection.TrackSelection.Definition>, bandwidthMeter: com.google.android.exoplayer2.upstream.BandwidthMeter): native.Array<com.google.android.exoplayer2.trackselection.TrackSelection>;
							}
						}
						export class FakeBandwidthMeter extends java.lang.Object implements com.google.android.exoplayer2.upstream.BandwidthMeter {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadHelper.FakeBandwidthMeter>;
							public getBitrateEstimate(): number;
							public getTransferListener(): com.google.android.exoplayer2.upstream.TransferListener;
							public addEventListener(eventHandler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.upstream.BandwidthMeter.EventListener): void;
							public removeEventListener(eventListener: com.google.android.exoplayer2.upstream.BandwidthMeter.EventListener): void;
						}
						export class LiveContentUnsupportedException extends java.io.IOException {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadHelper.LiveContentUnsupportedException>;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(message: string);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
						export class MediaPreparer extends java.lang.Object implements com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, com.google.android.exoplayer2.source.MediaPeriod.Callback, globalAndroid.os.Handler.Callback {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadHelper.MediaPreparer>;
							public timeline: com.google.android.exoplayer2.Timeline;
							public mediaPeriods: native.Array<com.google.android.exoplayer2.source.MediaPeriod>;
							public onSourceInfoRefreshed(source: com.google.android.exoplayer2.source.MediaSource, timeline: com.google.android.exoplayer2.Timeline): void;
							public onContinueLoadingRequested(sequenceableLoader0: any): void;
							public onPrepared(mediaPeriod: com.google.android.exoplayer2.source.MediaPeriod): void;
							public release(): void;
							public handleMessage(msg: globalAndroid.os.Message): boolean;
							public onContinueLoadingRequested(mediaPeriod: com.google.android.exoplayer2.source.MediaPeriod): void;
							public constructor(mediaSource: com.google.android.exoplayer2.source.MediaSource, downloadHelper: com.google.android.exoplayer2.offline.DownloadHelper);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class DownloadIndex extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadIndex>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.offline.DownloadIndex interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getDownload(string0: string): com.google.android.exoplayer2.offline.Download;
							getDownloads(ints0: native.Array<number>): com.google.android.exoplayer2.offline.DownloadCursor;
						});
						public constructor();
						public getDownload(string0: string): com.google.android.exoplayer2.offline.Download;
						public getDownloads(ints0: native.Array<number>): com.google.android.exoplayer2.offline.DownloadCursor;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class DownloadManager extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadManager>;
						public static DEFAULT_MAX_PARALLEL_DOWNLOADS: number;
						public static DEFAULT_MIN_RETRY_COUNT: number;
						public static DEFAULT_REQUIREMENTS: com.google.android.exoplayer2.scheduler.Requirements;
						public resumeDownloads(): void;
						public getCurrentDownloads(): java.util.List<com.google.android.exoplayer2.offline.Download>;
						public isInitialized(): boolean;
						public getDownloadsPaused(): boolean;
						public getNotMetRequirements(): number;
						/** @deprecated */
						public constructor(context: globalAndroid.content.Context, databaseProvider: com.google.android.exoplayer2.database.DatabaseProvider, cache: com.google.android.exoplayer2.upstream.cache.Cache, upstreamFactory: com.google.android.exoplayer2.upstream.DataSource.Factory);
						public addDownload(request: com.google.android.exoplayer2.offline.DownloadRequest, stopReason: number): void;
						public constructor(context: globalAndroid.content.Context, databaseProvider: com.google.android.exoplayer2.database.DatabaseProvider, cache: com.google.android.exoplayer2.upstream.cache.Cache, upstreamFactory: com.google.android.exoplayer2.upstream.DataSource.Factory, executor: java.util.concurrent.Executor);
						public setMinRetryCount(minRetryCount: number): void;
						public getMinRetryCount(): number;
						public setStopReason(id: string, stopReason: number): void;
						public addDownload(request: com.google.android.exoplayer2.offline.DownloadRequest): void;
						public isWaitingForRequirements(): boolean;
						public getRequirements(): com.google.android.exoplayer2.scheduler.Requirements;
						public removeListener(listener: com.google.android.exoplayer2.offline.DownloadManager.Listener): void;
						public release(): void;
						public removeDownload(id: string): void;
						public isIdle(): boolean;
						public setRequirements(requirements: com.google.android.exoplayer2.scheduler.Requirements): void;
						public setMaxParallelDownloads(maxParallelDownloads: number): void;
						public pauseDownloads(): void;
						public getDownloadIndex(): com.google.android.exoplayer2.offline.DownloadIndex;
						public removeAllDownloads(): void;
						public getMaxParallelDownloads(): number;
						public constructor(context: globalAndroid.content.Context, downloadIndex: com.google.android.exoplayer2.offline.WritableDownloadIndex, downloaderFactory: com.google.android.exoplayer2.offline.DownloaderFactory);
						public getApplicationLooper(): globalAndroid.os.Looper;
						public addListener(listener: com.google.android.exoplayer2.offline.DownloadManager.Listener): void;
					}
					export module DownloadManager {
						export class DownloadUpdate extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadManager.DownloadUpdate>;
							public download: com.google.android.exoplayer2.offline.Download;
							public isRemove: boolean;
							public downloads: java.util.List<com.google.android.exoplayer2.offline.Download>;
							public finalException: java.lang.Exception;
							public constructor(download: com.google.android.exoplayer2.offline.Download, isRemove: boolean, downloads: java.util.List<com.google.android.exoplayer2.offline.Download>, finalException: java.lang.Exception);
						}
						export class InternalHandler extends globalAndroid.os.Handler {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadManager.InternalHandler>;
							public released: boolean;
							public constructor();
							public handleMessage(message: globalAndroid.os.Message): void;
							public constructor(thread: globalAndroid.os.HandlerThread, downloadIndex: com.google.android.exoplayer2.offline.WritableDownloadIndex, downloaderFactory: com.google.android.exoplayer2.offline.DownloaderFactory, mainHandler: globalAndroid.os.Handler, maxParallelDownloads: number, minRetryCount: number, downloadsPaused: boolean);
							public constructor(callback: globalAndroid.os.Handler.Callback);
							public handleMessage(msg: globalAndroid.os.Message): void;
							public constructor(looper: globalAndroid.os.Looper);
							public constructor(looper: globalAndroid.os.Looper, callback: globalAndroid.os.Handler.Callback);
						}
						export class Listener extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadManager.Listener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.offline.DownloadManager() when extending the interface class.
							 */
							public constructor(implementation: {
								onInitialized(downloadManager: com.google.android.exoplayer2.offline.DownloadManager): void;
								onDownloadsPausedChanged(downloadManager: com.google.android.exoplayer2.offline.DownloadManager, downloadsPaused: boolean): void;
								onDownloadChanged(downloadManager: com.google.android.exoplayer2.offline.DownloadManager, download: com.google.android.exoplayer2.offline.Download, finalException: java.lang.Exception): void;
								onDownloadRemoved(downloadManager: com.google.android.exoplayer2.offline.DownloadManager, download: com.google.android.exoplayer2.offline.Download): void;
								onIdle(downloadManager: com.google.android.exoplayer2.offline.DownloadManager): void;
								onRequirementsStateChanged(downloadManager: com.google.android.exoplayer2.offline.DownloadManager, requirements: com.google.android.exoplayer2.scheduler.Requirements, notMetRequirements: number): void;
								onWaitingForRequirementsChanged(downloadManager: com.google.android.exoplayer2.offline.DownloadManager, waitingForRequirements: boolean): void;
							});
							public constructor();
							public onDownloadsPausedChanged(downloadManager: com.google.android.exoplayer2.offline.DownloadManager, downloadsPaused: boolean): void;
							public onDownloadRemoved(downloadManager: com.google.android.exoplayer2.offline.DownloadManager, download: com.google.android.exoplayer2.offline.Download): void;
							public onInitialized(downloadManager: com.google.android.exoplayer2.offline.DownloadManager): void;
							public onWaitingForRequirementsChanged(downloadManager: com.google.android.exoplayer2.offline.DownloadManager, waitingForRequirements: boolean): void;
							public onDownloadChanged(downloadManager: com.google.android.exoplayer2.offline.DownloadManager, download: com.google.android.exoplayer2.offline.Download, finalException: java.lang.Exception): void;
							public onRequirementsStateChanged(downloadManager: com.google.android.exoplayer2.offline.DownloadManager, requirements: com.google.android.exoplayer2.scheduler.Requirements, notMetRequirements: number): void;
							public onIdle(downloadManager: com.google.android.exoplayer2.offline.DownloadManager): void;
						}
						export class Task extends java.lang.Thread implements com.google.android.exoplayer2.offline.Downloader.ProgressListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadManager.Task>;
							public onProgress(contentLength: number, bytesDownloaded: number, percentDownloaded: number): void;
							public cancel(released: boolean): void;
							public run(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class DownloadProgress extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadProgress>;
						public bytesDownloaded: number;
						public percentDownloaded: number;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class DownloadRequest extends java.lang.Object implements globalAndroid.os.Parcelable {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadRequest>;
						public id: string;
						public uri: globalAndroid.net.Uri;
						public mimeType: string;
						public streamKeys: java.util.List<com.google.android.exoplayer2.offline.StreamKey>;
						public keySetId: native.Array<number>;
						public customCacheKey: string;
						public data: native.Array<number>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.offline.DownloadRequest>;
						public toMediaItem(): com.google.android.exoplayer2.MediaItem;
						public equals(obj: any): boolean;
						public describeContents(): number;
						public copyWithId(id: string): com.google.android.exoplayer2.offline.DownloadRequest;
						public hashCode(): number;
						public copyWithMergedRequest(newRequest: com.google.android.exoplayer2.offline.DownloadRequest): com.google.android.exoplayer2.offline.DownloadRequest;
						public equals(o: any): boolean;
						public copyWithKeySetId(keySetId: native.Array<number>): com.google.android.exoplayer2.offline.DownloadRequest;
						public toString(): string;
						public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
					}
					export module DownloadRequest {
						export class Builder extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadRequest.Builder>;
							public build(): com.google.android.exoplayer2.offline.DownloadRequest;
							public setData(data: native.Array<number>): com.google.android.exoplayer2.offline.DownloadRequest.Builder;
							public setKeySetId(keySetId: native.Array<number>): com.google.android.exoplayer2.offline.DownloadRequest.Builder;
							public setMimeType(mimeType: string): com.google.android.exoplayer2.offline.DownloadRequest.Builder;
							public setCustomCacheKey(customCacheKey: string): com.google.android.exoplayer2.offline.DownloadRequest.Builder;
							public setStreamKeys(streamKeys: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): com.google.android.exoplayer2.offline.DownloadRequest.Builder;
							public constructor(id: string, uri: globalAndroid.net.Uri);
						}
						export class UnsupportedRequestException extends java.io.IOException {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadRequest.UnsupportedRequestException>;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(message: string);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export abstract class DownloadService extends globalAndroid.app.Service {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadService>;
						public static ACTION_INIT: string;
						public static ACTION_ADD_DOWNLOAD: string;
						public static ACTION_REMOVE_DOWNLOAD: string;
						public static ACTION_REMOVE_ALL_DOWNLOADS: string;
						public static ACTION_RESUME_DOWNLOADS: string;
						public static ACTION_PAUSE_DOWNLOADS: string;
						public static ACTION_SET_STOP_REASON: string;
						public static ACTION_SET_REQUIREMENTS: string;
						public static KEY_DOWNLOAD_REQUEST: string;
						public static KEY_CONTENT_ID: string;
						public static KEY_STOP_REASON: string;
						public static KEY_REQUIREMENTS: string;
						public static KEY_FOREGROUND: string;
						public static FOREGROUND_NOTIFICATION_ID_NONE: number;
						public static DEFAULT_FOREGROUND_NOTIFICATION_UPDATE_INTERVAL: number;
						public static buildRemoveAllDownloadsIntent(context: globalAndroid.content.Context, clazz: java.lang.Class<any>, foreground: boolean): globalAndroid.content.Intent;
						/** @deprecated */
						public onDownloadRemoved(download: com.google.android.exoplayer2.offline.Download): void;
						public static buildAddDownloadIntent(context: globalAndroid.content.Context, clazz: java.lang.Class<any>, downloadRequest: com.google.android.exoplayer2.offline.DownloadRequest, stopReason: number, foreground: boolean): globalAndroid.content.Intent;
						public getDownloadManager(): com.google.android.exoplayer2.offline.DownloadManager;
						public getScheduler(): com.google.android.exoplayer2.scheduler.Scheduler;
						public startForeground(id: number, notification: globalAndroid.app.Notification, foregroundServiceType: number): void;
						public constructor(foregroundNotificationId: number, foregroundNotificationUpdateInterval: number, channelId: string, channelNameResourceId: number, channelDescriptionResourceId: number);
						public static buildPauseDownloadsIntent(context: globalAndroid.content.Context, clazz: java.lang.Class<any>, foreground: boolean): globalAndroid.content.Intent;
						public static sendRemoveAllDownloads(context: globalAndroid.content.Context, clazz: java.lang.Class<any>, foreground: boolean): void;
						public onBind(intent: globalAndroid.content.Intent): globalAndroid.os.IBinder;
						public static buildAddDownloadIntent(context: globalAndroid.content.Context, clazz: java.lang.Class<any>, downloadRequest: com.google.android.exoplayer2.offline.DownloadRequest, foreground: boolean): globalAndroid.content.Intent;
						public onDestroy(): void;
						public static buildSetStopReasonIntent(context: globalAndroid.content.Context, clazz: java.lang.Class<any>, id: string, stopReason: number, foreground: boolean): globalAndroid.content.Intent;
						public startForeground(id: number, notification: globalAndroid.app.Notification): void;
						/** @deprecated */
						public onDownloadChanged(download: com.google.android.exoplayer2.offline.Download): void;
						/** @deprecated */
						public constructor(foregroundNotificationId: number, foregroundNotificationUpdateInterval: number, channelId: string, channelNameResourceId: number);
						public static buildSetRequirementsIntent(context: globalAndroid.content.Context, clazz: java.lang.Class<any>, requirements: com.google.android.exoplayer2.scheduler.Requirements, foreground: boolean): globalAndroid.content.Intent;
						public static start(context: globalAndroid.content.Context, clazz: java.lang.Class<any>): void;
						public getForegroundNotification(list0: java.util.List<com.google.android.exoplayer2.offline.Download>): globalAndroid.app.Notification;
						public constructor(base: globalAndroid.content.Context);
						public onStartCommand(intent: globalAndroid.content.Intent, flags: number, startId: number): number;
						public static buildResumeDownloadsIntent(context: globalAndroid.content.Context, clazz: java.lang.Class<any>, foreground: boolean): globalAndroid.content.Intent;
						public static sendSetRequirements(context: globalAndroid.content.Context, clazz: java.lang.Class<any>, requirements: com.google.android.exoplayer2.scheduler.Requirements, foreground: boolean): void;
						public onTaskRemoved(rootIntent: globalAndroid.content.Intent): void;
						public constructor();
						public static buildRemoveDownloadIntent(context: globalAndroid.content.Context, clazz: java.lang.Class<any>, id: string, foreground: boolean): globalAndroid.content.Intent;
						public static startForeground(context: globalAndroid.content.Context, clazz: java.lang.Class<any>): void;
						public static sendAddDownload(context: globalAndroid.content.Context, clazz: java.lang.Class<any>, downloadRequest: com.google.android.exoplayer2.offline.DownloadRequest, stopReason: number, foreground: boolean): void;
						public static sendResumeDownloads(context: globalAndroid.content.Context, clazz: java.lang.Class<any>, foreground: boolean): void;
						public invalidateForegroundNotification(): void;
						public static sendPauseDownloads(context: globalAndroid.content.Context, clazz: java.lang.Class<any>, foreground: boolean): void;
						public constructor(foregroundNotificationId: number);
						public onCreate(): void;
						public onTrimMemory(level: number): void;
						public static sendSetStopReason(context: globalAndroid.content.Context, clazz: java.lang.Class<any>, id: string, stopReason: number, foreground: boolean): void;
						public onBind(intent0: globalAndroid.content.Intent): globalAndroid.os.IBinder;
						public static sendAddDownload(context: globalAndroid.content.Context, clazz: java.lang.Class<any>, downloadRequest: com.google.android.exoplayer2.offline.DownloadRequest, foreground: boolean): void;
						public constructor(foregroundNotificationId: number, foregroundNotificationUpdateInterval: number);
						public static sendRemoveDownload(context: globalAndroid.content.Context, clazz: java.lang.Class<any>, id: string, foreground: boolean): void;
					}
					export module DownloadService {
						export class DownloadManagerHelper extends java.lang.Object implements com.google.android.exoplayer2.offline.DownloadManager.Listener {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadService.DownloadManagerHelper>;
							public onDownloadsPausedChanged(downloadManager: com.google.android.exoplayer2.offline.DownloadManager, downloadsPaused: boolean): void;
							public onDownloadRemoved(downloadManager: com.google.android.exoplayer2.offline.DownloadManager, download: com.google.android.exoplayer2.offline.Download): void;
							public onInitialized(downloadManager: com.google.android.exoplayer2.offline.DownloadManager): void;
							public attachService(downloadService: com.google.android.exoplayer2.offline.DownloadService): void;
							public onWaitingForRequirementsChanged(downloadManager: com.google.android.exoplayer2.offline.DownloadManager, waitingForRequirements: boolean): void;
							public onDownloadChanged(downloadManager: com.google.android.exoplayer2.offline.DownloadManager, download: com.google.android.exoplayer2.offline.Download, finalException: java.lang.Exception): void;
							public onRequirementsStateChanged(downloadManager: com.google.android.exoplayer2.offline.DownloadManager, requirements: com.google.android.exoplayer2.scheduler.Requirements, notMetRequirements: number): void;
							public onIdle(downloadManager: com.google.android.exoplayer2.offline.DownloadManager): void;
							public detachService(downloadService: com.google.android.exoplayer2.offline.DownloadService): void;
						}
						export class ForegroundNotificationUpdater extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadService.ForegroundNotificationUpdater>;
							public startPeriodicUpdates(): void;
							public stopPeriodicUpdates(): void;
							public invalidate(): void;
							public showNotificationIfNotAlready(): void;
							public constructor(param0: com.google.android.exoplayer2.offline.DownloadService, notificationId: number, updateInterval: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class Downloader extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.Downloader>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.offline.Downloader interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							download(progressListener0: com.google.android.exoplayer2.offline.Downloader.ProgressListener): void;
							cancel(): void;
							remove(): void;
						});
						public constructor();
						public cancel(): void;
						public download(progressListener0: com.google.android.exoplayer2.offline.Downloader.ProgressListener): void;
						public remove(): void;
					}
					export module Downloader {
						export class ProgressListener extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.Downloader.ProgressListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.offline.Downloader() when extending the interface class.
							 */
							public constructor(implementation: {
								onProgress(long0: number, long1: number, float2: number): void;
							});
							public constructor();
							public onProgress(long0: number, long1: number, float2: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class DownloaderFactory extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloaderFactory>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.offline.DownloaderFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							createDownloader(downloadRequest0: com.google.android.exoplayer2.offline.DownloadRequest): com.google.android.exoplayer2.offline.Downloader;
						});
						public constructor();
						public createDownloader(downloadRequest0: com.google.android.exoplayer2.offline.DownloadRequest): com.google.android.exoplayer2.offline.Downloader;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class FilterableManifest<T>  extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.FilterableManifest<any>>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.offline.FilterableManifest<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							copy(list0: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): T;
						});
						public constructor();
						public copy(list0: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): T;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class FilteringManifestParser<T>  extends com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<any> {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.FilteringManifestParser<any>>;
						public parse(uri: globalAndroid.net.Uri, inputStream: java.io.InputStream): any;
						public constructor(parser: com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<any>, streamKeys: java.util.List<com.google.android.exoplayer2.offline.StreamKey>);
						public parse(uri0: globalAndroid.net.Uri, inputStream1: java.io.InputStream): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class ProgressiveDownloader extends java.lang.Object implements com.google.android.exoplayer2.offline.Downloader {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.ProgressiveDownloader>;
						public download(progressListener: com.google.android.exoplayer2.offline.Downloader.ProgressListener): void;
						public cancel(): void;
						public constructor(mediaItem: com.google.android.exoplayer2.MediaItem, cacheDataSourceFactory: com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory);
						/** @deprecated */
						public constructor(uri: globalAndroid.net.Uri, customCacheKey: string, cacheDataSourceFactory: com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory);
						/** @deprecated */
						public constructor(uri: globalAndroid.net.Uri, customCacheKey: string, cacheDataSourceFactory: com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory, executor: java.util.concurrent.Executor);
						public constructor(mediaItem: com.google.android.exoplayer2.MediaItem, cacheDataSourceFactory: com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory, executor: java.util.concurrent.Executor);
						public remove(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export abstract class SegmentDownloader<M>  extends com.google.android.exoplayer2.offline.Downloader {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.SegmentDownloader<any>>;
						public getSegments(dataSource0: com.google.android.exoplayer2.upstream.DataSource, filterableManifest1: any, boolean2: boolean): java.util.List<com.google.android.exoplayer2.offline.SegmentDownloader.Segment>;
						public download(progressListener: com.google.android.exoplayer2.offline.Downloader.ProgressListener): void;
						public getManifest(dataSource: com.google.android.exoplayer2.upstream.DataSource, dataSpec: com.google.android.exoplayer2.upstream.DataSpec, removing: boolean): any;
						public cancel(): void;
						public constructor(mediaItem: com.google.android.exoplayer2.MediaItem, manifestParser: com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<any>, cacheDataSourceFactory: com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory, executor: java.util.concurrent.Executor);
						public static getCompressibleDataSpec(uri: globalAndroid.net.Uri): com.google.android.exoplayer2.upstream.DataSpec;
						public remove(): void;
						public execute(runnable: com.google.android.exoplayer2.util.RunnableFutureTask<any,any>, removing: boolean): any;
					}
					export module SegmentDownloader {
						export class ProgressNotifier extends java.lang.Object implements com.google.android.exoplayer2.upstream.cache.CacheWriter.ProgressListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.SegmentDownloader.ProgressNotifier>;
							public onProgress(requestLength: number, bytesCached: number, newBytesCached: number): void;
							public constructor(progressListener: com.google.android.exoplayer2.offline.Downloader.ProgressListener, contentLength: number, totalSegments: number, bytesDownloaded: number, segmentsDownloaded: number);
							public onSegmentDownloaded(): void;
						}
						export class Segment extends java.lang.Comparable<com.google.android.exoplayer2.offline.SegmentDownloader.Segment> {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.SegmentDownloader.Segment>;
							public startTimeUs: number;
							public dataSpec: com.google.android.exoplayer2.upstream.DataSpec;
							public compareTo(other: com.google.android.exoplayer2.offline.SegmentDownloader.Segment): number;
							public constructor(startTimeUs: number, dataSpec: com.google.android.exoplayer2.upstream.DataSpec);
						}
						export class SegmentDownloadRunnable extends com.google.android.exoplayer2.util.RunnableFutureTask<java.lang.Void,java.io.IOException> {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.SegmentDownloader.SegmentDownloadRunnable>;
							public segment: com.google.android.exoplayer2.offline.SegmentDownloader.Segment;
							public dataSource: com.google.android.exoplayer2.upstream.cache.CacheDataSource;
							public temporaryBuffer: native.Array<number>;
							public constructor();
							public doWork(): java.lang.Void;
							public cancelWork(): void;
							public doWork(): any;
							public constructor(segment: com.google.android.exoplayer2.offline.SegmentDownloader.Segment, dataSource: com.google.android.exoplayer2.upstream.cache.CacheDataSource, progressNotifier: com.google.android.exoplayer2.offline.SegmentDownloader.ProgressNotifier, temporaryBuffer: native.Array<number>);
							public run(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class WritableDownloadIndex extends java.lang.Object implements com.google.android.exoplayer2.offline.DownloadIndex {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.WritableDownloadIndex>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.offline.WritableDownloadIndex interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							putDownload(download0: com.google.android.exoplayer2.offline.Download): void;
							removeDownload(string0: string): void;
							setDownloadingStatesToQueued(): void;
							setStatesToRemoving(): void;
							setStopReason(int0: number): void;
							setStopReason(string0: string, int1: number): void;
							getDownload(string0: string): com.google.android.exoplayer2.offline.Download;
							getDownloads(ints0: native.Array<number>): com.google.android.exoplayer2.offline.DownloadCursor;
						});
						public constructor();
						public getDownload(string0: string): com.google.android.exoplayer2.offline.Download;
						public setDownloadingStatesToQueued(): void;
						public setStopReason(int0: number): void;
						public putDownload(download0: com.google.android.exoplayer2.offline.Download): void;
						public removeDownload(string0: string): void;
						public setStatesToRemoving(): void;
						public getDownloads(ints0: native.Array<number>): com.google.android.exoplayer2.offline.DownloadCursor;
						public setStopReason(string0: string, int1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module scheduler {
					export class PlatformScheduler extends java.lang.Object implements com.google.android.exoplayer2.scheduler.Scheduler {
						public static class: java.lang.Class<com.google.android.exoplayer2.scheduler.PlatformScheduler>;
						public constructor(context: globalAndroid.content.Context, jobId: number);
						public getSupportedRequirements(requirements: com.google.android.exoplayer2.scheduler.Requirements): com.google.android.exoplayer2.scheduler.Requirements;
						public schedule(requirements: com.google.android.exoplayer2.scheduler.Requirements, servicePackage: string, serviceAction: string): boolean;
						public cancel(): boolean;
					}
					export module PlatformScheduler {
						export class PlatformSchedulerService extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.scheduler.PlatformScheduler.PlatformSchedulerService>;
							public constructor();
							public onStartJob(jobParameters0: any): boolean;
							public onStopJob(jobParameters0: any): boolean;
							public onStartJob(params: any): boolean;
							public constructor(base: globalAndroid.content.Context);
							public onTrimMemory(level: number): void;
							public onStopJob(params: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module scheduler {
					export class Requirements extends java.lang.Object implements globalAndroid.os.Parcelable {
						public static class: java.lang.Class<com.google.android.exoplayer2.scheduler.Requirements>;
						public static NETWORK: number;
						public static NETWORK_UNMETERED: number;
						public static DEVICE_IDLE: number;
						public static DEVICE_CHARGING: number;
						public static DEVICE_STORAGE_NOT_LOW: number;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.scheduler.Requirements>;
						public isStorageNotLowRequired(): boolean;
						public equals(obj: any): boolean;
						public describeContents(): number;
						public isIdleRequired(): boolean;
						public isChargingRequired(): boolean;
						public hashCode(): number;
						public checkRequirements(context: globalAndroid.content.Context): boolean;
						public isNetworkRequired(): boolean;
						public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
						public getNotMetRequirements(context: globalAndroid.content.Context): number;
						public filterRequirements(requirementsFilter: number): com.google.android.exoplayer2.scheduler.Requirements;
						public getRequirements(): number;
						public constructor(requirements: number);
						public isUnmeteredNetworkRequired(): boolean;
						public equals(o: any): boolean;
					}
					export module Requirements {
						export class RequirementFlags extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<com.google.android.exoplayer2.scheduler.Requirements.RequirementFlags>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.scheduler.Requirements() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module scheduler {
					export class RequirementsWatcher extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.scheduler.RequirementsWatcher>;
						public start(): number;
						public constructor(context: globalAndroid.content.Context, listener: com.google.android.exoplayer2.scheduler.RequirementsWatcher.Listener, requirements: com.google.android.exoplayer2.scheduler.Requirements);
						public getRequirements(): com.google.android.exoplayer2.scheduler.Requirements;
						public stop(): void;
					}
					export module RequirementsWatcher {
						export class DeviceStatusChangeReceiver extends globalAndroid.content.BroadcastReceiver {
							public static class: java.lang.Class<com.google.android.exoplayer2.scheduler.RequirementsWatcher.DeviceStatusChangeReceiver>;
							public onReceive(context: globalAndroid.content.Context, intent: globalAndroid.content.Intent): void;
							public onReceive(context0: globalAndroid.content.Context, intent1: globalAndroid.content.Intent): void;
						}
						export class Listener extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.scheduler.RequirementsWatcher.Listener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.scheduler.RequirementsWatcher() when extending the interface class.
							 */
							public constructor(implementation: {
								onRequirementsStateChanged(requirementsWatcher0: com.google.android.exoplayer2.scheduler.RequirementsWatcher, int1: number): void;
							});
							public constructor();
							public onRequirementsStateChanged(requirementsWatcher0: com.google.android.exoplayer2.scheduler.RequirementsWatcher, int1: number): void;
						}
						export class NetworkCallback extends globalAndroid.net.ConnectivityManager.NetworkCallback {
							public static class: java.lang.Class<com.google.android.exoplayer2.scheduler.RequirementsWatcher.NetworkCallback>;
							public onAvailable(network: globalAndroid.net.Network): void;
							public onLost(network: globalAndroid.net.Network): void;
							public onBlockedStatusChanged(network: globalAndroid.net.Network, blocked: boolean): void;
							public onCapabilitiesChanged(network: globalAndroid.net.Network, networkCapabilities: globalAndroid.net.NetworkCapabilities): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module scheduler {
					export class Scheduler extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.scheduler.Scheduler>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.scheduler.Scheduler interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							schedule(requirements0: com.google.android.exoplayer2.scheduler.Requirements, string1: string, string2: string): boolean;
							cancel(): boolean;
							getSupportedRequirements(requirements0: com.google.android.exoplayer2.scheduler.Requirements): com.google.android.exoplayer2.scheduler.Requirements;
						});
						public constructor();
						public getSupportedRequirements(requirements0: com.google.android.exoplayer2.scheduler.Requirements): com.google.android.exoplayer2.scheduler.Requirements;
						public cancel(): boolean;
						public schedule(requirements0: com.google.android.exoplayer2.scheduler.Requirements, string1: string, string2: string): boolean;
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class AdaptiveMediaSourceEventListener extends java.lang.Object implements com.google.android.exoplayer2.source.MediaSourceEventListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onLoadStarted(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							onLoadCompleted(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							onLoadCanceled(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							onLoadError(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData, error: java.io.IOException, wasCanceled: boolean): void;
							onUpstreamDiscarded(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							onDownstreamFormatChanged(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						});
						public constructor();
						public onLoadStarted(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onLoadError(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData, error: java.io.IOException, wasCanceled: boolean): void;
						public onLoadCompleted(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onDownstreamFormatChanged(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onUpstreamDiscarded(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onLoadCanceled(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export abstract class BaseMediaSource extends java.lang.Object implements com.google.android.exoplayer2.source.MediaSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.BaseMediaSource>;
						public disableInternal(): void;
						public removeEventListener(eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public addDrmEventListener(handler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public enableInternal(): void;
						public disable(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public createDrmEventDispatcher(mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher;
						public getInitialTimeline(): com.google.android.exoplayer2.Timeline;
						public releaseSource(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public createEventDispatcher(mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.source.MediaSourceEventListener.EventDispatcher;
						public createEventDispatcher(mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, mediaTimeOffsetMs: number): com.google.android.exoplayer2.source.MediaSourceEventListener.EventDispatcher;
						public addEventListener(handler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public prepareSource(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, mediaTransferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
						public getMediaItem(): com.google.android.exoplayer2.MediaItem;
						public prepareSourceInternal(transferListener0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public constructor();
						public isSingleWindow(): boolean;
						public releasePeriod(mediaPeriod0: com.google.android.exoplayer2.source.MediaPeriod): void;
						public createEventDispatcher(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, mediaTimeOffsetMs: number): com.google.android.exoplayer2.source.MediaSourceEventListener.EventDispatcher;
						public maybeThrowSourceInfoRefreshError(): void;
						public isEnabled(): boolean;
						public releaseSourceInternal(): void;
						public removeDrmEventListener(eventListener: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public refreshSourceInfo(timeline: com.google.android.exoplayer2.Timeline): void;
						public enable(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public createDrmEventDispatcher(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher;
						/** @deprecated */
						public getTag(): any;
						public createPeriod(mediaPeriodId0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, allocator1: com.google.android.exoplayer2.upstream.Allocator, long2: number): com.google.android.exoplayer2.source.MediaPeriod;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class BehindLiveWindowException extends java.io.IOException {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.BehindLiveWindowException>;
						public constructor();
						public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						public constructor(message: string, cause: java.lang.Throwable);
						public constructor(cause: java.lang.Throwable);
						public constructor(message: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class BundledExtractorsAdapter extends java.lang.Object implements com.google.android.exoplayer2.source.ProgressiveMediaExtractor {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.BundledExtractorsAdapter>;
						public disableSeekingOnMp3Streams(): void;
						public getCurrentInputPosition(): number;
						public init(dataReader: com.google.android.exoplayer2.upstream.DataReader, uri: globalAndroid.net.Uri, responseHeaders: java.util.Map<string,java.util.List<string>>, position: number, length: number, output: com.google.android.exoplayer2.extractor.ExtractorOutput): void;
						public read(positionHolder: com.google.android.exoplayer2.extractor.PositionHolder): number;
						public constructor(extractorsFactory: com.google.android.exoplayer2.extractor.ExtractorsFactory);
						public seek(position: number, seekTimeUs: number): void;
						public release(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class ClippingMediaPeriod extends java.lang.Object implements com.google.android.exoplayer2.source.MediaPeriod, com.google.android.exoplayer2.source.MediaPeriod.Callback {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.ClippingMediaPeriod>;
						public mediaPeriod: com.google.android.exoplayer2.source.MediaPeriod;
						public readDiscontinuity(): number;
						public isLoading(): boolean;
						public updateClipping(startUs: number, endUs: number): void;
						public discardBuffer(positionUs: number, toKeyframe: boolean): void;
						public prepare(callback: com.google.android.exoplayer2.source.MediaPeriod.Callback, positionUs: number): void;
						public getAdjustedSeekPositionUs(positionUs: number, seekParameters: com.google.android.exoplayer2.SeekParameters): number;
						public constructor(mediaPeriod: com.google.android.exoplayer2.source.MediaPeriod, enableInitialDiscontinuity: boolean, startUs: number, endUs: number);
						public getNextLoadPositionUs(): number;
						public selectTracks(selections: native.Array<com.google.android.exoplayer2.trackselection.TrackSelection>, mayRetainStreamFlags: native.Array<boolean>, streams: native.Array<com.google.android.exoplayer2.source.SampleStream>, streamResetFlags: native.Array<boolean>, positionUs: number): number;
						public reevaluateBuffer(positionUs: number): void;
						public continueLoading(positionUs: number): boolean;
						public getBufferedPositionUs(): number;
						public seekToUs(positionUs: number): number;
						public onContinueLoadingRequested(sequenceableLoader0: any): void;
						public getTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
						public onContinueLoadingRequested(source: com.google.android.exoplayer2.source.MediaPeriod): void;
						public onPrepared(mediaPeriod: com.google.android.exoplayer2.source.MediaPeriod): void;
						public getStreamKeys(trackSelections: java.util.List<com.google.android.exoplayer2.trackselection.TrackSelection>): java.util.List<com.google.android.exoplayer2.offline.StreamKey>;
						public maybeThrowPrepareError(): void;
					}
					export module ClippingMediaPeriod {
						export class ClippingSampleStream extends java.lang.Object implements com.google.android.exoplayer2.source.SampleStream {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ClippingMediaPeriod.ClippingSampleStream>;
							public childStream: com.google.android.exoplayer2.source.SampleStream;
							public clearSentEos(): void;
							public skipData(positionUs: number): number;
							public isReady(): boolean;
							public readData(formatHolder: com.google.android.exoplayer2.FormatHolder, buffer: com.google.android.exoplayer2.decoder.DecoderInputBuffer, requireFormat: boolean): number;
							public constructor(param0: com.google.android.exoplayer2.source.ClippingMediaPeriod, childStream: com.google.android.exoplayer2.source.SampleStream);
							public maybeThrowError(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class ClippingMediaSource extends com.google.android.exoplayer2.source.CompositeMediaSource<java.lang.Void> {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.ClippingMediaSource>;
						public onChildSourceInfoRefreshed(object0: any, mediaSource1: com.google.android.exoplayer2.source.MediaSource, timeline2: com.google.android.exoplayer2.Timeline): void;
						public removeEventListener(eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public addDrmEventListener(handler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public disable(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public getInitialTimeline(): com.google.android.exoplayer2.Timeline;
						public releasePeriod(mediaPeriod: com.google.android.exoplayer2.source.MediaPeriod): void;
						public releaseSource(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public onChildSourceInfoRefreshed(id: java.lang.Void, mediaSource: com.google.android.exoplayer2.source.MediaSource, timeline: com.google.android.exoplayer2.Timeline): void;
						public constructor(mediaSource: com.google.android.exoplayer2.source.MediaSource, startPositionUs: number, endPositionUs: number);
						public addEventListener(handler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public prepareSource(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, mediaTransferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
						public getMediaItem(): com.google.android.exoplayer2.MediaItem;
						public constructor();
						public isSingleWindow(): boolean;
						public maybeThrowSourceInfoRefreshError(): void;
						public constructor(mediaSource: com.google.android.exoplayer2.source.MediaSource, durationUs: number);
						public releaseSourceInternal(): void;
						public removeDrmEventListener(eventListener: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public constructor(mediaSource: com.google.android.exoplayer2.source.MediaSource, startPositionUs: number, endPositionUs: number, enableInitialDiscontinuity: boolean, allowDynamicClippingUpdates: boolean, relativeToDefaultPosition: boolean);
						public getMediaTimeForChildMediaTime(id: any, mediaTimeMs: number): number;
						public enable(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public getMediaTimeForChildMediaTime(id: java.lang.Void, mediaTimeMs: number): number;
						public createPeriod(id: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, allocator: com.google.android.exoplayer2.upstream.Allocator, startPositionUs: number): com.google.android.exoplayer2.source.MediaPeriod;
						public prepareSourceInternal(mediaTransferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
						/** @deprecated */
						public getTag(): any;
					}
					export module ClippingMediaSource {
						export class ClippingTimeline extends com.google.android.exoplayer2.source.ForwardingTimeline {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ClippingMediaSource.ClippingTimeline>;
							public constructor();
							public getWindow(windowIndex: number, window: com.google.android.exoplayer2.Timeline.Window): com.google.android.exoplayer2.Timeline.Window;
							public getPeriod(periodIndex: number, period: com.google.android.exoplayer2.Timeline.Period, setIds: boolean): com.google.android.exoplayer2.Timeline.Period;
							public constructor(timeline: com.google.android.exoplayer2.Timeline);
							public getWindow(windowIndex: number, window: com.google.android.exoplayer2.Timeline.Window, defaultPositionProjectionUs: number): com.google.android.exoplayer2.Timeline.Window;
							public constructor(timeline: com.google.android.exoplayer2.Timeline, startUs: number, endUs: number);
							public getPeriod(periodIndex: number, period: com.google.android.exoplayer2.Timeline.Period): com.google.android.exoplayer2.Timeline.Period;
							/** @deprecated */
							public getWindow(windowIndex: number, window: com.google.android.exoplayer2.Timeline.Window, setTag: boolean): com.google.android.exoplayer2.Timeline.Window;
						}
						export class IllegalClippingException extends java.io.IOException {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ClippingMediaSource.IllegalClippingException>;
							public static REASON_INVALID_PERIOD_COUNT: number;
							public static REASON_NOT_SEEKABLE_TO_START: number;
							public static REASON_START_EXCEEDS_END: number;
							public reason: number;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(reason: number);
							public constructor(message: string);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
						export module IllegalClippingException {
							export class Reason extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.ClippingMediaSource.IllegalClippingException.Reason>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.source.ClippingMediaSource() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export abstract class CompositeMediaSource<T>  extends com.google.android.exoplayer2.source.BaseMediaSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.CompositeMediaSource<any>>;
						public disableInternal(): void;
						public onChildSourceInfoRefreshed(object0: any, mediaSource1: com.google.android.exoplayer2.source.MediaSource, timeline2: com.google.android.exoplayer2.Timeline): void;
						public removeEventListener(eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public addDrmEventListener(handler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public enableInternal(): void;
						public enableChildSource(id: any): void;
						public disable(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public disableChildSource(id: any): void;
						public getInitialTimeline(): com.google.android.exoplayer2.Timeline;
						public prepareChildSource(id: any, mediaSource: com.google.android.exoplayer2.source.MediaSource): void;
						public releaseSource(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public addEventListener(handler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public prepareSource(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, mediaTransferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
						public getMediaItem(): com.google.android.exoplayer2.MediaItem;
						public prepareSourceInternal(transferListener0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public constructor();
						public isSingleWindow(): boolean;
						public releasePeriod(mediaPeriod0: com.google.android.exoplayer2.source.MediaPeriod): void;
						public maybeThrowSourceInfoRefreshError(): void;
						public releaseSourceInternal(): void;
						public removeDrmEventListener(eventListener: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public getMediaTimeForChildMediaTime(id: any, mediaTimeMs: number): number;
						public enable(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public getMediaPeriodIdForChildMediaPeriodId(id: any, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
						public prepareSourceInternal(mediaTransferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
						public releaseChildSource(id: any): void;
						/** @deprecated */
						public getTag(): any;
						public createPeriod(mediaPeriodId0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, allocator1: com.google.android.exoplayer2.upstream.Allocator, long2: number): com.google.android.exoplayer2.source.MediaPeriod;
						public getWindowIndexForChildWindowIndex(id: any, windowIndex: number): number;
					}
					export module CompositeMediaSource {
						export class ForwardingEventListener extends java.lang.Object implements com.google.android.exoplayer2.source.MediaSourceEventListener, com.google.android.exoplayer2.drm.DrmSessionEventListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.CompositeMediaSource.ForwardingEventListener>;
							public onDrmKeysRemoved(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
							public onDrmKeysLoaded(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
							public onDrmSessionReleased(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
							public onLoadStarted(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventData: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							public onDrmSessionManagerError(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, error: java.lang.Exception): void;
							public onUpstreamDiscarded(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							public onLoadCanceled(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							public onDownstreamFormatChanged(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							public onLoadStarted(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							public onDrmKeysRestored(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
							public onLoadCompleted(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							public onLoadError(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventData: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData, error: java.io.IOException, wasCanceled: boolean): void;
							public onLoadCompleted(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventData: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							public onLoadCanceled(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventData: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							public constructor(param0: any);
							public onDrmSessionAcquired(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
							public onLoadError(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData, error: java.io.IOException, wasCanceled: boolean): void;
						}
						export class MediaSourceAndListener extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.CompositeMediaSource.MediaSourceAndListener>;
							public mediaSource: com.google.android.exoplayer2.source.MediaSource;
							public caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller;
							public eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener;
							public constructor(mediaSource: com.google.android.exoplayer2.source.MediaSource, caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class CompositeSequenceableLoader extends java.lang.Object implements com.google.android.exoplayer2.source.SequenceableLoader {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.CompositeSequenceableLoader>;
						public loaders: native.Array<com.google.android.exoplayer2.source.SequenceableLoader>;
						public constructor(loaders: native.Array<com.google.android.exoplayer2.source.SequenceableLoader>);
						public isLoading(): boolean;
						public getNextLoadPositionUs(): number;
						public reevaluateBuffer(positionUs: number): void;
						public continueLoading(positionUs: number): boolean;
						public getBufferedPositionUs(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class CompositeSequenceableLoaderFactory extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.CompositeSequenceableLoaderFactory>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.source.CompositeSequenceableLoaderFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							createCompositeSequenceableLoader(sequenceableLoaders0: native.Array<com.google.android.exoplayer2.source.SequenceableLoader>): com.google.android.exoplayer2.source.SequenceableLoader;
						});
						public constructor();
						public createCompositeSequenceableLoader(sequenceableLoaders0: native.Array<com.google.android.exoplayer2.source.SequenceableLoader>): com.google.android.exoplayer2.source.SequenceableLoader;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class ConcatenatingMediaSource extends com.google.android.exoplayer2.source.CompositeMediaSource<com.google.android.exoplayer2.source.ConcatenatingMediaSource.MediaSourceHolder> {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.ConcatenatingMediaSource>;
						public disableInternal(): void;
						public removeEventListener(eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public addMediaSources(mediaSources: java.util.Collection<com.google.android.exoplayer2.source.MediaSource>, handler: globalAndroid.os.Handler, onCompletionAction: java.lang.Runnable): void;
						public addMediaSource(mediaSource: com.google.android.exoplayer2.source.MediaSource): void;
						public addMediaSource(index: number, mediaSource: com.google.android.exoplayer2.source.MediaSource, handler: globalAndroid.os.Handler, onCompletionAction: java.lang.Runnable): void;
						public removeMediaSource(index: number): com.google.android.exoplayer2.source.MediaSource;
						public setShuffleOrder(shuffleOrder: com.google.android.exoplayer2.source.ShuffleOrder): void;
						public setShuffleOrder(shuffleOrder: com.google.android.exoplayer2.source.ShuffleOrder, handler: globalAndroid.os.Handler, onCompletionAction: java.lang.Runnable): void;
						public addMediaSources(index: number, mediaSources: java.util.Collection<com.google.android.exoplayer2.source.MediaSource>, handler: globalAndroid.os.Handler, onCompletionAction: java.lang.Runnable): void;
						public releasePeriod(mediaPeriod: com.google.android.exoplayer2.source.MediaPeriod): void;
						public releaseSource(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public constructor(isAtomic: boolean, shuffleOrder: com.google.android.exoplayer2.source.ShuffleOrder, mediaSources: native.Array<com.google.android.exoplayer2.source.MediaSource>);
						public removeMediaSource(index: number, handler: globalAndroid.os.Handler, onCompletionAction: java.lang.Runnable): com.google.android.exoplayer2.source.MediaSource;
						public getMediaPeriodIdForChildMediaPeriodId(mediaSourceHolder: com.google.android.exoplayer2.source.ConcatenatingMediaSource.MediaSourceHolder, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
						public addEventListener(handler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public onChildSourceInfoRefreshed(mediaSourceHolder: com.google.android.exoplayer2.source.ConcatenatingMediaSource.MediaSourceHolder, mediaSource: com.google.android.exoplayer2.source.MediaSource, timeline: com.google.android.exoplayer2.Timeline): void;
						public removeMediaSourceRange(fromIndex: number, toIndex: number, handler: globalAndroid.os.Handler, onCompletionAction: java.lang.Runnable): void;
						public constructor();
						public isSingleWindow(): boolean;
						public getWindowIndexForChildWindowIndex(mediaSourceHolder: com.google.android.exoplayer2.source.ConcatenatingMediaSource.MediaSourceHolder, windowIndex: number): number;
						public removeDrmEventListener(eventListener: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public addMediaSources(index: number, mediaSources: java.util.Collection<com.google.android.exoplayer2.source.MediaSource>): void;
						public getSize(): number;
						public enable(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public getMediaSource(index: number): com.google.android.exoplayer2.source.MediaSource;
						public createPeriod(id: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, allocator: com.google.android.exoplayer2.upstream.Allocator, startPositionUs: number): com.google.android.exoplayer2.source.MediaPeriod;
						public clear(): void;
						public onChildSourceInfoRefreshed(object0: any, mediaSource1: com.google.android.exoplayer2.source.MediaSource, timeline2: com.google.android.exoplayer2.Timeline): void;
						public addDrmEventListener(handler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public removeMediaSourceRange(fromIndex: number, toIndex: number): void;
						public enableInternal(): void;
						public disable(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public addMediaSource(mediaSource: com.google.android.exoplayer2.source.MediaSource, handler: globalAndroid.os.Handler, onCompletionAction: java.lang.Runnable): void;
						public getInitialTimeline(): com.google.android.exoplayer2.Timeline;
						public constructor(mediaSources: native.Array<com.google.android.exoplayer2.source.MediaSource>);
						public constructor(isAtomic: boolean, mediaSources: native.Array<com.google.android.exoplayer2.source.MediaSource>);
						public prepareSource(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, mediaTransferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
						public constructor(isAtomic: boolean, useLazyPreparation: boolean, shuffleOrder: com.google.android.exoplayer2.source.ShuffleOrder, mediaSources: native.Array<com.google.android.exoplayer2.source.MediaSource>);
						public getMediaItem(): com.google.android.exoplayer2.MediaItem;
						public maybeThrowSourceInfoRefreshError(): void;
						public addMediaSource(index: number, mediaSource: com.google.android.exoplayer2.source.MediaSource): void;
						public releaseSourceInternal(): void;
						public moveMediaSource(currentIndex: number, newIndex: number, handler: globalAndroid.os.Handler, onCompletionAction: java.lang.Runnable): void;
						public addMediaSources(mediaSources: java.util.Collection<com.google.android.exoplayer2.source.MediaSource>): void;
						public getMediaPeriodIdForChildMediaPeriodId(id: any, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
						public prepareSourceInternal(mediaTransferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
						/** @deprecated */
						public getTag(): any;
						public moveMediaSource(currentIndex: number, newIndex: number): void;
						public clear(handler: globalAndroid.os.Handler, onCompletionAction: java.lang.Runnable): void;
						public getWindowIndexForChildWindowIndex(id: any, windowIndex: number): number;
					}
					export module ConcatenatingMediaSource {
						export class ConcatenatedTimeline extends com.google.android.exoplayer2.AbstractConcatenatedTimeline {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ConcatenatingMediaSource.ConcatenatedTimeline>;
							public constructor();
							public constructor(mediaSourceHolders: java.util.Collection<com.google.android.exoplayer2.source.ConcatenatingMediaSource.MediaSourceHolder>, shuffleOrder: com.google.android.exoplayer2.source.ShuffleOrder, isAtomic: boolean);
							public getChildIndexByChildUid(object0: any): number;
							public getFirstWindowIndexByChildIndex(int0: number): number;
							public getChildIndexByChildUid(childUid: any): number;
							public getWindowCount(): number;
							public getFirstPeriodIndexByChildIndex(int0: number): number;
							public getTimelineByChildIndex(childIndex: number): com.google.android.exoplayer2.Timeline;
							public getChildUidByChildIndex(int0: number): any;
							public getChildIndexByWindowIndex(int0: number): number;
							public getPeriodCount(): number;
							public getFirstPeriodIndexByChildIndex(childIndex: number): number;
							public getFirstWindowIndexByChildIndex(childIndex: number): number;
							public getChildUidByChildIndex(childIndex: number): any;
							public getChildIndexByPeriodIndex(int0: number): number;
							public getChildIndexByWindowIndex(windowIndex: number): number;
							public getTimelineByChildIndex(int0: number): com.google.android.exoplayer2.Timeline;
							public constructor(isAtomic: boolean, shuffleOrder: com.google.android.exoplayer2.source.ShuffleOrder);
							public getChildIndexByPeriodIndex(periodIndex: number): number;
						}
						export class FakeMediaSource extends com.google.android.exoplayer2.source.BaseMediaSource {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ConcatenatingMediaSource.FakeMediaSource>;
							public addEventListener(handler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
							public getMediaItem(): com.google.android.exoplayer2.MediaItem;
							public enable(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
							public releaseSourceInternal(): void;
							public releasePeriod(mediaPeriod: com.google.android.exoplayer2.source.MediaPeriod): void;
							public prepareSourceInternal(transferListener0: com.google.android.exoplayer2.upstream.TransferListener): void;
							public maybeThrowSourceInfoRefreshError(): void;
							/** @deprecated */
							public getTag(): any;
							public prepareSource(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, mediaTransferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
							public isSingleWindow(): boolean;
							public releaseSource(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
							public getInitialTimeline(): com.google.android.exoplayer2.Timeline;
							public disable(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
							public addDrmEventListener(handler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
							public removeDrmEventListener(eventListener: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
							public removeEventListener(eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
							public prepareSourceInternal(mediaTransferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
							public createPeriod(id: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, allocator: com.google.android.exoplayer2.upstream.Allocator, startPositionUs: number): com.google.android.exoplayer2.source.MediaPeriod;
						}
						export class HandlerAndRunnable extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ConcatenatingMediaSource.HandlerAndRunnable>;
							public dispatch(): void;
							public constructor(handler: globalAndroid.os.Handler, runnable: java.lang.Runnable);
						}
						export class MediaSourceHolder extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ConcatenatingMediaSource.MediaSourceHolder>;
							public mediaSource: com.google.android.exoplayer2.source.MaskingMediaSource;
							public uid: any;
							public activeMediaPeriodIds: java.util.List<com.google.android.exoplayer2.source.MediaSource.MediaPeriodId>;
							public childIndex: number;
							public firstWindowIndexInChild: number;
							public isRemoved: boolean;
							public constructor(mediaSource: com.google.android.exoplayer2.source.MediaSource, useLazyPreparation: boolean);
							public reset(childIndex: number, firstWindowIndexInChild: number): void;
						}
						export class MessageData<T>  extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ConcatenatingMediaSource.MessageData<any>>;
							public index: number;
							public customData: T;
							public onCompletionAction: com.google.android.exoplayer2.source.ConcatenatingMediaSource.HandlerAndRunnable;
							public constructor(index: number, customData: T, onCompletionAction: com.google.android.exoplayer2.source.ConcatenatingMediaSource.HandlerAndRunnable);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class DefaultCompositeSequenceableLoaderFactory extends java.lang.Object implements com.google.android.exoplayer2.source.CompositeSequenceableLoaderFactory {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.DefaultCompositeSequenceableLoaderFactory>;
						public createCompositeSequenceableLoader(loaders: native.Array<com.google.android.exoplayer2.source.SequenceableLoader>): com.google.android.exoplayer2.source.SequenceableLoader;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export abstract class DefaultMediaSourceEventListener extends java.lang.Object implements com.google.android.exoplayer2.source.MediaSourceEventListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.DefaultMediaSourceEventListener>;
						public onLoadStarted(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onLoadError(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData, error: java.io.IOException, wasCanceled: boolean): void;
						public constructor();
						public onLoadCompleted(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onDownstreamFormatChanged(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onUpstreamDiscarded(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onLoadCanceled(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class DefaultMediaSourceFactory extends java.lang.Object implements com.google.android.exoplayer2.source.MediaSourceFactory {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.DefaultMediaSourceFactory>;
						public setDrmHttpDataSourceFactory(drmHttpDataSourceFactory: com.google.android.exoplayer2.upstream.HttpDataSource.Factory): com.google.android.exoplayer2.source.DefaultMediaSourceFactory;
						public getSupportedTypes(): native.Array<number>;
						public constructor(context: globalAndroid.content.Context, extractorsFactory: com.google.android.exoplayer2.extractor.ExtractorsFactory);
						public setDrmSessionManager(drmSessionManager0: com.google.android.exoplayer2.drm.DrmSessionManager): com.google.android.exoplayer2.source.MediaSourceFactory;
						public constructor(dataSourceFactory: com.google.android.exoplayer2.upstream.DataSource.Factory, extractorsFactory: com.google.android.exoplayer2.extractor.ExtractorsFactory);
						/** @deprecated */
						public setStreamKeys(streamKeys: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): com.google.android.exoplayer2.source.DefaultMediaSourceFactory;
						public setAdsLoaderProvider(adsLoaderProvider: com.google.android.exoplayer2.source.DefaultMediaSourceFactory.AdsLoaderProvider): com.google.android.exoplayer2.source.DefaultMediaSourceFactory;
						public setDrmUserAgent(string0: string): com.google.android.exoplayer2.source.MediaSourceFactory;
						/** @deprecated */
						public createMediaSource(uri: globalAndroid.net.Uri): com.google.android.exoplayer2.source.MediaSource;
						public setLoadErrorHandlingPolicy(loadErrorHandlingPolicy: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy): com.google.android.exoplayer2.source.DefaultMediaSourceFactory;
						public setDrmUserAgent(userAgent: string): com.google.android.exoplayer2.source.DefaultMediaSourceFactory;
						public createMediaSource(mediaItem: com.google.android.exoplayer2.MediaItem): com.google.android.exoplayer2.source.MediaSource;
						public constructor(dataSourceFactory: com.google.android.exoplayer2.upstream.DataSource.Factory);
						public setDrmSessionManager(drmSessionManager: com.google.android.exoplayer2.drm.DrmSessionManager): com.google.android.exoplayer2.source.DefaultMediaSourceFactory;
						public setAdViewProvider(adViewProvider: com.google.android.exoplayer2.source.ads.AdsLoader.AdViewProvider): com.google.android.exoplayer2.source.DefaultMediaSourceFactory;
						/** @deprecated */
						public setStreamKeys(streamKeys: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): com.google.android.exoplayer2.source.MediaSourceFactory;
						public constructor(context: globalAndroid.content.Context);
						public setDrmHttpDataSourceFactory(factory0: com.google.android.exoplayer2.upstream.HttpDataSource.Factory): com.google.android.exoplayer2.source.MediaSourceFactory;
						public setLoadErrorHandlingPolicy(loadErrorHandlingPolicy0: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy): com.google.android.exoplayer2.source.MediaSourceFactory;
					}
					export module DefaultMediaSourceFactory {
						export class AdsLoaderProvider extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.DefaultMediaSourceFactory.AdsLoaderProvider>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.DefaultMediaSourceFactory() when extending the interface class.
							 */
							public constructor(implementation: {
								getAdsLoader(uri0: globalAndroid.net.Uri): com.google.android.exoplayer2.source.ads.AdsLoader;
							});
							public constructor();
							public getAdsLoader(uri0: globalAndroid.net.Uri): com.google.android.exoplayer2.source.ads.AdsLoader;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class EmptySampleStream extends java.lang.Object implements com.google.android.exoplayer2.source.SampleStream {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.EmptySampleStream>;
						public constructor();
						public readData(formatHolder: com.google.android.exoplayer2.FormatHolder, buffer: com.google.android.exoplayer2.decoder.DecoderInputBuffer, formatRequired: boolean): number;
						public skipData(positionUs: number): number;
						public isReady(): boolean;
						public maybeThrowError(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class ExtractorMediaSource extends com.google.android.exoplayer2.source.CompositeMediaSource<java.lang.Void> {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.ExtractorMediaSource>;
						public static DEFAULT_LOADING_CHECK_INTERVAL_BYTES: number;
						public onChildSourceInfoRefreshed(object0: any, mediaSource1: com.google.android.exoplayer2.source.MediaSource, timeline2: com.google.android.exoplayer2.Timeline): void;
						public removeEventListener(eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public addDrmEventListener(handler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public constructor();
						public isSingleWindow(): boolean;
						/** @deprecated */
						public constructor(uri: globalAndroid.net.Uri, dataSourceFactory: com.google.android.exoplayer2.upstream.DataSource.Factory, extractorsFactory: com.google.android.exoplayer2.extractor.ExtractorsFactory, eventHandler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.source.ExtractorMediaSource.EventListener);
						public disable(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public maybeThrowSourceInfoRefreshError(): void;
						public getInitialTimeline(): com.google.android.exoplayer2.Timeline;
						public removeDrmEventListener(eventListener: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public releasePeriod(mediaPeriod: com.google.android.exoplayer2.source.MediaPeriod): void;
						public releaseSource(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public enable(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						/** @deprecated */
						public constructor(uri: globalAndroid.net.Uri, dataSourceFactory: com.google.android.exoplayer2.upstream.DataSource.Factory, extractorsFactory: com.google.android.exoplayer2.extractor.ExtractorsFactory, eventHandler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.source.ExtractorMediaSource.EventListener, customCacheKey: string);
						public createPeriod(id: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, allocator: com.google.android.exoplayer2.upstream.Allocator, startPositionUs: number): com.google.android.exoplayer2.source.MediaPeriod;
						public onChildSourceInfoRefreshed(id: java.lang.Void, mediaSource: com.google.android.exoplayer2.source.MediaSource, timeline: com.google.android.exoplayer2.Timeline): void;
						/** @deprecated */
						public constructor(uri: globalAndroid.net.Uri, dataSourceFactory: com.google.android.exoplayer2.upstream.DataSource.Factory, extractorsFactory: com.google.android.exoplayer2.extractor.ExtractorsFactory, eventHandler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.source.ExtractorMediaSource.EventListener, customCacheKey: string, continueLoadingCheckIntervalBytes: number);
						public prepareSourceInternal(mediaTransferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
						public addEventListener(handler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public prepareSource(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, mediaTransferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
						/** @deprecated */
						public getTag(): any;
						public getMediaItem(): com.google.android.exoplayer2.MediaItem;
					}
					export module ExtractorMediaSource {
						export class EventListener extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ExtractorMediaSource.EventListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.ExtractorMediaSource() when extending the interface class.
							 */
							public constructor(implementation: {
								onLoadError(iOException0: java.io.IOException): void;
							});
							public constructor();
							public onLoadError(iOException0: java.io.IOException): void;
						}
						export class EventListenerWrapper extends java.lang.Object implements com.google.android.exoplayer2.source.MediaSourceEventListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ExtractorMediaSource.EventListenerWrapper>;
							public onDownstreamFormatChanged(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							public onLoadStarted(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							public onLoadCompleted(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							public constructor(eventListener: com.google.android.exoplayer2.source.ExtractorMediaSource.EventListener);
							public onLoadError(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData, error: java.io.IOException, wasCanceled: boolean): void;
							public onLoadCanceled(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							public onUpstreamDiscarded(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						}
						export class Factory extends java.lang.Object implements com.google.android.exoplayer2.source.MediaSourceFactory {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ExtractorMediaSource.Factory>;
							public createMediaSource(mediaItem0: com.google.android.exoplayer2.MediaItem): com.google.android.exoplayer2.source.MediaSource;
							/** @deprecated */
							public setStreamKeys(streamKeys: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): com.google.android.exoplayer2.source.MediaSourceFactory;
							public setExtractorsFactory(extractorsFactory: com.google.android.exoplayer2.extractor.ExtractorsFactory): com.google.android.exoplayer2.source.ExtractorMediaSource.Factory;
							public setDrmSessionManager(drmSessionManager0: com.google.android.exoplayer2.drm.DrmSessionManager): com.google.android.exoplayer2.source.MediaSourceFactory;
							public setDrmUserAgent(userAgent: string): com.google.android.exoplayer2.source.MediaSourceFactory;
							/** @deprecated */
							public createMediaSource(uri: globalAndroid.net.Uri): com.google.android.exoplayer2.source.ExtractorMediaSource;
							public setLoadErrorHandlingPolicy(loadErrorHandlingPolicy0: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy): com.google.android.exoplayer2.source.MediaSourceFactory;
							/** @deprecated */
							public setTag(tag: any): com.google.android.exoplayer2.source.ExtractorMediaSource.Factory;
							public setCustomCacheKey(customCacheKey: string): com.google.android.exoplayer2.source.ExtractorMediaSource.Factory;
							public constructor(dataSourceFactory: com.google.android.exoplayer2.upstream.DataSource.Factory);
							/** @deprecated */
							public setDrmUserAgent(userAgent: string): com.google.android.exoplayer2.source.MediaSourceFactory;
							/** @deprecated */
							public setDrmHttpDataSourceFactory(drmHttpDataSourceFactory: com.google.android.exoplayer2.upstream.HttpDataSource.Factory): com.google.android.exoplayer2.source.MediaSourceFactory;
							public createMediaSource(mediaItem: com.google.android.exoplayer2.MediaItem): com.google.android.exoplayer2.source.ExtractorMediaSource;
							public setLoadErrorHandlingPolicy(loadErrorHandlingPolicy: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy): com.google.android.exoplayer2.source.ExtractorMediaSource.Factory;
							public setContinueLoadingCheckIntervalBytes(continueLoadingCheckIntervalBytes: number): com.google.android.exoplayer2.source.ExtractorMediaSource.Factory;
							public setDrmHttpDataSourceFactory(drmHttpDataSourceFactory: com.google.android.exoplayer2.upstream.HttpDataSource.Factory): com.google.android.exoplayer2.source.MediaSourceFactory;
							/** @deprecated */
							public setDrmSessionManager(drmSessionManager: com.google.android.exoplayer2.drm.DrmSessionManager): com.google.android.exoplayer2.source.ExtractorMediaSource.Factory;
							public getSupportedTypes(): native.Array<number>;
							/** @deprecated */
							public createMediaSource(uri: globalAndroid.net.Uri): com.google.android.exoplayer2.source.MediaSource;
							/** @deprecated */
							public setMinLoadableRetryCount(minLoadableRetryCount: number): com.google.android.exoplayer2.source.ExtractorMediaSource.Factory;
							/** @deprecated */
							public createMediaSource(uri: globalAndroid.net.Uri, eventHandler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener): com.google.android.exoplayer2.source.ExtractorMediaSource;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export abstract class ForwardingTimeline extends com.google.android.exoplayer2.Timeline {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.ForwardingTimeline>;
						public timeline: com.google.android.exoplayer2.Timeline;
						public constructor();
						public getWindow(windowIndex: number, window: com.google.android.exoplayer2.Timeline.Window, defaultPositionProjectionUs: number): com.google.android.exoplayer2.Timeline.Window;
						public getIndexOfPeriod(uid: any): number;
						public getWindowCount(): number;
						public getPeriod(periodIndex: number, period: com.google.android.exoplayer2.Timeline.Period, setIds: boolean): com.google.android.exoplayer2.Timeline.Period;
						/** @deprecated */
						public getWindow(windowIndex: number, window: com.google.android.exoplayer2.Timeline.Window, setTag: boolean): com.google.android.exoplayer2.Timeline.Window;
						public constructor(timeline: com.google.android.exoplayer2.Timeline);
						public getPeriod(int0: number, period1: com.google.android.exoplayer2.Timeline.Period, boolean2: boolean): com.google.android.exoplayer2.Timeline.Period;
						public getPeriod(periodIndex: number, period: com.google.android.exoplayer2.Timeline.Period): com.google.android.exoplayer2.Timeline.Period;
						public getFirstWindowIndex(shuffleModeEnabled: boolean): number;
						public getWindow(windowIndex: number, window: com.google.android.exoplayer2.Timeline.Window): com.google.android.exoplayer2.Timeline.Window;
						public getUidOfPeriod(periodIndex: number): any;
						public getWindow(int0: number, window1: com.google.android.exoplayer2.Timeline.Window, long2: number): com.google.android.exoplayer2.Timeline.Window;
						public getIndexOfPeriod(object0: any): number;
						public getLastWindowIndex(shuffleModeEnabled: boolean): number;
						public getNextWindowIndex(windowIndex: number, repeatMode: number, shuffleModeEnabled: boolean): number;
						public getPeriodCount(): number;
						public getUidOfPeriod(int0: number): any;
						public getPreviousWindowIndex(windowIndex: number, repeatMode: number, shuffleModeEnabled: boolean): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class IcyDataSource extends java.lang.Object implements com.google.android.exoplayer2.upstream.DataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.IcyDataSource>;
						public constructor(upstream: com.google.android.exoplayer2.upstream.DataSource, metadataIntervalBytes: number, listener: com.google.android.exoplayer2.source.IcyDataSource.Listener);
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public close(): void;
						public open(dataSpec: com.google.android.exoplayer2.upstream.DataSpec): number;
						public read(buffer: native.Array<number>, offset: number, readLength: number): number;
						public addTransferListener(transferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
						public getUri(): globalAndroid.net.Uri;
					}
					export module IcyDataSource {
						export class Listener extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.IcyDataSource.Listener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.IcyDataSource() when extending the interface class.
							 */
							public constructor(implementation: {
								onIcyMetadata(parsableByteArray0: com.google.android.exoplayer2.util.ParsableByteArray): void;
							});
							public constructor();
							public onIcyMetadata(parsableByteArray0: com.google.android.exoplayer2.util.ParsableByteArray): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class LoadEventInfo extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.LoadEventInfo>;
						public loadTaskId: number;
						public dataSpec: com.google.android.exoplayer2.upstream.DataSpec;
						public uri: globalAndroid.net.Uri;
						public responseHeaders: java.util.Map<string,java.util.List<string>>;
						public elapsedRealtimeMs: number;
						public loadDurationMs: number;
						public bytesLoaded: number;
						public constructor(loadTaskId: number, dataSpec: com.google.android.exoplayer2.upstream.DataSpec, uri: globalAndroid.net.Uri, responseHeaders: java.util.Map<string,java.util.List<string>>, elapsedRealtimeMs: number, loadDurationMs: number, bytesLoaded: number);
						public constructor(loadTaskId: number, dataSpec: com.google.android.exoplayer2.upstream.DataSpec, elapsedRealtimeMs: number);
						public static getNewId(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class LoopingMediaSource extends com.google.android.exoplayer2.source.CompositeMediaSource<java.lang.Void> {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.LoopingMediaSource>;
						public onChildSourceInfoRefreshed(object0: any, mediaSource1: com.google.android.exoplayer2.source.MediaSource, timeline2: com.google.android.exoplayer2.Timeline): void;
						public removeEventListener(eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public addDrmEventListener(handler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public constructor();
						public isSingleWindow(): boolean;
						public disable(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public maybeThrowSourceInfoRefreshError(): void;
						public getInitialTimeline(): com.google.android.exoplayer2.Timeline;
						public removeDrmEventListener(eventListener: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public releasePeriod(mediaPeriod: com.google.android.exoplayer2.source.MediaPeriod): void;
						public getMediaPeriodIdForChildMediaPeriodId(id: java.lang.Void, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
						public releaseSource(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public enable(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public constructor(childSource: com.google.android.exoplayer2.source.MediaSource);
						public createPeriod(id: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, allocator: com.google.android.exoplayer2.upstream.Allocator, startPositionUs: number): com.google.android.exoplayer2.source.MediaPeriod;
						public onChildSourceInfoRefreshed(id: java.lang.Void, mediaSource: com.google.android.exoplayer2.source.MediaSource, timeline: com.google.android.exoplayer2.Timeline): void;
						public getMediaPeriodIdForChildMediaPeriodId(id: any, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
						public prepareSourceInternal(mediaTransferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
						public addEventListener(handler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public prepareSource(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, mediaTransferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
						public constructor(childSource: com.google.android.exoplayer2.source.MediaSource, loopCount: number);
						/** @deprecated */
						public getTag(): any;
						public getMediaItem(): com.google.android.exoplayer2.MediaItem;
					}
					export module LoopingMediaSource {
						export class InfinitelyLoopingTimeline extends com.google.android.exoplayer2.source.ForwardingTimeline {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.LoopingMediaSource.InfinitelyLoopingTimeline>;
							public constructor();
							public getPreviousWindowIndex(windowIndex: number, repeatMode: number, shuffleModeEnabled: boolean): number;
							public constructor(timeline: com.google.android.exoplayer2.Timeline);
							public getNextWindowIndex(windowIndex: number, repeatMode: number, shuffleModeEnabled: boolean): number;
						}
						export class LoopingTimeline extends com.google.android.exoplayer2.AbstractConcatenatedTimeline {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.LoopingMediaSource.LoopingTimeline>;
							public constructor();
							public getChildIndexByChildUid(object0: any): number;
							public getFirstWindowIndexByChildIndex(int0: number): number;
							public getWindowCount(): number;
							public getChildIndexByChildUid(childUid: any): number;
							public constructor(childTimeline: com.google.android.exoplayer2.Timeline, loopCount: number);
							public getFirstPeriodIndexByChildIndex(int0: number): number;
							public getTimelineByChildIndex(childIndex: number): com.google.android.exoplayer2.Timeline;
							public getChildUidByChildIndex(int0: number): any;
							public getChildIndexByWindowIndex(int0: number): number;
							public getPeriodCount(): number;
							public getFirstPeriodIndexByChildIndex(childIndex: number): number;
							public getFirstWindowIndexByChildIndex(childIndex: number): number;
							public getChildUidByChildIndex(childIndex: number): any;
							public getChildIndexByPeriodIndex(int0: number): number;
							public getChildIndexByWindowIndex(windowIndex: number): number;
							public getTimelineByChildIndex(int0: number): com.google.android.exoplayer2.Timeline;
							public constructor(isAtomic: boolean, shuffleOrder: com.google.android.exoplayer2.source.ShuffleOrder);
							public getChildIndexByPeriodIndex(periodIndex: number): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class MaskingMediaPeriod extends java.lang.Object implements com.google.android.exoplayer2.source.MediaPeriod, com.google.android.exoplayer2.source.MediaPeriod.Callback {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.MaskingMediaPeriod>;
						public mediaSource: com.google.android.exoplayer2.source.MediaSource;
						public id: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
						public readDiscontinuity(): number;
						public isLoading(): boolean;
						public getPreparePositionUs(): number;
						public discardBuffer(positionUs: number, toKeyframe: boolean): void;
						public createPeriod(id: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public getAdjustedSeekPositionUs(positionUs: number, seekParameters: com.google.android.exoplayer2.SeekParameters): number;
						public getPreparePositionOverrideUs(): number;
						public prepare(callback: com.google.android.exoplayer2.source.MediaPeriod.Callback, preparePositionUs: number): void;
						public getNextLoadPositionUs(): number;
						public constructor(mediaSource: com.google.android.exoplayer2.source.MediaSource, id: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, allocator: com.google.android.exoplayer2.upstream.Allocator, preparePositionUs: number);
						public selectTracks(selections: native.Array<com.google.android.exoplayer2.trackselection.TrackSelection>, mayRetainStreamFlags: native.Array<boolean>, streams: native.Array<com.google.android.exoplayer2.source.SampleStream>, streamResetFlags: native.Array<boolean>, positionUs: number): number;
						public reevaluateBuffer(positionUs: number): void;
						public continueLoading(positionUs: number): boolean;
						public overridePreparePositionUs(preparePositionUs: number): void;
						public releasePeriod(): void;
						public getBufferedPositionUs(): number;
						public seekToUs(positionUs: number): number;
						public onContinueLoadingRequested(sequenceableLoader0: any): void;
						public setPrepareListener(listener: com.google.android.exoplayer2.source.MaskingMediaPeriod.PrepareListener): void;
						public getTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
						public onContinueLoadingRequested(source: com.google.android.exoplayer2.source.MediaPeriod): void;
						public onPrepared(mediaPeriod: com.google.android.exoplayer2.source.MediaPeriod): void;
						public getStreamKeys(trackSelections: java.util.List<com.google.android.exoplayer2.trackselection.TrackSelection>): java.util.List<com.google.android.exoplayer2.offline.StreamKey>;
						public maybeThrowPrepareError(): void;
					}
					export module MaskingMediaPeriod {
						export class PrepareListener extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.MaskingMediaPeriod.PrepareListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.MaskingMediaPeriod() when extending the interface class.
							 */
							public constructor(implementation: {
								onPrepareComplete(mediaPeriodId0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
								onPrepareError(mediaPeriodId0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, iOException1: java.io.IOException): void;
							});
							public constructor();
							public onPrepareError(mediaPeriodId0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, iOException1: java.io.IOException): void;
							public onPrepareComplete(mediaPeriodId0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class MaskingMediaSource extends com.google.android.exoplayer2.source.CompositeMediaSource<java.lang.Void> {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.MaskingMediaSource>;
						public onChildSourceInfoRefreshed(object0: any, mediaSource1: com.google.android.exoplayer2.source.MediaSource, timeline2: com.google.android.exoplayer2.Timeline): void;
						public removeEventListener(eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public addDrmEventListener(handler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public onChildSourceInfoRefreshed(id: java.lang.Void, mediaSource: com.google.android.exoplayer2.source.MediaSource, newTimeline: com.google.android.exoplayer2.Timeline): void;
						public disable(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public getTimeline(): com.google.android.exoplayer2.Timeline;
						public getInitialTimeline(): com.google.android.exoplayer2.Timeline;
						public releasePeriod(mediaPeriod: com.google.android.exoplayer2.source.MediaPeriod): void;
						public releaseSource(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public addEventListener(handler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public prepareSource(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, mediaTransferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
						public createPeriod(id: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, allocator: com.google.android.exoplayer2.upstream.Allocator, startPositionUs: number): com.google.android.exoplayer2.source.MaskingMediaPeriod;
						public getMediaItem(): com.google.android.exoplayer2.MediaItem;
						public constructor();
						public isSingleWindow(): boolean;
						public maybeThrowSourceInfoRefreshError(): void;
						public constructor(mediaSource: com.google.android.exoplayer2.source.MediaSource, useLazyPreparation: boolean);
						public releaseSourceInternal(): void;
						public removeDrmEventListener(eventListener: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public getMediaPeriodIdForChildMediaPeriodId(id: java.lang.Void, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
						public enable(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public getMediaPeriodIdForChildMediaPeriodId(id: any, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
						public prepareSourceInternal(mediaTransferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
						/** @deprecated */
						public getTag(): any;
						public createPeriod(mediaPeriodId0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, allocator1: com.google.android.exoplayer2.upstream.Allocator, long2: number): com.google.android.exoplayer2.source.MediaPeriod;
					}
					export module MaskingMediaSource {
						export class MaskingTimeline extends com.google.android.exoplayer2.source.ForwardingTimeline {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.MaskingMediaSource.MaskingTimeline>;
							public static MASKING_EXTERNAL_PERIOD_UID: any;
							public static createWithPlaceholderTimeline(mediaItem: com.google.android.exoplayer2.MediaItem): com.google.android.exoplayer2.source.MaskingMediaSource.MaskingTimeline;
							public static createWithRealTimeline(timeline: com.google.android.exoplayer2.Timeline, firstWindowUid: any, firstPeriodUid: any): com.google.android.exoplayer2.source.MaskingMediaSource.MaskingTimeline;
							public getWindow(windowIndex: number, window: com.google.android.exoplayer2.Timeline.Window): com.google.android.exoplayer2.Timeline.Window;
							public getPeriod(periodIndex: number, period: com.google.android.exoplayer2.Timeline.Period, setIds: boolean): com.google.android.exoplayer2.Timeline.Period;
							public cloneWithUpdatedTimeline(timeline: com.google.android.exoplayer2.Timeline): com.google.android.exoplayer2.source.MaskingMediaSource.MaskingTimeline;
							public getWindow(windowIndex: number, window: com.google.android.exoplayer2.Timeline.Window, defaultPositionProjectionUs: number): com.google.android.exoplayer2.Timeline.Window;
							public getIndexOfPeriod(uid: any): number;
							public getUidOfPeriod(periodIndex: number): any;
							public getPeriod(periodIndex: number, period: com.google.android.exoplayer2.Timeline.Period): com.google.android.exoplayer2.Timeline.Period;
							/** @deprecated */
							public getWindow(windowIndex: number, window: com.google.android.exoplayer2.Timeline.Window, setTag: boolean): com.google.android.exoplayer2.Timeline.Window;
							public getTimeline(): com.google.android.exoplayer2.Timeline;
						}
						export class PlaceholderTimeline extends com.google.android.exoplayer2.Timeline {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.MaskingMediaSource.PlaceholderTimeline>;
							public constructor();
							public getWindowCount(): number;
							public getWindow(windowIndex: number, window: com.google.android.exoplayer2.Timeline.Window): com.google.android.exoplayer2.Timeline.Window;
							public getIndexOfPeriod(object0: any): number;
							public getWindow(windowIndex: number, window: com.google.android.exoplayer2.Timeline.Window, defaultPositionProjectionUs: number): com.google.android.exoplayer2.Timeline.Window;
							public getPeriodCount(): number;
							public getPeriod(periodIndex: number, period: com.google.android.exoplayer2.Timeline.Period): com.google.android.exoplayer2.Timeline.Period;
							public getPeriod(int0: number, period1: com.google.android.exoplayer2.Timeline.Period, boolean2: boolean): com.google.android.exoplayer2.Timeline.Period;
							public constructor(mediaItem: com.google.android.exoplayer2.MediaItem);
							/** @deprecated */
							public getWindow(windowIndex: number, window: com.google.android.exoplayer2.Timeline.Window, setTag: boolean): com.google.android.exoplayer2.Timeline.Window;
							public getWindow(int0: number, window1: com.google.android.exoplayer2.Timeline.Window, long2: number): com.google.android.exoplayer2.Timeline.Window;
							public getPeriod(periodIndex: number, period: com.google.android.exoplayer2.Timeline.Period, setIds: boolean): com.google.android.exoplayer2.Timeline.Period;
							public getUidOfPeriod(int0: number): any;
							public getIndexOfPeriod(uid: any): number;
							public getUidOfPeriod(periodIndex: number): any;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class MediaLoadData extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.MediaLoadData>;
						public dataType: number;
						public trackType: number;
						public trackFormat: com.google.android.exoplayer2.Format;
						public trackSelectionReason: number;
						public trackSelectionData: any;
						public mediaStartTimeMs: number;
						public mediaEndTimeMs: number;
						public constructor(dataType: number);
						public constructor(dataType: number, trackType: number, trackFormat: com.google.android.exoplayer2.Format, trackSelectionReason: number, trackSelectionData: any, mediaStartTimeMs: number, mediaEndTimeMs: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class MediaPeriod extends java.lang.Object implements com.google.android.exoplayer2.source.SequenceableLoader {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.MediaPeriod>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.source.MediaPeriod interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							prepare(callback0: com.google.android.exoplayer2.source.MediaPeriod.Callback, long1: number): void;
							maybeThrowPrepareError(): void;
							getTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
							getStreamKeys(trackSelections: java.util.List<com.google.android.exoplayer2.trackselection.TrackSelection>): java.util.List<com.google.android.exoplayer2.offline.StreamKey>;
							selectTracks(trackSelections0: native.Array<com.google.android.exoplayer2.trackselection.TrackSelection>, booleans1: native.Array<boolean>, sampleStreams2: native.Array<com.google.android.exoplayer2.source.SampleStream>, booleans3: native.Array<boolean>, long4: number): number;
							discardBuffer(long0: number, boolean1: boolean): void;
							readDiscontinuity(): number;
							seekToUs(long0: number): number;
							getAdjustedSeekPositionUs(long0: number, seekParameters1: com.google.android.exoplayer2.SeekParameters): number;
							getBufferedPositionUs(): number;
							getNextLoadPositionUs(): number;
							continueLoading(long0: number): boolean;
							isLoading(): boolean;
							reevaluateBuffer(long0: number): void;
							getBufferedPositionUs(): number;
							getNextLoadPositionUs(): number;
							continueLoading(long0: number): boolean;
							isLoading(): boolean;
							reevaluateBuffer(long0: number): void;
						});
						public constructor();
						public readDiscontinuity(): number;
						public isLoading(): boolean;
						public continueLoading(long0: number): boolean;
						public seekToUs(long0: number): number;
						public getAdjustedSeekPositionUs(long0: number, seekParameters1: com.google.android.exoplayer2.SeekParameters): number;
						public prepare(callback0: com.google.android.exoplayer2.source.MediaPeriod.Callback, long1: number): void;
						public reevaluateBuffer(long0: number): void;
						public selectTracks(trackSelections0: native.Array<com.google.android.exoplayer2.trackselection.TrackSelection>, booleans1: native.Array<boolean>, sampleStreams2: native.Array<com.google.android.exoplayer2.source.SampleStream>, booleans3: native.Array<boolean>, long4: number): number;
						public discardBuffer(long0: number, boolean1: boolean): void;
						public getNextLoadPositionUs(): number;
						public getBufferedPositionUs(): number;
						public getTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
						public getStreamKeys(trackSelections: java.util.List<com.google.android.exoplayer2.trackselection.TrackSelection>): java.util.List<com.google.android.exoplayer2.offline.StreamKey>;
						public maybeThrowPrepareError(): void;
					}
					export module MediaPeriod {
						export class Callback extends com.google.android.exoplayer2.source.SequenceableLoader.Callback<com.google.android.exoplayer2.source.MediaPeriod> {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.MediaPeriod.Callback>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.MediaPeriod() when extending the interface class.
							 */
							public constructor(implementation: {
								onPrepared(mediaPeriod0: com.google.android.exoplayer2.source.MediaPeriod): void;
								onContinueLoadingRequested(sequenceableLoader0: any): void;
							});
							public constructor();
							public onPrepared(mediaPeriod0: com.google.android.exoplayer2.source.MediaPeriod): void;
							public onContinueLoadingRequested(sequenceableLoader0: any): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class MediaSource extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.MediaSource>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.source.MediaSource interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							addEventListener(handler0: globalAndroid.os.Handler, mediaSourceEventListener1: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
							removeEventListener(mediaSourceEventListener0: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
							addDrmEventListener(handler0: globalAndroid.os.Handler, drmSessionEventListener1: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
							removeDrmEventListener(drmSessionEventListener0: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
							getInitialTimeline(): com.google.android.exoplayer2.Timeline;
							isSingleWindow(): boolean;
							getTag(): any;
							getMediaItem(): com.google.android.exoplayer2.MediaItem;
							prepareSource(mediaSourceCaller0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, transferListener1: com.google.android.exoplayer2.upstream.TransferListener): void;
							maybeThrowSourceInfoRefreshError(): void;
							enable(mediaSourceCaller0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
							createPeriod(mediaPeriodId0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, allocator1: com.google.android.exoplayer2.upstream.Allocator, long2: number): com.google.android.exoplayer2.source.MediaPeriod;
							releasePeriod(mediaPeriod0: com.google.android.exoplayer2.source.MediaPeriod): void;
							disable(mediaSourceCaller0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
							releaseSource(mediaSourceCaller0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						});
						public constructor();
						public disable(mediaSourceCaller0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public isSingleWindow(): boolean;
						public releasePeriod(mediaPeriod0: com.google.android.exoplayer2.source.MediaPeriod): void;
						public maybeThrowSourceInfoRefreshError(): void;
						public getInitialTimeline(): com.google.android.exoplayer2.Timeline;
						public removeDrmEventListener(drmSessionEventListener0: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public enable(mediaSourceCaller0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public releaseSource(mediaSourceCaller0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public addDrmEventListener(handler0: globalAndroid.os.Handler, drmSessionEventListener1: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public prepareSource(mediaSourceCaller0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, transferListener1: com.google.android.exoplayer2.upstream.TransferListener): void;
						public addEventListener(handler0: globalAndroid.os.Handler, mediaSourceEventListener1: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public removeEventListener(mediaSourceEventListener0: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						/** @deprecated */
						public getTag(): any;
						public getMediaItem(): com.google.android.exoplayer2.MediaItem;
						public createPeriod(mediaPeriodId0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, allocator1: com.google.android.exoplayer2.upstream.Allocator, long2: number): com.google.android.exoplayer2.source.MediaPeriod;
					}
					export module MediaSource {
						export class MediaPeriodId extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.MediaSource.MediaPeriodId>;
							public periodUid: any;
							public adGroupIndex: number;
							public adIndexInAdGroup: number;
							public windowSequenceNumber: number;
							public nextAdGroupIndex: number;
							public constructor(periodUid: any);
							public constructor(periodUid: any, windowSequenceNumber: number);
							public hashCode(): number;
							public constructor(periodUid: any, windowSequenceNumber: number, nextAdGroupIndex: number);
							public isAd(): boolean;
							public equals(obj: any): boolean;
							public constructor(periodUid: any, adGroupIndex: number, adIndexInAdGroup: number, windowSequenceNumber: number);
							public copyWithPeriodUid(newPeriodUid: any): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
						}
						export class MediaSourceCaller extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.MediaSource() when extending the interface class.
							 */
							public constructor(implementation: {
								onSourceInfoRefreshed(mediaSource0: com.google.android.exoplayer2.source.MediaSource, timeline1: com.google.android.exoplayer2.Timeline): void;
							});
							public constructor();
							public onSourceInfoRefreshed(mediaSource0: com.google.android.exoplayer2.source.MediaSource, timeline1: com.google.android.exoplayer2.Timeline): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class MediaSourceDrmHelper extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.MediaSourceDrmHelper>;
						public create(mediaItem: com.google.android.exoplayer2.MediaItem): com.google.android.exoplayer2.drm.DrmSessionManager;
						public constructor();
						public setDrmUserAgent(userAgent: string): void;
						public setDrmHttpDataSourceFactory(drmHttpDataSourceFactory: com.google.android.exoplayer2.upstream.HttpDataSource.Factory): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class MediaSourceEventListener extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.MediaSourceEventListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.source.MediaSourceEventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onLoadStarted(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							onLoadCompleted(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							onLoadCanceled(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							onLoadError(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData, error: java.io.IOException, wasCanceled: boolean): void;
							onUpstreamDiscarded(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							onDownstreamFormatChanged(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						});
						public constructor();
						public onLoadStarted(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onLoadError(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData, error: java.io.IOException, wasCanceled: boolean): void;
						public onLoadCompleted(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onDownstreamFormatChanged(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onUpstreamDiscarded(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onLoadCanceled(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
					}
					export module MediaSourceEventListener {
						export class EventDispatcher extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.MediaSourceEventListener.EventDispatcher>;
							public windowIndex: number;
							public mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
							public constructor();
							public addEventListener(handler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
							public loadError(loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, dataType: number, error: java.io.IOException, wasCanceled: boolean): void;
							public loadError(loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, dataType: number, trackType: number, trackFormat: com.google.android.exoplayer2.Format, trackSelectionReason: number, trackSelectionData: any, mediaStartTimeUs: number, mediaEndTimeUs: number, error: java.io.IOException, wasCanceled: boolean): void;
							public loadCompleted(loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, dataType: number, trackType: number, trackFormat: com.google.android.exoplayer2.Format, trackSelectionReason: number, trackSelectionData: any, mediaStartTimeUs: number, mediaEndTimeUs: number): void;
							public upstreamDiscarded(trackType: number, mediaStartTimeUs: number, mediaEndTimeUs: number): void;
							public upstreamDiscarded(mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							public loadCanceled(loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							public downstreamFormatChanged(mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							public loadError(loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData, error: java.io.IOException, wasCanceled: boolean): void;
							public downstreamFormatChanged(trackType: number, trackFormat: com.google.android.exoplayer2.Format, trackSelectionReason: number, trackSelectionData: any, mediaTimeUs: number): void;
							public loadCompleted(loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, dataType: number): void;
							public loadCanceled(loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, dataType: number, trackType: number, trackFormat: com.google.android.exoplayer2.Format, trackSelectionReason: number, trackSelectionData: any, mediaStartTimeUs: number, mediaEndTimeUs: number): void;
							public loadStarted(loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, dataType: number): void;
							public loadCanceled(loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, dataType: number): void;
							public withParameters(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, mediaTimeOffsetMs: number): com.google.android.exoplayer2.source.MediaSourceEventListener.EventDispatcher;
							public loadStarted(loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, dataType: number, trackType: number, trackFormat: com.google.android.exoplayer2.Format, trackSelectionReason: number, trackSelectionData: any, mediaStartTimeUs: number, mediaEndTimeUs: number): void;
							public removeEventListener(eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
							public loadCompleted(loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							public loadStarted(loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						}
						export module EventDispatcher {
							export class ListenerAndHandler extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.MediaSourceEventListener.EventDispatcher.ListenerAndHandler>;
								public handler: globalAndroid.os.Handler;
								public listener: com.google.android.exoplayer2.source.MediaSourceEventListener;
								public constructor(handler: globalAndroid.os.Handler, listener: com.google.android.exoplayer2.source.MediaSourceEventListener);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class MediaSourceFactory extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.MediaSourceFactory>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.source.MediaSourceFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setStreamKeys(streamKeys: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): com.google.android.exoplayer2.source.MediaSourceFactory;
							setDrmSessionManager(drmSessionManager0: com.google.android.exoplayer2.drm.DrmSessionManager): com.google.android.exoplayer2.source.MediaSourceFactory;
							setDrmHttpDataSourceFactory(factory0: com.google.android.exoplayer2.upstream.HttpDataSource.Factory): com.google.android.exoplayer2.source.MediaSourceFactory;
							setDrmUserAgent(string0: string): com.google.android.exoplayer2.source.MediaSourceFactory;
							setLoadErrorHandlingPolicy(loadErrorHandlingPolicy0: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy): com.google.android.exoplayer2.source.MediaSourceFactory;
							getSupportedTypes(): native.Array<number>;
							createMediaSource(mediaItem0: com.google.android.exoplayer2.MediaItem): com.google.android.exoplayer2.source.MediaSource;
							createMediaSource(uri: globalAndroid.net.Uri): com.google.android.exoplayer2.source.MediaSource;
						});
						public constructor();
						public getSupportedTypes(): native.Array<number>;
						public setDrmSessionManager(drmSessionManager0: com.google.android.exoplayer2.drm.DrmSessionManager): com.google.android.exoplayer2.source.MediaSourceFactory;
						public setDrmUserAgent(string0: string): com.google.android.exoplayer2.source.MediaSourceFactory;
						/** @deprecated */
						public createMediaSource(uri: globalAndroid.net.Uri): com.google.android.exoplayer2.source.MediaSource;
						/** @deprecated */
						public setStreamKeys(streamKeys: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): com.google.android.exoplayer2.source.MediaSourceFactory;
						public setDrmHttpDataSourceFactory(factory0: com.google.android.exoplayer2.upstream.HttpDataSource.Factory): com.google.android.exoplayer2.source.MediaSourceFactory;
						public setLoadErrorHandlingPolicy(loadErrorHandlingPolicy0: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy): com.google.android.exoplayer2.source.MediaSourceFactory;
						public createMediaSource(mediaItem0: com.google.android.exoplayer2.MediaItem): com.google.android.exoplayer2.source.MediaSource;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class MergingMediaPeriod extends java.lang.Object implements com.google.android.exoplayer2.source.MediaPeriod, com.google.android.exoplayer2.source.MediaPeriod.Callback {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.MergingMediaPeriod>;
						public readDiscontinuity(): number;
						public isLoading(): boolean;
						public discardBuffer(positionUs: number, toKeyframe: boolean): void;
						public constructor(compositeSequenceableLoaderFactory: com.google.android.exoplayer2.source.CompositeSequenceableLoaderFactory, periodTimeOffsetsUs: native.Array<number>, periods: native.Array<com.google.android.exoplayer2.source.MediaPeriod>);
						public prepare(callback: com.google.android.exoplayer2.source.MediaPeriod.Callback, positionUs: number): void;
						public getAdjustedSeekPositionUs(positionUs: number, seekParameters: com.google.android.exoplayer2.SeekParameters): number;
						public onPrepared(preparedPeriod: com.google.android.exoplayer2.source.MediaPeriod): void;
						public getNextLoadPositionUs(): number;
						public selectTracks(selections: native.Array<com.google.android.exoplayer2.trackselection.TrackSelection>, mayRetainStreamFlags: native.Array<boolean>, streams: native.Array<com.google.android.exoplayer2.source.SampleStream>, streamResetFlags: native.Array<boolean>, positionUs: number): number;
						public reevaluateBuffer(positionUs: number): void;
						public continueLoading(positionUs: number): boolean;
						public getBufferedPositionUs(): number;
						public seekToUs(positionUs: number): number;
						public onContinueLoadingRequested(sequenceableLoader0: any): void;
						public getTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
						public getChildPeriod(index: number): com.google.android.exoplayer2.source.MediaPeriod;
						public onContinueLoadingRequested(ignored: com.google.android.exoplayer2.source.MediaPeriod): void;
						public getStreamKeys(trackSelections: java.util.List<com.google.android.exoplayer2.trackselection.TrackSelection>): java.util.List<com.google.android.exoplayer2.offline.StreamKey>;
						public maybeThrowPrepareError(): void;
					}
					export module MergingMediaPeriod {
						export class TimeOffsetMediaPeriod extends java.lang.Object implements com.google.android.exoplayer2.source.MediaPeriod, com.google.android.exoplayer2.source.MediaPeriod.Callback {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.MergingMediaPeriod.TimeOffsetMediaPeriod>;
							public getTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
							public reevaluateBuffer(positionUs: number): void;
							public onContinueLoadingRequested(sequenceableLoader0: any): void;
							public getStreamKeys(trackSelections: java.util.List<com.google.android.exoplayer2.trackselection.TrackSelection>): java.util.List<com.google.android.exoplayer2.offline.StreamKey>;
							public seekToUs(positionUs: number): number;
							public isLoading(): boolean;
							public selectTracks(selections: native.Array<com.google.android.exoplayer2.trackselection.TrackSelection>, mayRetainStreamFlags: native.Array<boolean>, streams: native.Array<com.google.android.exoplayer2.source.SampleStream>, streamResetFlags: native.Array<boolean>, positionUs: number): number;
							public onContinueLoadingRequested(source: com.google.android.exoplayer2.source.MediaPeriod): void;
							public maybeThrowPrepareError(): void;
							public getBufferedPositionUs(): number;
							public constructor(mediaPeriod: com.google.android.exoplayer2.source.MediaPeriod, timeOffsetUs: number);
							public discardBuffer(positionUs: number, toKeyframe: boolean): void;
							public getNextLoadPositionUs(): number;
							public continueLoading(positionUs: number): boolean;
							public getAdjustedSeekPositionUs(positionUs: number, seekParameters: com.google.android.exoplayer2.SeekParameters): number;
							public onPrepared(mediaPeriod: com.google.android.exoplayer2.source.MediaPeriod): void;
							public readDiscontinuity(): number;
							public prepare(callback: com.google.android.exoplayer2.source.MediaPeriod.Callback, positionUs: number): void;
						}
						export class TimeOffsetSampleStream extends java.lang.Object implements com.google.android.exoplayer2.source.SampleStream {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.MergingMediaPeriod.TimeOffsetSampleStream>;
							public skipData(positionUs: number): number;
							public isReady(): boolean;
							public constructor(sampleStream: com.google.android.exoplayer2.source.SampleStream, timeOffsetUs: number);
							public getChildStream(): com.google.android.exoplayer2.source.SampleStream;
							public maybeThrowError(): void;
							public readData(formatHolder: com.google.android.exoplayer2.FormatHolder, buffer: com.google.android.exoplayer2.decoder.DecoderInputBuffer, formatRequired: boolean): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class MergingMediaSource extends com.google.android.exoplayer2.source.CompositeMediaSource<java.lang.Integer> {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.MergingMediaSource>;
						public onChildSourceInfoRefreshed(object0: any, mediaSource1: com.google.android.exoplayer2.source.MediaSource, timeline2: com.google.android.exoplayer2.Timeline): void;
						public removeEventListener(eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public addDrmEventListener(handler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public disable(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public getInitialTimeline(): com.google.android.exoplayer2.Timeline;
						public releasePeriod(mediaPeriod: com.google.android.exoplayer2.source.MediaPeriod): void;
						public releaseSource(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public constructor(mediaSources: native.Array<com.google.android.exoplayer2.source.MediaSource>);
						public onChildSourceInfoRefreshed(id: java.lang.Integer, mediaSource: com.google.android.exoplayer2.source.MediaSource, timeline: com.google.android.exoplayer2.Timeline): void;
						public addEventListener(handler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public prepareSource(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, mediaTransferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
						public constructor(adjustPeriodTimeOffsets: boolean, compositeSequenceableLoaderFactory: com.google.android.exoplayer2.source.CompositeSequenceableLoaderFactory, mediaSources: native.Array<com.google.android.exoplayer2.source.MediaSource>);
						public getMediaItem(): com.google.android.exoplayer2.MediaItem;
						public constructor();
						public constructor(adjustPeriodTimeOffsets: boolean, mediaSources: native.Array<com.google.android.exoplayer2.source.MediaSource>);
						public isSingleWindow(): boolean;
						public maybeThrowSourceInfoRefreshError(): void;
						public releaseSourceInternal(): void;
						public removeDrmEventListener(eventListener: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public enable(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public createPeriod(id: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, allocator: com.google.android.exoplayer2.upstream.Allocator, startPositionUs: number): com.google.android.exoplayer2.source.MediaPeriod;
						public getMediaPeriodIdForChildMediaPeriodId(id: java.lang.Integer, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
						public getMediaPeriodIdForChildMediaPeriodId(id: any, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
						public prepareSourceInternal(mediaTransferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
						/** @deprecated */
						public getTag(): any;
					}
					export module MergingMediaSource {
						export class IllegalMergeException extends java.io.IOException {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.MergingMediaSource.IllegalMergeException>;
							public static REASON_PERIOD_COUNT_MISMATCH: number;
							public reason: number;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(reason: number);
							public constructor(message: string);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
						export module IllegalMergeException {
							export class Reason extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.MergingMediaSource.IllegalMergeException.Reason>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.source.MergingMediaSource() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class ProgressiveMediaExtractor extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.ProgressiveMediaExtractor>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.source.ProgressiveMediaExtractor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							init(dataReader0: com.google.android.exoplayer2.upstream.DataReader, uri1: globalAndroid.net.Uri, map2: java.util.Map<string,java.util.List<string>>, long3: number, long4: number, extractorOutput5: com.google.android.exoplayer2.extractor.ExtractorOutput): void;
							release(): void;
							disableSeekingOnMp3Streams(): void;
							getCurrentInputPosition(): number;
							seek(long0: number, long1: number): void;
							read(positionHolder0: com.google.android.exoplayer2.extractor.PositionHolder): number;
						});
						public constructor();
						public disableSeekingOnMp3Streams(): void;
						public getCurrentInputPosition(): number;
						public release(): void;
						public seek(long0: number, long1: number): void;
						public read(positionHolder0: com.google.android.exoplayer2.extractor.PositionHolder): number;
						public init(dataReader0: com.google.android.exoplayer2.upstream.DataReader, uri1: globalAndroid.net.Uri, map2: java.util.Map<string,java.util.List<string>>, long3: number, long4: number, extractorOutput5: com.google.android.exoplayer2.extractor.ExtractorOutput): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class ProgressiveMediaPeriod extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.ProgressiveMediaPeriod>;
						public isLoading(): boolean;
						public discardBuffer(positionUs: number, toKeyframe: boolean): void;
						public endTracks(): void;
						public onLoaderReleased(): void;
						public onLoadCompleted(loadable: com.google.android.exoplayer2.source.ProgressiveMediaPeriod.ExtractingLoadable, elapsedRealtimeMs: number, loadDurationMs: number): void;
						public constructor(uri: globalAndroid.net.Uri, dataSource: com.google.android.exoplayer2.upstream.DataSource, extractorsFactory: com.google.android.exoplayer2.extractor.ExtractorsFactory, drmSessionManager: com.google.android.exoplayer2.drm.DrmSessionManager, drmEventDispatcher: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher, loadErrorHandlingPolicy: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy, mediaSourceEventDispatcher: com.google.android.exoplayer2.source.MediaSourceEventListener.EventDispatcher, listener: com.google.android.exoplayer2.source.ProgressiveMediaPeriod.Listener, allocator: com.google.android.exoplayer2.upstream.Allocator, customCacheKey: string, continueLoadingCheckIntervalBytes: number);
						public getNextLoadPositionUs(): number;
						public onLoadCanceled(loadable: com.google.android.exoplayer2.source.ProgressiveMediaPeriod.ExtractingLoadable, elapsedRealtimeMs: number, loadDurationMs: number, released: boolean): void;
						public reevaluateBuffer(positionUs: number): void;
						public getTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
						public continueLoading(playbackPositionUs: number): boolean;
						public getStreamKeys(trackSelections: java.util.List<com.google.android.exoplayer2.trackselection.TrackSelection>): java.util.List<com.google.android.exoplayer2.offline.StreamKey>;
						public readDiscontinuity(): number;
						public prepare(callback: com.google.android.exoplayer2.source.MediaPeriod.Callback, positionUs: number): void;
						public track(id: number, type: number): com.google.android.exoplayer2.extractor.TrackOutput;
						public onLoadCompleted(loadable0: any, long1: number, long2: number): void;
						public getAdjustedSeekPositionUs(positionUs: number, seekParameters: com.google.android.exoplayer2.SeekParameters): number;
						public onLoadError(loadable0: any, long1: number, long2: number, iOException3: java.io.IOException, int4: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
						public release(): void;
						public onLoadError(loadable: com.google.android.exoplayer2.source.ProgressiveMediaPeriod.ExtractingLoadable, elapsedRealtimeMs: number, loadDurationMs: number, error: java.io.IOException, errorCount: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
						public onUpstreamFormatChanged(format: com.google.android.exoplayer2.Format): void;
						public onLoadCanceled(loadable0: any, long1: number, long2: number, boolean3: boolean): void;
						public selectTracks(selections: native.Array<com.google.android.exoplayer2.trackselection.TrackSelection>, mayRetainStreamFlags: native.Array<boolean>, streams: native.Array<com.google.android.exoplayer2.source.SampleStream>, streamResetFlags: native.Array<boolean>, positionUs: number): number;
						public getBufferedPositionUs(): number;
						public seekToUs(positionUs: number): number;
						public seekMap(seekMap: com.google.android.exoplayer2.extractor.SeekMap): void;
						public maybeThrowPrepareError(): void;
					}
					export module ProgressiveMediaPeriod {
						export class ExtractingLoadable extends java.lang.Object implements com.google.android.exoplayer2.upstream.Loader.Loadable, com.google.android.exoplayer2.source.IcyDataSource.Listener {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ProgressiveMediaPeriod.ExtractingLoadable>;
							public cancelLoad(): void;
							public onIcyMetadata(metadata: com.google.android.exoplayer2.util.ParsableByteArray): void;
							public load(): void;
							public constructor(this0: com.google.android.exoplayer2.source.ProgressiveMediaPeriod, uri: globalAndroid.net.Uri, dataSource: com.google.android.exoplayer2.upstream.DataSource, progressiveMediaExtractor: com.google.android.exoplayer2.source.ProgressiveMediaExtractor, extractorOutput: com.google.android.exoplayer2.extractor.ExtractorOutput, loadCondition: com.google.android.exoplayer2.util.ConditionVariable);
						}
						export class Listener extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ProgressiveMediaPeriod.Listener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.ProgressiveMediaPeriod() when extending the interface class.
							 */
							public constructor(implementation: {
								onSourceInfoRefreshed(long0: number, boolean1: boolean, boolean2: boolean): void;
							});
							public constructor();
							public onSourceInfoRefreshed(long0: number, boolean1: boolean, boolean2: boolean): void;
						}
						export class SampleStreamImpl extends java.lang.Object implements com.google.android.exoplayer2.source.SampleStream {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ProgressiveMediaPeriod.SampleStreamImpl>;
							public skipData(positionUs: number): number;
							public constructor(param0: com.google.android.exoplayer2.source.ProgressiveMediaPeriod, track: number);
							public isReady(): boolean;
							public maybeThrowError(): void;
							public readData(formatHolder: com.google.android.exoplayer2.FormatHolder, buffer: com.google.android.exoplayer2.decoder.DecoderInputBuffer, formatRequired: boolean): number;
						}
						export class TrackId extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ProgressiveMediaPeriod.TrackId>;
							public id: number;
							public isIcyTrack: boolean;
							public hashCode(): number;
							public equals(obj: any): boolean;
							public constructor(id: number, isIcyTrack: boolean);
						}
						export class TrackState extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ProgressiveMediaPeriod.TrackState>;
							public tracks: com.google.android.exoplayer2.source.TrackGroupArray;
							public trackIsAudioVideoFlags: native.Array<boolean>;
							public trackEnabledStates: native.Array<boolean>;
							public trackNotifiedDownstreamFormats: native.Array<boolean>;
							public constructor(tracks: com.google.android.exoplayer2.source.TrackGroupArray, trackIsAudioVideoFlags: native.Array<boolean>);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class ProgressiveMediaSource extends com.google.android.exoplayer2.source.BaseMediaSource implements com.google.android.exoplayer2.source.ProgressiveMediaPeriod.Listener {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.ProgressiveMediaSource>;
						public static DEFAULT_LOADING_CHECK_INTERVAL_BYTES: number;
						public prepareSourceInternal(transferListener0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public removeEventListener(eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public addDrmEventListener(handler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public isSingleWindow(): boolean;
						public disable(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public maybeThrowSourceInfoRefreshError(): void;
						public getInitialTimeline(): com.google.android.exoplayer2.Timeline;
						public onSourceInfoRefreshed(durationUs: number, isSeekable: boolean, isLive: boolean): void;
						public releaseSourceInternal(): void;
						public removeDrmEventListener(eventListener: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public releasePeriod(mediaPeriod: com.google.android.exoplayer2.source.MediaPeriod): void;
						public releaseSource(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public enable(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public createPeriod(id: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, allocator: com.google.android.exoplayer2.upstream.Allocator, startPositionUs: number): com.google.android.exoplayer2.source.MediaPeriod;
						public prepareSourceInternal(mediaTransferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
						public addEventListener(handler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public prepareSource(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, mediaTransferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
						/** @deprecated */
						public getTag(): any;
						public getMediaItem(): com.google.android.exoplayer2.MediaItem;
					}
					export module ProgressiveMediaSource {
						export class Factory extends java.lang.Object implements com.google.android.exoplayer2.source.MediaSourceFactory {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ProgressiveMediaSource.Factory>;
							public createMediaSource(mediaItem0: com.google.android.exoplayer2.MediaItem): com.google.android.exoplayer2.source.MediaSource;
							public setDrmHttpDataSourceFactory(drmHttpDataSourceFactory: com.google.android.exoplayer2.upstream.HttpDataSource.Factory): com.google.android.exoplayer2.source.ProgressiveMediaSource.Factory;
							public createMediaSource(mediaItem: com.google.android.exoplayer2.MediaItem): com.google.android.exoplayer2.source.ProgressiveMediaSource;
							/** @deprecated */
							public setStreamKeys(streamKeys: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): com.google.android.exoplayer2.source.MediaSourceFactory;
							public setDrmHttpDataSourceFactory(factory0: com.google.android.exoplayer2.upstream.HttpDataSource.Factory): com.google.android.exoplayer2.source.MediaSourceFactory;
							public setDrmSessionManager(drmSessionManager0: com.google.android.exoplayer2.drm.DrmSessionManager): com.google.android.exoplayer2.source.MediaSourceFactory;
							public setContinueLoadingCheckIntervalBytes(continueLoadingCheckIntervalBytes: number): com.google.android.exoplayer2.source.ProgressiveMediaSource.Factory;
							/** @deprecated */
							public setTag(tag: any): com.google.android.exoplayer2.source.ProgressiveMediaSource.Factory;
							public setDrmSessionManager(drmSessionManager: com.google.android.exoplayer2.drm.DrmSessionManager): com.google.android.exoplayer2.source.ProgressiveMediaSource.Factory;
							public setDrmUserAgent(string0: string): com.google.android.exoplayer2.source.MediaSourceFactory;
							public setLoadErrorHandlingPolicy(loadErrorHandlingPolicy0: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy): com.google.android.exoplayer2.source.MediaSourceFactory;
							public setLoadErrorHandlingPolicy(loadErrorHandlingPolicy: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy): com.google.android.exoplayer2.source.ProgressiveMediaSource.Factory;
							public constructor(dataSourceFactory: com.google.android.exoplayer2.upstream.DataSource.Factory);
							public constructor(dataSourceFactory: com.google.android.exoplayer2.upstream.DataSource.Factory, extractorsFactory: com.google.android.exoplayer2.extractor.ExtractorsFactory);
							/** @deprecated */
							public setCustomCacheKey(customCacheKey: string): com.google.android.exoplayer2.source.ProgressiveMediaSource.Factory;
							public setDrmUserAgent(userAgent: string): com.google.android.exoplayer2.source.ProgressiveMediaSource.Factory;
							/** @deprecated */
							public setExtractorsFactory(extractorsFactory: com.google.android.exoplayer2.extractor.ExtractorsFactory): com.google.android.exoplayer2.source.ProgressiveMediaSource.Factory;
							/** @deprecated */
							public createMediaSource(uri: globalAndroid.net.Uri): com.google.android.exoplayer2.source.ProgressiveMediaSource;
							public getSupportedTypes(): native.Array<number>;
							/** @deprecated */
							public createMediaSource(uri: globalAndroid.net.Uri): com.google.android.exoplayer2.source.MediaSource;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class SampleDataQueue extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.SampleDataQueue>;
						public rewind(): void;
						public readToBuffer(buffer: com.google.android.exoplayer2.decoder.DecoderInputBuffer, extrasHolder: com.google.android.exoplayer2.source.SampleQueue.SampleExtrasHolder): void;
						public getTotalBytesWritten(): number;
						public sampleData(input: com.google.android.exoplayer2.upstream.DataReader, length: number, allowEndOfInput: boolean): number;
						public sampleData(buffer: com.google.android.exoplayer2.util.ParsableByteArray, length: number): void;
						public discardDownstreamTo(absolutePosition: number): void;
						public constructor(allocator: com.google.android.exoplayer2.upstream.Allocator);
						public discardUpstreamSampleBytes(totalBytesWritten: number): void;
						public reset(): void;
					}
					export module SampleDataQueue {
						export class AllocationNode extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.SampleDataQueue.AllocationNode>;
							public startPosition: number;
							public endPosition: number;
							public wasInitialized: boolean;
							public allocation: com.google.android.exoplayer2.upstream.Allocation;
							public next: com.google.android.exoplayer2.source.SampleDataQueue.AllocationNode;
							public constructor(startPosition: number, allocationLength: number);
							public translateOffset(absolutePosition: number): number;
							public clear(): com.google.android.exoplayer2.source.SampleDataQueue.AllocationNode;
							public initialize(allocation: com.google.android.exoplayer2.upstream.Allocation, next: com.google.android.exoplayer2.source.SampleDataQueue.AllocationNode): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class SampleQueue extends java.lang.Object implements com.google.android.exoplayer2.extractor.TrackOutput {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.SampleQueue>;
						public getWriteIndex(): number;
						public getReadIndex(): number;
						public peekSourceId(): number;
						public seekTo(sampleIndex: number): boolean;
						public discardSampleMetadataToRead(): number;
						public invalidateUpstreamFormatAdjustment(): void;
						public getFirstTimestampUs(): number;
						public setStartTimeUs(startTimeUs: number): void;
						public getFirstIndex(): number;
						public sampleMetadata(timeUs: number, flags: number, size: number, offset: number, cryptoData: com.google.android.exoplayer2.extractor.TrackOutput.CryptoData): void;
						public preRelease(): void;
						public getUpstreamFormat(): com.google.android.exoplayer2.Format;
						public setUpstreamFormatChangeListener(listener: com.google.android.exoplayer2.source.SampleQueue.UpstreamFormatChangedListener): void;
						public getLargestQueuedTimestampUs(): number;
						public isReady(loadingFinished: boolean): boolean;
						public getSkipCount(timeUs: number, allowEndOfQueue: boolean): number;
						public discardTo(timeUs: number, toKeyframe: boolean, stopAtReadPosition: boolean): void;
						public sampleData(input: com.google.android.exoplayer2.upstream.DataReader, length: number, allowEndOfInput: boolean): number;
						public discardUpstreamFrom(timeUs: number): void;
						public discardToRead(): void;
						public sourceId(sourceId: number): void;
						public skip(count: number): void;
						public isLastSampleQueued(): boolean;
						public release(): void;
						public sampleData(input: com.google.android.exoplayer2.upstream.DataReader, length: number, allowEndOfInput: boolean, sampleDataPart: number): number;
						public reset(resetUpstreamFormat: boolean): void;
						public getLargestReadTimestampUs(): number;
						public discardToEnd(): void;
						public read(formatHolder: com.google.android.exoplayer2.FormatHolder, buffer: com.google.android.exoplayer2.decoder.DecoderInputBuffer, formatRequired: boolean, loadingFinished: boolean): number;
						public format(unadjustedUpstreamFormat: com.google.android.exoplayer2.Format): void;
						public splice(): void;
						public setSampleOffsetUs(sampleOffsetUs: number): void;
						public sampleData(data: com.google.android.exoplayer2.util.ParsableByteArray, length: number): void;
						public constructor(allocator: com.google.android.exoplayer2.upstream.Allocator, playbackLooper: globalAndroid.os.Looper, drmSessionManager: com.google.android.exoplayer2.drm.DrmSessionManager, drmEventDispatcher: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher);
						public discardUpstreamSamples(discardFromIndex: number): void;
						public maybeThrowError(): void;
						public reset(): void;
						public seekTo(timeUs: number, allowTimeBeyondBuffer: boolean): boolean;
						public getAdjustedUpstreamFormat(format: com.google.android.exoplayer2.Format): com.google.android.exoplayer2.Format;
						public sampleData(buffer: com.google.android.exoplayer2.util.ParsableByteArray, length: number, sampleDataPart: number): void;
					}
					export module SampleQueue {
						export class SampleExtrasHolder extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.SampleQueue.SampleExtrasHolder>;
							public size: number;
							public offset: number;
							public cryptoData: com.google.android.exoplayer2.extractor.TrackOutput.CryptoData;
						}
						export class UpstreamFormatChangedListener extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.SampleQueue.UpstreamFormatChangedListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.SampleQueue() when extending the interface class.
							 */
							public constructor(implementation: {
								onUpstreamFormatChanged(format0: com.google.android.exoplayer2.Format): void;
							});
							public constructor();
							public onUpstreamFormatChanged(format0: com.google.android.exoplayer2.Format): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class SampleStream extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.SampleStream>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.source.SampleStream interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							isReady(): boolean;
							maybeThrowError(): void;
							readData(formatHolder0: com.google.android.exoplayer2.FormatHolder, decoderInputBuffer1: com.google.android.exoplayer2.decoder.DecoderInputBuffer, boolean2: boolean): number;
							skipData(long0: number): number;
						});
						public constructor();
						public isReady(): boolean;
						public readData(formatHolder0: com.google.android.exoplayer2.FormatHolder, decoderInputBuffer1: com.google.android.exoplayer2.decoder.DecoderInputBuffer, boolean2: boolean): number;
						public maybeThrowError(): void;
						public skipData(long0: number): number;
					}
					export module SampleStream {
						export class ReadDataResult extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.SampleStream.ReadDataResult>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.SampleStream() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class SequenceableLoader extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.SequenceableLoader>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.source.SequenceableLoader interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getBufferedPositionUs(): number;
							getNextLoadPositionUs(): number;
							continueLoading(long0: number): boolean;
							isLoading(): boolean;
							reevaluateBuffer(long0: number): void;
						});
						public constructor();
						public reevaluateBuffer(long0: number): void;
						public isLoading(): boolean;
						public getNextLoadPositionUs(): number;
						public continueLoading(long0: number): boolean;
						public getBufferedPositionUs(): number;
					}
					export module SequenceableLoader {
						export class Callback<T>  extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.SequenceableLoader.Callback<any>>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.SequenceableLoader() when extending the interface class.
							 */
							public constructor(implementation: {
								onContinueLoadingRequested(sequenceableLoader0: T): void;
							});
							public constructor();
							public onContinueLoadingRequested(sequenceableLoader0: T): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class ShuffleOrder extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.ShuffleOrder>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.source.ShuffleOrder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getLength(): number;
							getNextIndex(int0: number): number;
							getPreviousIndex(int0: number): number;
							getLastIndex(): number;
							getFirstIndex(): number;
							cloneAndInsert(int0: number, int1: number): com.google.android.exoplayer2.source.ShuffleOrder;
							cloneAndRemove(int0: number, int1: number): com.google.android.exoplayer2.source.ShuffleOrder;
							cloneAndClear(): com.google.android.exoplayer2.source.ShuffleOrder;
						});
						public constructor();
						public getLastIndex(): number;
						public cloneAndInsert(int0: number, int1: number): com.google.android.exoplayer2.source.ShuffleOrder;
						public cloneAndRemove(int0: number, int1: number): com.google.android.exoplayer2.source.ShuffleOrder;
						public getLength(): number;
						public getNextIndex(int0: number): number;
						public getFirstIndex(): number;
						public getPreviousIndex(int0: number): number;
						public cloneAndClear(): com.google.android.exoplayer2.source.ShuffleOrder;
					}
					export module ShuffleOrder {
						export class DefaultShuffleOrder extends java.lang.Object implements com.google.android.exoplayer2.source.ShuffleOrder {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ShuffleOrder.DefaultShuffleOrder>;
							public getLength(): number;
							public constructor(length: number);
							public cloneAndInsert(insertionIndex: number, insertionCount: number): com.google.android.exoplayer2.source.ShuffleOrder;
							public getLastIndex(): number;
							public constructor(length: number, randomSeed: number);
							public getNextIndex(index: number): number;
							public getFirstIndex(): number;
							public cloneAndClear(): com.google.android.exoplayer2.source.ShuffleOrder;
							public constructor(shuffledIndices: native.Array<number>, randomSeed: number);
							public getPreviousIndex(index: number): number;
							public cloneAndRemove(indexFrom: number, indexToExclusive: number): com.google.android.exoplayer2.source.ShuffleOrder;
						}
						export class UnshuffledShuffleOrder extends java.lang.Object implements com.google.android.exoplayer2.source.ShuffleOrder {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ShuffleOrder.UnshuffledShuffleOrder>;
							public getLength(): number;
							public constructor(length: number);
							public cloneAndInsert(insertionIndex: number, insertionCount: number): com.google.android.exoplayer2.source.ShuffleOrder;
							public getLastIndex(): number;
							public getNextIndex(index: number): number;
							public getFirstIndex(): number;
							public cloneAndClear(): com.google.android.exoplayer2.source.ShuffleOrder;
							public getPreviousIndex(index: number): number;
							public cloneAndRemove(indexFrom: number, indexToExclusive: number): com.google.android.exoplayer2.source.ShuffleOrder;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class SilenceMediaSource extends com.google.android.exoplayer2.source.BaseMediaSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.SilenceMediaSource>;
						public static MEDIA_ID: string;
						public prepareSourceInternal(transferListener0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public removeEventListener(eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public addDrmEventListener(handler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public constructor();
						public constructor(durationUs: number);
						public isSingleWindow(): boolean;
						public disable(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public maybeThrowSourceInfoRefreshError(): void;
						public getInitialTimeline(): com.google.android.exoplayer2.Timeline;
						public releaseSourceInternal(): void;
						public removeDrmEventListener(eventListener: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public releasePeriod(mediaPeriod: com.google.android.exoplayer2.source.MediaPeriod): void;
						public releaseSource(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public enable(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public createPeriod(id: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, allocator: com.google.android.exoplayer2.upstream.Allocator, startPositionUs: number): com.google.android.exoplayer2.source.MediaPeriod;
						public prepareSourceInternal(mediaTransferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
						public addEventListener(handler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public prepareSource(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, mediaTransferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
						/** @deprecated */
						public getTag(): any;
						public getMediaItem(): com.google.android.exoplayer2.MediaItem;
					}
					export module SilenceMediaSource {
						export class Factory extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.SilenceMediaSource.Factory>;
							public constructor();
							public createMediaSource(): com.google.android.exoplayer2.source.SilenceMediaSource;
							public setDurationUs(durationUs: number): com.google.android.exoplayer2.source.SilenceMediaSource.Factory;
							public setTag(tag: any): com.google.android.exoplayer2.source.SilenceMediaSource.Factory;
						}
						export class SilenceMediaPeriod extends java.lang.Object implements com.google.android.exoplayer2.source.MediaPeriod {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.SilenceMediaSource.SilenceMediaPeriod>;
							public constructor(durationUs: number);
							public getTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
							public reevaluateBuffer(positionUs: number): void;
							public seekToUs(positionUs: number): number;
							public getStreamKeys(trackSelections: java.util.List<com.google.android.exoplayer2.trackselection.TrackSelection>): java.util.List<com.google.android.exoplayer2.offline.StreamKey>;
							public isLoading(): boolean;
							public selectTracks(selections: native.Array<com.google.android.exoplayer2.trackselection.TrackSelection>, mayRetainStreamFlags: native.Array<boolean>, streams: native.Array<com.google.android.exoplayer2.source.SampleStream>, streamResetFlags: native.Array<boolean>, positionUs: number): number;
							public maybeThrowPrepareError(): void;
							public getBufferedPositionUs(): number;
							public discardBuffer(positionUs: number, toKeyframe: boolean): void;
							public getNextLoadPositionUs(): number;
							public continueLoading(positionUs: number): boolean;
							public getAdjustedSeekPositionUs(positionUs: number, seekParameters: com.google.android.exoplayer2.SeekParameters): number;
							public readDiscontinuity(): number;
							public prepare(callback: com.google.android.exoplayer2.source.MediaPeriod.Callback, positionUs: number): void;
						}
						export class SilenceSampleStream extends java.lang.Object implements com.google.android.exoplayer2.source.SampleStream {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.SilenceMediaSource.SilenceSampleStream>;
							public constructor(durationUs: number);
							public seekTo(positionUs: number): void;
							public skipData(positionUs: number): number;
							public isReady(): boolean;
							public maybeThrowError(): void;
							public readData(formatHolder: com.google.android.exoplayer2.FormatHolder, buffer: com.google.android.exoplayer2.decoder.DecoderInputBuffer, formatRequired: boolean): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class SinglePeriodTimeline extends com.google.android.exoplayer2.Timeline {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.SinglePeriodTimeline>;
						/** @deprecated */
						public constructor(durationUs: number, isSeekable: boolean, isDynamic: boolean, isLive: boolean, manifest: any, tag: any);
						public constructor();
						public getWindow(windowIndex: number, window: com.google.android.exoplayer2.Timeline.Window, defaultPositionProjectionUs: number): com.google.android.exoplayer2.Timeline.Window;
						public constructor(durationUs: number, isSeekable: boolean, isDynamic: boolean, isLive: boolean, manifest: any, mediaItem: com.google.android.exoplayer2.MediaItem);
						public getIndexOfPeriod(uid: any): number;
						public getWindowCount(): number;
						/** @deprecated */
						public constructor(presentationStartTimeMs: number, windowStartTimeMs: number, elapsedRealtimeEpochOffsetMs: number, periodDurationUs: number, windowDurationUs: number, windowPositionInPeriodUs: number, windowDefaultStartPositionUs: number, isSeekable: boolean, isDynamic: boolean, isLive: boolean, manifest: any, tag: any);
						public getPeriod(periodIndex: number, period: com.google.android.exoplayer2.Timeline.Period, setIds: boolean): com.google.android.exoplayer2.Timeline.Period;
						/** @deprecated */
						public getWindow(windowIndex: number, window: com.google.android.exoplayer2.Timeline.Window, setTag: boolean): com.google.android.exoplayer2.Timeline.Window;
						public getPeriod(int0: number, period1: com.google.android.exoplayer2.Timeline.Period, boolean2: boolean): com.google.android.exoplayer2.Timeline.Period;
						public constructor(presentationStartTimeMs: number, windowStartTimeMs: number, elapsedRealtimeEpochOffsetMs: number, periodDurationUs: number, windowDurationUs: number, windowPositionInPeriodUs: number, windowDefaultStartPositionUs: number, isSeekable: boolean, isDynamic: boolean, isLive: boolean, manifest: any, mediaItem: com.google.android.exoplayer2.MediaItem);
						public getPeriod(periodIndex: number, period: com.google.android.exoplayer2.Timeline.Period): com.google.android.exoplayer2.Timeline.Period;
						public constructor(periodDurationUs: number, windowDurationUs: number, windowPositionInPeriodUs: number, windowDefaultStartPositionUs: number, isSeekable: boolean, isDynamic: boolean, isLive: boolean, manifest: any, mediaItem: com.google.android.exoplayer2.MediaItem);
						public getWindow(windowIndex: number, window: com.google.android.exoplayer2.Timeline.Window): com.google.android.exoplayer2.Timeline.Window;
						public getUidOfPeriod(periodIndex: number): any;
						public getWindow(int0: number, window1: com.google.android.exoplayer2.Timeline.Window, long2: number): com.google.android.exoplayer2.Timeline.Window;
						public getIndexOfPeriod(object0: any): number;
						/** @deprecated */
						public constructor(periodDurationUs: number, windowDurationUs: number, windowPositionInPeriodUs: number, windowDefaultStartPositionUs: number, isSeekable: boolean, isDynamic: boolean, isLive: boolean, manifest: any, tag: any);
						public getPeriodCount(): number;
						public getUidOfPeriod(int0: number): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class SingleSampleMediaPeriod extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.SingleSampleMediaPeriod>;
						public readDiscontinuity(): number;
						public isLoading(): boolean;
						public discardBuffer(positionUs: number, toKeyframe: boolean): void;
						public prepare(callback: com.google.android.exoplayer2.source.MediaPeriod.Callback, positionUs: number): void;
						public onLoadCompleted(loadable: com.google.android.exoplayer2.source.SingleSampleMediaPeriod.SourceLoadable, elapsedRealtimeMs: number, loadDurationMs: number): void;
						public onLoadCompleted(loadable0: any, long1: number, long2: number): void;
						public getAdjustedSeekPositionUs(positionUs: number, seekParameters: com.google.android.exoplayer2.SeekParameters): number;
						public onLoadError(loadable: com.google.android.exoplayer2.source.SingleSampleMediaPeriod.SourceLoadable, elapsedRealtimeMs: number, loadDurationMs: number, error: java.io.IOException, errorCount: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
						public onLoadError(loadable0: any, long1: number, long2: number, iOException3: java.io.IOException, int4: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
						public constructor(dataSpec: com.google.android.exoplayer2.upstream.DataSpec, dataSourceFactory: com.google.android.exoplayer2.upstream.DataSource.Factory, transferListener: com.google.android.exoplayer2.upstream.TransferListener, format: com.google.android.exoplayer2.Format, durationUs: number, loadErrorHandlingPolicy: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy, eventDispatcher: com.google.android.exoplayer2.source.MediaSourceEventListener.EventDispatcher, treatLoadErrorsAsEndOfStream: boolean);
						public release(): void;
						public onLoadCanceled(loadable0: any, long1: number, long2: number, boolean3: boolean): void;
						public getNextLoadPositionUs(): number;
						public onLoadCanceled(loadable: com.google.android.exoplayer2.source.SingleSampleMediaPeriod.SourceLoadable, elapsedRealtimeMs: number, loadDurationMs: number, released: boolean): void;
						public selectTracks(selections: native.Array<com.google.android.exoplayer2.trackselection.TrackSelection>, mayRetainStreamFlags: native.Array<boolean>, streams: native.Array<com.google.android.exoplayer2.source.SampleStream>, streamResetFlags: native.Array<boolean>, positionUs: number): number;
						public reevaluateBuffer(positionUs: number): void;
						public continueLoading(positionUs: number): boolean;
						public getBufferedPositionUs(): number;
						public seekToUs(positionUs: number): number;
						public getTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
						public getStreamKeys(trackSelections: java.util.List<com.google.android.exoplayer2.trackselection.TrackSelection>): java.util.List<com.google.android.exoplayer2.offline.StreamKey>;
						public maybeThrowPrepareError(): void;
					}
					export module SingleSampleMediaPeriod {
						export class SampleStreamImpl extends java.lang.Object implements com.google.android.exoplayer2.source.SampleStream {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.SingleSampleMediaPeriod.SampleStreamImpl>;
							public skipData(positionUs: number): number;
							public isReady(): boolean;
							public readData(formatHolder: com.google.android.exoplayer2.FormatHolder, buffer: com.google.android.exoplayer2.decoder.DecoderInputBuffer, requireFormat: boolean): number;
							public maybeThrowError(): void;
							public reset(): void;
						}
						export class SourceLoadable extends java.lang.Object implements com.google.android.exoplayer2.upstream.Loader.Loadable {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.SingleSampleMediaPeriod.SourceLoadable>;
							public loadTaskId: number;
							public dataSpec: com.google.android.exoplayer2.upstream.DataSpec;
							public constructor(dataSpec: com.google.android.exoplayer2.upstream.DataSpec, dataSource: com.google.android.exoplayer2.upstream.DataSource);
							public cancelLoad(): void;
							public load(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class SingleSampleMediaSource extends com.google.android.exoplayer2.source.BaseMediaSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.SingleSampleMediaSource>;
						public prepareSourceInternal(transferListener0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public removeEventListener(eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public addDrmEventListener(handler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public constructor();
						public isSingleWindow(): boolean;
						public disable(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public maybeThrowSourceInfoRefreshError(): void;
						public getInitialTimeline(): com.google.android.exoplayer2.Timeline;
						/** @deprecated */
						public constructor(uri: globalAndroid.net.Uri, dataSourceFactory: com.google.android.exoplayer2.upstream.DataSource.Factory, format: com.google.android.exoplayer2.Format, durationUs: number, minLoadableRetryCount: number, eventHandler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.source.SingleSampleMediaSource.EventListener, eventSourceId: number, treatLoadErrorsAsEndOfStream: boolean);
						/** @deprecated */
						public constructor(uri: globalAndroid.net.Uri, dataSourceFactory: com.google.android.exoplayer2.upstream.DataSource.Factory, format: com.google.android.exoplayer2.Format, durationUs: number, minLoadableRetryCount: number);
						public releaseSourceInternal(): void;
						public removeDrmEventListener(eventListener: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public releasePeriod(mediaPeriod: com.google.android.exoplayer2.source.MediaPeriod): void;
						public releaseSource(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public enable(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						/** @deprecated */
						public constructor(uri: globalAndroid.net.Uri, dataSourceFactory: com.google.android.exoplayer2.upstream.DataSource.Factory, format: com.google.android.exoplayer2.Format, durationUs: number);
						public createPeriod(id: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, allocator: com.google.android.exoplayer2.upstream.Allocator, startPositionUs: number): com.google.android.exoplayer2.source.MediaPeriod;
						public prepareSourceInternal(mediaTransferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
						public addEventListener(handler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public prepareSource(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, mediaTransferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
						/** @deprecated */
						public getTag(): any;
						public getMediaItem(): com.google.android.exoplayer2.MediaItem;
					}
					export module SingleSampleMediaSource {
						export class EventListener extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.SingleSampleMediaSource.EventListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.SingleSampleMediaSource() when extending the interface class.
							 */
							public constructor(implementation: {
								onLoadError(int0: number, iOException1: java.io.IOException): void;
							});
							public constructor();
							public onLoadError(int0: number, iOException1: java.io.IOException): void;
						}
						export class EventListenerWrapper extends java.lang.Object implements com.google.android.exoplayer2.source.MediaSourceEventListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.SingleSampleMediaSource.EventListenerWrapper>;
							public onDownstreamFormatChanged(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							public onLoadStarted(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							public onLoadCompleted(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							public constructor(eventListener: com.google.android.exoplayer2.source.SingleSampleMediaSource.EventListener, eventSourceId: number);
							public onLoadError(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData, error: java.io.IOException, wasCanceled: boolean): void;
							public onLoadCanceled(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
							public onUpstreamDiscarded(windowIndex: number, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						}
						export class Factory extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.SingleSampleMediaSource.Factory>;
							public setLoadErrorHandlingPolicy(loadErrorHandlingPolicy: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy): com.google.android.exoplayer2.source.SingleSampleMediaSource.Factory;
							public setTreatLoadErrorsAsEndOfStream(treatLoadErrorsAsEndOfStream: boolean): com.google.android.exoplayer2.source.SingleSampleMediaSource.Factory;
							public constructor(dataSourceFactory: com.google.android.exoplayer2.upstream.DataSource.Factory);
							/** @deprecated */
							public setMinLoadableRetryCount(minLoadableRetryCount: number): com.google.android.exoplayer2.source.SingleSampleMediaSource.Factory;
							public setTrackId(trackId: string): com.google.android.exoplayer2.source.SingleSampleMediaSource.Factory;
							public createMediaSource(subtitle: com.google.android.exoplayer2.MediaItem.Subtitle, durationUs: number): com.google.android.exoplayer2.source.SingleSampleMediaSource;
							/** @deprecated */
							public createMediaSource(uri: globalAndroid.net.Uri, format: com.google.android.exoplayer2.Format, durationUs: number): com.google.android.exoplayer2.source.SingleSampleMediaSource;
							public setTag(tag: any): com.google.android.exoplayer2.source.SingleSampleMediaSource.Factory;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class TrackGroup extends java.lang.Object implements globalAndroid.os.Parcelable {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.TrackGroup>;
						public length: number;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.source.TrackGroup>;
						public equals(obj: any): boolean;
						public describeContents(): number;
						public getFormat(index: number): com.google.android.exoplayer2.Format;
						public hashCode(): number;
						public constructor(formats: native.Array<com.google.android.exoplayer2.Format>);
						public indexOf(format: com.google.android.exoplayer2.Format): number;
						public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class TrackGroupArray extends java.lang.Object implements globalAndroid.os.Parcelable {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.TrackGroupArray>;
						public static EMPTY: com.google.android.exoplayer2.source.TrackGroupArray;
						public length: number;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.source.TrackGroupArray>;
						public constructor(trackGroups: native.Array<com.google.android.exoplayer2.source.TrackGroup>);
						public get(index: number): com.google.android.exoplayer2.source.TrackGroup;
						public equals(obj: any): boolean;
						public describeContents(): number;
						public isEmpty(): boolean;
						public hashCode(): number;
						public indexOf(group: com.google.android.exoplayer2.source.TrackGroup): number;
						public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class UnrecognizedInputFormatException extends com.google.android.exoplayer2.ParserException {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.UnrecognizedInputFormatException>;
						public uri: globalAndroid.net.Uri;
						public constructor();
						public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						public constructor(message: string, uri: globalAndroid.net.Uri);
						public constructor(cause: java.lang.Throwable);
						public constructor(message: string, cause: java.lang.Throwable);
						public constructor(message: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module ads {
						export class AdPlaybackState extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ads.AdPlaybackState>;
							public static AD_STATE_UNAVAILABLE: number;
							public static AD_STATE_AVAILABLE: number;
							public static AD_STATE_SKIPPED: number;
							public static AD_STATE_PLAYED: number;
							public static AD_STATE_ERROR: number;
							public static NONE: com.google.android.exoplayer2.source.ads.AdPlaybackState;
							public adGroupCount: number;
							public adGroupTimesUs: native.Array<number>;
							public adGroups: native.Array<com.google.android.exoplayer2.source.ads.AdPlaybackState.AdGroup>;
							public adResumePositionUs: number;
							public contentDurationUs: number;
							public withAdDurationsUs(adDurationUs: native.Array<native.Array<number>>): com.google.android.exoplayer2.source.ads.AdPlaybackState;
							public hashCode(): number;
							public withContentDurationUs(contentDurationUs: number): com.google.android.exoplayer2.source.ads.AdPlaybackState;
							public equals(obj: any): boolean;
							public isAdInErrorState(adGroupIndex: number, adIndexInAdGroup: number): boolean;
							public withPlayedAd(adGroupIndex: number, adIndexInAdGroup: number): com.google.android.exoplayer2.source.ads.AdPlaybackState;
							public withAdResumePositionUs(adResumePositionUs: number): com.google.android.exoplayer2.source.ads.AdPlaybackState;
							public toString(): string;
							public withAdUri(adGroupIndex: number, adIndexInAdGroup: number, uri: globalAndroid.net.Uri): com.google.android.exoplayer2.source.ads.AdPlaybackState;
							public constructor(adGroupTimesUs: native.Array<number>);
							public withSkippedAdGroup(adGroupIndex: number): com.google.android.exoplayer2.source.ads.AdPlaybackState;
							public withSkippedAd(adGroupIndex: number, adIndexInAdGroup: number): com.google.android.exoplayer2.source.ads.AdPlaybackState;
							public getAdGroupIndexForPositionUs(positionUs: number, periodDurationUs: number): number;
							public equals(o: any): boolean;
							public getAdGroupIndexAfterPositionUs(positionUs: number, periodDurationUs: number): number;
							public withAdLoadError(adGroupIndex: number, adIndexInAdGroup: number): com.google.android.exoplayer2.source.ads.AdPlaybackState;
							public withAdCount(adGroupIndex: number, adCount: number): com.google.android.exoplayer2.source.ads.AdPlaybackState;
						}
						export module AdPlaybackState {
							export class AdGroup extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.ads.AdPlaybackState.AdGroup>;
								public count: number;
								public uris: native.Array<globalAndroid.net.Uri>;
								public states: native.Array<number>;
								public durationsUs: native.Array<number>;
								public getNextAdIndexToPlay(lastPlayedAdIndex: number): number;
								public equals(obj: any): boolean;
								public withAllAdsSkipped(): com.google.android.exoplayer2.source.ads.AdPlaybackState.AdGroup;
								public getFirstAdIndexToPlay(): number;
								public hasUnplayedAds(): boolean;
								public withAdState(state: number, index: number): com.google.android.exoplayer2.source.ads.AdPlaybackState.AdGroup;
								public constructor();
								public withAdCount(count: number): com.google.android.exoplayer2.source.ads.AdPlaybackState.AdGroup;
								public equals(o: any): boolean;
								public withAdDurationsUs(durationsUs: native.Array<number>): com.google.android.exoplayer2.source.ads.AdPlaybackState.AdGroup;
								public hashCode(): number;
								public withAdUri(uri: globalAndroid.net.Uri, index: number): com.google.android.exoplayer2.source.ads.AdPlaybackState.AdGroup;
							}
							export class AdState extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.ads.AdPlaybackState.AdState>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.source.ads.AdPlaybackState() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module ads {
						export class AdsLoader extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ads.AdsLoader>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.ads.AdsLoader interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								setPlayer(player0: com.google.android.exoplayer2.Player): void;
								release(): void;
								setSupportedContentTypes(ints0: native.Array<number>): void;
								setAdTagDataSpec(dataSpec0: com.google.android.exoplayer2.upstream.DataSpec): void;
								start(eventListener0: com.google.android.exoplayer2.source.ads.AdsLoader.EventListener, adViewProvider1: com.google.android.exoplayer2.source.ads.AdsLoader.AdViewProvider): void;
								stop(): void;
								handlePrepareComplete(int0: number, int1: number): void;
								handlePrepareError(int0: number, int1: number, iOException2: java.io.IOException): void;
							});
							public constructor();
							public setPlayer(player0: com.google.android.exoplayer2.Player): void;
							public handlePrepareComplete(int0: number, int1: number): void;
							public start(eventListener0: com.google.android.exoplayer2.source.ads.AdsLoader.EventListener, adViewProvider1: com.google.android.exoplayer2.source.ads.AdsLoader.AdViewProvider): void;
							public handlePrepareError(int0: number, int1: number, iOException2: java.io.IOException): void;
							public stop(): void;
							public release(): void;
							public setAdTagDataSpec(dataSpec0: com.google.android.exoplayer2.upstream.DataSpec): void;
							public setSupportedContentTypes(ints0: native.Array<number>): void;
						}
						export module AdsLoader {
							export class AdViewProvider extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.ads.AdsLoader.AdViewProvider>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.source.ads.AdsLoader() when extending the interface class.
								 */
								public constructor(implementation: {
									getAdViewGroup(): globalAndroid.view.ViewGroup;
									getAdOverlayViews(): native.Array<globalAndroid.view.View>;
									getAdOverlayInfos(): java.util.List<com.google.android.exoplayer2.source.ads.AdsLoader.OverlayInfo>;
								});
								public constructor();
								public getAdOverlayInfos(): java.util.List<com.google.android.exoplayer2.source.ads.AdsLoader.OverlayInfo>;
								/** @deprecated */
								public getAdOverlayViews(): native.Array<globalAndroid.view.View>;
								public getAdViewGroup(): globalAndroid.view.ViewGroup;
							}
							export class EventListener extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.ads.AdsLoader.EventListener>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.source.ads.AdsLoader() when extending the interface class.
								 */
								public constructor(implementation: {
									onAdPlaybackState(adPlaybackState: com.google.android.exoplayer2.source.ads.AdPlaybackState): void;
									onAdLoadError(error: com.google.android.exoplayer2.source.ads.AdsMediaSource.AdLoadException, dataSpec: com.google.android.exoplayer2.upstream.DataSpec): void;
									onAdClicked(): void;
									onAdTapped(): void;
								});
								public constructor();
								public onAdClicked(): void;
								public onAdTapped(): void;
								public onAdLoadError(error: com.google.android.exoplayer2.source.ads.AdsMediaSource.AdLoadException, dataSpec: com.google.android.exoplayer2.upstream.DataSpec): void;
								public onAdPlaybackState(adPlaybackState: com.google.android.exoplayer2.source.ads.AdPlaybackState): void;
							}
							export class OverlayInfo extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.ads.AdsLoader.OverlayInfo>;
								public static PURPOSE_CONTROLS: number;
								public static PURPOSE_CLOSE_AD: number;
								public static PURPOSE_OTHER: number;
								public static PURPOSE_NOT_VISIBLE: number;
								public view: globalAndroid.view.View;
								public purpose: number;
								public reasonDetail: string;
								public constructor(view: globalAndroid.view.View, purpose: number);
								public constructor(view: globalAndroid.view.View, purpose: number, detailedReason: string);
							}
							export module OverlayInfo {
								export class Purpose extends java.lang.Object implements java.lang.annotation.Annotation {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.ads.AdsLoader.OverlayInfo.Purpose>;
									/**
									 * Constructs a new instance of the com.google.android.exoplayer2.source.ads.AdsLoader() when extending the interface class.
									 */
									public constructor(implementation: {
										equals(object0: any): boolean;
										hashCode(): number;
										toString(): string;
										annotationType(): java.lang.Class<any>;
									});
									public constructor();
									public hashCode(): number;
									public annotationType(): java.lang.Class<any>;
									public equals(obj: any): boolean;
									public toString(): string;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module ads {
						export class AdsMediaSource extends com.google.android.exoplayer2.source.CompositeMediaSource<com.google.android.exoplayer2.source.MediaSource.MediaPeriodId> {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ads.AdsMediaSource>;
							public addEventListener(handler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
							public getMediaItem(): com.google.android.exoplayer2.MediaItem;
							public prepareSource(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, mediaTransferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
							public onChildSourceInfoRefreshed(mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, mediaSource: com.google.android.exoplayer2.source.MediaSource, timeline: com.google.android.exoplayer2.Timeline): void;
							public getMediaPeriodIdForChildMediaPeriodId(id: any, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
							public getInitialTimeline(): com.google.android.exoplayer2.Timeline;
							public addDrmEventListener(handler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
							public constructor(contentMediaSource: com.google.android.exoplayer2.source.MediaSource, adTagDataSpec: com.google.android.exoplayer2.upstream.DataSpec, adMediaSourceFactory: com.google.android.exoplayer2.source.MediaSourceFactory, adsLoader: com.google.android.exoplayer2.source.ads.AdsLoader, adViewProvider: com.google.android.exoplayer2.source.ads.AdsLoader.AdViewProvider);
							public prepareSourceInternal(mediaTransferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
							public constructor();
							public enable(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
							public onChildSourceInfoRefreshed(object0: any, mediaSource1: com.google.android.exoplayer2.source.MediaSource, timeline2: com.google.android.exoplayer2.Timeline): void;
							public releasePeriod(mediaPeriod: com.google.android.exoplayer2.source.MediaPeriod): void;
							public releaseSourceInternal(): void;
							/** @deprecated */
							public getTag(): any;
							public maybeThrowSourceInfoRefreshError(): void;
							public isSingleWindow(): boolean;
							/** @deprecated */
							public constructor(contentMediaSource: com.google.android.exoplayer2.source.MediaSource, adMediaSourceFactory: com.google.android.exoplayer2.source.MediaSourceFactory, adsLoader: com.google.android.exoplayer2.source.ads.AdsLoader, adViewProvider: com.google.android.exoplayer2.source.ads.AdsLoader.AdViewProvider);
							public releaseSource(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
							public disable(caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
							/** @deprecated */
							public constructor(contentMediaSource: com.google.android.exoplayer2.source.MediaSource, dataSourceFactory: com.google.android.exoplayer2.upstream.DataSource.Factory, adsLoader: com.google.android.exoplayer2.source.ads.AdsLoader, adViewProvider: com.google.android.exoplayer2.source.ads.AdsLoader.AdViewProvider);
							public removeDrmEventListener(eventListener: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
							public removeEventListener(eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
							public createPeriod(id: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, allocator: com.google.android.exoplayer2.upstream.Allocator, startPositionUs: number): com.google.android.exoplayer2.source.MediaPeriod;
							public getMediaPeriodIdForChildMediaPeriodId(childId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
						}
						export module AdsMediaSource {
							export class AdLoadException extends java.io.IOException {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.ads.AdsMediaSource.AdLoadException>;
								public static TYPE_AD: number;
								public static TYPE_AD_GROUP: number;
								public static TYPE_ALL_ADS: number;
								public static TYPE_UNEXPECTED: number;
								public type: number;
								public static createForAd(error: java.lang.Exception): com.google.android.exoplayer2.source.ads.AdsMediaSource.AdLoadException;
								public static createForUnexpected(error: java.lang.RuntimeException): com.google.android.exoplayer2.source.ads.AdsMediaSource.AdLoadException;
								public static createForAdGroup(error: java.lang.Exception, adGroupIndex: number): com.google.android.exoplayer2.source.ads.AdsMediaSource.AdLoadException;
								public getRuntimeExceptionForUnexpected(): java.lang.RuntimeException;
								public static createForAllAds(error: java.lang.Exception): com.google.android.exoplayer2.source.ads.AdsMediaSource.AdLoadException;
							}
							export module AdLoadException {
								export class Type extends java.lang.Object implements java.lang.annotation.Annotation {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.ads.AdsMediaSource.AdLoadException.Type>;
									/**
									 * Constructs a new instance of the com.google.android.exoplayer2.source.ads.AdsMediaSource() when extending the interface class.
									 */
									public constructor(implementation: {
										equals(object0: any): boolean;
										hashCode(): number;
										toString(): string;
										annotationType(): java.lang.Class<any>;
									});
									public constructor();
									public hashCode(): number;
									public annotationType(): java.lang.Class<any>;
									public equals(obj: any): boolean;
									public toString(): string;
								}
							}
							export class AdMediaSourceHolder extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.ads.AdsMediaSource.AdMediaSourceHolder>;
								public getDurationUs(): number;
								public constructor(param0: com.google.android.exoplayer2.source.ads.AdsMediaSource, adMediaSource: com.google.android.exoplayer2.source.MediaSource);
								public createMediaPeriod(adUri: globalAndroid.net.Uri, id: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, allocator: com.google.android.exoplayer2.upstream.Allocator, startPositionUs: number): com.google.android.exoplayer2.source.MediaPeriod;
								public isInactive(): boolean;
								public releaseMediaPeriod(maskingMediaPeriod: com.google.android.exoplayer2.source.MaskingMediaPeriod): void;
								public handleSourceInfoRefresh(timeline: com.google.android.exoplayer2.Timeline): void;
							}
							export class AdPrepareListener extends java.lang.Object implements com.google.android.exoplayer2.source.MaskingMediaPeriod.PrepareListener {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.ads.AdsMediaSource.AdPrepareListener>;
								public constructor(param0: com.google.android.exoplayer2.source.ads.AdsMediaSource, adUri: globalAndroid.net.Uri);
								public onPrepareError(mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, exception: java.io.IOException): void;
								public onPrepareComplete(mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
							}
							export class ComponentListener extends java.lang.Object implements com.google.android.exoplayer2.source.ads.AdsLoader.EventListener {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.ads.AdsMediaSource.ComponentListener>;
								public constructor(param0: com.google.android.exoplayer2.source.ads.AdsMediaSource);
								public onAdClicked(): void;
								public onAdTapped(): void;
								public release(): void;
								public onAdLoadError(error: com.google.android.exoplayer2.source.ads.AdsMediaSource.AdLoadException, dataSpec: com.google.android.exoplayer2.upstream.DataSpec): void;
								public onAdPlaybackState(adPlaybackState: com.google.android.exoplayer2.source.ads.AdPlaybackState): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module ads {
						export class SinglePeriodAdTimeline extends com.google.android.exoplayer2.source.ForwardingTimeline {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ads.SinglePeriodAdTimeline>;
							public constructor();
							public getPeriod(periodIndex: number, period: com.google.android.exoplayer2.Timeline.Period, setIds: boolean): com.google.android.exoplayer2.Timeline.Period;
							public constructor(timeline: com.google.android.exoplayer2.Timeline);
							public constructor(contentTimeline: com.google.android.exoplayer2.Timeline, adPlaybackState: com.google.android.exoplayer2.source.ads.AdPlaybackState);
							public getPeriod(periodIndex: number, period: com.google.android.exoplayer2.Timeline.Period): com.google.android.exoplayer2.Timeline.Period;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module chunk {
						export abstract class BaseMediaChunk extends com.google.android.exoplayer2.source.chunk.MediaChunk {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.BaseMediaChunk>;
							public clippedStartTimeUs: number;
							public clippedEndTimeUs: number;
							public constructor(dataSource: com.google.android.exoplayer2.upstream.DataSource, dataSpec: com.google.android.exoplayer2.upstream.DataSpec, trackFormat: com.google.android.exoplayer2.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number, chunkIndex: number);
							public cancelLoad(): void;
							public constructor(dataSource: com.google.android.exoplayer2.upstream.DataSource, dataSpec: com.google.android.exoplayer2.upstream.DataSpec, trackFormat: com.google.android.exoplayer2.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number, clippedStartTimeUs: number, clippedEndTimeUs: number, chunkIndex: number);
							public getFirstSampleIndex(trackIndex: number): number;
							public init(output: com.google.android.exoplayer2.source.chunk.BaseMediaChunkOutput): void;
							public load(): void;
							public constructor(dataSource: com.google.android.exoplayer2.upstream.DataSource, dataSpec: com.google.android.exoplayer2.upstream.DataSpec, type: number, trackFormat: com.google.android.exoplayer2.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number);
							public getOutput(): com.google.android.exoplayer2.source.chunk.BaseMediaChunkOutput;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module chunk {
						export abstract class BaseMediaChunkIterator extends java.lang.Object implements com.google.android.exoplayer2.source.chunk.MediaChunkIterator {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.BaseMediaChunkIterator>;
							public constructor(fromIndex: number, toIndex: number);
							public isEnded(): boolean;
							public checkInBounds(): void;
							public getCurrentIndex(): number;
							public getChunkEndTimeUs(): number;
							public getChunkStartTimeUs(): number;
							public next(): boolean;
							public getDataSpec(): com.google.android.exoplayer2.upstream.DataSpec;
							public reset(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module chunk {
						export class BaseMediaChunkOutput extends java.lang.Object implements com.google.android.exoplayer2.source.chunk.ChunkExtractor.TrackOutputProvider {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.BaseMediaChunkOutput>;
							public getWriteIndices(): native.Array<number>;
							public track(id: number, type: number): com.google.android.exoplayer2.extractor.TrackOutput;
							public setSampleOffsetUs(sampleOffsetUs: number): void;
							public constructor(trackTypes: native.Array<number>, sampleQueues: native.Array<com.google.android.exoplayer2.source.SampleQueue>);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module chunk {
						export class BundledChunkExtractor extends java.lang.Object implements com.google.android.exoplayer2.extractor.ExtractorOutput, com.google.android.exoplayer2.source.chunk.ChunkExtractor {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.BundledChunkExtractor>;
							public getChunkIndex(): com.google.android.exoplayer2.extractor.ChunkIndex;
							public read(input: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							public constructor(extractor: com.google.android.exoplayer2.extractor.Extractor, primaryTrackType: number, primaryTrackManifestFormat: com.google.android.exoplayer2.Format);
							public getSampleFormats(): native.Array<com.google.android.exoplayer2.Format>;
							public release(): void;
							public init(trackOutputProvider: com.google.android.exoplayer2.source.chunk.ChunkExtractor.TrackOutputProvider, startTimeUs: number, endTimeUs: number): void;
							public track(id: number, type: number): com.google.android.exoplayer2.extractor.TrackOutput;
							public endTracks(): void;
							public seekMap(seekMap: com.google.android.exoplayer2.extractor.SeekMap): void;
						}
						export module BundledChunkExtractor {
							export class BindingTrackOutput extends java.lang.Object implements com.google.android.exoplayer2.extractor.TrackOutput {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.BundledChunkExtractor.BindingTrackOutput>;
								public sampleFormat: com.google.android.exoplayer2.Format;
								public sampleMetadata(timeUs: number, flags: number, size: number, offset: number, cryptoData: com.google.android.exoplayer2.extractor.TrackOutput.CryptoData): void;
								public sampleData(input: com.google.android.exoplayer2.upstream.DataReader, length: number, allowEndOfInput: boolean): number;
								public bind(trackOutputProvider: com.google.android.exoplayer2.source.chunk.ChunkExtractor.TrackOutputProvider, endTimeUs: number): void;
								public format(format: com.google.android.exoplayer2.Format): void;
								public constructor(id: number, type: number, manifestFormat: com.google.android.exoplayer2.Format);
								public sampleData(input: com.google.android.exoplayer2.upstream.DataReader, length: number, allowEndOfInput: boolean, sampleDataPart: number): number;
								public sampleData(data: com.google.android.exoplayer2.util.ParsableByteArray, length: number, sampleDataPart: number): void;
								public sampleData(data: com.google.android.exoplayer2.util.ParsableByteArray, length: number): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module chunk {
						export abstract class Chunk extends java.lang.Object implements com.google.android.exoplayer2.upstream.Loader.Loadable {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.Chunk>;
							public loadTaskId: number;
							public dataSpec: com.google.android.exoplayer2.upstream.DataSpec;
							public type: number;
							public trackFormat: com.google.android.exoplayer2.Format;
							public trackSelectionReason: number;
							public trackSelectionData: any;
							public startTimeUs: number;
							public endTimeUs: number;
							public dataSource: com.google.android.exoplayer2.upstream.StatsDataSource;
							public cancelLoad(): void;
							public getUri(): globalAndroid.net.Uri;
							public getDurationUs(): number;
							public load(): void;
							public constructor(dataSource: com.google.android.exoplayer2.upstream.DataSource, dataSpec: com.google.android.exoplayer2.upstream.DataSpec, type: number, trackFormat: com.google.android.exoplayer2.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number);
							public bytesLoaded(): number;
							public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module chunk {
						export class ChunkExtractor extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.ChunkExtractor>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.chunk.ChunkExtractor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getChunkIndex(): com.google.android.exoplayer2.extractor.ChunkIndex;
								getSampleFormats(): native.Array<com.google.android.exoplayer2.Format>;
								init(trackOutputProvider0: com.google.android.exoplayer2.source.chunk.ChunkExtractor.TrackOutputProvider, long1: number, long2: number): void;
								release(): void;
								read(extractorInput0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							});
							public constructor();
							public getChunkIndex(): com.google.android.exoplayer2.extractor.ChunkIndex;
							public init(trackOutputProvider0: com.google.android.exoplayer2.source.chunk.ChunkExtractor.TrackOutputProvider, long1: number, long2: number): void;
							public read(extractorInput0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							public getSampleFormats(): native.Array<com.google.android.exoplayer2.Format>;
							public release(): void;
						}
						export module ChunkExtractor {
							export class TrackOutputProvider extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.ChunkExtractor.TrackOutputProvider>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.source.chunk.ChunkExtractor() when extending the interface class.
								 */
								public constructor(implementation: {
									track(int0: number, int1: number): com.google.android.exoplayer2.extractor.TrackOutput;
								});
								public constructor();
								public track(int0: number, int1: number): com.google.android.exoplayer2.extractor.TrackOutput;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module chunk {
						export class ChunkHolder extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.ChunkHolder>;
							public chunk: com.google.android.exoplayer2.source.chunk.Chunk;
							public endOfStream: boolean;
							public constructor();
							public clear(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module chunk {
						export class ChunkSampleStream<T>  extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.ChunkSampleStream<any>>;
							public primaryTrackType: number;
							public onLoadCompleted(loadable0: T, long1: number, long2: number): void;
							public selectEmbeddedTrack(positionUs: number, trackType: number): com.google.android.exoplayer2.source.chunk.ChunkSampleStream.EmbeddedSampleStream;
							public skipData(positionUs: number): number;
							public reevaluateBuffer(positionUs: number): void;
							public isReady(): boolean;
							public isLoading(): boolean;
							public onLoadError(loadable: com.google.android.exoplayer2.source.chunk.Chunk, elapsedRealtimeMs: number, loadDurationMs: number, error: java.io.IOException, errorCount: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
							public onLoadError(loadable0: T, long1: number, long2: number, iOException3: java.io.IOException, int4: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
							public release(): void;
							public constructor(primaryTrackType: number, embeddedTrackTypes: native.Array<number>, embeddedTrackFormats: native.Array<com.google.android.exoplayer2.Format>, chunkSource: T, callback: com.google.android.exoplayer2.source.SequenceableLoader.Callback<com.google.android.exoplayer2.source.chunk.ChunkSampleStream<T>>, allocator: com.google.android.exoplayer2.upstream.Allocator, positionUs: number, drmSessionManager: com.google.android.exoplayer2.drm.DrmSessionManager, drmEventDispatcher: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher, loadErrorHandlingPolicy: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy, mediaSourceEventDispatcher: com.google.android.exoplayer2.source.MediaSourceEventListener.EventDispatcher);
							public getChunkSource(): T;
							public getBufferedPositionUs(): number;
							public readData(formatHolder: com.google.android.exoplayer2.FormatHolder, buffer: com.google.android.exoplayer2.decoder.DecoderInputBuffer, formatRequired: boolean): number;
							public discardBuffer(positionUs: number, toKeyframe: boolean): void;
							public getNextLoadPositionUs(): number;
							public onLoadCanceled(loadable0: T, long1: number, long2: number, boolean3: boolean): void;
							public continueLoading(positionUs: number): boolean;
							public seekToUs(positionUs: number): void;
							public onLoadCompleted(loadable: com.google.android.exoplayer2.source.chunk.Chunk, elapsedRealtimeMs: number, loadDurationMs: number): void;
							public onLoadCanceled(loadable: com.google.android.exoplayer2.source.chunk.Chunk, elapsedRealtimeMs: number, loadDurationMs: number, released: boolean): void;
							public getAdjustedSeekPositionUs(positionUs: number, seekParameters: com.google.android.exoplayer2.SeekParameters): number;
							public onLoaderReleased(): void;
							public release(callback: com.google.android.exoplayer2.source.chunk.ChunkSampleStream.ReleaseCallback<T>): void;
							public maybeThrowError(): void;
						}
						export module ChunkSampleStream {
							export class EmbeddedSampleStream extends java.lang.Object implements com.google.android.exoplayer2.source.SampleStream {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.ChunkSampleStream.EmbeddedSampleStream>;
								public parent: com.google.android.exoplayer2.source.chunk.ChunkSampleStream<any>;
								public readData(formatHolder: com.google.android.exoplayer2.FormatHolder, buffer: com.google.android.exoplayer2.decoder.DecoderInputBuffer, formatRequired: boolean): number;
								public isReady(): boolean;
								public skipData(positionUs: number): number;
								public release(): void;
								public constructor(this0: com.google.android.exoplayer2.source.chunk.ChunkSampleStream<any>, parent: com.google.android.exoplayer2.source.SampleQueue, sampleQueue: number);
								public maybeThrowError(): void;
							}
							export class ReleaseCallback<T>  extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.ChunkSampleStream.ReleaseCallback<any>>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.source.chunk.ChunkSampleStream() when extending the interface class.
								 */
								public constructor(implementation: {
									onSampleStreamReleased(chunkSampleStream0: com.google.android.exoplayer2.source.chunk.ChunkSampleStream<T>): void;
								});
								public constructor();
								public onSampleStreamReleased(chunkSampleStream0: com.google.android.exoplayer2.source.chunk.ChunkSampleStream<T>): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module chunk {
						export class ChunkSource extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.ChunkSource>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.chunk.ChunkSource interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getAdjustedSeekPositionUs(long0: number, seekParameters1: com.google.android.exoplayer2.SeekParameters): number;
								maybeThrowError(): void;
								getPreferredQueueSize(long0: number, list1: java.util.List<any>): number;
								shouldCancelLoad(long0: number, chunk1: com.google.android.exoplayer2.source.chunk.Chunk, list2: java.util.List<any>): boolean;
								getNextChunk(long0: number, long1: number, list2: java.util.List<any>, chunkHolder3: com.google.android.exoplayer2.source.chunk.ChunkHolder): void;
								onChunkLoadCompleted(chunk0: com.google.android.exoplayer2.source.chunk.Chunk): void;
								onChunkLoadError(chunk0: com.google.android.exoplayer2.source.chunk.Chunk, boolean1: boolean, exception2: java.lang.Exception, long3: number): boolean;
								release(): void;
							});
							public constructor();
							public getAdjustedSeekPositionUs(long0: number, seekParameters1: com.google.android.exoplayer2.SeekParameters): number;
							public getNextChunk(long0: number, long1: number, list2: java.util.List<any>, chunkHolder3: com.google.android.exoplayer2.source.chunk.ChunkHolder): void;
							public onChunkLoadCompleted(chunk0: com.google.android.exoplayer2.source.chunk.Chunk): void;
							public shouldCancelLoad(long0: number, chunk1: com.google.android.exoplayer2.source.chunk.Chunk, list2: java.util.List<any>): boolean;
							public onChunkLoadError(chunk0: com.google.android.exoplayer2.source.chunk.Chunk, boolean1: boolean, exception2: java.lang.Exception, long3: number): boolean;
							public release(): void;
							public maybeThrowError(): void;
							public getPreferredQueueSize(long0: number, list1: java.util.List<any>): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module chunk {
						export class ContainerMediaChunk extends com.google.android.exoplayer2.source.chunk.BaseMediaChunk {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.ContainerMediaChunk>;
							public constructor(dataSource: com.google.android.exoplayer2.upstream.DataSource, dataSpec: com.google.android.exoplayer2.upstream.DataSpec, trackFormat: com.google.android.exoplayer2.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number, chunkIndex: number);
							public isLoadCompleted(): boolean;
							public cancelLoad(): void;
							public constructor(dataSource: com.google.android.exoplayer2.upstream.DataSource, dataSpec: com.google.android.exoplayer2.upstream.DataSpec, trackFormat: com.google.android.exoplayer2.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number, clippedStartTimeUs: number, clippedEndTimeUs: number, chunkIndex: number);
							public load(): void;
							public getTrackOutputProvider(baseMediaChunkOutput: com.google.android.exoplayer2.source.chunk.BaseMediaChunkOutput): com.google.android.exoplayer2.source.chunk.ChunkExtractor.TrackOutputProvider;
							public getNextChunkIndex(): number;
							public constructor(dataSource: com.google.android.exoplayer2.upstream.DataSource, dataSpec: com.google.android.exoplayer2.upstream.DataSpec, type: number, trackFormat: com.google.android.exoplayer2.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number);
							public constructor(dataSource: com.google.android.exoplayer2.upstream.DataSource, dataSpec: com.google.android.exoplayer2.upstream.DataSpec, trackFormat: com.google.android.exoplayer2.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number, clippedStartTimeUs: number, clippedEndTimeUs: number, chunkIndex: number, chunkCount: number, sampleOffsetUs: number, chunkExtractor: com.google.android.exoplayer2.source.chunk.ChunkExtractor);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module chunk {
						export abstract class DataChunk extends com.google.android.exoplayer2.source.chunk.Chunk {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.DataChunk>;
							public constructor(dataSource: com.google.android.exoplayer2.upstream.DataSource, dataSpec: com.google.android.exoplayer2.upstream.DataSpec, type: number, trackFormat: com.google.android.exoplayer2.Format, trackSelectionReason: number, trackSelectionData: any, data: native.Array<number>);
							public cancelLoad(): void;
							public consume(bytes0: native.Array<number>, int1: number): void;
							public getDataHolder(): native.Array<number>;
							public load(): void;
							public constructor(dataSource: com.google.android.exoplayer2.upstream.DataSource, dataSpec: com.google.android.exoplayer2.upstream.DataSpec, type: number, trackFormat: com.google.android.exoplayer2.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module chunk {
						export class InitializationChunk extends com.google.android.exoplayer2.source.chunk.Chunk {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.InitializationChunk>;
							public cancelLoad(): void;
							public init(trackOutputProvider: com.google.android.exoplayer2.source.chunk.ChunkExtractor.TrackOutputProvider): void;
							public load(): void;
							public constructor(dataSource: com.google.android.exoplayer2.upstream.DataSource, dataSpec: com.google.android.exoplayer2.upstream.DataSpec, trackFormat: com.google.android.exoplayer2.Format, trackSelectionReason: number, trackSelectionData: any, chunkExtractor: com.google.android.exoplayer2.source.chunk.ChunkExtractor);
							public constructor(dataSource: com.google.android.exoplayer2.upstream.DataSource, dataSpec: com.google.android.exoplayer2.upstream.DataSpec, type: number, trackFormat: com.google.android.exoplayer2.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module chunk {
						export abstract class MediaChunk extends com.google.android.exoplayer2.source.chunk.Chunk {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.MediaChunk>;
							public chunkIndex: number;
							public constructor(dataSource: com.google.android.exoplayer2.upstream.DataSource, dataSpec: com.google.android.exoplayer2.upstream.DataSpec, trackFormat: com.google.android.exoplayer2.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number, chunkIndex: number);
							public isLoadCompleted(): boolean;
							public cancelLoad(): void;
							public load(): void;
							public getNextChunkIndex(): number;
							public constructor(dataSource: com.google.android.exoplayer2.upstream.DataSource, dataSpec: com.google.android.exoplayer2.upstream.DataSpec, type: number, trackFormat: com.google.android.exoplayer2.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module chunk {
						export class MediaChunkIterator extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.MediaChunkIterator>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.chunk.MediaChunkIterator interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								isEnded(): boolean;
								next(): boolean;
								getDataSpec(): com.google.android.exoplayer2.upstream.DataSpec;
								getChunkStartTimeUs(): number;
								getChunkEndTimeUs(): number;
								reset(): void;
							});
							public constructor();
							public static EMPTY: com.google.android.exoplayer2.source.chunk.MediaChunkIterator;
							public isEnded(): boolean;
							public getChunkEndTimeUs(): number;
							public getChunkStartTimeUs(): number;
							public next(): boolean;
							public getDataSpec(): com.google.android.exoplayer2.upstream.DataSpec;
							public reset(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module chunk {
						export class SingleSampleMediaChunk extends com.google.android.exoplayer2.source.chunk.BaseMediaChunk {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.SingleSampleMediaChunk>;
							public constructor(dataSource: com.google.android.exoplayer2.upstream.DataSource, dataSpec: com.google.android.exoplayer2.upstream.DataSpec, trackFormat: com.google.android.exoplayer2.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number, chunkIndex: number);
							public isLoadCompleted(): boolean;
							public cancelLoad(): void;
							public constructor(dataSource: com.google.android.exoplayer2.upstream.DataSource, dataSpec: com.google.android.exoplayer2.upstream.DataSpec, trackFormat: com.google.android.exoplayer2.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number, clippedStartTimeUs: number, clippedEndTimeUs: number, chunkIndex: number);
							public constructor(dataSource: com.google.android.exoplayer2.upstream.DataSource, dataSpec: com.google.android.exoplayer2.upstream.DataSpec, trackFormat: com.google.android.exoplayer2.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number, chunkIndex: number, trackType: number, sampleFormat: com.google.android.exoplayer2.Format);
							public load(): void;
							public constructor(dataSource: com.google.android.exoplayer2.upstream.DataSource, dataSpec: com.google.android.exoplayer2.upstream.DataSpec, type: number, trackFormat: com.google.android.exoplayer2.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number);
						}
					}
				}
			}
		}
	}
}



declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export class CaptionStyleCompat extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.text.CaptionStyleCompat>;
						public static EDGE_TYPE_NONE: number;
						public static EDGE_TYPE_OUTLINE: number;
						public static EDGE_TYPE_DROP_SHADOW: number;
						public static EDGE_TYPE_RAISED: number;
						public static EDGE_TYPE_DEPRESSED: number;
						public static USE_TRACK_COLOR_SETTINGS: number;
						public static DEFAULT: com.google.android.exoplayer2.text.CaptionStyleCompat;
						public foregroundColor: number;
						public backgroundColor: number;
						public windowColor: number;
						public edgeType: number;
						public edgeColor: number;
						public typeface: globalAndroid.graphics.Typeface;
						public static createFromCaptionStyle(captionStyle: globalAndroid.view.accessibility.CaptioningManager.CaptionStyle): com.google.android.exoplayer2.text.CaptionStyleCompat;
						public constructor(foregroundColor: number, backgroundColor: number, windowColor: number, edgeType: number, edgeColor: number, typeface: globalAndroid.graphics.Typeface);
					}
					export module CaptionStyleCompat {
						export class EdgeType extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.CaptionStyleCompat.EdgeType>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.text.CaptionStyleCompat() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export class Cue extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.text.Cue>;
						public static EMPTY: com.google.android.exoplayer2.text.Cue;
						public static DIMEN_UNSET: number;
						public static TYPE_UNSET: number;
						public static ANCHOR_TYPE_START: number;
						public static ANCHOR_TYPE_MIDDLE: number;
						public static ANCHOR_TYPE_END: number;
						public static LINE_TYPE_FRACTION: number;
						public static LINE_TYPE_NUMBER: number;
						public static TEXT_SIZE_TYPE_FRACTIONAL: number;
						public static TEXT_SIZE_TYPE_FRACTIONAL_IGNORE_PADDING: number;
						public static TEXT_SIZE_TYPE_ABSOLUTE: number;
						public static VERTICAL_TYPE_RL: number;
						public static VERTICAL_TYPE_LR: number;
						public text: string;
						public textAlignment: globalAndroid.text.Layout.Alignment;
						public bitmap: globalAndroid.graphics.Bitmap;
						public line: number;
						public lineType: number;
						public lineAnchor: number;
						public position: number;
						public positionAnchor: number;
						public size: number;
						public bitmapHeight: number;
						public windowColorSet: boolean;
						public windowColor: number;
						public textSizeType: number;
						public textSize: number;
						public verticalType: number;
						/** @deprecated */
						public constructor(text: string, textAlignment: globalAndroid.text.Layout.Alignment, line: number, lineType: number, lineAnchor: number, position: number, positionAnchor: number, size: number, textSizeType: number, textSize: number);
						/** @deprecated */
						public constructor(text: string);
						/** @deprecated */
						public constructor(text: string, textAlignment: globalAndroid.text.Layout.Alignment, line: number, lineType: number, lineAnchor: number, position: number, positionAnchor: number, size: number, windowColorSet: boolean, windowColor: number);
						/** @deprecated */
						public constructor(text: string, textAlignment: globalAndroid.text.Layout.Alignment, line: number, lineType: number, lineAnchor: number, position: number, positionAnchor: number, size: number);
						public buildUpon(): com.google.android.exoplayer2.text.Cue.Builder;
					}
					export module Cue {
						export class AnchorType extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.Cue.AnchorType>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.text.Cue() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
						export class Builder extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.Cue.Builder>;
							public setVerticalType(verticalType: number): com.google.android.exoplayer2.text.Cue.Builder;
							public setPositionAnchor(positionAnchor: number): com.google.android.exoplayer2.text.Cue.Builder;
							public getLine(): number;
							public getPosition(): number;
							public clearWindowColor(): com.google.android.exoplayer2.text.Cue.Builder;
							public getTextSizeType(): number;
							public setWindowColor(windowColor: number): com.google.android.exoplayer2.text.Cue.Builder;
							public getTextSize(): number;
							public getSize(): number;
							public setTextSize(textSize: number, textSizeType: number): com.google.android.exoplayer2.text.Cue.Builder;
							public build(): com.google.android.exoplayer2.text.Cue;
							public setText(text: string): com.google.android.exoplayer2.text.Cue.Builder;
							public constructor();
							public getText(): string;
							public setSize(size: number): com.google.android.exoplayer2.text.Cue.Builder;
							public getTextAlignment(): globalAndroid.text.Layout.Alignment;
							public getWindowColor(): number;
							public getBitmap(): globalAndroid.graphics.Bitmap;
							public setLineAnchor(lineAnchor: number): com.google.android.exoplayer2.text.Cue.Builder;
							public getLineAnchor(): number;
							public setLine(line: number, lineType: number): com.google.android.exoplayer2.text.Cue.Builder;
							public getLineType(): number;
							public isWindowColorSet(): boolean;
							public setTextAlignment(textAlignment: globalAndroid.text.Layout.Alignment): com.google.android.exoplayer2.text.Cue.Builder;
							public getBitmapHeight(): number;
							public getVerticalType(): number;
							public getPositionAnchor(): number;
							public setBitmap(bitmap: globalAndroid.graphics.Bitmap): com.google.android.exoplayer2.text.Cue.Builder;
							public setBitmapHeight(bitmapHeight: number): com.google.android.exoplayer2.text.Cue.Builder;
							public setPosition(position: number): com.google.android.exoplayer2.text.Cue.Builder;
						}
						export class LineType extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.Cue.LineType>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.text.Cue() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
						export class TextSizeType extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.Cue.TextSizeType>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.text.Cue() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
						export class VerticalType extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.Cue.VerticalType>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.text.Cue() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export abstract class SimpleSubtitleDecoder extends com.google.android.exoplayer2.decoder.SimpleDecoder<com.google.android.exoplayer2.text.SubtitleInputBuffer,com.google.android.exoplayer2.text.SubtitleOutputBuffer,com.google.android.exoplayer2.text.SubtitleDecoderException> implements com.google.android.exoplayer2.text.SubtitleDecoder  {
						public static class: java.lang.Class<com.google.android.exoplayer2.text.SimpleSubtitleDecoder>;
						public createUnexpectedDecodeException(throwable0: java.lang.Throwable): any;
						public createOutputBuffer(): any;
						public decode(inputBuffer: com.google.android.exoplayer2.text.SubtitleInputBuffer, outputBuffer: com.google.android.exoplayer2.text.SubtitleOutputBuffer, reset: boolean): com.google.android.exoplayer2.text.SubtitleDecoderException;
						public createUnexpectedDecodeException(error: java.lang.Throwable): com.google.android.exoplayer2.text.SubtitleDecoderException;
						public constructor(inputBuffers: native.Array<any>, outputBuffers: native.Array<any>);
						public dequeueInputBuffer(): any;
						public flush(): void;
						public createInputBuffer(): com.google.android.exoplayer2.text.SubtitleInputBuffer;
						public release(): void;
						public getName(): string;
						public constructor(name: string);
						public createInputBuffer(): any;
						public decode(decoderInputBuffer0: any, outputBuffer1: any, boolean2: boolean): any;
						public queueInputBuffer(object0: any): void;
						public queueInputBuffer(inputBuffer: any): void;
						public createOutputBuffer(): com.google.android.exoplayer2.text.SubtitleOutputBuffer;
						public dequeueOutputBuffer(): any;
						public decode(bytes0: native.Array<number>, int1: number, boolean2: boolean): com.google.android.exoplayer2.text.Subtitle;
						public setPositionUs(timeUs: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export class SimpleSubtitleOutputBuffer extends com.google.android.exoplayer2.text.SubtitleOutputBuffer {
						public static class: java.lang.Class<com.google.android.exoplayer2.text.SimpleSubtitleOutputBuffer>;
						public getCues(timeUs: number): java.util.List<com.google.android.exoplayer2.text.Cue>;
						public constructor();
						public getEventTimeCount(): number;
						public constructor(owner: com.google.android.exoplayer2.decoder.OutputBuffer.Owner<com.google.android.exoplayer2.text.SubtitleOutputBuffer>);
						public release(): void;
						public getNextEventTimeIndex(timeUs: number): number;
						public getEventTime(index: number): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export class Subtitle extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.text.Subtitle>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.text.Subtitle interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getNextEventTimeIndex(long0: number): number;
							getEventTimeCount(): number;
							getEventTime(int0: number): number;
							getCues(long0: number): java.util.List<com.google.android.exoplayer2.text.Cue>;
						});
						public constructor();
						public getNextEventTimeIndex(long0: number): number;
						public getEventTimeCount(): number;
						public getEventTime(int0: number): number;
						public getCues(long0: number): java.util.List<com.google.android.exoplayer2.text.Cue>;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export class SubtitleDecoder extends com.google.android.exoplayer2.decoder.Decoder<com.google.android.exoplayer2.text.SubtitleInputBuffer,com.google.android.exoplayer2.text.SubtitleOutputBuffer,com.google.android.exoplayer2.text.SubtitleDecoderException> {
						public static class: java.lang.Class<com.google.android.exoplayer2.text.SubtitleDecoder>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.text.SubtitleDecoder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setPositionUs(long0: number): void;
							getName(): string;
							dequeueInputBuffer(): any;
							queueInputBuffer(object0: any): void;
							dequeueOutputBuffer(): any;
							flush(): void;
							release(): void;
						});
						public constructor();
						public queueInputBuffer(object0: any): void;
						public dequeueInputBuffer(): any;
						public flush(): void;
						public release(): void;
						public setPositionUs(long0: number): void;
						public getName(): string;
						public dequeueOutputBuffer(): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export class SubtitleDecoderException extends com.google.android.exoplayer2.decoder.DecoderException {
						public static class: java.lang.Class<com.google.android.exoplayer2.text.SubtitleDecoderException>;
						public constructor();
						public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						public constructor(cause: java.lang.Throwable);
						public constructor(message: string, cause: java.lang.Throwable);
						public constructor(message: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export class SubtitleDecoderFactory extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.text.SubtitleDecoderFactory>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.text.SubtitleDecoderFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							supportsFormat(format0: com.google.android.exoplayer2.Format): boolean;
							createDecoder(format0: com.google.android.exoplayer2.Format): com.google.android.exoplayer2.text.SubtitleDecoder;
						});
						public constructor();
						public static DEFAULT: com.google.android.exoplayer2.text.SubtitleDecoderFactory;
						public supportsFormat(format0: com.google.android.exoplayer2.Format): boolean;
						public createDecoder(format0: com.google.android.exoplayer2.Format): com.google.android.exoplayer2.text.SubtitleDecoder;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export class SubtitleInputBuffer extends com.google.android.exoplayer2.decoder.DecoderInputBuffer {
						public static class: java.lang.Class<com.google.android.exoplayer2.text.SubtitleInputBuffer>;
						public subsampleOffsetUs: number;
						public constructor();
						public constructor(bufferReplacementMode: number, paddingSize: number);
						public constructor(bufferReplacementMode: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export abstract class SubtitleOutputBuffer extends com.google.android.exoplayer2.decoder.OutputBuffer implements com.google.android.exoplayer2.text.Subtitle {
						public static class: java.lang.Class<com.google.android.exoplayer2.text.SubtitleOutputBuffer>;
						public getCues(timeUs: number): java.util.List<com.google.android.exoplayer2.text.Cue>;
						public constructor();
						public getEventTimeCount(): number;
						public clear(): void;
						public getNextEventTimeIndex(timeUs: number): number;
						public getEventTime(index: number): number;
						public setContent(timeUs: number, subtitle: com.google.android.exoplayer2.text.Subtitle, subsampleOffsetUs: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export class TextOutput extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.text.TextOutput>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.text.TextOutput interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onCues(list0: java.util.List<com.google.android.exoplayer2.text.Cue>): void;
						});
						public constructor();
						public onCues(list0: java.util.List<com.google.android.exoplayer2.text.Cue>): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export class TextRenderer extends com.google.android.exoplayer2.BaseRenderer implements globalAndroid.os.Handler.Callback {
						public static class: java.lang.Class<com.google.android.exoplayer2.text.TextRenderer>;
						public render(positionUs: number, elapsedRealtimeUs: number): void;
						public supportsFormat(format: com.google.android.exoplayer2.Format): number;
						public setOperatingRate(operatingRate: number): void;
						public getName(): string;
						public handleMessage(msg: globalAndroid.os.Message): boolean;
						public static getFormatSupport(supportFlags: number): number;
						public getMediaClock(): com.google.android.exoplayer2.util.MediaClock;
						public isCurrentStreamFinal(): boolean;
						public resetPosition(positionUs: number): void;
						public constructor(trackType: number);
						public static create(formatSupport: number, adaptiveSupport: number, tunnelingSupport: number): number;
						public getStream(): com.google.android.exoplayer2.source.SampleStream;
						public constructor(output: com.google.android.exoplayer2.text.TextOutput, outputLooper: globalAndroid.os.Looper, decoderFactory: com.google.android.exoplayer2.text.SubtitleDecoderFactory);
						public static create(formatSupport: number): number;
						public onDisabled(): void;
						public static getAdaptiveSupport(supportFlags: number): number;
						public isEnded(): boolean;
						public getCapabilities(): com.google.android.exoplayer2.RendererCapabilities;
						public static getTunnelingSupport(supportFlags: number): number;
						public onPositionReset(positionUs: number, joining: boolean): void;
						public setCurrentStreamFinal(): void;
						public hasReadStreamToEnd(): boolean;
						public isReady(): boolean;
						public enable(configuration: com.google.android.exoplayer2.RendererConfiguration, formats: native.Array<com.google.android.exoplayer2.Format>, stream: com.google.android.exoplayer2.source.SampleStream, positionUs: number, joining: boolean, mayRenderStartOfStream: boolean, startPositionUs: number, offsetUs: number): void;
						public disable(): void;
						public getTrackType(): number;
						public supportsMixedMimeTypeAdaptation(): number;
						public stop(): void;
						public constructor(output: com.google.android.exoplayer2.text.TextOutput, outputLooper: globalAndroid.os.Looper);
						public static getFormatSupportString(formatSupport: number): string;
						public start(): void;
						public setIndex(index: number): void;
						public getState(): number;
						public maybeThrowStreamError(): void;
						public onStreamChanged(formats: native.Array<com.google.android.exoplayer2.Format>, startPositionUs: number, offsetUs: number): void;
						public getReadingPositionUs(): number;
						public handleMessage(what: number, object: any): void;
						public reset(): void;
						public replaceStream(formats: native.Array<com.google.android.exoplayer2.Format>, stream: com.google.android.exoplayer2.source.SampleStream, startPositionUs: number, offsetUs: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module cea {
						export class Cea608Decoder extends com.google.android.exoplayer2.text.cea.CeaDecoder {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.cea.Cea608Decoder>;
							public static MIN_DATA_CHANNEL_TIMEOUT_MS: number;
							public constructor();
							public createSubtitle(): com.google.android.exoplayer2.text.Subtitle;
							public decode(inputBuffer: com.google.android.exoplayer2.text.SubtitleInputBuffer): void;
							public getName(): string;
							public flush(): void;
							public setPositionUs(positionUs: number): void;
							public release(): void;
							public decode(subtitleInputBuffer0: com.google.android.exoplayer2.text.SubtitleInputBuffer): void;
							public constructor(mimeType: string, accessibilityChannel: number, validDataChannelTimeoutMs: number);
							public isNewSubtitleDataAvailable(): boolean;
							public dequeueOutputBuffer(): com.google.android.exoplayer2.text.SubtitleOutputBuffer;
						}
						export module Cea608Decoder {
							export class CueBuilder extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.cea.Cea608Decoder.CueBuilder>;
								public backspace(): void;
								public reset(captionMode: number): void;
								public setCaptionMode(captionMode: number): void;
								public setCaptionRowCount(captionRowCount: number): void;
								public isEmpty(): boolean;
								public constructor(captionMode: number, captionRowCount: number);
								public append(text: string): void;
								public rollUp(): void;
								public build(forcedPositionAnchor: number): com.google.android.exoplayer2.text.Cue;
								public setStyle(style: number, underline: boolean): void;
							}
							export module CueBuilder {
								export class CueStyle extends java.lang.Object {
									public static class: java.lang.Class<com.google.android.exoplayer2.text.cea.Cea608Decoder.CueBuilder.CueStyle>;
									public style: number;
									public underline: boolean;
									public start: number;
									public constructor(style: number, underline: boolean, start: number);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module cea {
						export class Cea708Decoder extends com.google.android.exoplayer2.text.cea.CeaDecoder {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.cea.Cea708Decoder>;
							public constructor();
							public createSubtitle(): com.google.android.exoplayer2.text.Subtitle;
							public decode(inputBuffer: com.google.android.exoplayer2.text.SubtitleInputBuffer): void;
							public getName(): string;
							public flush(): void;
							public setPositionUs(positionUs: number): void;
							public decode(subtitleInputBuffer0: com.google.android.exoplayer2.text.SubtitleInputBuffer): void;
							public isNewSubtitleDataAvailable(): boolean;
							public constructor(accessibilityChannel: number, initializationData: java.util.List<native.Array<number>>);
						}
						export module Cea708Decoder {
							export class Cea708CueInfo extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.cea.Cea708Decoder.Cea708CueInfo>;
								public cue: com.google.android.exoplayer2.text.Cue;
								public priority: number;
								public constructor(text: string, textAlignment: globalAndroid.text.Layout.Alignment, line: number, lineType: number, lineAnchor: number, position: number, positionAnchor: number, size: number, windowColorSet: boolean, windowColor: number, priority: number);
							}
							export class CueInfoBuilder extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.cea.Cea708Decoder.CueInfoBuilder>;
								public static COLOR_SOLID_WHITE: number;
								public static COLOR_SOLID_BLACK: number;
								public static COLOR_TRANSPARENT: number;
								public setPenColor(foregroundColor: number, backgroundColor: number, edgeColor: number): void;
								public constructor();
								public isDefined(): boolean;
								public append(text: string): void;
								public static getArgbColorFromCeaColor(red: number, green: number, blue: number): number;
								public setPenLocation(row: number, column: number): void;
								public backspace(): void;
								public clear(): void;
								public setWindowAttributes(fillColor: number, borderColor: number, wordWrapToggle: boolean, borderType: number, printDirection: number, scrollDirection: number, justification: number): void;
								public buildSpannableString(): globalAndroid.text.SpannableString;
								public isEmpty(): boolean;
								public reset(): void;
								public setPenAttributes(textTag: number, offset: number, penSize: number, italicsToggle: boolean, underlineToggle: boolean, edgeType: number, fontStyle: number): void;
								public static getArgbColorFromCeaColor(red: number, green: number, blue: number, opacity: number): number;
								public setVisibility(visible: boolean): void;
								public defineWindow(visible: boolean, rowLock: boolean, columnLock: boolean, priority: number, relativePositioning: boolean, verticalAnchor: number, horizontalAnchor: number, rowCount: number, columnCount: number, anchorId: number, windowStyleId: number, penStyleId: number): void;
								public build(): com.google.android.exoplayer2.text.cea.Cea708Decoder.Cea708CueInfo;
								public isVisible(): boolean;
							}
							export class DtvCcPacket extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.cea.Cea708Decoder.DtvCcPacket>;
								public sequenceNumber: number;
								public packetSize: number;
								public packetData: native.Array<number>;
								public constructor(sequenceNumber: number, packetSize: number);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module cea {
						export abstract class CeaDecoder extends java.lang.Object implements com.google.android.exoplayer2.text.SubtitleDecoder {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.cea.CeaDecoder>;
							public constructor();
							public getPositionUs(): number;
							public dequeueInputBuffer(): any;
							public createSubtitle(): com.google.android.exoplayer2.text.Subtitle;
							public queueInputBuffer(inputBuffer: com.google.android.exoplayer2.text.SubtitleInputBuffer): void;
							public setPositionUs(positionUs: number): void;
							public dequeueInputBuffer(): com.google.android.exoplayer2.text.SubtitleInputBuffer;
							public release(): void;
							public decode(subtitleInputBuffer0: com.google.android.exoplayer2.text.SubtitleInputBuffer): void;
							public getAvailableOutputBuffer(): com.google.android.exoplayer2.text.SubtitleOutputBuffer;
							public releaseOutputBuffer(outputBuffer: com.google.android.exoplayer2.text.SubtitleOutputBuffer): void;
							public getName(): string;
							public dequeueOutputBuffer(): any;
							public flush(): void;
							public queueInputBuffer(object0: any): void;
							public isNewSubtitleDataAvailable(): boolean;
							public dequeueOutputBuffer(): com.google.android.exoplayer2.text.SubtitleOutputBuffer;
						}
						export module CeaDecoder {
							export class CeaInputBuffer extends com.google.android.exoplayer2.text.SubtitleInputBuffer implements java.lang.Comparable<com.google.android.exoplayer2.text.cea.CeaDecoder.CeaInputBuffer>  {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.cea.CeaDecoder.CeaInputBuffer>;
								public compareTo(other: com.google.android.exoplayer2.text.cea.CeaDecoder.CeaInputBuffer): number;
							}
							export class CeaOutputBuffer extends com.google.android.exoplayer2.text.SubtitleOutputBuffer {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.cea.CeaDecoder.CeaOutputBuffer>;
								public getNextEventTimeIndex(timeUs: number): number;
								public getEventTime(index: number): number;
								public constructor(owner: com.google.android.exoplayer2.decoder.OutputBuffer.Owner<com.google.android.exoplayer2.text.cea.CeaDecoder.CeaOutputBuffer>);
								public getEventTimeCount(): number;
								public constructor();
								public release(): void;
								public getCues(timeUs: number): java.util.List<com.google.android.exoplayer2.text.Cue>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module cea {
						export class CeaSubtitle extends java.lang.Object implements com.google.android.exoplayer2.text.Subtitle {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.cea.CeaSubtitle>;
							public getCues(timeUs: number): java.util.List<com.google.android.exoplayer2.text.Cue>;
							public getNextEventTimeIndex(timeUs: number): number;
							public getEventTime(index: number): number;
							public getEventTimeCount(): number;
							public constructor(cues: java.util.List<com.google.android.exoplayer2.text.Cue>);
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module dvb {
						export class DvbDecoder extends com.google.android.exoplayer2.text.SimpleSubtitleDecoder {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.dvb.DvbDecoder>;
							public decode(inputBuffer: com.google.android.exoplayer2.text.SubtitleInputBuffer, outputBuffer: com.google.android.exoplayer2.text.SubtitleOutputBuffer, reset: boolean): com.google.android.exoplayer2.text.SubtitleDecoderException;
							public dequeueInputBuffer(): any;
							public decode(data: native.Array<number>, length: number, reset: boolean): com.google.android.exoplayer2.text.Subtitle;
							public constructor(name: string);
							public release(): void;
							public setPositionUs(timeUs: number): void;
							public constructor(initializationData: java.util.List<native.Array<number>>);
							public getName(): string;
							public dequeueOutputBuffer(): any;
							public queueInputBuffer(inputBuffer: any): void;
							public queueInputBuffer(object0: any): void;
							public flush(): void;
							public constructor(inputBuffers: native.Array<any>, outputBuffers: native.Array<any>);
							public decode(bytes0: native.Array<number>, int1: number, boolean2: boolean): com.google.android.exoplayer2.text.Subtitle;
							public decode(decoderInputBuffer0: any, outputBuffer1: any, boolean2: boolean): any;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module dvb {
						export class DvbParser extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.dvb.DvbParser>;
							public constructor(subtitlePageId: number, ancillaryPageId: number);
							public decode(data: native.Array<number>, limit: number): java.util.List<com.google.android.exoplayer2.text.Cue>;
							public reset(): void;
						}
						export module DvbParser {
							export class ClutDefinition extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.dvb.DvbParser.ClutDefinition>;
								public id: number;
								public clutEntries2Bit: native.Array<number>;
								public clutEntries4Bit: native.Array<number>;
								public clutEntries8Bit: native.Array<number>;
								public constructor(id: number, clutEntries2Bit: native.Array<number>, clutEntries4Bit: native.Array<number>, clutEntries8bit: native.Array<number>);
							}
							export class DisplayDefinition extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.dvb.DvbParser.DisplayDefinition>;
								public width: number;
								public height: number;
								public horizontalPositionMinimum: number;
								public horizontalPositionMaximum: number;
								public verticalPositionMinimum: number;
								public verticalPositionMaximum: number;
								public constructor(width: number, height: number, horizontalPositionMinimum: number, horizontalPositionMaximum: number, verticalPositionMinimum: number, verticalPositionMaximum: number);
							}
							export class ObjectData extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.dvb.DvbParser.ObjectData>;
								public id: number;
								public nonModifyingColorFlag: boolean;
								public topFieldData: native.Array<number>;
								public bottomFieldData: native.Array<number>;
								public constructor(id: number, nonModifyingColorFlag: boolean, topFieldData: native.Array<number>, bottomFieldData: native.Array<number>);
							}
							export class PageComposition extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.dvb.DvbParser.PageComposition>;
								public timeOutSecs: number;
								public version: number;
								public state: number;
								public regions: globalAndroid.util.SparseArray<com.google.android.exoplayer2.text.dvb.DvbParser.PageRegion>;
								public constructor(timeoutSecs: number, version: number, state: number, regions: globalAndroid.util.SparseArray<com.google.android.exoplayer2.text.dvb.DvbParser.PageRegion>);
							}
							export class PageRegion extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.dvb.DvbParser.PageRegion>;
								public horizontalAddress: number;
								public verticalAddress: number;
								public constructor(horizontalAddress: number, verticalAddress: number);
							}
							export class RegionComposition extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.dvb.DvbParser.RegionComposition>;
								public id: number;
								public fillFlag: boolean;
								public width: number;
								public height: number;
								public levelOfCompatibility: number;
								public depth: number;
								public clutId: number;
								public pixelCode8Bit: number;
								public pixelCode4Bit: number;
								public pixelCode2Bit: number;
								public regionObjects: globalAndroid.util.SparseArray<com.google.android.exoplayer2.text.dvb.DvbParser.RegionObject>;
								public mergeFrom(otherRegionComposition: com.google.android.exoplayer2.text.dvb.DvbParser.RegionComposition): void;
								public constructor(id: number, fillFlag: boolean, width: number, height: number, levelOfCompatibility: number, depth: number, clutId: number, pixelCode8Bit: number, pixelCode4Bit: number, pixelCode2Bit: number, regionObjects: globalAndroid.util.SparseArray<com.google.android.exoplayer2.text.dvb.DvbParser.RegionObject>);
							}
							export class RegionObject extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.dvb.DvbParser.RegionObject>;
								public type: number;
								public provider: number;
								public horizontalPosition: number;
								public verticalPosition: number;
								public foregroundPixelCode: number;
								public backgroundPixelCode: number;
								public constructor(type: number, provider: number, horizontalPosition: number, verticalPosition: number, foregroundPixelCode: number, backgroundPixelCode: number);
							}
							export class SubtitleService extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.dvb.DvbParser.SubtitleService>;
								public subtitlePageId: number;
								public ancillaryPageId: number;
								public regions: globalAndroid.util.SparseArray<com.google.android.exoplayer2.text.dvb.DvbParser.RegionComposition>;
								public cluts: globalAndroid.util.SparseArray<com.google.android.exoplayer2.text.dvb.DvbParser.ClutDefinition>;
								public objects: globalAndroid.util.SparseArray<com.google.android.exoplayer2.text.dvb.DvbParser.ObjectData>;
								public ancillaryCluts: globalAndroid.util.SparseArray<com.google.android.exoplayer2.text.dvb.DvbParser.ClutDefinition>;
								public ancillaryObjects: globalAndroid.util.SparseArray<com.google.android.exoplayer2.text.dvb.DvbParser.ObjectData>;
								public displayDefinition: com.google.android.exoplayer2.text.dvb.DvbParser.DisplayDefinition;
								public pageComposition: com.google.android.exoplayer2.text.dvb.DvbParser.PageComposition;
								public reset(): void;
								public constructor(subtitlePageId: number, ancillaryPageId: number);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module dvb {
						export class DvbSubtitle extends java.lang.Object implements com.google.android.exoplayer2.text.Subtitle {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.dvb.DvbSubtitle>;
							public getCues(timeUs: number): java.util.List<com.google.android.exoplayer2.text.Cue>;
							public getNextEventTimeIndex(timeUs: number): number;
							public getEventTime(index: number): number;
							public getEventTimeCount(): number;
							public constructor(cues: java.util.List<com.google.android.exoplayer2.text.Cue>);
						}
					}
				}
			}
		}
	}
}



declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module pgs {
						export class PgsDecoder extends com.google.android.exoplayer2.text.SimpleSubtitleDecoder {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.pgs.PgsDecoder>;
							public constructor();
							public decode(inputBuffer: com.google.android.exoplayer2.text.SubtitleInputBuffer, outputBuffer: com.google.android.exoplayer2.text.SubtitleOutputBuffer, reset: boolean): com.google.android.exoplayer2.text.SubtitleDecoderException;
							public dequeueInputBuffer(): any;
							public decode(data: native.Array<number>, size: number, reset: boolean): com.google.android.exoplayer2.text.Subtitle;
							public constructor(name: string);
							public release(): void;
							public setPositionUs(timeUs: number): void;
							public getName(): string;
							public dequeueOutputBuffer(): any;
							public queueInputBuffer(inputBuffer: any): void;
							public queueInputBuffer(object0: any): void;
							public flush(): void;
							public constructor(inputBuffers: native.Array<any>, outputBuffers: native.Array<any>);
							public decode(bytes0: native.Array<number>, int1: number, boolean2: boolean): com.google.android.exoplayer2.text.Subtitle;
							public decode(decoderInputBuffer0: any, outputBuffer1: any, boolean2: boolean): any;
						}
						export module PgsDecoder {
							export class CueBuilder extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.pgs.PgsDecoder.CueBuilder>;
								public build(): com.google.android.exoplayer2.text.Cue;
								public reset(): void;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module pgs {
						export class PgsSubtitle extends java.lang.Object implements com.google.android.exoplayer2.text.Subtitle {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.pgs.PgsSubtitle>;
							public getCues(timeUs: number): java.util.List<com.google.android.exoplayer2.text.Cue>;
							public getNextEventTimeIndex(timeUs: number): number;
							public getEventTime(index: number): number;
							public getEventTimeCount(): number;
							public constructor(cues: java.util.List<com.google.android.exoplayer2.text.Cue>);
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module span {
						export class HorizontalTextInVerticalContextSpan extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.span.HorizontalTextInVerticalContextSpan>;
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module span {
						export class RubySpan extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.span.RubySpan>;
							public static POSITION_UNKNOWN: number;
							public static POSITION_OVER: number;
							public static POSITION_UNDER: number;
							public rubyText: string;
							public position: number;
							public constructor(rubyText: string, position: number);
						}
						export module RubySpan {
							export class Position extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.span.RubySpan.Position>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.text.span.RubySpan() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module span {
						export class SpanUtil extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.span.SpanUtil>;
							public static addOrReplaceSpan(spannable: globalAndroid.text.Spannable, span: any, start: number, end: number, spanFlags: number): void;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module ssa {
						export class SsaDecoder extends com.google.android.exoplayer2.text.SimpleSubtitleDecoder {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.ssa.SsaDecoder>;
							public constructor();
							public decode(inputBuffer: com.google.android.exoplayer2.text.SubtitleInputBuffer, outputBuffer: com.google.android.exoplayer2.text.SubtitleOutputBuffer, reset: boolean): com.google.android.exoplayer2.text.SubtitleDecoderException;
							public dequeueInputBuffer(): any;
							public decode(bytes: native.Array<number>, length: number, reset: boolean): com.google.android.exoplayer2.text.Subtitle;
							public constructor(name: string);
							public release(): void;
							public setPositionUs(timeUs: number): void;
							public constructor(initializationData: java.util.List<native.Array<number>>);
							public getName(): string;
							public dequeueOutputBuffer(): any;
							public queueInputBuffer(inputBuffer: any): void;
							public queueInputBuffer(object0: any): void;
							public flush(): void;
							public constructor(inputBuffers: native.Array<any>, outputBuffers: native.Array<any>);
							public decode(bytes0: native.Array<number>, int1: number, boolean2: boolean): com.google.android.exoplayer2.text.Subtitle;
							public decode(decoderInputBuffer0: any, outputBuffer1: any, boolean2: boolean): any;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module ssa {
						export class SsaDialogueFormat extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.ssa.SsaDialogueFormat>;
							public startTimeIndex: number;
							public endTimeIndex: number;
							public styleIndex: number;
							public textIndex: number;
							public length: number;
							public static fromFormatLine(formatLine: string): com.google.android.exoplayer2.text.ssa.SsaDialogueFormat;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module ssa {
						export class SsaStyle extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.ssa.SsaStyle>;
							public static SSA_ALIGNMENT_UNKNOWN: number;
							public static SSA_ALIGNMENT_BOTTOM_LEFT: number;
							public static SSA_ALIGNMENT_BOTTOM_CENTER: number;
							public static SSA_ALIGNMENT_BOTTOM_RIGHT: number;
							public static SSA_ALIGNMENT_MIDDLE_LEFT: number;
							public static SSA_ALIGNMENT_MIDDLE_CENTER: number;
							public static SSA_ALIGNMENT_MIDDLE_RIGHT: number;
							public static SSA_ALIGNMENT_TOP_LEFT: number;
							public static SSA_ALIGNMENT_TOP_CENTER: number;
							public static SSA_ALIGNMENT_TOP_RIGHT: number;
							public name: string;
							public alignment: number;
							public static fromStyleLine(styleLine: string, format: com.google.android.exoplayer2.text.ssa.SsaStyle.Format): com.google.android.exoplayer2.text.ssa.SsaStyle;
						}
						export module SsaStyle {
							export class Format extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.ssa.SsaStyle.Format>;
								public nameIndex: number;
								public alignmentIndex: number;
								public length: number;
								public static fromFormatLine(styleFormatLine: string): com.google.android.exoplayer2.text.ssa.SsaStyle.Format;
							}
							export class Overrides extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.ssa.SsaStyle.Overrides>;
								public alignment: number;
								public position: globalAndroid.graphics.PointF;
								public static parseFromDialogue(text: string): com.google.android.exoplayer2.text.ssa.SsaStyle.Overrides;
								public static stripStyleOverrides(dialogueLine: string): string;
							}
							export class SsaAlignment extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.ssa.SsaStyle.SsaAlignment>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.text.ssa.SsaStyle() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module ssa {
						export class SsaSubtitle extends java.lang.Object implements com.google.android.exoplayer2.text.Subtitle {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.ssa.SsaSubtitle>;
							public getCues(timeUs: number): java.util.List<com.google.android.exoplayer2.text.Cue>;
							public getNextEventTimeIndex(timeUs: number): number;
							public getEventTime(index: number): number;
							public getEventTimeCount(): number;
							public constructor(cues: java.util.List<java.util.List<com.google.android.exoplayer2.text.Cue>>, cueTimesUs: java.util.List<java.lang.Long>);
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module subrip {
						export class SubripDecoder extends com.google.android.exoplayer2.text.SimpleSubtitleDecoder {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.subrip.SubripDecoder>;
							public constructor();
							public decode(inputBuffer: com.google.android.exoplayer2.text.SubtitleInputBuffer, outputBuffer: com.google.android.exoplayer2.text.SubtitleOutputBuffer, reset: boolean): com.google.android.exoplayer2.text.SubtitleDecoderException;
							public dequeueInputBuffer(): any;
							public decode(bytes: native.Array<number>, length: number, reset: boolean): com.google.android.exoplayer2.text.Subtitle;
							public constructor(name: string);
							public release(): void;
							public setPositionUs(timeUs: number): void;
							public getName(): string;
							public dequeueOutputBuffer(): any;
							public queueInputBuffer(inputBuffer: any): void;
							public queueInputBuffer(object0: any): void;
							public flush(): void;
							public constructor(inputBuffers: native.Array<any>, outputBuffers: native.Array<any>);
							public decode(bytes0: native.Array<number>, int1: number, boolean2: boolean): com.google.android.exoplayer2.text.Subtitle;
							public decode(decoderInputBuffer0: any, outputBuffer1: any, boolean2: boolean): any;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module subrip {
						export class SubripSubtitle extends java.lang.Object implements com.google.android.exoplayer2.text.Subtitle {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.subrip.SubripSubtitle>;
							public constructor(cues: native.Array<com.google.android.exoplayer2.text.Cue>, cueTimesUs: native.Array<number>);
							public getCues(timeUs: number): java.util.List<com.google.android.exoplayer2.text.Cue>;
							public getNextEventTimeIndex(timeUs: number): number;
							public getEventTime(index: number): number;
							public getEventTimeCount(): number;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module ttml {
						export class DeleteTextSpan extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.ttml.DeleteTextSpan>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module ttml {
						export class TtmlDecoder extends com.google.android.exoplayer2.text.SimpleSubtitleDecoder {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.ttml.TtmlDecoder>;
							public constructor();
							public decode(inputBuffer: com.google.android.exoplayer2.text.SubtitleInputBuffer, outputBuffer: com.google.android.exoplayer2.text.SubtitleOutputBuffer, reset: boolean): com.google.android.exoplayer2.text.SubtitleDecoderException;
							public dequeueInputBuffer(): any;
							public decode(bytes: native.Array<number>, length: number, reset: boolean): com.google.android.exoplayer2.text.Subtitle;
							public constructor(name: string);
							public release(): void;
							public setPositionUs(timeUs: number): void;
							public getName(): string;
							public dequeueOutputBuffer(): any;
							public queueInputBuffer(inputBuffer: any): void;
							public queueInputBuffer(object0: any): void;
							public flush(): void;
							public constructor(inputBuffers: native.Array<any>, outputBuffers: native.Array<any>);
							public decode(bytes0: native.Array<number>, int1: number, boolean2: boolean): com.google.android.exoplayer2.text.Subtitle;
							public decode(decoderInputBuffer0: any, outputBuffer1: any, boolean2: boolean): any;
						}
						export module TtmlDecoder {
							export class CellResolution extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.ttml.TtmlDecoder.CellResolution>;
							}
							export class FrameAndTickRate extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.ttml.TtmlDecoder.FrameAndTickRate>;
							}
							export class TtsExtent extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.ttml.TtmlDecoder.TtsExtent>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module ttml {
						export class TtmlNode extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.ttml.TtmlNode>;
							public static TAG_TT: string;
							public static TAG_HEAD: string;
							public static TAG_BODY: string;
							public static TAG_DIV: string;
							public static TAG_P: string;
							public static TAG_SPAN: string;
							public static TAG_BR: string;
							public static TAG_STYLE: string;
							public static TAG_STYLING: string;
							public static TAG_LAYOUT: string;
							public static TAG_REGION: string;
							public static TAG_METADATA: string;
							public static TAG_IMAGE: string;
							public static TAG_DATA: string;
							public static TAG_INFORMATION: string;
							public static ANONYMOUS_REGION_ID: string;
							public static ATTR_ID: string;
							public static ATTR_TTS_ORIGIN: string;
							public static ATTR_TTS_EXTENT: string;
							public static ATTR_TTS_DISPLAY_ALIGN: string;
							public static ATTR_TTS_BACKGROUND_COLOR: string;
							public static ATTR_TTS_FONT_STYLE: string;
							public static ATTR_TTS_FONT_SIZE: string;
							public static ATTR_TTS_FONT_FAMILY: string;
							public static ATTR_TTS_FONT_WEIGHT: string;
							public static ATTR_TTS_COLOR: string;
							public static ATTR_TTS_RUBY: string;
							public static ATTR_TTS_RUBY_POSITION: string;
							public static ATTR_TTS_TEXT_DECORATION: string;
							public static ATTR_TTS_TEXT_ALIGN: string;
							public static ATTR_TTS_TEXT_COMBINE: string;
							public static ATTR_TTS_WRITING_MODE: string;
							public static RUBY_CONTAINER: string;
							public static RUBY_BASE: string;
							public static RUBY_BASE_CONTAINER: string;
							public static RUBY_TEXT: string;
							public static RUBY_TEXT_CONTAINER: string;
							public static RUBY_DELIMITER: string;
							public static RUBY_BEFORE: string;
							public static RUBY_AFTER: string;
							public static LINETHROUGH: string;
							public static NO_LINETHROUGH: string;
							public static UNDERLINE: string;
							public static NO_UNDERLINE: string;
							public static ITALIC: string;
							public static BOLD: string;
							public static LEFT: string;
							public static CENTER: string;
							public static RIGHT: string;
							public static START: string;
							public static END: string;
							public static COMBINE_NONE: string;
							public static COMBINE_ALL: string;
							public static VERTICAL: string;
							public static VERTICAL_LR: string;
							public static VERTICAL_RL: string;
							public tag: string;
							public text: string;
							public isTextNode: boolean;
							public startTimeUs: number;
							public endTimeUs: number;
							public style: com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public regionId: string;
							public imageId: string;
							public parent: com.google.android.exoplayer2.text.ttml.TtmlNode;
							public getChild(index: number): com.google.android.exoplayer2.text.ttml.TtmlNode;
							public getChildCount(): number;
							public getStyleIds(): native.Array<string>;
							public static buildNode(tag: string, startTimeUs: number, endTimeUs: number, style: com.google.android.exoplayer2.text.ttml.TtmlStyle, styleIds: native.Array<string>, regionId: string, imageId: string, parent: com.google.android.exoplayer2.text.ttml.TtmlNode): com.google.android.exoplayer2.text.ttml.TtmlNode;
							public isActive(timeUs: number): boolean;
							public static buildTextNode(text: string): com.google.android.exoplayer2.text.ttml.TtmlNode;
							public addChild(child: com.google.android.exoplayer2.text.ttml.TtmlNode): void;
							public getCues(timeUs: number, globalStyles: java.util.Map<string,com.google.android.exoplayer2.text.ttml.TtmlStyle>, regionMap: java.util.Map<string,com.google.android.exoplayer2.text.ttml.TtmlRegion>, imageMap: java.util.Map<string,string>): java.util.List<com.google.android.exoplayer2.text.Cue>;
							public getEventTimesUs(): native.Array<number>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module ttml {
						export class TtmlRegion extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.ttml.TtmlRegion>;
							public id: string;
							public position: number;
							public line: number;
							public lineType: number;
							public lineAnchor: number;
							public width: number;
							public height: number;
							public textSizeType: number;
							public textSize: number;
							public verticalType: number;
							public constructor(id: string);
							public constructor(id: string, position: number, line: number, lineType: number, lineAnchor: number, width: number, height: number, textSizeType: number, textSize: number, verticalType: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module ttml {
						export class TtmlRenderUtil extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.ttml.TtmlRenderUtil>;
							public static applyStylesToSpan(builder: globalAndroid.text.Spannable, start: number, end: number, style: com.google.android.exoplayer2.text.ttml.TtmlStyle, parent: com.google.android.exoplayer2.text.ttml.TtmlNode, globalStyles: java.util.Map<string,com.google.android.exoplayer2.text.ttml.TtmlStyle>): void;
							public static resolveStyle(style: com.google.android.exoplayer2.text.ttml.TtmlStyle, styleIds: native.Array<string>, globalStyles: java.util.Map<string,com.google.android.exoplayer2.text.ttml.TtmlStyle>): com.google.android.exoplayer2.text.ttml.TtmlStyle;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module ttml {
						export class TtmlStyle extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.ttml.TtmlStyle>;
							public static UNSPECIFIED: number;
							public static STYLE_NORMAL: number;
							public static STYLE_BOLD: number;
							public static STYLE_ITALIC: number;
							public static STYLE_BOLD_ITALIC: number;
							public static FONT_SIZE_UNIT_PIXEL: number;
							public static FONT_SIZE_UNIT_EM: number;
							public static FONT_SIZE_UNIT_PERCENT: number;
							public static RUBY_TYPE_CONTAINER: number;
							public static RUBY_TYPE_BASE: number;
							public static RUBY_TYPE_TEXT: number;
							public static RUBY_TYPE_DELIMITER: number;
							public getTextCombine(): boolean;
							public getId(): string;
							public hasFontColor(): boolean;
							public getRubyType(): number;
							public setItalic(italic: boolean): com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public setTextAlign(textAlign: globalAndroid.text.Layout.Alignment): com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public chain(ancestor: com.google.android.exoplayer2.text.ttml.TtmlStyle): com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public setId(id: string): com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public getTextAlign(): globalAndroid.text.Layout.Alignment;
							public setTextCombine(combine: boolean): com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public getBackgroundColor(): number;
							public setFontSizeUnit(fontSizeUnit: number): com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public constructor();
							public setFontSize(fontSize: number): com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public isUnderline(): boolean;
							public getFontSizeUnit(): number;
							public setBackgroundColor(backgroundColor: number): com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public setBold(bold: boolean): com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public hasBackgroundColor(): boolean;
							public isLinethrough(): boolean;
							public inherit(ancestor: com.google.android.exoplayer2.text.ttml.TtmlStyle): com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public getRubyPosition(): number;
							public getFontSize(): number;
							public getStyle(): number;
							public setRubyPosition(position: number): com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public setLinethrough(linethrough: boolean): com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public setUnderline(underline: boolean): com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public setFontColor(fontColor: number): com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public setFontFamily(fontFamily: string): com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public setRubyType(rubyType: number): com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public getFontFamily(): string;
							public getFontColor(): number;
						}
						export module TtmlStyle {
							export class FontSizeUnit extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.ttml.TtmlStyle.FontSizeUnit>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.text.ttml.TtmlStyle() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
							export class RubyType extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.ttml.TtmlStyle.RubyType>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.text.ttml.TtmlStyle() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
							export class StyleFlags extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.ttml.TtmlStyle.StyleFlags>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.text.ttml.TtmlStyle() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module ttml {
						export class TtmlSubtitle extends java.lang.Object implements com.google.android.exoplayer2.text.Subtitle {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.ttml.TtmlSubtitle>;
							public constructor(root: com.google.android.exoplayer2.text.ttml.TtmlNode, globalStyles: java.util.Map<string,com.google.android.exoplayer2.text.ttml.TtmlStyle>, regionMap: java.util.Map<string,com.google.android.exoplayer2.text.ttml.TtmlRegion>, imageMap: java.util.Map<string,string>);
							public getCues(timeUs: number): java.util.List<com.google.android.exoplayer2.text.Cue>;
							public getNextEventTimeIndex(timeUs: number): number;
							public getEventTime(index: number): number;
							public getEventTimeCount(): number;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module tx3g {
						export class Tx3gDecoder extends com.google.android.exoplayer2.text.SimpleSubtitleDecoder {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.tx3g.Tx3gDecoder>;
							public decode(inputBuffer: com.google.android.exoplayer2.text.SubtitleInputBuffer, outputBuffer: com.google.android.exoplayer2.text.SubtitleOutputBuffer, reset: boolean): com.google.android.exoplayer2.text.SubtitleDecoderException;
							public dequeueInputBuffer(): any;
							public decode(bytes: native.Array<number>, length: number, reset: boolean): com.google.android.exoplayer2.text.Subtitle;
							public constructor(name: string);
							public release(): void;
							public setPositionUs(timeUs: number): void;
							public constructor(initializationData: java.util.List<native.Array<number>>);
							public getName(): string;
							public dequeueOutputBuffer(): any;
							public queueInputBuffer(inputBuffer: any): void;
							public queueInputBuffer(object0: any): void;
							public flush(): void;
							public constructor(inputBuffers: native.Array<any>, outputBuffers: native.Array<any>);
							public decode(bytes0: native.Array<number>, int1: number, boolean2: boolean): com.google.android.exoplayer2.text.Subtitle;
							public decode(decoderInputBuffer0: any, outputBuffer1: any, boolean2: boolean): any;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module tx3g {
						export class Tx3gSubtitle extends java.lang.Object implements com.google.android.exoplayer2.text.Subtitle {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.tx3g.Tx3gSubtitle>;
							public static EMPTY: com.google.android.exoplayer2.text.tx3g.Tx3gSubtitle;
							public getCues(timeUs: number): java.util.List<com.google.android.exoplayer2.text.Cue>;
							public getNextEventTimeIndex(timeUs: number): number;
							public getEventTime(index: number): number;
							public getEventTimeCount(): number;
							public constructor(cue: com.google.android.exoplayer2.text.Cue);
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module webvtt {
						export class CssParser extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.webvtt.CssParser>;
							public constructor();
							public parseBlock(input: com.google.android.exoplayer2.util.ParsableByteArray): java.util.List<com.google.android.exoplayer2.text.webvtt.WebvttCssStyle>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module webvtt {
						export class Mp4WebvttDecoder extends com.google.android.exoplayer2.text.SimpleSubtitleDecoder {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder>;
							public constructor();
							public decode(inputBuffer: com.google.android.exoplayer2.text.SubtitleInputBuffer, outputBuffer: com.google.android.exoplayer2.text.SubtitleOutputBuffer, reset: boolean): com.google.android.exoplayer2.text.SubtitleDecoderException;
							public dequeueInputBuffer(): any;
							public decode(bytes: native.Array<number>, length: number, reset: boolean): com.google.android.exoplayer2.text.Subtitle;
							public constructor(name: string);
							public release(): void;
							public setPositionUs(timeUs: number): void;
							public getName(): string;
							public dequeueOutputBuffer(): any;
							public queueInputBuffer(inputBuffer: any): void;
							public queueInputBuffer(object0: any): void;
							public flush(): void;
							public constructor(inputBuffers: native.Array<any>, outputBuffers: native.Array<any>);
							public decode(bytes0: native.Array<number>, int1: number, boolean2: boolean): com.google.android.exoplayer2.text.Subtitle;
							public decode(decoderInputBuffer0: any, outputBuffer1: any, boolean2: boolean): any;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module webvtt {
						export class Mp4WebvttSubtitle extends java.lang.Object implements com.google.android.exoplayer2.text.Subtitle {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.webvtt.Mp4WebvttSubtitle>;
							public getCues(timeUs: number): java.util.List<com.google.android.exoplayer2.text.Cue>;
							public getNextEventTimeIndex(timeUs: number): number;
							public getEventTime(index: number): number;
							public constructor(cueList: java.util.List<com.google.android.exoplayer2.text.Cue>);
							public getEventTimeCount(): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module webvtt {
						export class WebvttCssStyle extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.webvtt.WebvttCssStyle>;
							public static UNSPECIFIED: number;
							public static STYLE_NORMAL: number;
							public static STYLE_BOLD: number;
							public static STYLE_ITALIC: number;
							public static STYLE_BOLD_ITALIC: number;
							public static FONT_SIZE_UNIT_PIXEL: number;
							public static FONT_SIZE_UNIT_EM: number;
							public static FONT_SIZE_UNIT_PERCENT: number;
							public setFontFamily(fontFamily: string): com.google.android.exoplayer2.text.webvtt.WebvttCssStyle;
							public setFontSizeUnit(unit: number): com.google.android.exoplayer2.text.webvtt.WebvttCssStyle;
							public hasFontColor(): boolean;
							public setTargetId(targetId: string): void;
							public setFontColor(color: number): com.google.android.exoplayer2.text.webvtt.WebvttCssStyle;
							public getBackgroundColor(): number;
							public setLinethrough(linethrough: boolean): com.google.android.exoplayer2.text.webvtt.WebvttCssStyle;
							public constructor();
							public isUnderline(): boolean;
							public getFontSizeUnit(): number;
							public setRubyPosition(rubyPosition: number): com.google.android.exoplayer2.text.webvtt.WebvttCssStyle;
							public hasBackgroundColor(): boolean;
							public getCombineUpright(): boolean;
							public setTargetTagName(targetTag: string): void;
							public isLinethrough(): boolean;
							public setBackgroundColor(backgroundColor: number): com.google.android.exoplayer2.text.webvtt.WebvttCssStyle;
							public getRubyPosition(): number;
							public getFontSize(): number;
							public getSpecificityScore(id: string, tag: string, classes: java.util.Set<string>, voice: string): number;
							public setUnderline(underline: boolean): com.google.android.exoplayer2.text.webvtt.WebvttCssStyle;
							public setBold(bold: boolean): com.google.android.exoplayer2.text.webvtt.WebvttCssStyle;
							public setTargetClasses(targetClasses: native.Array<string>): void;
							public setItalic(italic: boolean): com.google.android.exoplayer2.text.webvtt.WebvttCssStyle;
							public getStyle(): number;
							public setTargetVoice(targetVoice: string): void;
							public setCombineUpright(enabled: boolean): com.google.android.exoplayer2.text.webvtt.WebvttCssStyle;
							public getFontFamily(): string;
							public getFontColor(): number;
							public setFontSize(fontSize: number): com.google.android.exoplayer2.text.webvtt.WebvttCssStyle;
						}
						export module WebvttCssStyle {
							export class FontSizeUnit extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.FontSizeUnit>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.text.webvtt.WebvttCssStyle() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
							export class StyleFlags extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.StyleFlags>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.text.webvtt.WebvttCssStyle() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module webvtt {
						export class WebvttCueInfo extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.webvtt.WebvttCueInfo>;
							public cue: com.google.android.exoplayer2.text.Cue;
							public startTimeUs: number;
							public endTimeUs: number;
							public constructor(cue: com.google.android.exoplayer2.text.Cue, startTimeUs: number, endTimeUs: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module webvtt {
						export class WebvttCueParser extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.webvtt.WebvttCueParser>;
							public static CUE_HEADER_PATTERN: java.util.regex.Pattern;
							public constructor();
							public static parseCue(webvttData: com.google.android.exoplayer2.util.ParsableByteArray, styles: java.util.List<com.google.android.exoplayer2.text.webvtt.WebvttCssStyle>): com.google.android.exoplayer2.text.webvtt.WebvttCueInfo;
						}
						export module WebvttCueParser {
							export class Element extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.webvtt.WebvttCueParser.Element>;
							}
							export class StartTag extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.webvtt.WebvttCueParser.StartTag>;
								public name: string;
								public position: number;
								public voice: string;
								public classes: java.util.Set<string>;
								public static buildStartTag(fullTagExpression: string, position: number): com.google.android.exoplayer2.text.webvtt.WebvttCueParser.StartTag;
								public static buildWholeCueVirtualTag(): com.google.android.exoplayer2.text.webvtt.WebvttCueParser.StartTag;
							}
							export class StyleMatch extends java.lang.Comparable<com.google.android.exoplayer2.text.webvtt.WebvttCueParser.StyleMatch> {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.webvtt.WebvttCueParser.StyleMatch>;
								public score: number;
								public style: com.google.android.exoplayer2.text.webvtt.WebvttCssStyle;
								public constructor(score: number, style: com.google.android.exoplayer2.text.webvtt.WebvttCssStyle);
								public compareTo(another: com.google.android.exoplayer2.text.webvtt.WebvttCueParser.StyleMatch): number;
							}
							export class WebvttCueInfoBuilder extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.webvtt.WebvttCueParser.WebvttCueInfoBuilder>;
								public startTimeUs: number;
								public endTimeUs: number;
								public text: string;
								public textAlignment: number;
								public line: number;
								public lineType: number;
								public lineAnchor: number;
								public position: number;
								public positionAnchor: number;
								public size: number;
								public verticalType: number;
								public build(): com.google.android.exoplayer2.text.webvtt.WebvttCueInfo;
								public toCueBuilder(): com.google.android.exoplayer2.text.Cue.Builder;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module webvtt {
						export class WebvttDecoder extends com.google.android.exoplayer2.text.SimpleSubtitleDecoder {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.webvtt.WebvttDecoder>;
							public constructor();
							public decode(inputBuffer: com.google.android.exoplayer2.text.SubtitleInputBuffer, outputBuffer: com.google.android.exoplayer2.text.SubtitleOutputBuffer, reset: boolean): com.google.android.exoplayer2.text.SubtitleDecoderException;
							public dequeueInputBuffer(): any;
							public decode(bytes: native.Array<number>, length: number, reset: boolean): com.google.android.exoplayer2.text.Subtitle;
							public constructor(name: string);
							public release(): void;
							public setPositionUs(timeUs: number): void;
							public getName(): string;
							public dequeueOutputBuffer(): any;
							public queueInputBuffer(inputBuffer: any): void;
							public queueInputBuffer(object0: any): void;
							public flush(): void;
							public constructor(inputBuffers: native.Array<any>, outputBuffers: native.Array<any>);
							public decode(bytes0: native.Array<number>, int1: number, boolean2: boolean): com.google.android.exoplayer2.text.Subtitle;
							public decode(decoderInputBuffer0: any, outputBuffer1: any, boolean2: boolean): any;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module webvtt {
						export class WebvttParserUtil extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.webvtt.WebvttParserUtil>;
							public static parseTimestampUs(timestamp: string): number;
							public static validateWebvttHeaderLine(input: com.google.android.exoplayer2.util.ParsableByteArray): void;
							public static parsePercentage(s: string): number;
							public static findNextCueHeader(input: com.google.android.exoplayer2.util.ParsableByteArray): java.util.regex.Matcher;
							public static isWebvttHeaderLine(input: com.google.android.exoplayer2.util.ParsableByteArray): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module webvtt {
						export class WebvttSubtitle extends java.lang.Object implements com.google.android.exoplayer2.text.Subtitle {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.webvtt.WebvttSubtitle>;
							public constructor(cueInfos: java.util.List<com.google.android.exoplayer2.text.webvtt.WebvttCueInfo>);
							public getCues(timeUs: number): java.util.List<com.google.android.exoplayer2.text.Cue>;
							public getNextEventTimeIndex(timeUs: number): number;
							public getEventTime(index: number): number;
							public getEventTimeCount(): number;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module trackselection {
					export class AdaptiveTrackSelection extends com.google.android.exoplayer2.trackselection.BaseTrackSelection {
						public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection>;
						public static DEFAULT_MIN_DURATION_FOR_QUALITY_INCREASE_MS: number;
						public static DEFAULT_MAX_DURATION_FOR_QUALITY_DECREASE_MS: number;
						public static DEFAULT_MIN_DURATION_TO_RETAIN_AFTER_DISCARD_MS: number;
						public static DEFAULT_BANDWIDTH_FRACTION: number;
						public static DEFAULT_BUFFERED_FRACTION_TO_LIVE_EDGE_FOR_QUALITY_INCREASE: number;
						public updateSelectedTrack(playbackPositionUs: number, bufferedDurationUs: number, availableDurationUs: number, queue: java.util.List<any>, mediaChunkIterators: native.Array<com.google.android.exoplayer2.source.chunk.MediaChunkIterator>): void;
						public blacklist(index: number, exclusionDurationMs: number): boolean;
						public getSelectedIndexInTrackGroup(): number;
						public onPlaybackSpeed(playbackSpeed: number): void;
						public constructor(group: com.google.android.exoplayer2.source.TrackGroup, tracks: native.Array<number>, bandwidthMeter: com.google.android.exoplayer2.upstream.BandwidthMeter, reservedBandwidth: number, minDurationForQualityIncreaseMs: number, maxDurationForQualityDecreaseMs: number, minDurationToRetainAfterDiscardMs: number, bandwidthFraction: number, bufferedFractionToLiveEdgeForQualityIncrease: number, clock: com.google.android.exoplayer2.util.Clock);
						public evaluateQueueSize(playbackPositionUs: number, queue: java.util.List<any>): number;
						public getSelectionReason(): number;
						public constructor(group: com.google.android.exoplayer2.source.TrackGroup, tracks: native.Array<number>, bandwidthMeter: com.google.android.exoplayer2.upstream.BandwidthMeter);
						public shouldCancelChunkLoad(playbackPositionUs: number, loadingChunk: com.google.android.exoplayer2.source.chunk.Chunk, queue: java.util.List<any>): boolean;
						public onDiscontinuity(): void;
						public getMinDurationToRetainAfterDiscardUs(): number;
						public constructor(group: com.google.android.exoplayer2.source.TrackGroup, tracks: native.Array<number>);
						public getSelectionData(): any;
						public length(): number;
						public getSelectedFormat(): com.google.android.exoplayer2.Format;
						public experimentalSetBandwidthAllocationCheckpoints(allocationCheckpoints: native.Array<native.Array<number>>): void;
						public canSelectFormat(format: com.google.android.exoplayer2.Format, trackBitrate: number, playbackSpeed: number, effectiveBitrate: number): boolean;
						public getTrackGroup(): com.google.android.exoplayer2.source.TrackGroup;
						public disable(): void;
						public indexOf(format: com.google.android.exoplayer2.Format): number;
						public enable(): void;
						public shouldEvaluateQueueSize(nowMs: number, queue: java.util.List<any>): boolean;
						public getIndexInTrackGroup(index: number): number;
						public getFormat(index: number): com.google.android.exoplayer2.Format;
						public indexOf(indexInTrackGroup: number): number;
						public getSelectedIndex(): number;
					}
					export module AdaptiveTrackSelection {
						export class BandwidthProvider extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection.BandwidthProvider>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection() when extending the interface class.
							 */
							public constructor(implementation: {
								getAllocatedBandwidth(): number;
							});
							public constructor();
							public getAllocatedBandwidth(): number;
						}
						export class DefaultBandwidthProvider extends java.lang.Object implements com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection.BandwidthProvider {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection.DefaultBandwidthProvider>;
							public getAllocatedBandwidth(): number;
						}
						export class Factory extends java.lang.Object implements com.google.android.exoplayer2.trackselection.TrackSelection.Factory {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection.Factory>;
							public constructor();
							public constructor(minDurationForQualityIncreaseMs: number, maxDurationForQualityDecreaseMs: number, minDurationToRetainAfterDiscardMs: number, bandwidthFraction: number);
							public createAdaptiveTrackSelection(group: com.google.android.exoplayer2.source.TrackGroup, bandwidthMeter: com.google.android.exoplayer2.upstream.BandwidthMeter, tracks: native.Array<number>, totalFixedTrackBandwidth: number): com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection;
							public createTrackSelections(definitions: native.Array<com.google.android.exoplayer2.trackselection.TrackSelection.Definition>, bandwidthMeter: com.google.android.exoplayer2.upstream.BandwidthMeter): native.Array<com.google.android.exoplayer2.trackselection.TrackSelection>;
							public constructor(minDurationForQualityIncreaseMs: number, maxDurationForQualityDecreaseMs: number, minDurationToRetainAfterDiscardMs: number, bandwidthFraction: number, bufferedFractionToLiveEdgeForQualityIncrease: number, clock: com.google.android.exoplayer2.util.Clock);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module trackselection {
					export abstract class BaseTrackSelection extends java.lang.Object implements com.google.android.exoplayer2.trackselection.TrackSelection {
						public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.BaseTrackSelection>;
						public group: com.google.android.exoplayer2.source.TrackGroup;
						public tracks: native.Array<number>;
						public constructor(group: com.google.android.exoplayer2.source.TrackGroup, tracks: native.Array<number>);
						public equals(obj: any): boolean;
						public blacklist(index: number, exclusionDurationMs: number): boolean;
						public getSelectionData(): any;
						public length(): number;
						public getSelectedFormat(): com.google.android.exoplayer2.Format;
						public getSelectedIndexInTrackGroup(): number;
						public onPlaybackSpeed(playbackSpeed: number): void;
						public evaluateQueueSize(playbackPositionUs: number, queue: java.util.List<any>): number;
						public hashCode(): number;
						public getSelectionReason(): number;
						public getTrackGroup(): com.google.android.exoplayer2.source.TrackGroup;
						public disable(): void;
						public indexOf(format: com.google.android.exoplayer2.Format): number;
						public enable(): void;
						public updateSelectedTrack(long0: number, long1: number, long2: number, list3: java.util.List<any>, mediaChunkIterators4: native.Array<com.google.android.exoplayer2.source.chunk.MediaChunkIterator>): void;
						public getIndexInTrackGroup(index: number): number;
						public getFormat(index: number): com.google.android.exoplayer2.Format;
						public indexOf(indexInTrackGroup: number): number;
						public getSelectedIndex(): number;
						public shouldCancelChunkLoad(playbackPositionUs: number, loadingChunk: com.google.android.exoplayer2.source.chunk.Chunk, queue: java.util.List<any>): boolean;
						public isBlacklisted(index: number, nowMs: number): boolean;
						public onDiscontinuity(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module trackselection {
					export class DefaultTrackSelector extends com.google.android.exoplayer2.trackselection.MappingTrackSelector {
						public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.DefaultTrackSelector>;
						public selectAllTracks(mappedTrackInfo: com.google.android.exoplayer2.trackselection.MappingTrackSelector.MappedTrackInfo, rendererFormatSupports: native.Array<native.Array<native.Array<number>>>, rendererMixedMimeTypeAdaptationSupports: native.Array<number>, params: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters): native.Array<com.google.android.exoplayer2.trackselection.TrackSelection.Definition>;
						public constructor();
						public setParameters(parametersBuilder: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder): void;
						public constructor(context: globalAndroid.content.Context, trackSelectionFactory: com.google.android.exoplayer2.trackselection.TrackSelection.Factory);
						public static normalizeUndeterminedLanguageToNull(language: string): string;
						public static isSupported(formatSupport: number, allowExceedsCapabilities: boolean): boolean;
						public selectOtherTrack(trackType: number, groups: com.google.android.exoplayer2.source.TrackGroupArray, formatSupport: native.Array<native.Array<number>>, params: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters): com.google.android.exoplayer2.trackselection.TrackSelection.Definition;
						public static getFormatLanguageScore(format: com.google.android.exoplayer2.Format, language: string, allowUndeterminedFormatLanguage: boolean): number;
						public experimentalAllowMultipleAdaptiveSelections(): void;
						public selectTracks(mappedTrackInfo0: com.google.android.exoplayer2.trackselection.MappingTrackSelector.MappedTrackInfo, ints1: native.Array<native.Array<native.Array<number>>>, ints2: native.Array<number>): globalAndroid.util.Pair<native.Array<com.google.android.exoplayer2.RendererConfiguration>,native.Array<com.google.android.exoplayer2.trackselection.TrackSelection>>;
						/** @deprecated */
						public constructor();
						public constructor(parameters: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters, trackSelectionFactory: com.google.android.exoplayer2.trackselection.TrackSelection.Factory);
						public setParameters(parameters: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters): void;
						public getParameters(): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters;
						public selectTracks(rendererCapabilities: native.Array<com.google.android.exoplayer2.RendererCapabilities>, trackGroups: com.google.android.exoplayer2.source.TrackGroupArray, periodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, timeline: com.google.android.exoplayer2.Timeline): com.google.android.exoplayer2.trackselection.TrackSelectorResult;
						public selectAudioTrack(groups: com.google.android.exoplayer2.source.TrackGroupArray, formatSupport: native.Array<native.Array<number>>, mixedMimeTypeAdaptationSupports: number, params: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters, enableAdaptiveTrackSelection: boolean): globalAndroid.util.Pair<com.google.android.exoplayer2.trackselection.TrackSelection.Definition,com.google.android.exoplayer2.trackselection.DefaultTrackSelector.AudioTrackScore>;
						public selectVideoTrack(groups: com.google.android.exoplayer2.source.TrackGroupArray, formatSupport: native.Array<native.Array<number>>, mixedMimeTypeAdaptationSupports: number, params: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters, enableAdaptiveTrackSelection: boolean): com.google.android.exoplayer2.trackselection.TrackSelection.Definition;
						public buildUponParameters(): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
						/** @deprecated */
						public constructor(trackSelectionFactory: com.google.android.exoplayer2.trackselection.TrackSelection.Factory);
						public selectTextTrack(groups: com.google.android.exoplayer2.source.TrackGroupArray, formatSupport: native.Array<native.Array<number>>, params: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters, selectedAudioLanguage: string): globalAndroid.util.Pair<com.google.android.exoplayer2.trackselection.TrackSelection.Definition,com.google.android.exoplayer2.trackselection.DefaultTrackSelector.TextTrackScore>;
						public constructor(context: globalAndroid.content.Context);
						public selectTracks(mappedTrackInfo: com.google.android.exoplayer2.trackselection.MappingTrackSelector.MappedTrackInfo, rendererFormatSupports: native.Array<native.Array<native.Array<number>>>, rendererMixedMimeTypeAdaptationSupports: native.Array<number>): globalAndroid.util.Pair<native.Array<com.google.android.exoplayer2.RendererConfiguration>,native.Array<com.google.android.exoplayer2.trackselection.TrackSelection>>;
					}
					export module DefaultTrackSelector {
						export class AudioTrackScore extends java.lang.Comparable<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.AudioTrackScore> {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.AudioTrackScore>;
							public isWithinConstraints: boolean;
							public constructor(format: com.google.android.exoplayer2.Format, parameters: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters, formatSupport: number);
							public compareTo(other: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.AudioTrackScore): number;
						}
						export class OtherTrackScore extends java.lang.Comparable<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.OtherTrackScore> {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.OtherTrackScore>;
							public compareTo(other: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.OtherTrackScore): number;
							public constructor(format: com.google.android.exoplayer2.Format, trackFormatSupport: number);
						}
						export class Parameters extends com.google.android.exoplayer2.trackselection.TrackSelectionParameters {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters>;
							public static DEFAULT_WITHOUT_CONTEXT: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters;
							public maxVideoWidth: number;
							public maxVideoHeight: number;
							public maxVideoFrameRate: number;
							public maxVideoBitrate: number;
							public minVideoWidth: number;
							public minVideoHeight: number;
							public minVideoFrameRate: number;
							public minVideoBitrate: number;
							public exceedVideoConstraintsIfNecessary: boolean;
							public allowVideoMixedMimeTypeAdaptiveness: boolean;
							public allowVideoNonSeamlessAdaptiveness: boolean;
							public viewportWidth: number;
							public viewportHeight: number;
							public viewportOrientationMayChange: boolean;
							public maxAudioChannelCount: number;
							public maxAudioBitrate: number;
							public exceedAudioConstraintsIfNecessary: boolean;
							public allowAudioMixedMimeTypeAdaptiveness: boolean;
							public allowAudioMixedSampleRateAdaptiveness: boolean;
							public allowAudioMixedChannelCountAdaptiveness: boolean;
							public forceLowestBitrate: boolean;
							public forceHighestSupportedBitrate: boolean;
							public exceedRendererCapabilitiesIfNecessary: boolean;
							public tunnelingAudioSessionId: number;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters>;
							public static getDefaults(context: globalAndroid.content.Context): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters;
							public static getDefaults(context: globalAndroid.content.Context): com.google.android.exoplayer2.trackselection.TrackSelectionParameters;
							public hashCode(): number;
							public describeContents(): number;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public equals(obj: any): boolean;
							public getRendererDisabled(rendererIndex: number): boolean;
							public getSelectionOverride(rendererIndex: number, groups: com.google.android.exoplayer2.source.TrackGroupArray): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.SelectionOverride;
							public buildUpon(): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public hasSelectionOverride(rendererIndex: number, groups: com.google.android.exoplayer2.source.TrackGroupArray): boolean;
							public buildUpon(): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
						}
						export class ParametersBuilder extends com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder>;
							public setPreferredTextLanguageAndRoleFlagsToCaptioningManagerSettings(context: globalAndroid.content.Context): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
							public setPreferredTextLanguage(preferredTextLanguage: string): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
							public setAllowAudioMixedSampleRateAdaptiveness(allowAudioMixedSampleRateAdaptiveness: boolean): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setMaxVideoSizeSd(): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setForceHighestSupportedBitrate(forceHighestSupportedBitrate: boolean): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setMinVideoBitrate(minVideoBitrate: number): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setMinVideoSize(minVideoWidth: number, minVideoHeight: number): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setAllowVideoNonSeamlessAdaptiveness(allowVideoNonSeamlessAdaptiveness: boolean): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setAllowAudioMixedMimeTypeAdaptiveness(allowAudioMixedMimeTypeAdaptiveness: boolean): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public build(): com.google.android.exoplayer2.trackselection.TrackSelectionParameters;
							public setPreferredAudioLanguage(preferredAudioLanguage: string): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
							public setMaxAudioBitrate(maxAudioBitrate: number): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setPreferredTextLanguageAndRoleFlagsToCaptioningManagerSettings(context: globalAndroid.content.Context): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setTunnelingAudioSessionId(tunnelingAudioSessionId: number): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public clearVideoSizeConstraints(): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setMaxVideoSize(maxVideoWidth: number, maxVideoHeight: number): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setDisabledTextTrackSelectionFlags(disabledTextTrackSelectionFlags: number): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public clearSelectionOverride(rendererIndex: number, groups: com.google.android.exoplayer2.source.TrackGroupArray): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setRendererDisabled(rendererIndex: number, disabled: boolean): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setPreferredTextRoleFlags(preferredTextRoleFlags: number): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
							public setPreferredAudioLanguage(preferredAudioLanguage: string): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setForceLowestBitrate(forceLowestBitrate: boolean): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setMaxVideoBitrate(maxVideoBitrate: number): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setAllowVideoMixedMimeTypeAdaptiveness(allowVideoMixedMimeTypeAdaptiveness: boolean): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setSelectUndeterminedTextLanguage(selectUndeterminedTextLanguage: boolean): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public clearSelectionOverrides(rendererIndex: number): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setAllowAudioMixedChannelCountAdaptiveness(allowAudioMixedChannelCountAdaptiveness: boolean): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public clearViewportSizeConstraints(): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setPreferredTextLanguage(preferredTextLanguage: string): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setExceedRendererCapabilitiesIfNecessary(exceedRendererCapabilitiesIfNecessary: boolean): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setSelectUndeterminedTextLanguage(selectUndeterminedTextLanguage: boolean): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
							public setMaxVideoFrameRate(maxVideoFrameRate: number): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							/** @deprecated */
							public constructor();
							public clearSelectionOverrides(): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public build(): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters;
							public setExceedVideoConstraintsIfNecessary(exceedVideoConstraintsIfNecessary: boolean): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setExceedAudioConstraintsIfNecessary(exceedAudioConstraintsIfNecessary: boolean): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setSelectionOverride(rendererIndex: number, groups: com.google.android.exoplayer2.source.TrackGroupArray, override: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.SelectionOverride): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setPreferredTextRoleFlags(preferredTextRoleFlags: number): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setDisabledTextTrackSelectionFlags(disabledTextTrackSelectionFlags: number): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
							public setMinVideoFrameRate(minVideoFrameRate: number): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setViewportSizeToPhysicalDisplaySize(context: globalAndroid.content.Context, viewportOrientationMayChange: boolean): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public constructor(context: globalAndroid.content.Context);
							public setViewportSize(viewportWidth: number, viewportHeight: number, viewportOrientationMayChange: boolean): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setMaxAudioChannelCount(maxAudioChannelCount: number): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
						}
						export class SelectionOverride extends java.lang.Object implements globalAndroid.os.Parcelable {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.SelectionOverride>;
							public groupIndex: number;
							public tracks: native.Array<number>;
							public length: number;
							public reason: number;
							public data: number;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.SelectionOverride>;
							public hashCode(): number;
							public describeContents(): number;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public equals(obj: any): boolean;
							public constructor(groupIndex: number, tracks: native.Array<number>, reason: number, data: number);
							public constructor(groupIndex: number, tracks: native.Array<number>);
							public containsTrack(track: number): boolean;
						}
						export class TextTrackScore extends java.lang.Comparable<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.TextTrackScore> {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.TextTrackScore>;
							public isWithinConstraints: boolean;
							public constructor(format: com.google.android.exoplayer2.Format, parameters: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters, trackFormatSupport: number, selectedAudioLanguage: string);
							public compareTo(other: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.TextTrackScore): number;
						}
						export class VideoTrackScore extends java.lang.Comparable<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.VideoTrackScore> {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.VideoTrackScore>;
							public isWithinMaxConstraints: boolean;
							public compareTo(other: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.VideoTrackScore): number;
							public constructor(format: com.google.android.exoplayer2.Format, parameters: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters, formatSupport: number, isSuitableForViewport: boolean);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module trackselection {
					export class FixedTrackSelection extends com.google.android.exoplayer2.trackselection.BaseTrackSelection {
						public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.FixedTrackSelection>;
						public constructor(group: com.google.android.exoplayer2.source.TrackGroup, tracks: native.Array<number>);
						public updateSelectedTrack(playbackPositionUs: number, bufferedDurationUs: number, availableDurationUs: number, queue: java.util.List<any>, mediaChunkIterators: native.Array<com.google.android.exoplayer2.source.chunk.MediaChunkIterator>): void;
						public getSelectionData(): any;
						public blacklist(index: number, exclusionDurationMs: number): boolean;
						public length(): number;
						public getSelectedFormat(): com.google.android.exoplayer2.Format;
						public getSelectedIndexInTrackGroup(): number;
						public onPlaybackSpeed(playbackSpeed: number): void;
						public evaluateQueueSize(playbackPositionUs: number, queue: java.util.List<any>): number;
						public getSelectionReason(): number;
						public getTrackGroup(): com.google.android.exoplayer2.source.TrackGroup;
						public disable(): void;
						public indexOf(format: com.google.android.exoplayer2.Format): number;
						public constructor(group: com.google.android.exoplayer2.source.TrackGroup, track: number);
						public enable(): void;
						public getIndexInTrackGroup(index: number): number;
						public getFormat(index: number): com.google.android.exoplayer2.Format;
						public indexOf(indexInTrackGroup: number): number;
						public getSelectedIndex(): number;
						public shouldCancelChunkLoad(playbackPositionUs: number, loadingChunk: com.google.android.exoplayer2.source.chunk.Chunk, queue: java.util.List<any>): boolean;
						public constructor(group: com.google.android.exoplayer2.source.TrackGroup, track: number, reason: number, data: any);
						public onDiscontinuity(): void;
					}
					export module FixedTrackSelection {
						export class Factory extends java.lang.Object implements com.google.android.exoplayer2.trackselection.TrackSelection.Factory {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.FixedTrackSelection.Factory>;
							public constructor();
							public createTrackSelections(definitions: native.Array<com.google.android.exoplayer2.trackselection.TrackSelection.Definition>, bandwidthMeter: com.google.android.exoplayer2.upstream.BandwidthMeter): native.Array<com.google.android.exoplayer2.trackselection.TrackSelection>;
							public constructor(reason: number, data: any);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module trackselection {
					export abstract class MappingTrackSelector extends com.google.android.exoplayer2.trackselection.TrackSelector {
						public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.MappingTrackSelector>;
						public onSelectionActivated(info: any): void;
						public constructor();
						public selectTracks(mappedTrackInfo0: com.google.android.exoplayer2.trackselection.MappingTrackSelector.MappedTrackInfo, ints1: native.Array<native.Array<native.Array<number>>>, ints2: native.Array<number>): globalAndroid.util.Pair<native.Array<com.google.android.exoplayer2.RendererConfiguration>,native.Array<com.google.android.exoplayer2.trackselection.TrackSelection>>;
						public selectTracks(rendererCapabilities: native.Array<com.google.android.exoplayer2.RendererCapabilities>, trackGroups: com.google.android.exoplayer2.source.TrackGroupArray, periodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, timeline: com.google.android.exoplayer2.Timeline): com.google.android.exoplayer2.trackselection.TrackSelectorResult;
						public onSelectionActivated(object0: any): void;
						public selectTracks(rendererCapabilitiess0: native.Array<com.google.android.exoplayer2.RendererCapabilities>, trackGroupArray1: com.google.android.exoplayer2.source.TrackGroupArray, mediaPeriodId2: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, timeline3: com.google.android.exoplayer2.Timeline): com.google.android.exoplayer2.trackselection.TrackSelectorResult;
						public getCurrentMappedTrackInfo(): com.google.android.exoplayer2.trackselection.MappingTrackSelector.MappedTrackInfo;
					}
					export module MappingTrackSelector {
						export class MappedTrackInfo extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.MappingTrackSelector.MappedTrackInfo>;
							public static RENDERER_SUPPORT_NO_TRACKS: number;
							public static RENDERER_SUPPORT_UNSUPPORTED_TRACKS: number;
							public static RENDERER_SUPPORT_EXCEEDS_CAPABILITIES_TRACKS: number;
							public static RENDERER_SUPPORT_PLAYABLE_TRACKS: number;
							public length: number;
							/** @deprecated */
							public getUnassociatedTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
							public getRendererSupport(rendererIndex: number): number;
							public getRendererName(rendererIndex: number): string;
							public getAdaptiveSupport(rendererIndex: number, groupIndex: number, trackIndices: native.Array<number>): number;
							/** @deprecated */
							public getTrackTypeRendererSupport(trackType: number): number;
							/** @deprecated */
							public getTrackFormatSupport(rendererIndex: number, groupIndex: number, trackIndex: number): number;
							public getRendererCount(): number;
							public getAdaptiveSupport(rendererIndex: number, groupIndex: number, includeCapabilitiesExceededTracks: boolean): number;
							public getTrackGroups(rendererIndex: number): com.google.android.exoplayer2.source.TrackGroupArray;
							public getTrackSupport(rendererIndex: number, groupIndex: number, trackIndex: number): number;
							public getUnmappedTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
							public getRendererType(rendererIndex: number): number;
							public getTypeSupport(trackType: number): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module trackselection {
					export class RandomTrackSelection extends com.google.android.exoplayer2.trackselection.BaseTrackSelection {
						public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.RandomTrackSelection>;
						public constructor(group: com.google.android.exoplayer2.source.TrackGroup, tracks: native.Array<number>);
						public updateSelectedTrack(playbackPositionUs: number, bufferedDurationUs: number, availableDurationUs: number, queue: java.util.List<any>, mediaChunkIterators: native.Array<com.google.android.exoplayer2.source.chunk.MediaChunkIterator>): void;
						public getSelectionData(): any;
						public blacklist(index: number, exclusionDurationMs: number): boolean;
						public constructor(group: com.google.android.exoplayer2.source.TrackGroup, tracks: native.Array<number>, random: java.util.Random);
						public length(): number;
						public getSelectedFormat(): com.google.android.exoplayer2.Format;
						public getSelectedIndexInTrackGroup(): number;
						public onPlaybackSpeed(playbackSpeed: number): void;
						public evaluateQueueSize(playbackPositionUs: number, queue: java.util.List<any>): number;
						public getSelectionReason(): number;
						public getTrackGroup(): com.google.android.exoplayer2.source.TrackGroup;
						public disable(): void;
						public indexOf(format: com.google.android.exoplayer2.Format): number;
						public enable(): void;
						public constructor(group: com.google.android.exoplayer2.source.TrackGroup, tracks: native.Array<number>, seed: number);
						public getIndexInTrackGroup(index: number): number;
						public getFormat(index: number): com.google.android.exoplayer2.Format;
						public indexOf(indexInTrackGroup: number): number;
						public getSelectedIndex(): number;
						public shouldCancelChunkLoad(playbackPositionUs: number, loadingChunk: com.google.android.exoplayer2.source.chunk.Chunk, queue: java.util.List<any>): boolean;
						public onDiscontinuity(): void;
					}
					export module RandomTrackSelection {
						export class Factory extends java.lang.Object implements com.google.android.exoplayer2.trackselection.TrackSelection.Factory {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.RandomTrackSelection.Factory>;
							public constructor();
							public constructor(seed: number);
							public createTrackSelections(definitions: native.Array<com.google.android.exoplayer2.trackselection.TrackSelection.Definition>, bandwidthMeter: com.google.android.exoplayer2.upstream.BandwidthMeter): native.Array<com.google.android.exoplayer2.trackselection.TrackSelection>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module trackselection {
					export class TrackSelection extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.TrackSelection>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.trackselection.TrackSelection interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							enable(): void;
							disable(): void;
							getTrackGroup(): com.google.android.exoplayer2.source.TrackGroup;
							length(): number;
							getFormat(int0: number): com.google.android.exoplayer2.Format;
							getIndexInTrackGroup(int0: number): number;
							indexOf(format0: com.google.android.exoplayer2.Format): number;
							indexOf(int0: number): number;
							getSelectedFormat(): com.google.android.exoplayer2.Format;
							getSelectedIndexInTrackGroup(): number;
							getSelectedIndex(): number;
							getSelectionReason(): number;
							getSelectionData(): any;
							onPlaybackSpeed(float0: number): void;
							onDiscontinuity(): void;
							updateSelectedTrack(long0: number, long1: number, long2: number, list3: java.util.List<any>, mediaChunkIterators4: native.Array<com.google.android.exoplayer2.source.chunk.MediaChunkIterator>): void;
							evaluateQueueSize(long0: number, list1: java.util.List<any>): number;
							shouldCancelChunkLoad(playbackPositionUs: number, loadingChunk: com.google.android.exoplayer2.source.chunk.Chunk, queue: java.util.List<any>): boolean;
							blacklist(int0: number, long1: number): boolean;
						});
						public constructor();
						public getSelectionData(): any;
						public length(): number;
						public getSelectedFormat(): com.google.android.exoplayer2.Format;
						public getSelectedIndexInTrackGroup(): number;
						public indexOf(format0: com.google.android.exoplayer2.Format): number;
						public onPlaybackSpeed(float0: number): void;
						public getSelectionReason(): number;
						public getTrackGroup(): com.google.android.exoplayer2.source.TrackGroup;
						public disable(): void;
						public indexOf(int0: number): number;
						public enable(): void;
						public updateSelectedTrack(long0: number, long1: number, long2: number, list3: java.util.List<any>, mediaChunkIterators4: native.Array<com.google.android.exoplayer2.source.chunk.MediaChunkIterator>): void;
						public getIndexInTrackGroup(int0: number): number;
						public evaluateQueueSize(long0: number, list1: java.util.List<any>): number;
						public blacklist(int0: number, long1: number): boolean;
						public getSelectedIndex(): number;
						public shouldCancelChunkLoad(playbackPositionUs: number, loadingChunk: com.google.android.exoplayer2.source.chunk.Chunk, queue: java.util.List<any>): boolean;
						public getFormat(int0: number): com.google.android.exoplayer2.Format;
						public onDiscontinuity(): void;
					}
					export module TrackSelection {
						export class Definition extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.TrackSelection.Definition>;
							public group: com.google.android.exoplayer2.source.TrackGroup;
							public tracks: native.Array<number>;
							public reason: number;
							public data: any;
							public constructor(group: com.google.android.exoplayer2.source.TrackGroup, tracks: native.Array<number>);
							public constructor(group: com.google.android.exoplayer2.source.TrackGroup, tracks: native.Array<number>, reason: number, data: any);
						}
						export class Factory extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.TrackSelection.Factory>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.trackselection.TrackSelection() when extending the interface class.
							 */
							public constructor(implementation: {
								createTrackSelections(definitions0: native.Array<com.google.android.exoplayer2.trackselection.TrackSelection.Definition>, bandwidthMeter1: com.google.android.exoplayer2.upstream.BandwidthMeter): native.Array<com.google.android.exoplayer2.trackselection.TrackSelection>;
							});
							public constructor();
							public createTrackSelections(definitions0: native.Array<com.google.android.exoplayer2.trackselection.TrackSelection.Definition>, bandwidthMeter1: com.google.android.exoplayer2.upstream.BandwidthMeter): native.Array<com.google.android.exoplayer2.trackselection.TrackSelection>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module trackselection {
					export class TrackSelectionArray extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.TrackSelectionArray>;
						public length: number;
						public equals(obj: any): boolean;
						public getAll(): native.Array<com.google.android.exoplayer2.trackselection.TrackSelection>;
						public hashCode(): number;
						public get(index: number): com.google.android.exoplayer2.trackselection.TrackSelection;
						public constructor(trackSelections: native.Array<com.google.android.exoplayer2.trackselection.TrackSelection>);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module trackselection {
					export class TrackSelectionParameters extends java.lang.Object implements globalAndroid.os.Parcelable {
						public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.TrackSelectionParameters>;
						public static DEFAULT_WITHOUT_CONTEXT: com.google.android.exoplayer2.trackselection.TrackSelectionParameters;
						public static DEFAULT: com.google.android.exoplayer2.trackselection.TrackSelectionParameters;
						public preferredAudioLanguage: string;
						public preferredTextLanguage: string;
						public preferredTextRoleFlags: number;
						public selectUndeterminedTextLanguage: boolean;
						public disabledTextTrackSelectionFlags: number;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.trackselection.TrackSelectionParameters>;
						public equals(obj: any): boolean;
						public describeContents(): number;
						public buildUpon(): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
						public static getDefaults(context: globalAndroid.content.Context): com.google.android.exoplayer2.trackselection.TrackSelectionParameters;
						public hashCode(): number;
						public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
					}
					export module TrackSelectionParameters {
						export class Builder extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder>;
							/** @deprecated */
							public constructor();
							public setPreferredTextLanguageAndRoleFlagsToCaptioningManagerSettings(context: globalAndroid.content.Context): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
							public setPreferredTextLanguage(preferredTextLanguage: string): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
							public build(): com.google.android.exoplayer2.trackselection.TrackSelectionParameters;
							public setPreferredAudioLanguage(preferredAudioLanguage: string): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
							public setSelectUndeterminedTextLanguage(selectUndeterminedTextLanguage: boolean): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
							public setDisabledTextTrackSelectionFlags(disabledTextTrackSelectionFlags: number): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
							public constructor(context: globalAndroid.content.Context);
							public setPreferredTextRoleFlags(preferredTextRoleFlags: number): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module trackselection {
					export class TrackSelectionUtil extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.TrackSelectionUtil>;
						public static updateParametersWithOverride(parameters: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters, rendererIndex: number, trackGroupArray: com.google.android.exoplayer2.source.TrackGroupArray, isDisabled: boolean, override: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.SelectionOverride): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters;
						public static createTrackSelectionsForDefinitions(definitions: native.Array<com.google.android.exoplayer2.trackselection.TrackSelection.Definition>, adaptiveTrackSelectionFactory: com.google.android.exoplayer2.trackselection.TrackSelectionUtil.AdaptiveTrackSelectionFactory): native.Array<com.google.android.exoplayer2.trackselection.TrackSelection>;
					}
					export module TrackSelectionUtil {
						export class AdaptiveTrackSelectionFactory extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.TrackSelectionUtil.AdaptiveTrackSelectionFactory>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.trackselection.TrackSelectionUtil() when extending the interface class.
							 */
							public constructor(implementation: {
								createAdaptiveTrackSelection(definition0: com.google.android.exoplayer2.trackselection.TrackSelection.Definition): com.google.android.exoplayer2.trackselection.TrackSelection;
							});
							public constructor();
							public createAdaptiveTrackSelection(definition0: com.google.android.exoplayer2.trackselection.TrackSelection.Definition): com.google.android.exoplayer2.trackselection.TrackSelection;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module trackselection {
					export abstract class TrackSelector extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.TrackSelector>;
						public constructor();
						public invalidate(): void;
						public getBandwidthMeter(): com.google.android.exoplayer2.upstream.BandwidthMeter;
						public selectTracks(rendererCapabilitiess0: native.Array<com.google.android.exoplayer2.RendererCapabilities>, trackGroupArray1: com.google.android.exoplayer2.source.TrackGroupArray, mediaPeriodId2: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, timeline3: com.google.android.exoplayer2.Timeline): com.google.android.exoplayer2.trackselection.TrackSelectorResult;
						public onSelectionActivated(object0: any): void;
						public init(listener: com.google.android.exoplayer2.trackselection.TrackSelector.InvalidationListener, bandwidthMeter: com.google.android.exoplayer2.upstream.BandwidthMeter): void;
					}
					export module TrackSelector {
						export class InvalidationListener extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.TrackSelector.InvalidationListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.trackselection.TrackSelector() when extending the interface class.
							 */
							public constructor(implementation: {
								onTrackSelectionsInvalidated(): void;
							});
							public constructor();
							public onTrackSelectionsInvalidated(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module trackselection {
					export class TrackSelectorResult extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.TrackSelectorResult>;
						public length: number;
						public rendererConfigurations: native.Array<com.google.android.exoplayer2.RendererConfiguration>;
						public selections: com.google.android.exoplayer2.trackselection.TrackSelectionArray;
						public info: any;
						public constructor(rendererConfigurations: native.Array<com.google.android.exoplayer2.RendererConfiguration>, selections: native.Array<com.google.android.exoplayer2.trackselection.TrackSelection>, info: any);
						public isRendererEnabled(index: number): boolean;
						public isEquivalent(other: com.google.android.exoplayer2.trackselection.TrackSelectorResult): boolean;
						public isEquivalent(other: com.google.android.exoplayer2.trackselection.TrackSelectorResult, index: number): boolean;
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class Allocation extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.Allocation>;
						public data: native.Array<number>;
						public offset: number;
						public constructor(data: native.Array<number>, offset: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class Allocator extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.Allocator>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.upstream.Allocator interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							allocate(): com.google.android.exoplayer2.upstream.Allocation;
							release(allocation0: com.google.android.exoplayer2.upstream.Allocation): void;
							release(allocations0: native.Array<com.google.android.exoplayer2.upstream.Allocation>): void;
							trim(): void;
							getTotalBytesAllocated(): number;
							getIndividualAllocationLength(): number;
						});
						public constructor();
						public getTotalBytesAllocated(): number;
						public trim(): void;
						public release(allocation0: com.google.android.exoplayer2.upstream.Allocation): void;
						public release(allocations0: native.Array<com.google.android.exoplayer2.upstream.Allocation>): void;
						public allocate(): com.google.android.exoplayer2.upstream.Allocation;
						public getIndividualAllocationLength(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class AssetDataSource extends com.google.android.exoplayer2.upstream.BaseDataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.AssetDataSource>;
						public constructor(isNetwork: boolean);
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public close(): void;
						public open(dataSpec: com.google.android.exoplayer2.upstream.DataSpec): number;
						public read(buffer: native.Array<number>, offset: number, readLength: number): number;
						public getUri(): globalAndroid.net.Uri;
						public addTransferListener(transferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
						public constructor(context: globalAndroid.content.Context);
					}
					export module AssetDataSource {
						export class AssetDataSourceException extends java.io.IOException {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.AssetDataSource.AssetDataSourceException>;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(message: string);
							public constructor(cause: java.io.IOException);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class BandwidthMeter extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.BandwidthMeter>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.upstream.BandwidthMeter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getBitrateEstimate(): number;
							getTransferListener(): com.google.android.exoplayer2.upstream.TransferListener;
							addEventListener(handler0: globalAndroid.os.Handler, eventListener1: com.google.android.exoplayer2.upstream.BandwidthMeter.EventListener): void;
							removeEventListener(eventListener0: com.google.android.exoplayer2.upstream.BandwidthMeter.EventListener): void;
						});
						public constructor();
						public addEventListener(handler0: globalAndroid.os.Handler, eventListener1: com.google.android.exoplayer2.upstream.BandwidthMeter.EventListener): void;
						public getBitrateEstimate(): number;
						public getTransferListener(): com.google.android.exoplayer2.upstream.TransferListener;
						public removeEventListener(eventListener0: com.google.android.exoplayer2.upstream.BandwidthMeter.EventListener): void;
					}
					export module BandwidthMeter {
						export class EventListener extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.BandwidthMeter.EventListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.upstream.BandwidthMeter() when extending the interface class.
							 */
							public constructor(implementation: {
								onBandwidthSample(int0: number, long1: number, long2: number): void;
							});
							public constructor();
							public onBandwidthSample(int0: number, long1: number, long2: number): void;
						}
						export module EventListener {
							export class EventDispatcher extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.upstream.BandwidthMeter.EventListener.EventDispatcher>;
								public addListener(eventHandler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.upstream.BandwidthMeter.EventListener): void;
								public removeListener(eventListener: com.google.android.exoplayer2.upstream.BandwidthMeter.EventListener): void;
								public constructor();
								public bandwidthSample(elapsedMs: number, bytesTransferred: number, bitrateEstimate: number): void;
							}
							export module EventDispatcher {
								export class HandlerAndListener extends java.lang.Object {
									public static class: java.lang.Class<com.google.android.exoplayer2.upstream.BandwidthMeter.EventListener.EventDispatcher.HandlerAndListener>;
									public constructor(handler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.upstream.BandwidthMeter.EventListener);
									public release(): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export abstract class BaseDataSource extends java.lang.Object implements com.google.android.exoplayer2.upstream.DataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.BaseDataSource>;
						public constructor(isNetwork: boolean);
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public transferEnded(): void;
						public close(): void;
						public transferStarted(dataSpec: com.google.android.exoplayer2.upstream.DataSpec): void;
						public open(dataSpec0: com.google.android.exoplayer2.upstream.DataSpec): number;
						public transferInitializing(dataSpec: com.google.android.exoplayer2.upstream.DataSpec): void;
						public bytesTransferred(bytesTransferred: number): void;
						public read(bytes0: native.Array<number>, int1: number, int2: number): number;
						public addTransferListener(transferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
						public getUri(): globalAndroid.net.Uri;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class ByteArrayDataSink extends java.lang.Object implements com.google.android.exoplayer2.upstream.DataSink {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.ByteArrayDataSink>;
						public constructor();
						public close(): void;
						public getData(): native.Array<number>;
						public open(dataSpec: com.google.android.exoplayer2.upstream.DataSpec): void;
						public write(buffer: native.Array<number>, offset: number, length: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class ByteArrayDataSource extends com.google.android.exoplayer2.upstream.BaseDataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.ByteArrayDataSource>;
						public constructor(isNetwork: boolean);
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public close(): void;
						public constructor(data: native.Array<number>);
						public open(dataSpec: com.google.android.exoplayer2.upstream.DataSpec): number;
						public read(buffer: native.Array<number>, offset: number, readLength: number): number;
						public getUri(): globalAndroid.net.Uri;
						public addTransferListener(transferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class ContentDataSource extends com.google.android.exoplayer2.upstream.BaseDataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.ContentDataSource>;
						public constructor(isNetwork: boolean);
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public close(): void;
						public open(dataSpec: com.google.android.exoplayer2.upstream.DataSpec): number;
						public read(buffer: native.Array<number>, offset: number, readLength: number): number;
						public getUri(): globalAndroid.net.Uri;
						public addTransferListener(transferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
						public constructor(context: globalAndroid.content.Context);
					}
					export module ContentDataSource {
						export class ContentDataSourceException extends java.io.IOException {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.ContentDataSource.ContentDataSourceException>;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(message: string);
							public constructor(cause: java.io.IOException);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class DataSchemeDataSource extends com.google.android.exoplayer2.upstream.BaseDataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DataSchemeDataSource>;
						public static SCHEME_DATA: string;
						public constructor(isNetwork: boolean);
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public constructor();
						public close(): void;
						public open(dataSpec: com.google.android.exoplayer2.upstream.DataSpec): number;
						public read(buffer: native.Array<number>, offset: number, readLength: number): number;
						public getUri(): globalAndroid.net.Uri;
						public addTransferListener(transferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class DataSink extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DataSink>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.upstream.DataSink interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							open(dataSpec0: com.google.android.exoplayer2.upstream.DataSpec): void;
							write(bytes0: native.Array<number>, int1: number, int2: number): void;
							close(): void;
						});
						public constructor();
						public close(): void;
						public open(dataSpec0: com.google.android.exoplayer2.upstream.DataSpec): void;
						public write(bytes0: native.Array<number>, int1: number, int2: number): void;
					}
					export module DataSink {
						export class Factory extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DataSink.Factory>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.upstream.DataSink() when extending the interface class.
							 */
							public constructor(implementation: {
								createDataSink(): com.google.android.exoplayer2.upstream.DataSink;
							});
							public constructor();
							public createDataSink(): com.google.android.exoplayer2.upstream.DataSink;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class DataSourceInputStream extends java.io.InputStream {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DataSourceInputStream>;
						public read(): number;
						public constructor();
						public read(b: native.Array<number>): number;
						public read(buffer: native.Array<number>, offset: number, length: number): number;
						public close(): void;
						public constructor(dataSource: com.google.android.exoplayer2.upstream.DataSource, dataSpec: com.google.android.exoplayer2.upstream.DataSpec);
						public open(): void;
						public bytesRead(): number;
						public read(b: native.Array<number>, off: number, len: number): number;
						public read(buffer: native.Array<number>): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class DefaultAllocator extends java.lang.Object implements com.google.android.exoplayer2.upstream.Allocator {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DefaultAllocator>;
						public getTotalBytesAllocated(): number;
						public setTargetBufferSize(targetBufferSize: number): void;
						public trim(): void;
						public constructor(trimOnReset: boolean, individualAllocationSize: number, initialAllocationCount: number);
						public release(allocations: native.Array<com.google.android.exoplayer2.upstream.Allocation>): void;
						public constructor(trimOnReset: boolean, individualAllocationSize: number);
						public reset(): void;
						public allocate(): com.google.android.exoplayer2.upstream.Allocation;
						public release(allocation: com.google.android.exoplayer2.upstream.Allocation): void;
						public getIndividualAllocationLength(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class DefaultBandwidthMeter extends java.lang.Object implements com.google.android.exoplayer2.upstream.BandwidthMeter, com.google.android.exoplayer2.upstream.TransferListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DefaultBandwidthMeter>;
						public static DEFAULT_INITIAL_BITRATE_COUNTRY_GROUPS: com.google.common.collect.ImmutableListMultimap<string,java.lang.Integer>;
						public static DEFAULT_INITIAL_BITRATE_ESTIMATES_WIFI: com.google.common.collect.ImmutableList<java.lang.Long>;
						public static DEFAULT_INITIAL_BITRATE_ESTIMATES_2G: com.google.common.collect.ImmutableList<java.lang.Long>;
						public static DEFAULT_INITIAL_BITRATE_ESTIMATES_3G: com.google.common.collect.ImmutableList<java.lang.Long>;
						public static DEFAULT_INITIAL_BITRATE_ESTIMATES_4G: com.google.common.collect.ImmutableList<java.lang.Long>;
						public static DEFAULT_INITIAL_BITRATE_ESTIMATES_5G_NSA: com.google.common.collect.ImmutableList<java.lang.Long>;
						public static DEFAULT_INITIAL_BITRATE_ESTIMATE: number;
						public static DEFAULT_SLIDING_WINDOW_MAX_WEIGHT: number;
						public removeEventListener(eventListener: com.google.android.exoplayer2.upstream.BandwidthMeter.EventListener): void;
						public addEventListener(eventHandler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.upstream.BandwidthMeter.EventListener): void;
						/** @deprecated */
						public constructor();
						public getBitrateEstimate(): number;
						public onTransferStart(source: com.google.android.exoplayer2.upstream.DataSource, dataSpec: com.google.android.exoplayer2.upstream.DataSpec, isNetwork: boolean): void;
						public onTransferEnd(source: com.google.android.exoplayer2.upstream.DataSource, dataSpec: com.google.android.exoplayer2.upstream.DataSpec, isNetwork: boolean): void;
						public onTransferInitializing(source: com.google.android.exoplayer2.upstream.DataSource, dataSpec: com.google.android.exoplayer2.upstream.DataSpec, isNetwork: boolean): void;
						public static getSingletonInstance(context: globalAndroid.content.Context): com.google.android.exoplayer2.upstream.DefaultBandwidthMeter;
						public onBytesTransferred(source: com.google.android.exoplayer2.upstream.DataSource, dataSpec: com.google.android.exoplayer2.upstream.DataSpec, isNetwork: boolean, bytes: number): void;
						public setNetworkTypeOverride(networkType: number): void;
						public getTransferListener(): com.google.android.exoplayer2.upstream.TransferListener;
					}
					export module DefaultBandwidthMeter {
						export class Builder extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DefaultBandwidthMeter.Builder>;
							public setSlidingWindowMaxWeight(slidingWindowMaxWeight: number): com.google.android.exoplayer2.upstream.DefaultBandwidthMeter.Builder;
							public build(): com.google.android.exoplayer2.upstream.DefaultBandwidthMeter;
							public setInitialBitrateEstimate(initialBitrateEstimate: number): com.google.android.exoplayer2.upstream.DefaultBandwidthMeter.Builder;
							public setInitialBitrateEstimate(countryCode: string): com.google.android.exoplayer2.upstream.DefaultBandwidthMeter.Builder;
							public setClock(clock: com.google.android.exoplayer2.util.Clock): com.google.android.exoplayer2.upstream.DefaultBandwidthMeter.Builder;
							public setResetOnNetworkTypeChange(resetOnNetworkTypeChange: boolean): com.google.android.exoplayer2.upstream.DefaultBandwidthMeter.Builder;
							public setInitialBitrateEstimate(networkType: number, initialBitrateEstimate: number): com.google.android.exoplayer2.upstream.DefaultBandwidthMeter.Builder;
							public constructor(context: globalAndroid.content.Context);
						}
						export class ConnectivityActionReceiver extends globalAndroid.content.BroadcastReceiver {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DefaultBandwidthMeter.ConnectivityActionReceiver>;
							public static getInstance(context: globalAndroid.content.Context): com.google.android.exoplayer2.upstream.DefaultBandwidthMeter.ConnectivityActionReceiver;
							public onReceive(context: globalAndroid.content.Context, intent: globalAndroid.content.Intent): void;
							public register(bandwidthMeter: com.google.android.exoplayer2.upstream.DefaultBandwidthMeter): void;
							public onReceive(context0: globalAndroid.content.Context, intent1: globalAndroid.content.Intent): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class DefaultDataSource extends java.lang.Object implements com.google.android.exoplayer2.upstream.DataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DefaultDataSource>;
						public constructor(context: globalAndroid.content.Context, userAgent: string, connectTimeoutMillis: number, readTimeoutMillis: number, allowCrossProtocolRedirects: boolean);
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public constructor(context: globalAndroid.content.Context, userAgent: string, allowCrossProtocolRedirects: boolean);
						public constructor(context: globalAndroid.content.Context, baseDataSource: com.google.android.exoplayer2.upstream.DataSource);
						public close(): void;
						public open(dataSpec: com.google.android.exoplayer2.upstream.DataSpec): number;
						public read(buffer: native.Array<number>, offset: number, readLength: number): number;
						public constructor(context: globalAndroid.content.Context, allowCrossProtocolRedirects: boolean);
						public addTransferListener(transferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
						public getUri(): globalAndroid.net.Uri;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class DefaultDataSourceFactory extends java.lang.Object implements com.google.android.exoplayer2.upstream.DataSource.Factory {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DefaultDataSourceFactory>;
						public constructor(context: globalAndroid.content.Context, userAgent: string);
						public constructor(context: globalAndroid.content.Context, userAgent: string, listener: com.google.android.exoplayer2.upstream.TransferListener);
						public constructor(context: globalAndroid.content.Context, baseDataSourceFactory: com.google.android.exoplayer2.upstream.DataSource.Factory);
						public createDataSource(): com.google.android.exoplayer2.upstream.DataSource;
						public constructor(context: globalAndroid.content.Context, listener: com.google.android.exoplayer2.upstream.TransferListener, baseDataSourceFactory: com.google.android.exoplayer2.upstream.DataSource.Factory);
						public constructor(context: globalAndroid.content.Context);
						public createDataSource(): com.google.android.exoplayer2.upstream.DefaultDataSource;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class DefaultHttpDataSource extends com.google.android.exoplayer2.upstream.BaseDataSource implements com.google.android.exoplayer2.upstream.HttpDataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DefaultHttpDataSource>;
						public static DEFAULT_CONNECT_TIMEOUT_MILLIS: number;
						public static DEFAULT_READ_TIMEOUT_MILLIS: number;
						public constructor(isNetwork: boolean);
						public clearAllRequestProperties(): void;
						public constructor();
						public constructor(userAgent: string, connectTimeoutMillis: number, readTimeoutMillis: number, allowCrossProtocolRedirects: boolean, defaultRequestProperties: com.google.android.exoplayer2.upstream.HttpDataSource.RequestProperties);
						public setContentTypePredicate(contentTypePredicate: com.google.common.base.Predicate<string>): void;
						public close(): void;
						public getResponseCode(): number;
						/** @deprecated */
						public constructor(userAgent: string, contentTypePredicate: com.google.common.base.Predicate<string>, connectTimeoutMillis: number, readTimeoutMillis: number);
						public bytesRead(): number;
						public read(buffer: native.Array<number>, offset: number, readLength: number): number;
						public getUri(): globalAndroid.net.Uri;
						public constructor(userAgent: string);
						/** @deprecated */
						public constructor(userAgent: string, contentTypePredicate: com.google.common.base.Predicate<string>);
						/** @deprecated */
						public constructor(userAgent: string, contentTypePredicate: com.google.common.base.Predicate<string>, connectTimeoutMillis: number, readTimeoutMillis: number, allowCrossProtocolRedirects: boolean, defaultRequestProperties: com.google.android.exoplayer2.upstream.HttpDataSource.RequestProperties);
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public clearRequestProperty(name: string): void;
						public bytesSkipped(): number;
						public constructor(userAgent: string, connectTimeoutMillis: number, readTimeoutMillis: number);
						public bytesRemaining(): number;
						public open(dataSpec: com.google.android.exoplayer2.upstream.DataSpec): number;
						public getConnection(): java.net.HttpURLConnection;
						public setRequestProperty(name: string, value: string): void;
						public addTransferListener(transferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class DefaultHttpDataSourceFactory extends com.google.android.exoplayer2.upstream.HttpDataSource.BaseFactory {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DefaultHttpDataSourceFactory>;
						public constructor();
						public constructor(userAgent: string, listener: com.google.android.exoplayer2.upstream.TransferListener, connectTimeoutMillis: number, readTimeoutMillis: number, allowCrossProtocolRedirects: boolean);
						/** @deprecated */
						public clearAllDefaultRequestProperties(): void;
						public createDataSource(): com.google.android.exoplayer2.upstream.HttpDataSource;
						public createDataSourceInternal(defaultRequestProperties: com.google.android.exoplayer2.upstream.HttpDataSource.RequestProperties): com.google.android.exoplayer2.upstream.DefaultHttpDataSource;
						/** @deprecated */
						public setDefaultRequestProperty(name: string, value: string): void;
						/** @deprecated */
						public clearDefaultRequestProperty(name: string): void;
						public getDefaultRequestProperties(): com.google.android.exoplayer2.upstream.HttpDataSource.RequestProperties;
						public createDataSourceInternal(requestProperties0: com.google.android.exoplayer2.upstream.HttpDataSource.RequestProperties): com.google.android.exoplayer2.upstream.HttpDataSource;
						public constructor(userAgent: string, connectTimeoutMillis: number, readTimeoutMillis: number, allowCrossProtocolRedirects: boolean);
						public constructor(userAgent: string);
						public constructor(userAgent: string, listener: com.google.android.exoplayer2.upstream.TransferListener);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class DefaultLoadErrorHandlingPolicy extends java.lang.Object implements com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DefaultLoadErrorHandlingPolicy>;
						public static DEFAULT_MIN_LOADABLE_RETRY_COUNT: number;
						public static DEFAULT_MIN_LOADABLE_RETRY_COUNT_PROGRESSIVE_LIVE: number;
						public static DEFAULT_TRACK_BLACKLIST_MS: number;
						/** @deprecated */
						public getBlacklistDurationMsFor(dataType: number, loadDurationMs: number, exception: java.io.IOException, errorCount: number): number;
						public onLoadTaskConcluded(loadTaskId: number): void;
						public constructor();
						public getRetryDelayMsFor(loadErrorInfo: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy.LoadErrorInfo): number;
						/** @deprecated */
						public getRetryDelayMsFor(dataType: number, loadDurationMs: number, exception: java.io.IOException, errorCount: number): number;
						public constructor(minimumLoadableRetryCount: number);
						public getBlacklistDurationMsFor(loadErrorInfo: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy.LoadErrorInfo): number;
						public getMinimumLoadableRetryCount(dataType: number): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class DummyDataSource extends java.lang.Object implements com.google.android.exoplayer2.upstream.DataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DummyDataSource>;
						public static INSTANCE: com.google.android.exoplayer2.upstream.DummyDataSource;
						public static FACTORY: com.google.android.exoplayer2.upstream.DataSource.Factory;
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public close(): void;
						public open(dataSpec: com.google.android.exoplayer2.upstream.DataSpec): number;
						public read(buffer: native.Array<number>, offset: number, readLength: number): number;
						public addTransferListener(transferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
						public getUri(): globalAndroid.net.Uri;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class FileDataSource extends com.google.android.exoplayer2.upstream.BaseDataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.FileDataSource>;
						public constructor(isNetwork: boolean);
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public constructor();
						public close(): void;
						public open(dataSpec: com.google.android.exoplayer2.upstream.DataSpec): number;
						public read(buffer: native.Array<number>, offset: number, readLength: number): number;
						public getUri(): globalAndroid.net.Uri;
						public addTransferListener(transferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
					}
					export module FileDataSource {
						export class Factory extends java.lang.Object implements com.google.android.exoplayer2.upstream.DataSource.Factory {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.FileDataSource.Factory>;
							public constructor();
							public createDataSource(): com.google.android.exoplayer2.upstream.DataSource;
							public createDataSource(): com.google.android.exoplayer2.upstream.FileDataSource;
							public setListener(listener: com.google.android.exoplayer2.upstream.TransferListener): com.google.android.exoplayer2.upstream.FileDataSource.Factory;
						}
						export class FileDataSourceException extends java.io.IOException {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.FileDataSource.FileDataSourceException>;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(message: string);
							public constructor(cause: java.io.IOException);
							public constructor(message: string, cause: java.io.IOException);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class FileDataSourceFactory extends java.lang.Object implements com.google.android.exoplayer2.upstream.DataSource.Factory {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.FileDataSourceFactory>;
						public constructor();
						public constructor(listener: com.google.android.exoplayer2.upstream.TransferListener);
						public createDataSource(): com.google.android.exoplayer2.upstream.DataSource;
						public createDataSource(): com.google.android.exoplayer2.upstream.FileDataSource;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class LoadErrorHandlingPolicy extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getBlacklistDurationMsFor(dataType: number, loadDurationMs: number, exception: java.io.IOException, errorCount: number): number;
							getBlacklistDurationMsFor(loadErrorInfo: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy.LoadErrorInfo): number;
							getRetryDelayMsFor(dataType: number, loadDurationMs: number, exception: java.io.IOException, errorCount: number): number;
							getRetryDelayMsFor(loadErrorInfo: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy.LoadErrorInfo): number;
							onLoadTaskConcluded(loadTaskId: number): void;
							getMinimumLoadableRetryCount(int0: number): number;
						});
						public constructor();
						/** @deprecated */
						public getBlacklistDurationMsFor(dataType: number, loadDurationMs: number, exception: java.io.IOException, errorCount: number): number;
						public onLoadTaskConcluded(loadTaskId: number): void;
						public getMinimumLoadableRetryCount(int0: number): number;
						public getRetryDelayMsFor(loadErrorInfo: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy.LoadErrorInfo): number;
						/** @deprecated */
						public getRetryDelayMsFor(dataType: number, loadDurationMs: number, exception: java.io.IOException, errorCount: number): number;
						public getBlacklistDurationMsFor(loadErrorInfo: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy.LoadErrorInfo): number;
					}
					export module LoadErrorHandlingPolicy {
						export class LoadErrorInfo extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy.LoadErrorInfo>;
							public loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo;
							public mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData;
							public exception: java.io.IOException;
							public errorCount: number;
							public constructor(loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData, exception: java.io.IOException, errorCount: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class Loader extends java.lang.Object implements com.google.android.exoplayer2.upstream.LoaderErrorThrower {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.Loader>;
						public static RETRY: com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
						public static RETRY_RESET_ERROR_COUNT: com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
						public static DONT_RETRY: com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
						public static DONT_RETRY_FATAL: com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
						public constructor(threadName: string);
						public isLoading(): boolean;
						public release(callback: com.google.android.exoplayer2.upstream.Loader.ReleaseCallback): void;
						public static createRetryAction(resetErrorCount: boolean, retryDelayMillis: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
						public hasFatalError(): boolean;
						public startLoading(loadable: com.google.android.exoplayer2.upstream.Loader.Loadable, callback: com.google.android.exoplayer2.upstream.Loader.Callback<any>, defaultMinRetryCount: number): number;
						public clearFatalError(): void;
						public release(): void;
						public maybeThrowError(minRetryCount: number): void;
						public maybeThrowError(): void;
						public cancelLoading(): void;
					}
					export module Loader {
						export class Callback<T>  extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.Loader.Callback<any>>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.upstream.Loader() when extending the interface class.
							 */
							public constructor(implementation: {
								onLoadCompleted(loadable0: T, long1: number, long2: number): void;
								onLoadCanceled(loadable0: T, long1: number, long2: number, boolean3: boolean): void;
								onLoadError(loadable0: T, long1: number, long2: number, iOException3: java.io.IOException, int4: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
							});
							public constructor();
							public onLoadCompleted(loadable0: T, long1: number, long2: number): void;
							public onLoadCanceled(loadable0: T, long1: number, long2: number, boolean3: boolean): void;
							public onLoadError(loadable0: T, long1: number, long2: number, iOException3: java.io.IOException, int4: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
						}
						export class LoadErrorAction extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.Loader.LoadErrorAction>;
							public isRetry(): boolean;
						}
						export class LoadTask<T>  extends globalAndroid.os.Handler implements java.lang.Runnable  {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.Loader.LoadTask<any>>;
							public defaultMinRetryCount: number;
							public constructor();
							public maybeThrowError(minRetryCount: number): void;
							public constructor(callback: globalAndroid.os.Handler.Callback);
							public start(delayMillis: number): void;
							public cancel(released: boolean): void;
							public handleMessage(msg: globalAndroid.os.Message): void;
							public constructor(looper: globalAndroid.os.Looper);
							public constructor(looper: globalAndroid.os.Looper, callback: globalAndroid.os.Handler.Callback);
							public constructor(param0: globalAndroid.os.Looper, looper: any, loadable: com.google.android.exoplayer2.upstream.Loader.Callback<any>, callback: number, defaultMinRetryCount: number);
							public run(): void;
						}
						export class Loadable extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.Loader.Loadable>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.upstream.Loader() when extending the interface class.
							 */
							public constructor(implementation: {
								cancelLoad(): void;
								load(): void;
							});
							public constructor();
							public cancelLoad(): void;
							public load(): void;
						}
						export class ReleaseCallback extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.Loader.ReleaseCallback>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.upstream.Loader() when extending the interface class.
							 */
							public constructor(implementation: {
								onLoaderReleased(): void;
							});
							public constructor();
							public onLoaderReleased(): void;
						}
						export class ReleaseTask extends java.lang.Object implements java.lang.Runnable {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.Loader.ReleaseTask>;
							public constructor(callback: com.google.android.exoplayer2.upstream.Loader.ReleaseCallback);
							public run(): void;
						}
						export class UnexpectedLoaderException extends java.io.IOException {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.Loader.UnexpectedLoaderException>;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(message: string);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class LoaderErrorThrower extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.LoaderErrorThrower>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.upstream.LoaderErrorThrower interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							maybeThrowError(): void;
							maybeThrowError(int0: number): void;
						});
						public constructor();
						public maybeThrowError(int0: number): void;
						public maybeThrowError(): void;
					}
					export module LoaderErrorThrower {
						export class Dummy extends java.lang.Object implements com.google.android.exoplayer2.upstream.LoaderErrorThrower {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.LoaderErrorThrower.Dummy>;
							public constructor();
							public maybeThrowError(minRetryCount: number): void;
							public maybeThrowError(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class ParsingLoadable<T>  extends com.google.android.exoplayer2.upstream.Loader.Loadable {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.ParsingLoadable<any>>;
						public loadTaskId: number;
						public dataSpec: com.google.android.exoplayer2.upstream.DataSpec;
						public type: number;
						public static load(dataSource: com.google.android.exoplayer2.upstream.DataSource, parser: com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<any>, dataSpec: com.google.android.exoplayer2.upstream.DataSpec, type: number): any;
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public static load(dataSource: com.google.android.exoplayer2.upstream.DataSource, parser: com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<any>, uri: globalAndroid.net.Uri, type: number): any;
						public constructor(dataSource: com.google.android.exoplayer2.upstream.DataSource, dataSpec: com.google.android.exoplayer2.upstream.DataSpec, type: number, parser: com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<any>);
						public cancelLoad(): void;
						public getResult(): any;
						public load(): void;
						public bytesLoaded(): number;
						public constructor(dataSource: com.google.android.exoplayer2.upstream.DataSource, uri: globalAndroid.net.Uri, type: number, parser: com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<any>);
						public getUri(): globalAndroid.net.Uri;
					}
					export module ParsingLoadable {
						export class Parser<T>  extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<any>>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.upstream.ParsingLoadable() when extending the interface class.
							 */
							public constructor(implementation: {
								parse(uri0: globalAndroid.net.Uri, inputStream1: java.io.InputStream): T;
							});
							public constructor();
							public parse(uri0: globalAndroid.net.Uri, inputStream1: java.io.InputStream): T;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class PriorityDataSource extends java.lang.Object implements com.google.android.exoplayer2.upstream.DataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.PriorityDataSource>;
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public close(): void;
						public open(dataSpec: com.google.android.exoplayer2.upstream.DataSpec): number;
						public read(buffer: native.Array<number>, offset: number, max: number): number;
						public constructor(upstream: com.google.android.exoplayer2.upstream.DataSource, priorityTaskManager: com.google.android.exoplayer2.util.PriorityTaskManager, priority: number);
						public addTransferListener(transferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
						public getUri(): globalAndroid.net.Uri;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class PriorityDataSourceFactory extends java.lang.Object implements com.google.android.exoplayer2.upstream.DataSource.Factory {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.PriorityDataSourceFactory>;
						public createDataSource(): com.google.android.exoplayer2.upstream.PriorityDataSource;
						public constructor(upstreamFactory: com.google.android.exoplayer2.upstream.DataSource.Factory, priorityTaskManager: com.google.android.exoplayer2.util.PriorityTaskManager, priority: number);
						public createDataSource(): com.google.android.exoplayer2.upstream.DataSource;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class RawResourceDataSource extends com.google.android.exoplayer2.upstream.BaseDataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.RawResourceDataSource>;
						public static RAW_RESOURCE_SCHEME: string;
						public constructor(isNetwork: boolean);
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public close(): void;
						public open(dataSpec: com.google.android.exoplayer2.upstream.DataSpec): number;
						public read(buffer: native.Array<number>, offset: number, readLength: number): number;
						public getUri(): globalAndroid.net.Uri;
						public addTransferListener(transferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
						public static buildRawResourceUri(rawResourceId: number): globalAndroid.net.Uri;
						public constructor(context: globalAndroid.content.Context);
					}
					export module RawResourceDataSource {
						export class RawResourceDataSourceException extends java.io.IOException {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.RawResourceDataSource.RawResourceDataSourceException>;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(e: java.io.IOException);
							public constructor(message: string);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class ResolvingDataSource extends java.lang.Object implements com.google.android.exoplayer2.upstream.DataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.ResolvingDataSource>;
						public constructor(upstreamDataSource: com.google.android.exoplayer2.upstream.DataSource, resolver: com.google.android.exoplayer2.upstream.ResolvingDataSource.Resolver);
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public close(): void;
						public open(dataSpec: com.google.android.exoplayer2.upstream.DataSpec): number;
						public read(buffer: native.Array<number>, offset: number, readLength: number): number;
						public addTransferListener(transferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
						public getUri(): globalAndroid.net.Uri;
					}
					export module ResolvingDataSource {
						export class Factory extends java.lang.Object implements com.google.android.exoplayer2.upstream.DataSource.Factory {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.ResolvingDataSource.Factory>;
							public constructor(upstreamFactory: com.google.android.exoplayer2.upstream.DataSource.Factory, resolver: com.google.android.exoplayer2.upstream.ResolvingDataSource.Resolver);
							public createDataSource(): com.google.android.exoplayer2.upstream.DataSource;
							public createDataSource(): com.google.android.exoplayer2.upstream.ResolvingDataSource;
						}
						export class Resolver extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.ResolvingDataSource.Resolver>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.upstream.ResolvingDataSource() when extending the interface class.
							 */
							public constructor(implementation: {
								resolveDataSpec(dataSpec0: com.google.android.exoplayer2.upstream.DataSpec): com.google.android.exoplayer2.upstream.DataSpec;
								resolveReportedUri(uri: globalAndroid.net.Uri): globalAndroid.net.Uri;
							});
							public constructor();
							public resolveReportedUri(uri: globalAndroid.net.Uri): globalAndroid.net.Uri;
							public resolveDataSpec(dataSpec0: com.google.android.exoplayer2.upstream.DataSpec): com.google.android.exoplayer2.upstream.DataSpec;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class StatsDataSource extends java.lang.Object implements com.google.android.exoplayer2.upstream.DataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.StatsDataSource>;
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public getLastOpenedUri(): globalAndroid.net.Uri;
						public resetBytesRead(): void;
						public getLastResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public close(): void;
						public constructor(dataSource: com.google.android.exoplayer2.upstream.DataSource);
						public getBytesRead(): number;
						public open(dataSpec: com.google.android.exoplayer2.upstream.DataSpec): number;
						public read(buffer: native.Array<number>, offset: number, readLength: number): number;
						public addTransferListener(transferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
						public getUri(): globalAndroid.net.Uri;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class TeeDataSource extends java.lang.Object implements com.google.android.exoplayer2.upstream.DataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.TeeDataSource>;
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public close(): void;
						public constructor(upstream: com.google.android.exoplayer2.upstream.DataSource, dataSink: com.google.android.exoplayer2.upstream.DataSink);
						public open(dataSpec: com.google.android.exoplayer2.upstream.DataSpec): number;
						public read(buffer: native.Array<number>, offset: number, max: number): number;
						public addTransferListener(transferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
						public getUri(): globalAndroid.net.Uri;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class UdpDataSource extends com.google.android.exoplayer2.upstream.BaseDataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.UdpDataSource>;
						public static DEFAULT_MAX_PACKET_SIZE: number;
						public static DEFAULT_SOCKET_TIMEOUT_MILLIS: number;
						public constructor(isNetwork: boolean);
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public constructor();
						public close(): void;
						public constructor(maxPacketSize: number);
						public constructor(maxPacketSize: number, socketTimeoutMillis: number);
						public open(dataSpec: com.google.android.exoplayer2.upstream.DataSpec): number;
						public read(buffer: native.Array<number>, offset: number, readLength: number): number;
						public getUri(): globalAndroid.net.Uri;
						public addTransferListener(transferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
					}
					export module UdpDataSource {
						export class UdpDataSourceException extends java.io.IOException {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.UdpDataSource.UdpDataSourceException>;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(message: string);
							public constructor(cause: java.io.IOException);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class Cache extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.Cache>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.upstream.cache.Cache interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getUid(): number;
								release(): void;
								addListener(string0: string, listener1: com.google.android.exoplayer2.upstream.cache.Cache.Listener): java.util.NavigableSet<com.google.android.exoplayer2.upstream.cache.CacheSpan>;
								removeListener(string0: string, listener1: com.google.android.exoplayer2.upstream.cache.Cache.Listener): void;
								getCachedSpans(string0: string): java.util.NavigableSet<com.google.android.exoplayer2.upstream.cache.CacheSpan>;
								getKeys(): java.util.Set<string>;
								getCacheSpace(): number;
								startReadWrite(string0: string, long1: number, long2: number): com.google.android.exoplayer2.upstream.cache.CacheSpan;
								startReadWriteNonBlocking(string0: string, long1: number, long2: number): com.google.android.exoplayer2.upstream.cache.CacheSpan;
								startFile(string0: string, long1: number, long2: number): java.io.File;
								commitFile(file0: java.io.File, long1: number): void;
								releaseHoleSpan(cacheSpan0: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
								removeResource(string0: string): void;
								removeSpan(cacheSpan0: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
								isCached(string0: string, long1: number, long2: number): boolean;
								getCachedLength(string0: string, long1: number, long2: number): number;
								getCachedBytes(string0: string, long1: number, long2: number): number;
								applyContentMetadataMutations(string0: string, contentMetadataMutations1: com.google.android.exoplayer2.upstream.cache.ContentMetadataMutations): void;
								getContentMetadata(string0: string): com.google.android.exoplayer2.upstream.cache.ContentMetadata;
							});
							public constructor();
							public static UID_UNSET: number;
							public getCachedSpans(string0: string): java.util.NavigableSet<com.google.android.exoplayer2.upstream.cache.CacheSpan>;
							public getContentMetadata(string0: string): com.google.android.exoplayer2.upstream.cache.ContentMetadata;
							public getCachedLength(string0: string, long1: number, long2: number): number;
							public startFile(string0: string, long1: number, long2: number): java.io.File;
							public release(): void;
							public startReadWrite(string0: string, long1: number, long2: number): com.google.android.exoplayer2.upstream.cache.CacheSpan;
							public getCacheSpace(): number;
							public getUid(): number;
							public startReadWriteNonBlocking(string0: string, long1: number, long2: number): com.google.android.exoplayer2.upstream.cache.CacheSpan;
							public removeResource(string0: string): void;
							public addListener(string0: string, listener1: com.google.android.exoplayer2.upstream.cache.Cache.Listener): java.util.NavigableSet<com.google.android.exoplayer2.upstream.cache.CacheSpan>;
							public applyContentMetadataMutations(string0: string, contentMetadataMutations1: com.google.android.exoplayer2.upstream.cache.ContentMetadataMutations): void;
							public commitFile(file0: java.io.File, long1: number): void;
							public releaseHoleSpan(cacheSpan0: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							public removeListener(string0: string, listener1: com.google.android.exoplayer2.upstream.cache.Cache.Listener): void;
							public getKeys(): java.util.Set<string>;
							public removeSpan(cacheSpan0: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							public isCached(string0: string, long1: number, long2: number): boolean;
							public getCachedBytes(string0: string, long1: number, long2: number): number;
						}
						export module Cache {
							export class CacheException extends java.io.IOException {
								public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.Cache.CacheException>;
								public constructor(message: string);
								public constructor(cause: java.lang.Throwable);
								public constructor(message: string, cause: java.lang.Throwable);
								public constructor();
								public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
							}
							export class Listener extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.Cache.Listener>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.upstream.cache.Cache() when extending the interface class.
								 */
								public constructor(implementation: {
									onSpanAdded(cache0: com.google.android.exoplayer2.upstream.cache.Cache, cacheSpan1: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
									onSpanRemoved(cache0: com.google.android.exoplayer2.upstream.cache.Cache, cacheSpan1: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
									onSpanTouched(cache0: com.google.android.exoplayer2.upstream.cache.Cache, cacheSpan1: com.google.android.exoplayer2.upstream.cache.CacheSpan, cacheSpan2: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
								});
								public constructor();
								public onSpanRemoved(cache0: com.google.android.exoplayer2.upstream.cache.Cache, cacheSpan1: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
								public onSpanTouched(cache0: com.google.android.exoplayer2.upstream.cache.Cache, cacheSpan1: com.google.android.exoplayer2.upstream.cache.CacheSpan, cacheSpan2: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
								public onSpanAdded(cache0: com.google.android.exoplayer2.upstream.cache.Cache, cacheSpan1: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class CacheDataSink extends java.lang.Object implements com.google.android.exoplayer2.upstream.DataSink {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheDataSink>;
							public static DEFAULT_FRAGMENT_SIZE: number;
							public static DEFAULT_BUFFER_SIZE: number;
							public close(): void;
							public constructor(cache: com.google.android.exoplayer2.upstream.cache.Cache, fragmentSize: number, bufferSize: number);
							public constructor(cache: com.google.android.exoplayer2.upstream.cache.Cache, fragmentSize: number);
							public write(buffer: native.Array<number>, offset: number, length: number): void;
							public open(dataSpec: com.google.android.exoplayer2.upstream.DataSpec): void;
						}
						export module CacheDataSink {
							export class CacheDataSinkException extends com.google.android.exoplayer2.upstream.cache.Cache.CacheException {
								public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheDataSink.CacheDataSinkException>;
								public constructor(message: string);
								public constructor(cause: java.lang.Throwable);
								public constructor(message: string, cause: java.lang.Throwable);
								public constructor(cause: java.io.IOException);
								public constructor();
								public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
							}
							export class Factory extends java.lang.Object implements com.google.android.exoplayer2.upstream.DataSink.Factory {
								public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheDataSink.Factory>;
								public setCache(cache: com.google.android.exoplayer2.upstream.cache.Cache): com.google.android.exoplayer2.upstream.cache.CacheDataSink.Factory;
								public createDataSink(): com.google.android.exoplayer2.upstream.DataSink;
								public setFragmentSize(fragmentSize: number): com.google.android.exoplayer2.upstream.cache.CacheDataSink.Factory;
								public constructor();
								public setBufferSize(bufferSize: number): com.google.android.exoplayer2.upstream.cache.CacheDataSink.Factory;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class CacheDataSinkFactory extends java.lang.Object implements com.google.android.exoplayer2.upstream.DataSink.Factory {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheDataSinkFactory>;
							public constructor(cache: com.google.android.exoplayer2.upstream.cache.Cache, fragmentSize: number, bufferSize: number);
							public constructor(cache: com.google.android.exoplayer2.upstream.cache.Cache, fragmentSize: number);
							public createDataSink(): com.google.android.exoplayer2.upstream.DataSink;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class CacheDataSource extends java.lang.Object implements com.google.android.exoplayer2.upstream.DataSource {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheDataSource>;
							public static FLAG_BLOCK_ON_CACHE: number;
							public static FLAG_IGNORE_CACHE_ON_ERROR: number;
							public static FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS: number;
							public static CACHE_IGNORED_REASON_ERROR: number;
							public static CACHE_IGNORED_REASON_UNSET_LENGTH: number;
							public constructor(cache: com.google.android.exoplayer2.upstream.cache.Cache, upstreamDataSource: com.google.android.exoplayer2.upstream.DataSource, cacheReadDataSource: com.google.android.exoplayer2.upstream.DataSource, cacheWriteDataSink: com.google.android.exoplayer2.upstream.DataSink, flags: number, eventListener: com.google.android.exoplayer2.upstream.cache.CacheDataSource.EventListener);
							public getUri(): globalAndroid.net.Uri;
							public close(): void;
							public read(buffer: native.Array<number>, offset: number, readLength: number): number;
							public open(dataSpec: com.google.android.exoplayer2.upstream.DataSpec): number;
							public constructor(cache: com.google.android.exoplayer2.upstream.cache.Cache, upstreamDataSource: com.google.android.exoplayer2.upstream.DataSource);
							public addTransferListener(transferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
							public constructor(cache: com.google.android.exoplayer2.upstream.cache.Cache, upstreamDataSource: com.google.android.exoplayer2.upstream.DataSource, cacheReadDataSource: com.google.android.exoplayer2.upstream.DataSource, cacheWriteDataSink: com.google.android.exoplayer2.upstream.DataSink, flags: number, eventListener: com.google.android.exoplayer2.upstream.cache.CacheDataSource.EventListener, cacheKeyFactory: com.google.android.exoplayer2.upstream.cache.CacheKeyFactory);
							public getCacheKeyFactory(): com.google.android.exoplayer2.upstream.cache.CacheKeyFactory;
							public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
							public getCache(): com.google.android.exoplayer2.upstream.cache.Cache;
							public constructor(cache: com.google.android.exoplayer2.upstream.cache.Cache, upstreamDataSource: com.google.android.exoplayer2.upstream.DataSource, flags: number);
						}
						export module CacheDataSource {
							export class CacheIgnoredReason extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheDataSource.CacheIgnoredReason>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.upstream.cache.CacheDataSource() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
							export class EventListener extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheDataSource.EventListener>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.upstream.cache.CacheDataSource() when extending the interface class.
								 */
								public constructor(implementation: {
									onCachedBytesRead(long0: number, long1: number): void;
									onCacheIgnored(int0: number): void;
								});
								public constructor();
								public onCacheIgnored(int0: number): void;
								public onCachedBytesRead(long0: number, long1: number): void;
							}
							export class Factory extends java.lang.Object implements com.google.android.exoplayer2.upstream.DataSource.Factory {
								public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory>;
								public setCache(cache: com.google.android.exoplayer2.upstream.cache.Cache): com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory;
								public constructor();
								public getUpstreamPriorityTaskManager(): com.google.android.exoplayer2.util.PriorityTaskManager;
								public getCache(): com.google.android.exoplayer2.upstream.cache.Cache;
								public createDataSource(): com.google.android.exoplayer2.upstream.DataSource;
								public setUpstreamPriorityTaskManager(upstreamPriorityTaskManager: com.google.android.exoplayer2.util.PriorityTaskManager): com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory;
								public setUpstreamPriority(upstreamPriority: number): com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory;
								public createDataSourceForRemovingDownload(): com.google.android.exoplayer2.upstream.cache.CacheDataSource;
								public setCacheKeyFactory(cacheKeyFactory: com.google.android.exoplayer2.upstream.cache.CacheKeyFactory): com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory;
								public setEventListener(eventListener: com.google.android.exoplayer2.upstream.cache.CacheDataSource.EventListener): com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory;
								public setCacheReadDataSourceFactory(cacheReadDataSourceFactory: com.google.android.exoplayer2.upstream.DataSource.Factory): com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory;
								public setCacheWriteDataSinkFactory(cacheWriteDataSinkFactory: com.google.android.exoplayer2.upstream.DataSink.Factory): com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory;
								public getCacheKeyFactory(): com.google.android.exoplayer2.upstream.cache.CacheKeyFactory;
								public setUpstreamDataSourceFactory(upstreamDataSourceFactory: com.google.android.exoplayer2.upstream.DataSource.Factory): com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory;
								public createDataSource(): com.google.android.exoplayer2.upstream.cache.CacheDataSource;
								public createDataSourceForDownloading(): com.google.android.exoplayer2.upstream.cache.CacheDataSource;
								public setFlags(flags: number): com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory;
							}
							export class Flags extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheDataSource.Flags>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.upstream.cache.CacheDataSource() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class CacheDataSourceFactory extends java.lang.Object implements com.google.android.exoplayer2.upstream.DataSource.Factory {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheDataSourceFactory>;
							public constructor(cache: com.google.android.exoplayer2.upstream.cache.Cache, upstreamFactory: com.google.android.exoplayer2.upstream.DataSource.Factory, flags: number);
							public createDataSource(): com.google.android.exoplayer2.upstream.cache.CacheDataSource;
							public createDataSource(): com.google.android.exoplayer2.upstream.DataSource;
							public constructor(cache: com.google.android.exoplayer2.upstream.cache.Cache, upstreamFactory: com.google.android.exoplayer2.upstream.DataSource.Factory, cacheReadDataSourceFactory: com.google.android.exoplayer2.upstream.DataSource.Factory, cacheWriteDataSinkFactory: com.google.android.exoplayer2.upstream.DataSink.Factory, flags: number, eventListener: com.google.android.exoplayer2.upstream.cache.CacheDataSource.EventListener, cacheKeyFactory: com.google.android.exoplayer2.upstream.cache.CacheKeyFactory);
							public constructor(cache: com.google.android.exoplayer2.upstream.cache.Cache, upstreamFactory: com.google.android.exoplayer2.upstream.DataSource.Factory, cacheReadDataSourceFactory: com.google.android.exoplayer2.upstream.DataSource.Factory, cacheWriteDataSinkFactory: com.google.android.exoplayer2.upstream.DataSink.Factory, flags: number, eventListener: com.google.android.exoplayer2.upstream.cache.CacheDataSource.EventListener);
							public constructor(cache: com.google.android.exoplayer2.upstream.cache.Cache, upstreamFactory: com.google.android.exoplayer2.upstream.DataSource.Factory);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class CacheEvictor extends java.lang.Object implements com.google.android.exoplayer2.upstream.cache.Cache.Listener {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheEvictor>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.upstream.cache.CacheEvictor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								requiresCacheSpanTouches(): boolean;
								onCacheInitialized(): void;
								onStartFile(cache0: com.google.android.exoplayer2.upstream.cache.Cache, string1: string, long2: number, long3: number): void;
								onSpanAdded(cache0: com.google.android.exoplayer2.upstream.cache.Cache, cacheSpan1: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
								onSpanRemoved(cache0: com.google.android.exoplayer2.upstream.cache.Cache, cacheSpan1: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
								onSpanTouched(cache0: com.google.android.exoplayer2.upstream.cache.Cache, cacheSpan1: com.google.android.exoplayer2.upstream.cache.CacheSpan, cacheSpan2: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							});
							public constructor();
							public onSpanTouched(cache0: com.google.android.exoplayer2.upstream.cache.Cache, cacheSpan1: com.google.android.exoplayer2.upstream.cache.CacheSpan, cacheSpan2: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							public onSpanRemoved(cache0: com.google.android.exoplayer2.upstream.cache.Cache, cacheSpan1: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							public onSpanAdded(cache0: com.google.android.exoplayer2.upstream.cache.Cache, cacheSpan1: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							public requiresCacheSpanTouches(): boolean;
							public onStartFile(cache0: com.google.android.exoplayer2.upstream.cache.Cache, string1: string, long2: number, long3: number): void;
							public onCacheInitialized(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class CacheFileMetadata extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheFileMetadata>;
							public length: number;
							public lastTouchTimestamp: number;
							public constructor(length: number, lastTouchTimestamp: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class CacheFileMetadataIndex extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheFileMetadataIndex>;
							public getAll(): java.util.Map<string,com.google.android.exoplayer2.upstream.cache.CacheFileMetadata>;
							public remove(name: string): void;
							public initialize(uid: number): void;
							public removeAll(names: java.util.Set<string>): void;
							public constructor(databaseProvider: com.google.android.exoplayer2.database.DatabaseProvider);
							public set(name: string, length: number, lastTouchTimestamp: number): void;
							public static delete(databaseProvider: com.google.android.exoplayer2.database.DatabaseProvider, uid: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class CacheKeyFactory extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheKeyFactory>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.upstream.cache.CacheKeyFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								buildCacheKey(dataSpec0: com.google.android.exoplayer2.upstream.DataSpec): string;
								lambda(dataSpec: com.google.android.exoplayer2.upstream.DataSpec): string;
							});
							public constructor();
							public static DEFAULT: com.google.android.exoplayer2.upstream.cache.CacheKeyFactory;
							public buildCacheKey(dataSpec0: com.google.android.exoplayer2.upstream.DataSpec): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class CacheSpan extends java.lang.Comparable<com.google.android.exoplayer2.upstream.cache.CacheSpan> {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheSpan>;
							public key: string;
							public position: number;
							public length: number;
							public isCached: boolean;
							public file: java.io.File;
							public lastTouchTimestamp: number;
							public constructor(key: string, position: number, length: number);
							public isOpenEnded(): boolean;
							public compareTo(another: com.google.android.exoplayer2.upstream.cache.CacheSpan): number;
							public isHoleSpan(): boolean;
							public constructor(key: string, position: number, length: number, lastTouchTimestamp: number, file: java.io.File);
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class CacheWriter extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheWriter>;
							public static DEFAULT_BUFFER_SIZE_BYTES: number;
							public cancel(): void;
							public constructor(dataSource: com.google.android.exoplayer2.upstream.cache.CacheDataSource, dataSpec: com.google.android.exoplayer2.upstream.DataSpec, allowShortContent: boolean, temporaryBuffer: native.Array<number>, progressListener: com.google.android.exoplayer2.upstream.cache.CacheWriter.ProgressListener);
							public cache(): void;
						}
						export module CacheWriter {
							export class ProgressListener extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheWriter.ProgressListener>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.upstream.cache.CacheWriter() when extending the interface class.
								 */
								public constructor(implementation: {
									onProgress(long0: number, long1: number, long2: number): void;
								});
								public constructor();
								public onProgress(long0: number, long1: number, long2: number): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class CachedContent extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CachedContent>;
							public id: number;
							public key: string;
							public constructor(id: number, key: string, metadata: com.google.android.exoplayer2.upstream.cache.DefaultContentMetadata);
							public hashCode(): number;
							public isFullyLocked(position: number, length: number): boolean;
							public isFullyUnlocked(): boolean;
							public unlockRange(position: number): void;
							public getMetadata(): com.google.android.exoplayer2.upstream.cache.DefaultContentMetadata;
							public equals(obj: any): boolean;
							public removeSpan(span: com.google.android.exoplayer2.upstream.cache.CacheSpan): boolean;
							public addSpan(span: com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan): void;
							public constructor(id: number, key: string);
							public getSpan(position: number, length: number): com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan;
							public setLastTouchTimestamp(cacheSpan: com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan, lastTouchTimestamp: number, updateFile: boolean): com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan;
							public applyMetadataMutations(mutations: com.google.android.exoplayer2.upstream.cache.ContentMetadataMutations): boolean;
							public lockRange(position: number, length: number): boolean;
							public equals(o: any): boolean;
							public isEmpty(): boolean;
							public getSpans(): java.util.TreeSet<com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan>;
							public getCachedBytesLength(position: number, length: number): number;
						}
						export module CachedContent {
							export class Range extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CachedContent.Range>;
								public position: number;
								public length: number;
								public intersects(otherPosition: number, otherLength: number): boolean;
								public constructor(position: number, length: number);
								public contains(otherPosition: number, otherLength: number): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class CachedContentIndex extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CachedContentIndex>;
							public removeEmpty(): void;
							public store(): void;
							public initialize(uid: number): void;
							public getAll(): java.util.Collection<com.google.android.exoplayer2.upstream.cache.CachedContent>;
							public getContentMetadata(key: string): com.google.android.exoplayer2.upstream.cache.ContentMetadata;
							public getKeyForId(id: number): string;
							public constructor(databaseProvider: com.google.android.exoplayer2.database.DatabaseProvider, legacyStorageDir: java.io.File, legacyStorageSecretKey: native.Array<number>, legacyStorageEncrypt: boolean, preferLegacyStorage: boolean);
							public maybeRemove(key: string): void;
							public getKeys(): java.util.Set<string>;
							public applyContentMetadataMutations(key: string, mutations: com.google.android.exoplayer2.upstream.cache.ContentMetadataMutations): void;
							public constructor(databaseProvider: com.google.android.exoplayer2.database.DatabaseProvider);
							public getOrAdd(key: string): com.google.android.exoplayer2.upstream.cache.CachedContent;
							public get(key: string): com.google.android.exoplayer2.upstream.cache.CachedContent;
							public assignIdForKey(key: string): number;
							public static isIndexFile(fileName: string): boolean;
							public static delete(databaseProvider: com.google.android.exoplayer2.database.DatabaseProvider, uid: number): void;
						}
						export module CachedContentIndex {
							export class DatabaseStorage extends java.lang.Object implements com.google.android.exoplayer2.upstream.cache.CachedContentIndex.Storage {
								public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CachedContentIndex.DatabaseStorage>;
								public delete(): void;
								public load(content: java.util.HashMap<string,com.google.android.exoplayer2.upstream.cache.CachedContent>, idToKey: globalAndroid.util.SparseArray<string>): void;
								public onUpdate(cachedContent: com.google.android.exoplayer2.upstream.cache.CachedContent): void;
								public onRemove(cachedContent: com.google.android.exoplayer2.upstream.cache.CachedContent, neverStored: boolean): void;
								public constructor(databaseProvider: com.google.android.exoplayer2.database.DatabaseProvider);
								public initialize(uid: number): void;
								public storeIncremental(content: java.util.HashMap<string,com.google.android.exoplayer2.upstream.cache.CachedContent>): void;
								public storeFully(content: java.util.HashMap<string,com.google.android.exoplayer2.upstream.cache.CachedContent>): void;
								public exists(): boolean;
								public static delete(databaseProvider: com.google.android.exoplayer2.database.DatabaseProvider, uid: number): void;
							}
							export class LegacyStorage extends java.lang.Object implements com.google.android.exoplayer2.upstream.cache.CachedContentIndex.Storage {
								public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CachedContentIndex.LegacyStorage>;
								public delete(): void;
								public load(content: java.util.HashMap<string,com.google.android.exoplayer2.upstream.cache.CachedContent>, idToKey: globalAndroid.util.SparseArray<string>): void;
								public onUpdate(cachedContent: com.google.android.exoplayer2.upstream.cache.CachedContent): void;
								public onRemove(cachedContent: com.google.android.exoplayer2.upstream.cache.CachedContent, neverStored: boolean): void;
								public initialize(uid: number): void;
								public storeIncremental(content: java.util.HashMap<string,com.google.android.exoplayer2.upstream.cache.CachedContent>): void;
								public storeFully(content: java.util.HashMap<string,com.google.android.exoplayer2.upstream.cache.CachedContent>): void;
								public constructor(file: java.io.File, secretKey: native.Array<number>, encrypt: boolean);
								public exists(): boolean;
							}
							export class Storage extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CachedContentIndex.Storage>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.upstream.cache.CachedContentIndex() when extending the interface class.
								 */
								public constructor(implementation: {
									initialize(long0: number): void;
									exists(): boolean;
									delete(): void;
									load(hashMap0: java.util.HashMap<string,com.google.android.exoplayer2.upstream.cache.CachedContent>, sparseArray1: globalAndroid.util.SparseArray<string>): void;
									storeFully(hashMap0: java.util.HashMap<string,com.google.android.exoplayer2.upstream.cache.CachedContent>): void;
									storeIncremental(hashMap0: java.util.HashMap<string,com.google.android.exoplayer2.upstream.cache.CachedContent>): void;
									onUpdate(cachedContent0: com.google.android.exoplayer2.upstream.cache.CachedContent): void;
									onRemove(cachedContent0: com.google.android.exoplayer2.upstream.cache.CachedContent, boolean1: boolean): void;
								});
								public constructor();
								public load(hashMap0: java.util.HashMap<string,com.google.android.exoplayer2.upstream.cache.CachedContent>, sparseArray1: globalAndroid.util.SparseArray<string>): void;
								public delete(): void;
								public storeFully(hashMap0: java.util.HashMap<string,com.google.android.exoplayer2.upstream.cache.CachedContent>): void;
								public onRemove(cachedContent0: com.google.android.exoplayer2.upstream.cache.CachedContent, boolean1: boolean): void;
								public storeIncremental(hashMap0: java.util.HashMap<string,com.google.android.exoplayer2.upstream.cache.CachedContent>): void;
								public exists(): boolean;
								public initialize(long0: number): void;
								public onUpdate(cachedContent0: com.google.android.exoplayer2.upstream.cache.CachedContent): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class CachedRegionTracker extends java.lang.Object implements com.google.android.exoplayer2.upstream.cache.Cache.Listener {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CachedRegionTracker>;
							public static NOT_CACHED: number;
							public static CACHED_TO_END: number;
							public getRegionEndTimeMs(byteOffset: number): number;
							public onSpanRemoved(cache: com.google.android.exoplayer2.upstream.cache.Cache, span: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							public onSpanTouched(cache: com.google.android.exoplayer2.upstream.cache.Cache, oldSpan: com.google.android.exoplayer2.upstream.cache.CacheSpan, newSpan: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							public release(): void;
							public onSpanAdded(cache: com.google.android.exoplayer2.upstream.cache.Cache, span: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							public constructor(cache: com.google.android.exoplayer2.upstream.cache.Cache, cacheKey: string, chunkIndex: com.google.android.exoplayer2.extractor.ChunkIndex);
						}
						export module CachedRegionTracker {
							export class Region extends java.lang.Comparable<com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region> {
								public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region>;
								public startOffset: number;
								public endOffset: number;
								public endOffsetIndex: number;
								public constructor(position: number, endOffset: number);
								public compareTo(another: com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class ContentMetadata extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.ContentMetadata>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.upstream.cache.ContentMetadata interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								get(string0: string, bytes1: native.Array<number>): native.Array<number>;
								get(string0: string, string1: string): string;
								get(string0: string, long1: number): number;
								contains(string0: string): boolean;
								getContentLength(contentMetadata: com.google.android.exoplayer2.upstream.cache.ContentMetadata): number;
								getRedirectedUri(contentMetadata: com.google.android.exoplayer2.upstream.cache.ContentMetadata): globalAndroid.net.Uri;
							});
							public constructor();
							public static KEY_CUSTOM_PREFIX: string;
							public static KEY_CONTENT_LENGTH: string;
							public static KEY_REDIRECTED_URI: string;
							public get(string0: string, long1: number): number;
							public static getRedirectedUri(contentMetadata: com.google.android.exoplayer2.upstream.cache.ContentMetadata): globalAndroid.net.Uri;
							public get(string0: string, bytes1: native.Array<number>): native.Array<number>;
							public get(string0: string, string1: string): string;
							public static getContentLength(contentMetadata: com.google.android.exoplayer2.upstream.cache.ContentMetadata): number;
							public contains(string0: string): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class ContentMetadataMutations extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.ContentMetadataMutations>;
							public constructor();
							public set(name: string, value: string): com.google.android.exoplayer2.upstream.cache.ContentMetadataMutations;
							public static setContentLength(mutations: com.google.android.exoplayer2.upstream.cache.ContentMetadataMutations, length: number): com.google.android.exoplayer2.upstream.cache.ContentMetadataMutations;
							public static setRedirectedUri(mutations: com.google.android.exoplayer2.upstream.cache.ContentMetadataMutations, uri: globalAndroid.net.Uri): com.google.android.exoplayer2.upstream.cache.ContentMetadataMutations;
							public set(name: string, value: native.Array<number>): com.google.android.exoplayer2.upstream.cache.ContentMetadataMutations;
							public set(name: string, value: number): com.google.android.exoplayer2.upstream.cache.ContentMetadataMutations;
							public getEditedValues(): java.util.Map<string,any>;
							public remove(name: string): com.google.android.exoplayer2.upstream.cache.ContentMetadataMutations;
							public getRemovedValues(): java.util.List<string>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class DefaultContentMetadata extends java.lang.Object implements com.google.android.exoplayer2.upstream.cache.ContentMetadata {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.DefaultContentMetadata>;
							public static EMPTY: com.google.android.exoplayer2.upstream.cache.DefaultContentMetadata;
							public constructor();
							public hashCode(): number;
							public copyWithMutationsApplied(mutations: com.google.android.exoplayer2.upstream.cache.ContentMetadataMutations): com.google.android.exoplayer2.upstream.cache.DefaultContentMetadata;
							public get(name: string, defaultValue: string): string;
							public contains(name: string): boolean;
							public equals(obj: any): boolean;
							public constructor(metadata: java.util.Map<string,native.Array<number>>);
							public get(name: string, defaultValue: native.Array<number>): native.Array<number>;
							public get(name: string, defaultValue: number): number;
							public static getRedirectedUri(contentMetadata: com.google.android.exoplayer2.upstream.cache.ContentMetadata): globalAndroid.net.Uri;
							public entrySet(): java.util.Set<java.util.Map.Entry<string,native.Array<number>>>;
							public static getContentLength(contentMetadata: com.google.android.exoplayer2.upstream.cache.ContentMetadata): number;
							public equals(o: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class LeastRecentlyUsedCacheEvictor extends java.lang.Object implements com.google.android.exoplayer2.upstream.cache.CacheEvictor {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.LeastRecentlyUsedCacheEvictor>;
							public onSpanRemoved(cache: com.google.android.exoplayer2.upstream.cache.Cache, span: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							public onSpanTouched(cache: com.google.android.exoplayer2.upstream.cache.Cache, oldSpan: com.google.android.exoplayer2.upstream.cache.CacheSpan, newSpan: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							public constructor(maxBytes: number);
							public onStartFile(cache: com.google.android.exoplayer2.upstream.cache.Cache, key: string, position: number, length: number): void;
							public requiresCacheSpanTouches(): boolean;
							public onCacheInitialized(): void;
							public onSpanAdded(cache: com.google.android.exoplayer2.upstream.cache.Cache, span: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class NoOpCacheEvictor extends java.lang.Object implements com.google.android.exoplayer2.upstream.cache.CacheEvictor {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.NoOpCacheEvictor>;
							public constructor();
							public onSpanRemoved(cache: com.google.android.exoplayer2.upstream.cache.Cache, span: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							public onSpanTouched(cache: com.google.android.exoplayer2.upstream.cache.Cache, oldSpan: com.google.android.exoplayer2.upstream.cache.CacheSpan, newSpan: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							public requiresCacheSpanTouches(): boolean;
							public onCacheInitialized(): void;
							public onSpanAdded(cache: com.google.android.exoplayer2.upstream.cache.Cache, span: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							public onStartFile(cache: com.google.android.exoplayer2.upstream.cache.Cache, key: string, position: number, maxLength: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class SimpleCache extends java.lang.Object implements com.google.android.exoplayer2.upstream.cache.Cache {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.SimpleCache>;
							public isCached(key: string, position: number, length: number): boolean;
							public releaseHoleSpan(holeSpan: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							public constructor(cacheDir: java.io.File, evictor: com.google.android.exoplayer2.upstream.cache.CacheEvictor, databaseProvider: com.google.android.exoplayer2.database.DatabaseProvider, legacyIndexSecretKey: native.Array<number>, legacyIndexEncrypt: boolean, preferLegacyIndex: boolean);
							public getCacheSpace(): number;
							public getContentMetadata(key: string): com.google.android.exoplayer2.upstream.cache.ContentMetadata;
							public getUid(): number;
							/** @deprecated */
							public constructor(cacheDir: java.io.File, evictor: com.google.android.exoplayer2.upstream.cache.CacheEvictor, secretKey: native.Array<number>);
							public static isCacheFolderLocked(cacheFolder: java.io.File): boolean;
							/** @deprecated */
							public constructor(cacheDir: java.io.File, evictor: com.google.android.exoplayer2.upstream.cache.CacheEvictor, secretKey: native.Array<number>, encrypt: boolean);
							public startFile(key: string, position: number, length: number): java.io.File;
							public getKeys(): java.util.Set<string>;
							public applyContentMetadataMutations(key: string, mutations: com.google.android.exoplayer2.upstream.cache.ContentMetadataMutations): void;
							public getCachedLength(key: string, position: number, length: number): number;
							public removeListener(key: string, listener: com.google.android.exoplayer2.upstream.cache.Cache.Listener): void;
							public getCachedSpans(key: string): java.util.NavigableSet<com.google.android.exoplayer2.upstream.cache.CacheSpan>;
							public checkInitialization(): void;
							/** @deprecated */
							public constructor(cacheDir: java.io.File, evictor: com.google.android.exoplayer2.upstream.cache.CacheEvictor);
							public addListener(key: string, listener: com.google.android.exoplayer2.upstream.cache.Cache.Listener): java.util.NavigableSet<com.google.android.exoplayer2.upstream.cache.CacheSpan>;
							public startReadWrite(key: string, position: number, length: number): com.google.android.exoplayer2.upstream.cache.CacheSpan;
							public release(): void;
							public startReadWriteNonBlocking(key: string, position: number, length: number): com.google.android.exoplayer2.upstream.cache.CacheSpan;
							public constructor(cacheDir: java.io.File, evictor: com.google.android.exoplayer2.upstream.cache.CacheEvictor, databaseProvider: com.google.android.exoplayer2.database.DatabaseProvider);
							public commitFile(file: java.io.File, length: number): void;
							public getCachedBytes(key: string, position: number, length: number): number;
							public static delete(cacheDir: java.io.File, databaseProvider: com.google.android.exoplayer2.database.DatabaseProvider): void;
							public removeResource(key: string): void;
							public removeSpan(span: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class SimpleCacheSpan extends com.google.android.exoplayer2.upstream.cache.CacheSpan {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan>;
							public static getCacheFile(cacheDir: java.io.File, id: number, position: number, timestamp: number): java.io.File;
							public copyWithFileAndLastTouchTimestamp(file: java.io.File, lastTouchTimestamp: number): com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan;
							public static createHole(key: string, position: number, length: number): com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan;
							public static createLookup(key: string, position: number): com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan;
							public static createCacheEntry(file: java.io.File, length: number, index: com.google.android.exoplayer2.upstream.cache.CachedContentIndex): com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan;
							public static createCacheEntry(file: java.io.File, length: number, lastTouchTimestamp: number, index: com.google.android.exoplayer2.upstream.cache.CachedContentIndex): com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module crypto {
						export class AesCipherDataSink extends java.lang.Object implements com.google.android.exoplayer2.upstream.DataSink {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.crypto.AesCipherDataSink>;
							public close(): void;
							public constructor(secretKey: native.Array<number>, wrappedDataSink: com.google.android.exoplayer2.upstream.DataSink);
							public constructor(secretKey: native.Array<number>, wrappedDataSink: com.google.android.exoplayer2.upstream.DataSink, scratch: native.Array<number>);
							public open(dataSpec: com.google.android.exoplayer2.upstream.DataSpec): void;
							public write(data: native.Array<number>, offset: number, length: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module crypto {
						export class AesCipherDataSource extends java.lang.Object implements com.google.android.exoplayer2.upstream.DataSource {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.crypto.AesCipherDataSource>;
							public constructor(secretKey: native.Array<number>, upstream: com.google.android.exoplayer2.upstream.DataSource);
							public getUri(): globalAndroid.net.Uri;
							public close(): void;
							public open(dataSpec: com.google.android.exoplayer2.upstream.DataSpec): number;
							public addTransferListener(transferListener: com.google.android.exoplayer2.upstream.TransferListener): void;
							public read(data: native.Array<number>, offset: number, readLength: number): number;
							public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module crypto {
						export class AesFlushingCipher extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher>;
							public updateInPlace(data: native.Array<number>, offset: number, length: number): void;
							public update(in0: native.Array<number>, inOffset: number, length: number, out: native.Array<number>, outOffset: number): void;
							public constructor(mode: number, secretKey: native.Array<number>, nonce: number, offset: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module crypto {
						export class CryptoUtil extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.crypto.CryptoUtil>;
							public static getFNV64Hash(input: string): number;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class AtomicFile extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.AtomicFile>;
						public openRead(): java.io.InputStream;
						public delete(): void;
						public exists(): boolean;
						public constructor(baseName: java.io.File);
						public endWrite(str: java.io.OutputStream): void;
						public startWrite(): java.io.OutputStream;
					}
					export module AtomicFile {
						export class AtomicFileOutputStream extends java.io.OutputStream {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.AtomicFile.AtomicFileOutputStream>;
							public constructor();
							public close(): void;
							public constructor(file: java.io.File);
							public write(b: number): void;
							public write(b: native.Array<number>): void;
							public flush(): void;
							public write(int0: number): void;
							public write(b: native.Array<number>, off: number, len: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class Clock extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.Clock>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.util.Clock interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							currentTimeMillis(): number;
							elapsedRealtime(): number;
							uptimeMillis(): number;
							sleep(long0: number): void;
							createHandler(looper0: globalAndroid.os.Looper, callback1: globalAndroid.os.Handler.Callback): com.google.android.exoplayer2.util.HandlerWrapper;
						});
						public constructor();
						public static DEFAULT: com.google.android.exoplayer2.util.Clock;
						public currentTimeMillis(): number;
						public elapsedRealtime(): number;
						public sleep(long0: number): void;
						public createHandler(looper0: globalAndroid.os.Looper, callback1: globalAndroid.os.Handler.Callback): com.google.android.exoplayer2.util.HandlerWrapper;
						public uptimeMillis(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class ColorParser extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.ColorParser>;
						public static parseCssColor(colorExpression: string): number;
						public static parseTtmlColor(colorExpression: string): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class ConditionVariable extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.ConditionVariable>;
						public block(): void;
						public blockUninterruptible(): void;
						public constructor();
						public block(timeoutMs: number): boolean;
						public constructor(clock: com.google.android.exoplayer2.util.Clock);
						public isOpen(): boolean;
						public open(): boolean;
						public close(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class EGLSurfaceTexture extends java.lang.Object implements globalAndroid.graphics.SurfaceTexture.OnFrameAvailableListener, java.lang.Runnable {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.EGLSurfaceTexture>;
						public static SECURE_MODE_NONE: number;
						public static SECURE_MODE_SURFACELESS_CONTEXT: number;
						public static SECURE_MODE_PROTECTED_PBUFFER: number;
						public onFrameAvailable(surfaceTexture: globalAndroid.graphics.SurfaceTexture): void;
						public run(): void;
						public constructor(handler: globalAndroid.os.Handler);
						public getSurfaceTexture(): globalAndroid.graphics.SurfaceTexture;
						public constructor(handler: globalAndroid.os.Handler, callback: com.google.android.exoplayer2.util.EGLSurfaceTexture.TextureImageListener);
						public init(secureMode: number): void;
						public release(): void;
					}
					export module EGLSurfaceTexture {
						export class GlException extends java.lang.RuntimeException {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.EGLSurfaceTexture.GlException>;
						}
						export class SecureMode extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.EGLSurfaceTexture.SecureMode>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.util.EGLSurfaceTexture() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
						export class TextureImageListener extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.EGLSurfaceTexture.TextureImageListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.util.EGLSurfaceTexture() when extending the interface class.
							 */
							public constructor(implementation: {
								onFrameAvailable(): void;
							});
							public constructor();
							public onFrameAvailable(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class ErrorMessageProvider<T>  extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.ErrorMessageProvider<any>>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.util.ErrorMessageProvider<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getErrorMessage(throwable0: T): globalAndroid.util.Pair<java.lang.Integer,string>;
						});
						public constructor();
						public getErrorMessage(throwable0: T): globalAndroid.util.Pair<java.lang.Integer,string>;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class EventLogger extends java.lang.Object implements com.google.android.exoplayer2.analytics.AnalyticsListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.EventLogger>;
						public onSeekStarted(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onTracksChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, trackGroups: com.google.android.exoplayer2.source.TrackGroupArray, trackSelections: com.google.android.exoplayer2.trackselection.TrackSelectionArray): void;
						public onAudioDisabled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onRepeatModeChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, repeatMode: number): void;
						public onPlaybackSuppressionReasonChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, playbackSuppressionReason: number): void;
						public onAudioPositionAdvancing(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, playoutStartSystemTimeMs: number): void;
						public onLoadCompleted(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onDownstreamFormatChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						/** @deprecated */
						public onDecoderInputFormatChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, trackType: number, format: com.google.android.exoplayer2.Format): void;
						public onVideoDisabled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onBandwidthEstimate(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, totalLoadTimeMs: number, totalBytesLoaded: number, bitrateEstimate: number): void;
						public onDrmSessionAcquired(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onAudioAttributesChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, audioAttributes: com.google.android.exoplayer2.audio.AudioAttributes): void;
						public onLoadCanceled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onMetadata(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, metadata: com.google.android.exoplayer2.metadata.Metadata): void;
						public onTracksChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, ignored: com.google.android.exoplayer2.source.TrackGroupArray, trackSelections: com.google.android.exoplayer2.trackselection.TrackSelectionArray): void;
						public constructor(trackSelector: com.google.android.exoplayer2.trackselection.MappingTrackSelector, tag: string);
						/** @deprecated */
						public onLoadingChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, isLoading: boolean): void;
						public loge(msg: string): void;
						/** @deprecated */
						public onPlayerStateChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, playWhenReady: boolean, playbackState: number): void;
						public onAudioSessionId(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, audioSessionId: number): void;
						public onShuffleModeChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, shuffleModeEnabled: boolean): void;
						public onPlayWhenReadyChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, playWhenReady: boolean, reason: number): void;
						public onVideoInputFormatChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, format: com.google.android.exoplayer2.Format): void;
						public onDrmSessionManagerError(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, e: java.lang.Exception): void;
						/** @deprecated */
						public onDecoderInitialized(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, trackType: number, decoderName: string, initializationDurationMs: number): void;
						public onPlaybackStateChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, state: number): void;
						public onAudioInputFormatChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, format: com.google.android.exoplayer2.Format): void;
						public onDrmSessionManagerError(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, error: java.lang.Exception): void;
						public onDroppedVideoFrames(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, droppedFrames: number, elapsedMs: number): void;
						public onAudioDecoderInitialized(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, decoderName: string, initializationDurationMs: number): void;
						public onSkipSilenceEnabledChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, skipSilenceEnabled: boolean): void;
						public onVideoEnabled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onLoadStarted(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onSurfaceSizeChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, width: number, height: number): void;
						public onPlayerError(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, error: com.google.android.exoplayer2.ExoPlaybackException): void;
						public constructor(trackSelector: com.google.android.exoplayer2.trackselection.MappingTrackSelector);
						public onPositionDiscontinuity(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, reason: number): void;
						public onVolumeChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, volume: number): void;
						public onIsLoadingChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, isLoading: boolean): void;
						public onIsPlayingChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, isPlaying: boolean): void;
						public onPlaybackParametersChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, playbackParameters: com.google.android.exoplayer2.PlaybackParameters): void;
						public onVideoSizeChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, width: number, height: number, unappliedRotationDegrees: number, pixelWidthHeightRatio: number): void;
						public onDrmKeysRestored(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onDrmSessionReleased(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onMediaItemTransition(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, mediaItem: com.google.android.exoplayer2.MediaItem, reason: number): void;
						public onAudioUnderrun(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, bufferSize: number, bufferSizeMs: number, elapsedSinceLastFeedMs: number): void;
						public onVideoFrameProcessingOffset(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, totalProcessingOffsetUs: number, frameCount: number): void;
						public onAudioEnabled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onDrmKeysRemoved(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onTimelineChanged(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, reason: number): void;
						public onDroppedVideoFrames(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, count: number, elapsedMs: number): void;
						public onUpstreamDiscarded(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData): void;
						/** @deprecated */
						public onDecoderEnabled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, trackType: number, decoderCounters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onRenderedFirstFrame(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, surface: globalAndroid.view.Surface): void;
						public logd(msg: string): void;
						public onDrmKeysLoaded(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						/** @deprecated */
						public onSeekProcessed(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onLoadError(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo, mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData, error: java.io.IOException, wasCanceled: boolean): void;
						public onPlayerError(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, e: com.google.android.exoplayer2.ExoPlaybackException): void;
						/** @deprecated */
						public onDecoderDisabled(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, trackType: number, decoderCounters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onVideoDecoderInitialized(eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, decoderName: string, initializationDurationMs: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class GlUtil extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.GlUtil>;
						public static getUniforms(program: number): native.Array<com.google.android.exoplayer2.util.GlUtil.Uniform>;
						public static isSurfacelessContextExtensionSupported(): boolean;
						public static compileProgram(vertexCode: string, fragmentCode: string): number;
						public static isProtectedContentExtensionSupported(context: globalAndroid.content.Context): boolean;
						public static checkGlError(): void;
						public static createExternalTexture(): number;
						public static getAttributes(program: number): native.Array<com.google.android.exoplayer2.util.GlUtil.Attribute>;
						public static createBuffer(capacity: number): java.nio.FloatBuffer;
						public static createBuffer(data: native.Array<number>): java.nio.FloatBuffer;
						public static compileProgram(vertexCode: native.Array<string>, fragmentCode: native.Array<string>): number;
					}
					export module GlUtil {
						export class Attribute extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.GlUtil.Attribute>;
							public name: string;
							public constructor(program: number, index: number);
							public setBuffer(buffer: native.Array<number>, size: number): void;
							public bind(): void;
						}
						export class Uniform extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.GlUtil.Uniform>;
							public name: string;
							public setSamplerTexId(texId: number, unit: number): void;
							public constructor(program: number, index: number);
							public setFloat(value: number): void;
							public bind(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class HandlerWrapper extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.HandlerWrapper>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.util.HandlerWrapper interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getLooper(): globalAndroid.os.Looper;
							obtainMessage(int0: number): globalAndroid.os.Message;
							obtainMessage(int0: number, object1: any): globalAndroid.os.Message;
							obtainMessage(int0: number, int1: number, int2: number): globalAndroid.os.Message;
							obtainMessage(int0: number, int1: number, int2: number, object3: any): globalAndroid.os.Message;
							sendEmptyMessage(int0: number): boolean;
							sendEmptyMessageAtTime(int0: number, long1: number): boolean;
							removeMessages(int0: number): void;
							removeCallbacksAndMessages(object0: any): void;
							post(runnable0: java.lang.Runnable): boolean;
							postDelayed(runnable0: java.lang.Runnable, long1: number): boolean;
						});
						public constructor();
						public sendEmptyMessage(int0: number): boolean;
						public sendEmptyMessageAtTime(int0: number, long1: number): boolean;
						public removeMessages(int0: number): void;
						public removeCallbacksAndMessages(object0: any): void;
						public postDelayed(runnable0: java.lang.Runnable, long1: number): boolean;
						public post(runnable0: java.lang.Runnable): boolean;
						public obtainMessage(int0: number, int1: number, int2: number, object3: any): globalAndroid.os.Message;
						public obtainMessage(int0: number): globalAndroid.os.Message;
						public obtainMessage(int0: number, object1: any): globalAndroid.os.Message;
						public obtainMessage(int0: number, int1: number, int2: number): globalAndroid.os.Message;
						public getLooper(): globalAndroid.os.Looper;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class IntArrayQueue extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.IntArrayQueue>;
						public constructor();
						public capacity(): number;
						public add(value: number): void;
						public isEmpty(): boolean;
						public remove(): number;
						public clear(): void;
						public size(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class LibraryLoader extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.LibraryLoader>;
						public constructor(libraries: native.Array<string>);
						public setLibraries(libraries: native.Array<string>): void;
						public isAvailable(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class MediaClock extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.MediaClock>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.util.MediaClock interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getPositionUs(): number;
							setPlaybackParameters(playbackParameters0: com.google.android.exoplayer2.PlaybackParameters): void;
							getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
						});
						public constructor();
						public getPositionUs(): number;
						public getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
						public setPlaybackParameters(playbackParameters0: com.google.android.exoplayer2.PlaybackParameters): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class NotificationUtil extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.NotificationUtil>;
						public static IMPORTANCE_UNSPECIFIED: number;
						public static IMPORTANCE_NONE: number;
						public static IMPORTANCE_MIN: number;
						public static IMPORTANCE_LOW: number;
						public static IMPORTANCE_DEFAULT: number;
						public static IMPORTANCE_HIGH: number;
						public static setNotification(context: globalAndroid.content.Context, id: number, notification: globalAndroid.app.Notification): void;
						/** @deprecated */
						public static createNotificationChannel(context: globalAndroid.content.Context, id: string, nameResourceId: number, importance: number): void;
						public static createNotificationChannel(context: globalAndroid.content.Context, id: string, nameResourceId: number, descriptionResourceId: number, importance: number): void;
					}
					export module NotificationUtil {
						export class Importance extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.NotificationUtil.Importance>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.util.NotificationUtil() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class PriorityTaskManager extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.PriorityTaskManager>;
						public constructor();
						public proceed(priority: number): void;
						public proceedNonBlocking(priority: number): boolean;
						public add(priority: number): void;
						public remove(priority: number): void;
						public proceedOrThrow(priority: number): void;
					}
					export module PriorityTaskManager {
						export class PriorityTooLowException extends java.io.IOException {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.PriorityTaskManager.PriorityTooLowException>;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(priority: number, highestPriority: number);
							public constructor(message: string);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class RepeatModeUtil extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.RepeatModeUtil>;
						public static REPEAT_TOGGLE_MODE_NONE: number;
						public static REPEAT_TOGGLE_MODE_ONE: number;
						public static REPEAT_TOGGLE_MODE_ALL: number;
						public static getNextRepeatMode(currentMode: number, enabledModes: number): number;
						public static isRepeatModeEnabled(repeatMode: number, enabledModes: number): boolean;
					}
					export module RepeatModeUtil {
						export class RepeatToggleModes extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.RepeatModeUtil.RepeatToggleModes>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.util.RepeatModeUtil() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class ReusableBufferedOutputStream extends java.io.BufferedOutputStream {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.ReusableBufferedOutputStream>;
						public constructor();
						public constructor(out: java.io.OutputStream, size: number);
						public close(): void;
						public constructor(out: java.io.OutputStream);
						public flush(): void;
						public reset(out: java.io.OutputStream): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export abstract class RunnableFutureTask<R, E>  extends java.util.concurrent.RunnableFuture<any> {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.RunnableFutureTask<any,any>>;
						public constructor();
						public isDone(): boolean;
						public doWork(): any;
						public cancel(interruptIfRunning: boolean): boolean;
						public blockUntilStarted(): void;
						public blockUntilFinished(): void;
						public run(): void;
						public isCancelled(): boolean;
						public get(): any;
						public cancelWork(): void;
						public get(timeout: number, unit: java.util.concurrent.TimeUnit): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class SlidingPercentile extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.SlidingPercentile>;
						public getPercentile(percentile: number): number;
						public constructor(maxWeight: number);
						public addSample(weight: number, value: number): void;
						public reset(): void;
					}
					export module SlidingPercentile {
						export class Sample extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.SlidingPercentile.Sample>;
							public index: number;
							public weight: number;
							public value: number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class SntpClient extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.SntpClient>;
						public static DEFAULT_NTP_HOST: string;
						public static initialize(loader: com.google.android.exoplayer2.upstream.Loader, callback: com.google.android.exoplayer2.util.SntpClient.InitializationCallback): void;
						public static getElapsedRealtimeOffsetMs(): number;
						public static getNtpHost(): string;
						public static setNtpHost(ntpHost: string): void;
						public static isInitialized(): boolean;
					}
					export module SntpClient {
						export class InitializationCallback extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.SntpClient.InitializationCallback>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.util.SntpClient() when extending the interface class.
							 */
							public constructor(implementation: {
								onInitialized(): void;
								onInitializationFailed(iOException0: java.io.IOException): void;
							});
							public constructor();
							public onInitializationFailed(iOException0: java.io.IOException): void;
							public onInitialized(): void;
						}
						export class NtpTimeCallback extends com.google.android.exoplayer2.upstream.Loader.Callback<com.google.android.exoplayer2.upstream.Loader.Loadable> {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.SntpClient.NtpTimeCallback>;
							public onLoadCanceled(loadable: com.google.android.exoplayer2.upstream.Loader.Loadable, elapsedRealtimeMs: number, loadDurationMs: number, released: boolean): void;
							public onLoadError(loadable: any, elapsedRealtimeMs: number, loadDurationMs: number, error: java.io.IOException, errorCount: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
							public onLoadError(loadable: com.google.android.exoplayer2.upstream.Loader.Loadable, elapsedRealtimeMs: number, loadDurationMs: number, error: java.io.IOException, errorCount: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
							public constructor(callback: com.google.android.exoplayer2.util.SntpClient.InitializationCallback);
							public onLoadCompleted(loadable: any, elapsedRealtimeMs: number, loadDurationMs: number): void;
							public onLoadCompleted(loadable: com.google.android.exoplayer2.upstream.Loader.Loadable, elapsedRealtimeMs: number, loadDurationMs: number): void;
							public onLoadCanceled(loadable: any, elapsedRealtimeMs: number, loadDurationMs: number, released: boolean): void;
						}
						export class NtpTimeLoadable extends java.lang.Object implements com.google.android.exoplayer2.upstream.Loader.Loadable {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.SntpClient.NtpTimeLoadable>;
							public cancelLoad(): void;
							public load(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class StandaloneMediaClock extends java.lang.Object implements com.google.android.exoplayer2.util.MediaClock {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.StandaloneMediaClock>;
						public getPositionUs(): number;
						public resetPosition(positionUs: number): void;
						public start(): void;
						public getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
						public setPlaybackParameters(playbackParameters: com.google.android.exoplayer2.PlaybackParameters): void;
						public constructor(clock: com.google.android.exoplayer2.util.Clock);
						public stop(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class SystemClock extends java.lang.Object implements com.google.android.exoplayer2.util.Clock {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.SystemClock>;
						public sleep(sleepTimeMs: number): void;
						public createHandler(looper: globalAndroid.os.Looper, callback: globalAndroid.os.Handler.Callback): com.google.android.exoplayer2.util.HandlerWrapper;
						public constructor();
						public currentTimeMillis(): number;
						public elapsedRealtime(): number;
						public uptimeMillis(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class SystemHandlerWrapper extends java.lang.Object implements com.google.android.exoplayer2.util.HandlerWrapper {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.SystemHandlerWrapper>;
						public obtainMessage(what: number, obj: any): globalAndroid.os.Message;
						public obtainMessage(what: number, int1: number, int2: number): globalAndroid.os.Message;
						public sendEmptyMessageAtTime(what: number, uptimeMs: number): boolean;
						public constructor(handler: globalAndroid.os.Handler);
						public obtainMessage(what: number, int1: number, int2: number, obj: any): globalAndroid.os.Message;
						public sendEmptyMessage(what: number): boolean;
						public removeCallbacksAndMessages(token: any): void;
						public post(runnable: java.lang.Runnable): boolean;
						public postDelayed(runnable: java.lang.Runnable, delayMs: number): boolean;
						public getLooper(): globalAndroid.os.Looper;
						public obtainMessage(what: number): globalAndroid.os.Message;
						public removeMessages(what: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class TimedValueQueue<V>  extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.TimedValueQueue<any>>;
						public constructor();
						public pollFirst(): V;
						public poll(timestamp: number): V;
						public constructor(initialBufferSize: number);
						public clear(): void;
						public add(timestamp: number, value: V): void;
						public size(): number;
						public pollFloor(timestamp: number): V;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class UriUtil extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.UriUtil>;
						public static removeQueryParameter(uri: globalAndroid.net.Uri, queryParameterName: string): globalAndroid.net.Uri;
						public static resolveToUri(baseUri: string, referenceUri: string): globalAndroid.net.Uri;
						public static resolve(baseUri: string, referenceUri: string): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class XmlPullParserUtil extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.XmlPullParserUtil>;
						public static isStartTag(xpp: org.xmlpull.v1.XmlPullParser): boolean;
						public static isStartTag(xpp: org.xmlpull.v1.XmlPullParser, name: string): boolean;
						public static getAttributeValue(xpp: org.xmlpull.v1.XmlPullParser, attributeName: string): string;
						public static isStartTagIgnorePrefix(xpp: org.xmlpull.v1.XmlPullParser, name: string): boolean;
						public static getAttributeValueIgnorePrefix(xpp: org.xmlpull.v1.XmlPullParser, attributeName: string): string;
						public static isEndTag(xpp: org.xmlpull.v1.XmlPullParser, name: string): boolean;
						public static isEndTag(xpp: org.xmlpull.v1.XmlPullParser): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export abstract class DecoderVideoRenderer extends com.google.android.exoplayer2.BaseRenderer {
						public static class: java.lang.Class<com.google.android.exoplayer2.video.DecoderVideoRenderer>;
						public decoderCounters: com.google.android.exoplayer2.decoder.DecoderCounters;
						public setOutputSurface(surface: globalAndroid.view.Surface): void;
						public render(positionUs: number, elapsedRealtimeUs: number): void;
						public supportsFormat(format0: com.google.android.exoplayer2.Format): number;
						public renderOutputBuffer(outputBuffer: com.google.android.exoplayer2.video.VideoDecoderOutputBuffer, presentationTimeUs: number, outputFormat: com.google.android.exoplayer2.Format): void;
						public resetPosition(positionUs: number): void;
						public static create(formatSupport: number, adaptiveSupport: number, tunnelingSupport: number): number;
						public getStream(): com.google.android.exoplayer2.source.SampleStream;
						public static create(formatSupport: number): number;
						public onDisabled(): void;
						public renderOutputBufferToSurface(videoDecoderOutputBuffer0: com.google.android.exoplayer2.video.VideoDecoderOutputBuffer, surface1: globalAndroid.view.Surface): void;
						public isEnded(): boolean;
						public maybeDropBuffersToKeyframe(positionUs: number): boolean;
						public setCurrentStreamFinal(): void;
						public onEnabled(joining: boolean, mayRenderStartOfStream: boolean): void;
						public skipOutputBuffer(outputBuffer: com.google.android.exoplayer2.video.VideoDecoderOutputBuffer): void;
						public isReady(): boolean;
						public enable(configuration: com.google.android.exoplayer2.RendererConfiguration, formats: native.Array<com.google.android.exoplayer2.Format>, stream: com.google.android.exoplayer2.source.SampleStream, positionUs: number, joining: boolean, mayRenderStartOfStream: boolean, startPositionUs: number, offsetUs: number): void;
						public disable(): void;
						public static getFormatSupportString(formatSupport: number): string;
						public shouldDropBuffersToKeyframe(earlyUs: number, elapsedRealtimeUs: number): boolean;
						public start(): void;
						public getState(): number;
						public onStopped(): void;
						public constructor(allowedJoiningTimeMs: number, eventHandler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.video.VideoRendererEventListener, maxDroppedFramesToNotify: number);
						public onStreamChanged(formats: native.Array<com.google.android.exoplayer2.Format>, startPositionUs: number, offsetUs: number): void;
						public getReadingPositionUs(): number;
						public handleMessage(what: number, object: any): void;
						public shouldForceRenderOutputBuffer(earlyUs: number, elapsedSinceLastRenderUs: number): boolean;
						public reset(): void;
						public shouldDropOutputBuffer(earlyUs: number, elapsedRealtimeUs: number): boolean;
						public setOperatingRate(operatingRate: number): void;
						public onStarted(): void;
						public flushDecoder(): void;
						public dropOutputBuffer(outputBuffer: com.google.android.exoplayer2.video.VideoDecoderOutputBuffer): void;
						public onQueueInputBuffer(buffer: com.google.android.exoplayer2.video.VideoDecoderInputBuffer): void;
						public canKeepCodec(oldFormat: com.google.android.exoplayer2.Format, newFormat: com.google.android.exoplayer2.Format): boolean;
						public getName(): string;
						public static getFormatSupport(supportFlags: number): number;
						public releaseDecoder(): void;
						public onProcessedOutputBuffer(presentationTimeUs: number): void;
						public getMediaClock(): com.google.android.exoplayer2.util.MediaClock;
						public isCurrentStreamFinal(): boolean;
						public setOutputBufferRenderer(outputBufferRenderer: com.google.android.exoplayer2.video.VideoDecoderOutputBufferRenderer): void;
						public constructor(trackType: number);
						public setDecoderOutputMode(int0: number): void;
						public static getAdaptiveSupport(supportFlags: number): number;
						public updateDroppedBufferCounters(droppedBufferCount: number): void;
						public getCapabilities(): com.google.android.exoplayer2.RendererCapabilities;
						public static getTunnelingSupport(supportFlags: number): number;
						public onPositionReset(positionUs: number, joining: boolean): void;
						public handleMessage(messageType: number, message: any): void;
						public onDecoderInitialized(name: string, initializedTimestampMs: number, initializationDurationMs: number): void;
						public hasReadStreamToEnd(): boolean;
						public getTrackType(): number;
						public supportsMixedMimeTypeAdaptation(): number;
						public stop(): void;
						public setIndex(index: number): void;
						public maybeThrowStreamError(): void;
						public createDecoder(format0: com.google.android.exoplayer2.Format, exoMediaCrypto1: com.google.android.exoplayer2.drm.ExoMediaCrypto): com.google.android.exoplayer2.decoder.Decoder<com.google.android.exoplayer2.video.VideoDecoderInputBuffer,any,any>;
						public onInputFormatChanged(formatHolder: com.google.android.exoplayer2.FormatHolder): void;
						public replaceStream(formats: native.Array<com.google.android.exoplayer2.Format>, stream: com.google.android.exoplayer2.source.SampleStream, startPositionUs: number, offsetUs: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export class DummySurface extends globalAndroid.view.Surface {
						public static class: java.lang.Class<com.google.android.exoplayer2.video.DummySurface>;
						public secure: boolean;
						public describeContents(): number;
						public static newInstanceV17(context: globalAndroid.content.Context, secure: boolean): com.google.android.exoplayer2.video.DummySurface;
						public release(): void;
						public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
						public static isSecureSupported(context: globalAndroid.content.Context): boolean;
					}
					export module DummySurface {
						export class DummySurfaceThread extends globalAndroid.os.HandlerThread implements globalAndroid.os.Handler.Callback {
							public static class: java.lang.Class<com.google.android.exoplayer2.video.DummySurface.DummySurfaceThread>;
							public constructor();
							public constructor(name: string, priority: number);
							public constructor(group: java.lang.ThreadGroup, target: java.lang.Runnable);
							public constructor(group: java.lang.ThreadGroup, target: java.lang.Runnable, name: string);
							public constructor(name: string);
							public release(): void;
							public constructor(group: java.lang.ThreadGroup, name: string);
							public constructor(target: java.lang.Runnable);
							public constructor(group: java.lang.ThreadGroup, target: java.lang.Runnable, name: string, stackSize: number);
							public init(secureMode: number): com.google.android.exoplayer2.video.DummySurface;
							public constructor(target: java.lang.Runnable, name: string);
							public handleMessage(msg: globalAndroid.os.Message): boolean;
							public run(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export class MediaCodecVideoDecoderException extends com.google.android.exoplayer2.mediacodec.MediaCodecDecoderException {
						public static class: java.lang.Class<com.google.android.exoplayer2.video.MediaCodecVideoDecoderException>;
						public surfaceIdentityHashCode: number;
						public isSurfaceValid: boolean;
						public constructor();
						public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						public constructor(cause: java.lang.Throwable, codecInfo: com.google.android.exoplayer2.mediacodec.MediaCodecInfo);
						public constructor(cause: java.lang.Throwable);
						public constructor(message: string, cause: java.lang.Throwable);
						public constructor(message: string);
						public constructor(cause: java.lang.Throwable, codecInfo: com.google.android.exoplayer2.mediacodec.MediaCodecInfo, surface: globalAndroid.view.Surface);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export class MediaCodecVideoRenderer extends com.google.android.exoplayer2.mediacodec.MediaCodecRenderer {
						public static class: java.lang.Class<com.google.android.exoplayer2.video.MediaCodecVideoRenderer>;
						public getMediaFormat(format: com.google.android.exoplayer2.Format, codecMimeType: string, codecMaxValues: com.google.android.exoplayer2.video.MediaCodecVideoRenderer.CodecMaxValues, codecOperatingRate: number, deviceNeedsNoPostProcessWorkaround: boolean, tunnelingAudioSessionId: number): globalAndroid.media.MediaFormat;
						public render(positionUs: number, elapsedRealtimeUs: number): void;
						public setOutputSurfaceV23(codec: globalAndroid.media.MediaCodec, surface: globalAndroid.view.Surface): void;
						public constructor(context: globalAndroid.content.Context, mediaCodecSelector: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, allowedJoiningTimeMs: number);
						public constructor(context: globalAndroid.content.Context, mediaCodecSelector: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, allowedJoiningTimeMs: number, enableDecoderFallback: boolean, eventHandler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.video.VideoRendererEventListener, maxDroppedFramesToNotify: number);
						public resetPosition(positionUs: number): void;
						public supportsFormat(mediaCodecSelector0: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, format1: com.google.android.exoplayer2.Format): number;
						public static create(formatSupport: number, adaptiveSupport: number, tunnelingSupport: number): number;
						public getStream(): com.google.android.exoplayer2.source.SampleStream;
						public static create(formatSupport: number): number;
						public onDisabled(): void;
						public configureCodec(mediaCodecInfo0: com.google.android.exoplayer2.mediacodec.MediaCodecInfo, mediaCodecAdapter1: com.google.android.exoplayer2.mediacodec.MediaCodecAdapter, format2: com.google.android.exoplayer2.Format, mediaCrypto3: globalAndroid.media.MediaCrypto, float4: number): void;
						public onOutputFormatChanged(format: com.google.android.exoplayer2.Format, mediaFormat: globalAndroid.media.MediaFormat): void;
						public isEnded(): boolean;
						public getSurface(): globalAndroid.view.Surface;
						public resetCodecStateForFlush(): void;
						public dropOutputBuffer(codec: globalAndroid.media.MediaCodec, index: number, presentationTimeUs: number): void;
						public setCurrentStreamFinal(): void;
						public configureCodec(codecInfo: com.google.android.exoplayer2.mediacodec.MediaCodecInfo, codecAdapter: com.google.android.exoplayer2.mediacodec.MediaCodecAdapter, format: com.google.android.exoplayer2.Format, crypto: globalAndroid.media.MediaCrypto, codecOperatingRate: number): void;
						public renderOutputBufferV21(codec: globalAndroid.media.MediaCodec, index: number, presentationTimeUs: number, releaseTimeNs: number): void;
						public codecNeedsSetOutputSurfaceWorkaround(name: string): boolean;
						public onEnabled(joining: boolean, mayRenderStartOfStream: boolean): void;
						public getDecoderInfos(mediaCodecSelector0: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, format1: com.google.android.exoplayer2.Format, boolean2: boolean): java.util.List<com.google.android.exoplayer2.mediacodec.MediaCodecInfo>;
						public isReady(): boolean;
						public onQueueInputBuffer(buffer: com.google.android.exoplayer2.decoder.DecoderInputBuffer): void;
						public enable(configuration: com.google.android.exoplayer2.RendererConfiguration, formats: native.Array<com.google.android.exoplayer2.Format>, stream: com.google.android.exoplayer2.source.SampleStream, positionUs: number, joining: boolean, mayRenderStartOfStream: boolean, startPositionUs: number, offsetUs: number): void;
						public disable(): void;
						public shouldDropBuffersToKeyframe(earlyUs: number, elapsedRealtimeUs: number, isLastBuffer: boolean): boolean;
						public static getFormatSupportString(formatSupport: number): string;
						public handleInputBufferSupplementalData(buffer: com.google.android.exoplayer2.decoder.DecoderInputBuffer): void;
						public getDecoderInfos(mediaCodecSelector: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, format: com.google.android.exoplayer2.Format, requiresSecureDecoder: boolean): java.util.List<com.google.android.exoplayer2.mediacodec.MediaCodecInfo>;
						public onCodecInitialized(name: string, initializedTimestampMs: number, initializationDurationMs: number): void;
						public start(): void;
						public getState(): number;
						public updateVideoFrameProcessingOffsetCounters(processingOffsetUs: number): void;
						public onReset(): void;
						public createDecoderException(cause: java.lang.Throwable, codecInfo: com.google.android.exoplayer2.mediacodec.MediaCodecInfo): com.google.android.exoplayer2.mediacodec.MediaCodecDecoderException;
						public onStopped(): void;
						public constructor(context: globalAndroid.content.Context, mediaCodecSelector: com.google.android.exoplayer2.mediacodec.MediaCodecSelector);
						public getReadingPositionUs(): number;
						public handleMessage(what: number, object: any): void;
						public supportsFormat(mediaCodecSelector: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, format: com.google.android.exoplayer2.Format): number;
						public shouldForceRenderOutputBuffer(earlyUs: number, elapsedSinceLastRenderUs: number): boolean;
						public reset(): void;
						public renderOutputBuffer(codec: globalAndroid.media.MediaCodec, index: number, presentationTimeUs: number): void;
						public supportsFormat(format: com.google.android.exoplayer2.Format): number;
						public getCodecNeedsEosPropagation(): boolean;
						public skipOutputBuffer(codec: globalAndroid.media.MediaCodec, index: number, presentationTimeUs: number): void;
						public setOperatingRate(operatingRate: number): void;
						public onStarted(): void;
						public getName(): string;
						public static getFormatSupport(supportFlags: number): number;
						public onProcessedOutputBuffer(presentationTimeUs: number): void;
						public getMediaClock(): com.google.android.exoplayer2.util.MediaClock;
						public isCurrentStreamFinal(): boolean;
						public constructor(trackType: number);
						public processOutputBuffer(positionUs: number, elapsedRealtimeUs: number, codec: globalAndroid.media.MediaCodec, buffer: java.nio.ByteBuffer, bufferIndex: number, bufferFlags: number, sampleCount: number, bufferPresentationTimeUs: number, isDecodeOnlyBuffer: boolean, isLastBuffer: boolean, format: com.google.android.exoplayer2.Format): boolean;
						public constructor(context: globalAndroid.content.Context, mediaCodecSelector: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, allowedJoiningTimeMs: number, eventHandler: globalAndroid.os.Handler, eventListener: com.google.android.exoplayer2.video.VideoRendererEventListener, maxDroppedFramesToNotify: number);
						public static getMaxInputSize(codecInfo: com.google.android.exoplayer2.mediacodec.MediaCodecInfo, format: com.google.android.exoplayer2.Format): number;
						public static getAdaptiveSupport(supportFlags: number): number;
						public onProcessedTunneledBuffer(presentationTimeUs: number): void;
						public updateDroppedBufferCounters(droppedBufferCount: number): void;
						public getCapabilities(): com.google.android.exoplayer2.RendererCapabilities;
						public static getTunnelingSupport(supportFlags: number): number;
						public onPositionReset(positionUs: number, joining: boolean): void;
						public handleMessage(messageType: number, message: any): void;
						public shouldDropOutputBuffer(earlyUs: number, elapsedRealtimeUs: number, isLastBuffer: boolean): boolean;
						public constructor(trackType: number, mediaCodecSelector: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, enableDecoderFallback: boolean, assumedMinimumCodecOperatingRate: number);
						public hasReadStreamToEnd(): boolean;
						public onProcessedStreamChange(): void;
						public getTrackType(): number;
						public supportsMixedMimeTypeAdaptation(): number;
						public stop(): void;
						public processOutputBuffer(long0: number, long1: number, mediaCodec2: globalAndroid.media.MediaCodec, byteBuffer3: java.nio.ByteBuffer, int4: number, int5: number, int6: number, long7: number, boolean8: boolean, boolean9: boolean, format10: com.google.android.exoplayer2.Format): boolean;
						public setIndex(index: number): void;
						public maybeThrowStreamError(): void;
						public shouldInitCodec(codecInfo: com.google.android.exoplayer2.mediacodec.MediaCodecInfo): boolean;
						public maybeDropBuffersToKeyframe(codec: globalAndroid.media.MediaCodec, index: number, presentationTimeUs: number, positionUs: number, treatDroppedBuffersAsSkipped: boolean): boolean;
						public canKeepCodec(codec: globalAndroid.media.MediaCodec, codecInfo: com.google.android.exoplayer2.mediacodec.MediaCodecInfo, oldFormat: com.google.android.exoplayer2.Format, newFormat: com.google.android.exoplayer2.Format): number;
						public getCodecMaxValues(codecInfo: com.google.android.exoplayer2.mediacodec.MediaCodecInfo, format: com.google.android.exoplayer2.Format, streamFormats: native.Array<com.google.android.exoplayer2.Format>): com.google.android.exoplayer2.video.MediaCodecVideoRenderer.CodecMaxValues;
						public getCodecOperatingRateV23(operatingRate: number, format: com.google.android.exoplayer2.Format, streamFormats: native.Array<com.google.android.exoplayer2.Format>): number;
						public onInputFormatChanged(formatHolder: com.google.android.exoplayer2.FormatHolder): void;
						public replaceStream(formats: native.Array<com.google.android.exoplayer2.Format>, stream: com.google.android.exoplayer2.source.SampleStream, startPositionUs: number, offsetUs: number): void;
					}
					export module MediaCodecVideoRenderer {
						export class CodecMaxValues extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.video.MediaCodecVideoRenderer.CodecMaxValues>;
							public width: number;
							public height: number;
							public inputSize: number;
							public constructor(width: number, height: number, inputSize: number);
						}
						export class OnFrameRenderedListenerV23 extends java.lang.Object implements globalAndroid.media.MediaCodec.OnFrameRenderedListener, globalAndroid.os.Handler.Callback {
							public static class: java.lang.Class<com.google.android.exoplayer2.video.MediaCodecVideoRenderer.OnFrameRenderedListenerV23>;
							public constructor(param0: com.google.android.exoplayer2.video.MediaCodecVideoRenderer, codec: globalAndroid.media.MediaCodec);
							public onFrameRendered(codec: globalAndroid.media.MediaCodec, presentationTimeUs: number, nanoTime: number): void;
							public handleMessage(message: globalAndroid.os.Message): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export class VideoDecoderGLFrameRenderer extends java.lang.Object implements globalAndroid.opengl.GLSurfaceView.Renderer, com.google.android.exoplayer2.video.VideoDecoderOutputBufferRenderer {
						public static class: java.lang.Class<com.google.android.exoplayer2.video.VideoDecoderGLFrameRenderer>;
						public onSurfaceChanged(unused: javax.microedition.khronos.opengles.GL10, width: number, height: number): void;
						public setOutputBuffer(outputBuffer: com.google.android.exoplayer2.video.VideoDecoderOutputBuffer): void;
						public onDrawFrame(unused: javax.microedition.khronos.opengles.GL10): void;
						public onSurfaceCreated(unused: javax.microedition.khronos.opengles.GL10, config: javax.microedition.khronos.egl.EGLConfig): void;
						public constructor(surfaceView: globalAndroid.opengl.GLSurfaceView);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export class VideoDecoderGLSurfaceView extends globalAndroid.opengl.GLSurfaceView {
						public static class: java.lang.Class<com.google.android.exoplayer2.video.VideoDecoderGLSurfaceView>;
						public surfaceRedrawNeededAsync(holder: globalAndroid.view.SurfaceHolder, finishDrawing: java.lang.Runnable): void;
						public surfaceRedrawNeeded(holder: globalAndroid.view.SurfaceHolder): void;
						/** @deprecated */
						public surfaceRedrawNeeded(holder: globalAndroid.view.SurfaceHolder): void;
						public constructor(context: globalAndroid.content.Context, attrs: globalAndroid.util.AttributeSet, defStyleAttr: number, defStyleRes: number);
						public invalidateDrawable(drawable: globalAndroid.graphics.drawable.Drawable): void;
						public onKeyUp(keyCode: number, event: globalAndroid.view.KeyEvent): boolean;
						public sendAccessibilityEvent(eventType: number): void;
						public sendAccessibilityEventUnchecked(event: globalAndroid.view.accessibility.AccessibilityEvent): void;
						public onKeyLongPress(keyCode: number, event: globalAndroid.view.KeyEvent): boolean;
						public unscheduleDrawable(who: globalAndroid.graphics.drawable.Drawable): void;
						public scheduleDrawable(who: globalAndroid.graphics.drawable.Drawable, what: java.lang.Runnable, when: number): void;
						public constructor(context: globalAndroid.content.Context, attrs: globalAndroid.util.AttributeSet, defStyleAttr: number);
						public onKeyMultiple(keyCode: number, repeatCount: number, event: globalAndroid.view.KeyEvent): boolean;
						public onKeyDown(keyCode: number, event: globalAndroid.view.KeyEvent): boolean;
						public surfaceRedrawNeededAsync(holder: globalAndroid.view.SurfaceHolder, drawingFinished: java.lang.Runnable): void;
						public unscheduleDrawable(who: globalAndroid.graphics.drawable.Drawable, what: java.lang.Runnable): void;
						public constructor(context: globalAndroid.content.Context, attrs: globalAndroid.util.AttributeSet);
						public getVideoDecoderOutputBufferRenderer(): com.google.android.exoplayer2.video.VideoDecoderOutputBufferRenderer;
						public constructor(context: globalAndroid.content.Context);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export class VideoDecoderInputBuffer extends com.google.android.exoplayer2.decoder.DecoderInputBuffer {
						public static class: java.lang.Class<com.google.android.exoplayer2.video.VideoDecoderInputBuffer>;
						public format: com.google.android.exoplayer2.Format;
						public constructor();
						public constructor(bufferReplacementMode: number, paddingSize: number);
						public constructor(bufferReplacementMode: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export class VideoDecoderOutputBuffer extends com.google.android.exoplayer2.decoder.OutputBuffer {
						public static class: java.lang.Class<com.google.android.exoplayer2.video.VideoDecoderOutputBuffer>;
						public static COLORSPACE_UNKNOWN: number;
						public static COLORSPACE_BT601: number;
						public static COLORSPACE_BT709: number;
						public static COLORSPACE_BT2020: number;
						public decoderPrivate: number;
						public mode: number;
						public data: java.nio.ByteBuffer;
						public width: number;
						public height: number;
						public format: com.google.android.exoplayer2.Format;
						public yuvPlanes: native.Array<java.nio.ByteBuffer>;
						public yuvStrides: native.Array<number>;
						public colorspace: number;
						public supplementalData: java.nio.ByteBuffer;
						public constructor();
						public init(timeUs: number, mode: number, supplementalData: java.nio.ByteBuffer): void;
						public initForYuvFrame(width: number, height: number, yStride: number, uvStride: number, colorspace: number): boolean;
						public release(): void;
						public constructor(owner: com.google.android.exoplayer2.decoder.OutputBuffer.Owner<com.google.android.exoplayer2.video.VideoDecoderOutputBuffer>);
						public initForPrivateFrame(width: number, height: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export class VideoDecoderOutputBufferRenderer extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.video.VideoDecoderOutputBufferRenderer>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.video.VideoDecoderOutputBufferRenderer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setOutputBuffer(videoDecoderOutputBuffer0: com.google.android.exoplayer2.video.VideoDecoderOutputBuffer): void;
						});
						public constructor();
						public setOutputBuffer(videoDecoderOutputBuffer0: com.google.android.exoplayer2.video.VideoDecoderOutputBuffer): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export class VideoFrameMetadataListener extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.video.VideoFrameMetadataListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.video.VideoFrameMetadataListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onVideoFrameAboutToBeRendered(long0: number, long1: number, format2: com.google.android.exoplayer2.Format, mediaFormat3: globalAndroid.media.MediaFormat): void;
						});
						public constructor();
						public onVideoFrameAboutToBeRendered(long0: number, long1: number, format2: com.google.android.exoplayer2.Format, mediaFormat3: globalAndroid.media.MediaFormat): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export class VideoFrameReleaseTimeHelper extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper>;
						public constructor();
						public disable(): void;
						public adjustReleaseTime(framePresentationTimeUs: number, unadjustedReleaseTimeNs: number): number;
						public constructor(context: globalAndroid.content.Context);
						public enable(): void;
					}
					export module VideoFrameReleaseTimeHelper {
						export class DefaultDisplayListener extends java.lang.Object implements globalAndroid.hardware.display.DisplayManager.DisplayListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper.DefaultDisplayListener>;
							public unregister(): void;
							public onDisplayChanged(displayId: number): void;
							public onDisplayRemoved(displayId: number): void;
							public constructor(param0: com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper, displayManager: globalAndroid.hardware.display.DisplayManager);
							public onDisplayAdded(displayId: number): void;
							public register(): void;
						}
						export class VSyncSampler extends java.lang.Object implements globalAndroid.view.Choreographer.FrameCallback, globalAndroid.os.Handler.Callback {
							public static class: java.lang.Class<com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper.VSyncSampler>;
							public sampledVsyncTimeNs: number;
							public static getInstance(): com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper.VSyncSampler;
							public doFrame(vsyncTimeNs: number): void;
							public addObserver(): void;
							public removeObserver(): void;
							public handleMessage(message: globalAndroid.os.Message): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export class VideoListener extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.video.VideoListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.video.VideoListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onVideoSizeChanged(width: number, height: number, unappliedRotationDegrees: number, pixelWidthHeightRatio: number): void;
							onSurfaceSizeChanged(width: number, height: number): void;
							onRenderedFirstFrame(): void;
						});
						public constructor();
						public onSurfaceSizeChanged(width: number, height: number): void;
						public onRenderedFirstFrame(): void;
						public onVideoSizeChanged(width: number, height: number, unappliedRotationDegrees: number, pixelWidthHeightRatio: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export class VideoRendererEventListener extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.video.VideoRendererEventListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.video.VideoRendererEventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onVideoEnabled(counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
							onVideoDecoderInitialized(decoderName: string, initializedTimestampMs: number, initializationDurationMs: number): void;
							onVideoInputFormatChanged(format: com.google.android.exoplayer2.Format): void;
							onDroppedFrames(count: number, elapsedMs: number): void;
							onVideoFrameProcessingOffset(totalProcessingOffsetUs: number, frameCount: number): void;
							onVideoSizeChanged(width: number, height: number, unappliedRotationDegrees: number, pixelWidthHeightRatio: number): void;
							onRenderedFirstFrame(surface: globalAndroid.view.Surface): void;
							onVideoDisabled(counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						});
						public constructor();
						public onVideoInputFormatChanged(format: com.google.android.exoplayer2.Format): void;
						public onVideoFrameProcessingOffset(totalProcessingOffsetUs: number, frameCount: number): void;
						public onRenderedFirstFrame(surface: globalAndroid.view.Surface): void;
						public onVideoEnabled(counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onDroppedFrames(count: number, elapsedMs: number): void;
						public onVideoDisabled(counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onVideoSizeChanged(width: number, height: number, unappliedRotationDegrees: number, pixelWidthHeightRatio: number): void;
						public onVideoDecoderInitialized(decoderName: string, initializedTimestampMs: number, initializationDurationMs: number): void;
					}
					export module VideoRendererEventListener {
						export class EventDispatcher extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.video.VideoRendererEventListener.EventDispatcher>;
							public droppedFrames(droppedFrameCount: number, elapsedMs: number): void;
							public renderedFirstFrame(surface: globalAndroid.view.Surface): void;
							public reportVideoFrameProcessingOffset(totalProcessingOffsetUs: number, frameCount: number): void;
							public constructor(handler: globalAndroid.os.Handler, listener: com.google.android.exoplayer2.video.VideoRendererEventListener);
							public enabled(decoderCounters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
							public disabled(counters: com.google.android.exoplayer2.decoder.DecoderCounters): void;
							public inputFormatChanged(format: com.google.android.exoplayer2.Format): void;
							public videoSizeChanged(width: number, height: number, unappliedRotationDegrees: number, pixelWidthHeightRatio: number): void;
							public decoderInitialized(decoderName: string, initializedTimestampMs: number, initializationDurationMs: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export module spherical {
						export class CameraMotionListener extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.video.spherical.CameraMotionListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.video.spherical.CameraMotionListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onCameraMotion(long0: number, floats1: native.Array<number>): void;
								onCameraMotionReset(): void;
							});
							public constructor();
							public onCameraMotion(long0: number, floats1: native.Array<number>): void;
							public onCameraMotionReset(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export module spherical {
						export class CameraMotionRenderer extends com.google.android.exoplayer2.BaseRenderer {
							public static class: java.lang.Class<com.google.android.exoplayer2.video.spherical.CameraMotionRenderer>;
							public isEnded(): boolean;
							public static create(formatSupport: number): number;
							public getMediaClock(): com.google.android.exoplayer2.util.MediaClock;
							public onPositionReset(positionUs: number, joining: boolean): void;
							public reset(): void;
							public resetPosition(positionUs: number): void;
							public disable(): void;
							public static create(formatSupport: number, adaptiveSupport: number, tunnelingSupport: number): number;
							public replaceStream(formats: native.Array<com.google.android.exoplayer2.Format>, stream: com.google.android.exoplayer2.source.SampleStream, startPositionUs: number, offsetUs: number): void;
							public setIndex(index: number): void;
							public isCurrentStreamFinal(): boolean;
							public static getFormatSupport(supportFlags: number): number;
							public stop(): void;
							public start(): void;
							public static getFormatSupportString(formatSupport: number): string;
							public static getAdaptiveSupport(supportFlags: number): number;
							public supportsFormat(format: com.google.android.exoplayer2.Format): number;
							public getStream(): com.google.android.exoplayer2.source.SampleStream;
							public getTrackType(): number;
							public constructor();
							public render(positionUs: number, elapsedRealtimeUs: number): void;
							public hasReadStreamToEnd(): boolean;
							public setCurrentStreamFinal(): void;
							public handleMessage(what: number, object: any): void;
							public getState(): number;
							public isReady(): boolean;
							public enable(configuration: com.google.android.exoplayer2.RendererConfiguration, formats: native.Array<com.google.android.exoplayer2.Format>, stream: com.google.android.exoplayer2.source.SampleStream, positionUs: number, joining: boolean, mayRenderStartOfStream: boolean, startPositionUs: number, offsetUs: number): void;
							public setOperatingRate(operatingRate: number): void;
							public static getTunnelingSupport(supportFlags: number): number;
							public supportsMixedMimeTypeAdaptation(): number;
							public maybeThrowStreamError(): void;
							public getCapabilities(): com.google.android.exoplayer2.RendererCapabilities;
							public handleMessage(messageType: number, message: any): void;
							public getReadingPositionUs(): number;
							public constructor(trackType: number);
							public getName(): string;
							public onDisabled(): void;
							public onStreamChanged(formats: native.Array<com.google.android.exoplayer2.Format>, startPositionUs: number, offsetUs: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export module spherical {
						export class FrameRotationQueue extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.video.spherical.FrameRotationQueue>;
							public constructor();
							public static computeRecenterMatrix(recenterMatrix: native.Array<number>, rotationMatrix: native.Array<number>): void;
							public setRotation(timestampUs: number, angleAxis: native.Array<number>): void;
							public reset(): void;
							public pollRotationMatrix(matrix: native.Array<number>, timestampUs: number): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export module spherical {
						export class Projection extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.video.spherical.Projection>;
							public static DRAW_MODE_TRIANGLES: number;
							public static DRAW_MODE_TRIANGLES_STRIP: number;
							public static DRAW_MODE_TRIANGLES_FAN: number;
							public static TEXTURE_COORDS_PER_VERTEX: number;
							public static POSITION_COORDS_PER_VERTEX: number;
							public leftMesh: com.google.android.exoplayer2.video.spherical.Projection.Mesh;
							public rightMesh: com.google.android.exoplayer2.video.spherical.Projection.Mesh;
							public stereoMode: number;
							public singleMesh: boolean;
							public static createEquirectangular(radius: number, latitudes: number, longitudes: number, verticalFovDegrees: number, horizontalFovDegrees: number, stereoMode: number): com.google.android.exoplayer2.video.spherical.Projection;
							public constructor(mesh: com.google.android.exoplayer2.video.spherical.Projection.Mesh, stereoMode: number);
							public constructor(leftMesh: com.google.android.exoplayer2.video.spherical.Projection.Mesh, rightMesh: com.google.android.exoplayer2.video.spherical.Projection.Mesh, stereoMode: number);
							public static createEquirectangular(stereoMode: number): com.google.android.exoplayer2.video.spherical.Projection;
						}
						export module Projection {
							export class DrawMode extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<com.google.android.exoplayer2.video.spherical.Projection.DrawMode>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.video.spherical.Projection() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
							export class Mesh extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.video.spherical.Projection.Mesh>;
								public constructor(subMeshes: native.Array<com.google.android.exoplayer2.video.spherical.Projection.SubMesh>);
								public getSubMesh(index: number): com.google.android.exoplayer2.video.spherical.Projection.SubMesh;
								public getSubMeshCount(): number;
							}
							export class SubMesh extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.video.spherical.Projection.SubMesh>;
								public static VIDEO_TEXTURE_ID: number;
								public textureId: number;
								public mode: number;
								public vertices: native.Array<number>;
								public textureCoords: native.Array<number>;
								public getVertexCount(): number;
								public constructor(textureId: number, vertices: native.Array<number>, textureCoords: native.Array<number>, mode: number);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export module spherical {
						export class ProjectionDecoder extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.video.spherical.ProjectionDecoder>;
							public static decode(projectionData: native.Array<number>, stereoMode: number): com.google.android.exoplayer2.video.spherical.Projection;
						}
					}
				}
			}
		}
	}
}


//Generics information:
//com.google.android.exoplayer2.audio.DecoderAudioRenderer:1
//com.google.android.exoplayer2.decoder.Decoder:3
//com.google.android.exoplayer2.decoder.OutputBuffer.Owner:1
//com.google.android.exoplayer2.decoder.SimpleDecoder:3
//com.google.android.exoplayer2.mediacodec.MediaCodecUtil.ScoreProvider:1
//com.google.android.exoplayer2.offline.FilterableManifest:1
//com.google.android.exoplayer2.offline.FilteringManifestParser:1
//com.google.android.exoplayer2.offline.SegmentDownloader:1
//com.google.android.exoplayer2.source.CompositeMediaSource:1
//com.google.android.exoplayer2.source.ConcatenatingMediaSource.MessageData:1
//com.google.android.exoplayer2.source.SequenceableLoader.Callback:1
//com.google.android.exoplayer2.source.chunk.ChunkSampleStream:1
//com.google.android.exoplayer2.source.chunk.ChunkSampleStream.ReleaseCallback:1
//com.google.android.exoplayer2.upstream.Loader.Callback:1
//com.google.android.exoplayer2.upstream.Loader.LoadTask:1
//com.google.android.exoplayer2.upstream.ParsingLoadable:1
//com.google.android.exoplayer2.upstream.ParsingLoadable.Parser:1
//com.google.android.exoplayer2.util.ErrorMessageProvider:1
//com.google.android.exoplayer2.util.RunnableFutureTask:2
//com.google.android.exoplayer2.util.TimedValueQueue:1

