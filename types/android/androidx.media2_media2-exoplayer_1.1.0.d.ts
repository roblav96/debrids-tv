declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export abstract class BasePlayer extends java.lang.Object implements androidx.media2.exoplayer.external.Player {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.BasePlayer>;
					public window: androidx.media2.exoplayer.external.Timeline.Window;
					public isCurrentWindowDynamic(): boolean;
					public getPlayWhenReady(): boolean;
					public getRendererCount(): number;
					public setShuffleModeEnabled(boolean0: boolean): void;
					public setPlayWhenReady(boolean0: boolean): void;
					public hasNext(): boolean;
					public getVideoComponent(): androidx.media2.exoplayer.external.Player.VideoComponent;
					public getPlaybackError(): androidx.media2.exoplayer.external.ExoPlaybackException;
					public getContentPosition(): number;
					public constructor();
					public stop(boolean0: boolean): void;
					public getCurrentAdGroupIndex(): number;
					public getCurrentPeriodIndex(): number;
					public next(): void;
					public getCurrentTrackGroups(): androidx.media2.exoplayer.external.source.TrackGroupArray;
					public getShuffleModeEnabled(): boolean;
					public getCurrentWindowIndex(): number;
					public previous(): void;
					public seekToDefaultPosition(windowIndex: number): void;
					public getRendererType(int0: number): number;
					public seekTo(int0: number, long1: number): void;
					public release(): void;
					public getCurrentAdIndexInAdGroup(): number;
					public getPreviousWindowIndex(): number;
					public isCurrentWindowSeekable(): boolean;
					public getContentBufferedPosition(): number;
					public getCurrentTimeline(): androidx.media2.exoplayer.external.Timeline;
					public stop(): void;
					public setRepeatMode(int0: number): void;
					public getPlaybackState(): number;
					public isLoading(): boolean;
					public getRepeatMode(): number;
					public getTextComponent(): androidx.media2.exoplayer.external.Player.TextComponent;
					public getApplicationLooper(): globalAndroid.os.Looper;
					public getDuration(): number;
					public hasPrevious(): boolean;
					public getCurrentPosition(): number;
					public removeListener(eventListener0: androidx.media2.exoplayer.external.Player.EventListener): void;
					public getCurrentTrackSelections(): androidx.media2.exoplayer.external.trackselection.TrackSelectionArray;
					public getMetadataComponent(): androidx.media2.exoplayer.external.Player.MetadataComponent;
					public getNextWindowIndex(): number;
					public getTotalBufferedDuration(): number;
					public getCurrentTag(): any;
					public addListener(eventListener0: androidx.media2.exoplayer.external.Player.EventListener): void;
					public getPlaybackParameters(): androidx.media2.exoplayer.external.PlaybackParameters;
					public isPlayingAd(): boolean;
					public getBufferedPercentage(): number;
					public seekToDefaultPosition(): void;
					public setPlaybackParameters(playbackParameters0: androidx.media2.exoplayer.external.PlaybackParameters): void;
					public getBufferedPosition(): number;
					public seekTo(positionMs: number): void;
					public getCurrentManifest(): any;
					public getAudioComponent(): androidx.media2.exoplayer.external.Player.AudioComponent;
					public getContentDuration(): number;
				}
				export module BasePlayer {
					export class ListenerHolder extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.BasePlayer.ListenerHolder>;
						public listener: androidx.media2.exoplayer.external.Player.EventListener;
						public equals(obj: any): boolean;
						public equals(other: any): boolean;
						public invoke(listenerInvocation: androidx.media2.exoplayer.external.BasePlayer.ListenerInvocation): void;
						public constructor(listener: androidx.media2.exoplayer.external.Player.EventListener);
						public hashCode(): number;
						public release(): void;
					}
					export class ListenerInvocation extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.BasePlayer.ListenerInvocation>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.BasePlayer$ListenerInvocation interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							invokeListener(eventListener0: androidx.media2.exoplayer.external.Player.EventListener): void;
						});
						public constructor();
						public invokeListener(eventListener0: androidx.media2.exoplayer.external.Player.EventListener): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export abstract class BaseRenderer extends java.lang.Object implements androidx.media2.exoplayer.external.Renderer, androidx.media2.exoplayer.external.RendererCapabilities {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.BaseRenderer>;
					public isReady(): boolean;
					public handleMessage(what: number, object: any): void;
					public onStopped(): void;
					public getStreamFormats(): native.Array<androidx.media2.exoplayer.external.Format>;
					public isSourceReady(): boolean;
					public getCapabilities(): androidx.media2.exoplayer.external.RendererCapabilities;
					public start(): void;
					public onPositionReset(positionUs: number, joining: boolean): void;
					public onReset(): void;
					public setOperatingRate(float0: number): void;
					public skipSource(positionUs: number): number;
					public onDisabled(): void;
					public disable(): void;
					public onEnabled(joining: boolean): void;
					public replaceStream(formats: native.Array<androidx.media2.exoplayer.external.Format>, stream: androidx.media2.exoplayer.external.source.SampleStream, offsetUs: number): void;
					public getConfiguration(): androidx.media2.exoplayer.external.RendererConfiguration;
					public enable(configuration: androidx.media2.exoplayer.external.RendererConfiguration, formats: native.Array<androidx.media2.exoplayer.external.Format>, stream: androidx.media2.exoplayer.external.source.SampleStream, positionUs: number, joining: boolean, offsetUs: number): void;
					public getStream(): androidx.media2.exoplayer.external.source.SampleStream;
					public getReadingPositionUs(): number;
					public getTrackType(): number;
					public getIndex(): number;
					public static supportsFormatDrm(drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<any>, drmInitData: androidx.media2.exoplayer.external.drm.DrmInitData): boolean;
					public getMediaClock(): androidx.media2.exoplayer.external.util.MediaClock;
					public setCurrentStreamFinal(): void;
					public reset(): void;
					public render(long0: number, long1: number): void;
					public hasReadStreamToEnd(): boolean;
					public supportsFormat(format0: androidx.media2.exoplayer.external.Format): number;
					public maybeThrowStreamError(): void;
					public isEnded(): boolean;
					public isCurrentStreamFinal(): boolean;
					public supportsMixedMimeTypeAdaptation(): number;
					public constructor(trackType: number);
					public setIndex(index: number): void;
					public readSource(formatHolder: androidx.media2.exoplayer.external.FormatHolder, buffer: androidx.media2.exoplayer.external.decoder.DecoderInputBuffer, formatRequired: boolean): number;
					public resetPosition(positionUs: number): void;
					public stop(): void;
					public onStreamChanged(formats: native.Array<androidx.media2.exoplayer.external.Format>, offsetUs: number): void;
					public onStarted(): void;
					public getState(): number;
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export class C extends java.lang.Object {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.C>;
					public static TIME_END_OF_SOURCE: number;
					public static TIME_UNSET: number;
					public static INDEX_UNSET: number;
					public static POSITION_UNSET: number;
					public static LENGTH_UNSET: number;
					public static PERCENTAGE_UNSET: number;
					public static MILLIS_PER_SECOND: number;
					public static MICROS_PER_SECOND: number;
					public static NANOS_PER_SECOND: number;
					public static BITS_PER_BYTE: number;
					public static BYTES_PER_FLOAT: number;
					public static ASCII_NAME: string;
					public static UTF8_NAME: string;
					public static UTF16_NAME: string;
					public static UTF16LE_NAME: string;
					public static SERIF_NAME: string;
					public static SANS_SERIF_NAME: string;
					public static CRYPTO_MODE_UNENCRYPTED: number;
					public static CRYPTO_MODE_AES_CTR: number;
					public static CRYPTO_MODE_AES_CBC: number;
					public static AUDIO_SESSION_ID_UNSET: number;
					public static ENCODING_INVALID: number;
					public static ENCODING_PCM_8BIT: number;
					public static ENCODING_PCM_16BIT: number;
					public static ENCODING_PCM_24BIT: number;
					public static ENCODING_PCM_32BIT: number;
					public static ENCODING_PCM_FLOAT: number;
					public static ENCODING_PCM_MU_LAW: number;
					public static ENCODING_PCM_A_LAW: number;
					public static ENCODING_AC3: number;
					public static ENCODING_E_AC3: number;
					public static ENCODING_E_AC3_JOC: number;
					public static ENCODING_AC4: number;
					public static ENCODING_DTS: number;
					public static ENCODING_DTS_HD: number;
					public static ENCODING_DOLBY_TRUEHD: number;
					public static STREAM_TYPE_ALARM: number;
					public static STREAM_TYPE_DTMF: number;
					public static STREAM_TYPE_MUSIC: number;
					public static STREAM_TYPE_NOTIFICATION: number;
					public static STREAM_TYPE_RING: number;
					public static STREAM_TYPE_SYSTEM: number;
					public static STREAM_TYPE_VOICE_CALL: number;
					public static STREAM_TYPE_USE_DEFAULT: number;
					public static STREAM_TYPE_DEFAULT: number;
					public static CONTENT_TYPE_MOVIE: number;
					public static CONTENT_TYPE_MUSIC: number;
					public static CONTENT_TYPE_SONIFICATION: number;
					public static CONTENT_TYPE_SPEECH: number;
					public static CONTENT_TYPE_UNKNOWN: number;
					public static FLAG_AUDIBILITY_ENFORCED: number;
					public static USAGE_ALARM: number;
					public static USAGE_ASSISTANCE_ACCESSIBILITY: number;
					public static USAGE_ASSISTANCE_NAVIGATION_GUIDANCE: number;
					public static USAGE_ASSISTANCE_SONIFICATION: number;
					public static USAGE_ASSISTANT: number;
					public static USAGE_GAME: number;
					public static USAGE_MEDIA: number;
					public static USAGE_NOTIFICATION: number;
					public static USAGE_NOTIFICATION_COMMUNICATION_DELAYED: number;
					public static USAGE_NOTIFICATION_COMMUNICATION_INSTANT: number;
					public static USAGE_NOTIFICATION_COMMUNICATION_REQUEST: number;
					public static USAGE_NOTIFICATION_EVENT: number;
					public static USAGE_NOTIFICATION_RINGTONE: number;
					public static USAGE_UNKNOWN: number;
					public static USAGE_VOICE_COMMUNICATION: number;
					public static USAGE_VOICE_COMMUNICATION_SIGNALLING: number;
					public static AUDIOFOCUS_NONE: number;
					public static AUDIOFOCUS_GAIN: number;
					public static AUDIOFOCUS_GAIN_TRANSIENT: number;
					public static AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK: number;
					public static AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE: number;
					public static BUFFER_FLAG_KEY_FRAME: number;
					public static BUFFER_FLAG_END_OF_STREAM: number;
					public static BUFFER_FLAG_HAS_SUPPLEMENTAL_DATA: number;
					public static BUFFER_FLAG_LAST_SAMPLE: number;
					public static BUFFER_FLAG_ENCRYPTED: number;
					public static BUFFER_FLAG_DECODE_ONLY: number;
					public static VIDEO_OUTPUT_MODE_NONE: number;
					public static VIDEO_OUTPUT_MODE_YUV: number;
					public static VIDEO_OUTPUT_MODE_SURFACE_YUV: number;
					public static VIDEO_SCALING_MODE_SCALE_TO_FIT: number;
					public static VIDEO_SCALING_MODE_SCALE_TO_FIT_WITH_CROPPING: number;
					public static VIDEO_SCALING_MODE_DEFAULT: number;
					public static SELECTION_FLAG_DEFAULT: number;
					public static SELECTION_FLAG_FORCED: number;
					public static SELECTION_FLAG_AUTOSELECT: number;
					public static LANGUAGE_UNDETERMINED: string;
					public static TYPE_DASH: number;
					public static TYPE_SS: number;
					public static TYPE_HLS: number;
					public static TYPE_OTHER: number;
					public static RESULT_END_OF_INPUT: number;
					public static RESULT_MAX_LENGTH_EXCEEDED: number;
					public static RESULT_NOTHING_READ: number;
					public static RESULT_BUFFER_READ: number;
					public static RESULT_FORMAT_READ: number;
					public static DATA_TYPE_UNKNOWN: number;
					public static DATA_TYPE_MEDIA: number;
					public static DATA_TYPE_MEDIA_INITIALIZATION: number;
					public static DATA_TYPE_DRM: number;
					public static DATA_TYPE_MANIFEST: number;
					public static DATA_TYPE_TIME_SYNCHRONIZATION: number;
					public static DATA_TYPE_AD: number;
					public static DATA_TYPE_MEDIA_PROGRESSIVE_LIVE: number;
					public static DATA_TYPE_CUSTOM_BASE: number;
					public static TRACK_TYPE_UNKNOWN: number;
					public static TRACK_TYPE_DEFAULT: number;
					public static TRACK_TYPE_AUDIO: number;
					public static TRACK_TYPE_VIDEO: number;
					public static TRACK_TYPE_TEXT: number;
					public static TRACK_TYPE_METADATA: number;
					public static TRACK_TYPE_CAMERA_MOTION: number;
					public static TRACK_TYPE_NONE: number;
					public static TRACK_TYPE_CUSTOM_BASE: number;
					public static SELECTION_REASON_UNKNOWN: number;
					public static SELECTION_REASON_INITIAL: number;
					public static SELECTION_REASON_MANUAL: number;
					public static SELECTION_REASON_ADAPTIVE: number;
					public static SELECTION_REASON_TRICK_PLAY: number;
					public static SELECTION_REASON_CUSTOM_BASE: number;
					public static DEFAULT_BUFFER_SEGMENT_SIZE: number;
					public static CENC_TYPE_cenc: string;
					public static CENC_TYPE_cbc1: string;
					public static CENC_TYPE_cens: string;
					public static CENC_TYPE_cbcs: string;
					public static UUID_NIL: java.util.UUID;
					public static COMMON_PSSH_UUID: java.util.UUID;
					public static CLEARKEY_UUID: java.util.UUID;
					public static WIDEVINE_UUID: java.util.UUID;
					public static PLAYREADY_UUID: java.util.UUID;
					public static MSG_SET_SURFACE: number;
					public static MSG_SET_VOLUME: number;
					public static MSG_SET_AUDIO_ATTRIBUTES: number;
					public static MSG_SET_SCALING_MODE: number;
					public static MSG_SET_AUX_EFFECT_INFO: number;
					public static MSG_SET_VIDEO_FRAME_METADATA_LISTENER: number;
					public static MSG_SET_CAMERA_MOTION_LISTENER: number;
					public static MSG_CUSTOM_BASE: number;
					public static STEREO_MODE_MONO: number;
					public static STEREO_MODE_TOP_BOTTOM: number;
					public static STEREO_MODE_LEFT_RIGHT: number;
					public static STEREO_MODE_STEREO_MESH: number;
					public static COLOR_SPACE_BT709: number;
					public static COLOR_SPACE_BT601: number;
					public static COLOR_SPACE_BT2020: number;
					public static COLOR_TRANSFER_SDR: number;
					public static COLOR_TRANSFER_ST2084: number;
					public static COLOR_TRANSFER_HLG: number;
					public static COLOR_RANGE_LIMITED: number;
					public static COLOR_RANGE_FULL: number;
					public static PROJECTION_RECTANGULAR: number;
					public static PROJECTION_EQUIRECTANGULAR: number;
					public static PROJECTION_CUBEMAP: number;
					public static PROJECTION_MESH: number;
					public static PRIORITY_PLAYBACK: number;
					public static PRIORITY_DOWNLOAD: number;
					public static NETWORK_TYPE_UNKNOWN: number;
					public static NETWORK_TYPE_OFFLINE: number;
					public static NETWORK_TYPE_WIFI: number;
					public static NETWORK_TYPE_2G: number;
					public static NETWORK_TYPE_3G: number;
					public static NETWORK_TYPE_4G: number;
					public static NETWORK_TYPE_CELLULAR_UNKNOWN: number;
					public static NETWORK_TYPE_ETHERNET: number;
					public static NETWORK_TYPE_OTHER: number;
					public static ROLE_FLAG_MAIN: number;
					public static ROLE_FLAG_ALTERNATE: number;
					public static ROLE_FLAG_SUPPLEMENTARY: number;
					public static ROLE_FLAG_COMMENTARY: number;
					public static ROLE_FLAG_DUB: number;
					public static ROLE_FLAG_EMERGENCY: number;
					public static ROLE_FLAG_CAPTION: number;
					public static ROLE_FLAG_SUBTITLE: number;
					public static ROLE_FLAG_SIGN: number;
					public static ROLE_FLAG_DESCRIBES_VIDEO: number;
					public static ROLE_FLAG_DESCRIBES_MUSIC_AND_SOUND: number;
					public static ROLE_FLAG_ENHANCED_DIALOG_INTELLIGIBILITY: number;
					public static ROLE_FLAG_TRANSCRIBES_DIALOG: number;
					public static ROLE_FLAG_EASY_TO_READ: number;
					public static generateAudioSessionIdV21(context: globalAndroid.content.Context): number;
					public static msToUs(timeMs: number): number;
					public static usToMs(timeUs: number): number;
				}
				export module C {
					export class AudioContentType extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.C.AudioContentType>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.C$AudioContentType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class AudioFlags extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.C.AudioFlags>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.C$AudioFlags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class AudioFocusGain extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.C.AudioFocusGain>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.C$AudioFocusGain interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class AudioUsage extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.C.AudioUsage>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.C$AudioUsage interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class BufferFlags extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.C.BufferFlags>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.C$BufferFlags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class ColorRange extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.C.ColorRange>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.C$ColorRange interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class ColorSpace extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.C.ColorSpace>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.C$ColorSpace interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class ColorTransfer extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.C.ColorTransfer>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.C$ColorTransfer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class ContentType extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.C.ContentType>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.C$ContentType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class CryptoMode extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.C.CryptoMode>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.C$CryptoMode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class Encoding extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.C.Encoding>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.C$Encoding interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class NetworkType extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.C.NetworkType>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.C$NetworkType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class PcmEncoding extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.C.PcmEncoding>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.C$PcmEncoding interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class Projection extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.C.Projection>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.C$Projection interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class RoleFlags extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.C.RoleFlags>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.C$RoleFlags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class SelectionFlags extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.C.SelectionFlags>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.C$SelectionFlags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class StereoMode extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.C.StereoMode>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.C$StereoMode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class StreamType extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.C.StreamType>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.C$StreamType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class VideoOutputMode extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.C.VideoOutputMode>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.C$VideoOutputMode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class VideoScalingMode extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.C.VideoScalingMode>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.C$VideoScalingMode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export class ControlDispatcher extends java.lang.Object {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.ControlDispatcher>;
					/**
					 * Constructs a new instance of the androidx.media2.exoplayer.external.ControlDispatcher interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						dispatchSetPlayWhenReady(player0: androidx.media2.exoplayer.external.Player, boolean1: boolean): boolean;
						dispatchSeekTo(player0: androidx.media2.exoplayer.external.Player, int1: number, long2: number): boolean;
						dispatchSetRepeatMode(player0: androidx.media2.exoplayer.external.Player, int1: number): boolean;
						dispatchSetShuffleModeEnabled(player0: androidx.media2.exoplayer.external.Player, boolean1: boolean): boolean;
						dispatchStop(player0: androidx.media2.exoplayer.external.Player, boolean1: boolean): boolean;
					});
					public constructor();
					public dispatchSetPlayWhenReady(player0: androidx.media2.exoplayer.external.Player, boolean1: boolean): boolean;
					public dispatchSetRepeatMode(player0: androidx.media2.exoplayer.external.Player, int1: number): boolean;
					public dispatchStop(player0: androidx.media2.exoplayer.external.Player, boolean1: boolean): boolean;
					public dispatchSetShuffleModeEnabled(player0: androidx.media2.exoplayer.external.Player, boolean1: boolean): boolean;
					public dispatchSeekTo(player0: androidx.media2.exoplayer.external.Player, int1: number, long2: number): boolean;
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export class DefaultControlDispatcher extends java.lang.Object implements androidx.media2.exoplayer.external.ControlDispatcher {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.DefaultControlDispatcher>;
					public dispatchSeekTo(player: androidx.media2.exoplayer.external.Player, windowIndex: number, positionMs: number): boolean;
					public dispatchSetShuffleModeEnabled(player: androidx.media2.exoplayer.external.Player, shuffleModeEnabled: boolean): boolean;
					public constructor();
					public dispatchSetRepeatMode(player: androidx.media2.exoplayer.external.Player, repeatMode: number): boolean;
					public dispatchSetPlayWhenReady(player: androidx.media2.exoplayer.external.Player, playWhenReady: boolean): boolean;
					public dispatchStop(player: androidx.media2.exoplayer.external.Player, reset: boolean): boolean;
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export class DefaultLoadControl extends java.lang.Object implements androidx.media2.exoplayer.external.LoadControl {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.DefaultLoadControl>;
					public static DEFAULT_MIN_BUFFER_MS: number;
					public static DEFAULT_MAX_BUFFER_MS: number;
					public static DEFAULT_BUFFER_FOR_PLAYBACK_MS: number;
					public static DEFAULT_BUFFER_FOR_PLAYBACK_AFTER_REBUFFER_MS: number;
					public static DEFAULT_TARGET_BUFFER_BYTES: number;
					public static DEFAULT_PRIORITIZE_TIME_OVER_SIZE_THRESHOLDS: boolean;
					public static DEFAULT_BACK_BUFFER_DURATION_MS: number;
					public static DEFAULT_RETAIN_BACK_BUFFER_FROM_KEYFRAME: boolean;
					public static DEFAULT_VIDEO_BUFFER_SIZE: number;
					public static DEFAULT_AUDIO_BUFFER_SIZE: number;
					public static DEFAULT_TEXT_BUFFER_SIZE: number;
					public static DEFAULT_METADATA_BUFFER_SIZE: number;
					public static DEFAULT_CAMERA_MOTION_BUFFER_SIZE: number;
					public static DEFAULT_MUXED_BUFFER_SIZE: number;
					public onTracksSelected(renderers: native.Array<androidx.media2.exoplayer.external.Renderer>, trackGroups: androidx.media2.exoplayer.external.source.TrackGroupArray, trackSelections: androidx.media2.exoplayer.external.trackselection.TrackSelectionArray): void;
					public onStopped(): void;
					/** @deprecated */
					public constructor(allocator: androidx.media2.exoplayer.external.upstream.DefaultAllocator, minBufferMs: number, maxBufferMs: number, bufferForPlaybackMs: number, bufferForPlaybackAfterRebufferMs: number, targetBufferBytes: number, prioritizeTimeOverSizeThresholds: boolean);
					public getAllocator(): androidx.media2.exoplayer.external.upstream.Allocator;
					public shouldStartPlayback(bufferedDurationUs: number, playbackSpeed: number, rebuffering: boolean): boolean;
					public onReleased(): void;
					public calculateTargetBufferSize(renderers: native.Array<androidx.media2.exoplayer.external.Renderer>, trackSelectionArray: androidx.media2.exoplayer.external.trackselection.TrackSelectionArray): number;
					/** @deprecated */
					public constructor(allocator: androidx.media2.exoplayer.external.upstream.DefaultAllocator);
					public onPrepared(): void;
					public getBackBufferDurationUs(): number;
					public constructor();
					public retainBackBufferFromKeyframe(): boolean;
					public shouldContinueLoading(bufferedDurationUs: number, playbackSpeed: number): boolean;
					public constructor(allocator: androidx.media2.exoplayer.external.upstream.DefaultAllocator, minBufferAudioMs: number, minBufferVideoMs: number, maxBufferMs: number, bufferForPlaybackMs: number, bufferForPlaybackAfterRebufferMs: number, targetBufferBytes: number, prioritizeTimeOverSizeThresholds: boolean, backBufferDurationMs: number, retainBackBufferFromKeyframe: boolean);
				}
				export module DefaultLoadControl {
					export class Builder extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.DefaultLoadControl.Builder>;
						public setAllocator(allocator: androidx.media2.exoplayer.external.upstream.DefaultAllocator): androidx.media2.exoplayer.external.DefaultLoadControl.Builder;
						public constructor();
						public setTargetBufferBytes(targetBufferBytes: number): androidx.media2.exoplayer.external.DefaultLoadControl.Builder;
						public setBackBuffer(backBufferDurationMs: number, retainBackBufferFromKeyframe: boolean): androidx.media2.exoplayer.external.DefaultLoadControl.Builder;
						public setBufferDurationsMs(minBufferMs: number, maxBufferMs: number, bufferForPlaybackMs: number, bufferForPlaybackAfterRebufferMs: number): androidx.media2.exoplayer.external.DefaultLoadControl.Builder;
						public setPrioritizeTimeOverSizeThresholds(prioritizeTimeOverSizeThresholds: boolean): androidx.media2.exoplayer.external.DefaultLoadControl.Builder;
						public createDefaultLoadControl(): androidx.media2.exoplayer.external.DefaultLoadControl;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export class DefaultMediaClock extends java.lang.Object implements androidx.media2.exoplayer.external.util.MediaClock {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.DefaultMediaClock>;
					public getPositionUs(): number;
					public setPlaybackParameters(playbackParameters: androidx.media2.exoplayer.external.PlaybackParameters): void;
					public syncAndGetPositionUs(isReadingAhead: boolean): number;
					public stop(): void;
					public resetPosition(positionUs: number): void;
					public start(): void;
					public constructor(listener: androidx.media2.exoplayer.external.DefaultMediaClock.PlaybackParameterListener, clock: androidx.media2.exoplayer.external.util.Clock);
					public onRendererEnabled(renderer: androidx.media2.exoplayer.external.Renderer): void;
					public onRendererDisabled(renderer: androidx.media2.exoplayer.external.Renderer): void;
					public getPlaybackParameters(): androidx.media2.exoplayer.external.PlaybackParameters;
				}
				export module DefaultMediaClock {
					export class PlaybackParameterListener extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.DefaultMediaClock.PlaybackParameterListener>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.DefaultMediaClock$PlaybackParameterListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onPlaybackParametersChanged(playbackParameters0: androidx.media2.exoplayer.external.PlaybackParameters): void;
						});
						public constructor();
						public onPlaybackParametersChanged(playbackParameters0: androidx.media2.exoplayer.external.PlaybackParameters): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export class DefaultRenderersFactory extends java.lang.Object implements androidx.media2.exoplayer.external.RenderersFactory {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.DefaultRenderersFactory>;
					public static DEFAULT_ALLOWED_VIDEO_JOINING_TIME_MS: number;
					public static EXTENSION_RENDERER_MODE_OFF: number;
					public static EXTENSION_RENDERER_MODE_ON: number;
					public static EXTENSION_RENDERER_MODE_PREFER: number;
					public static MAX_DROPPED_VIDEO_FRAME_COUNT_TO_NOTIFY: number;
					/** @deprecated */
					public constructor(context: globalAndroid.content.Context, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>, extensionRendererMode: number);
					/** @deprecated */
					public constructor(context: globalAndroid.content.Context, extensionRendererMode: number);
					public setExtensionRendererMode(extensionRendererMode: number): androidx.media2.exoplayer.external.DefaultRenderersFactory;
					public buildCameraMotionRenderers(context: globalAndroid.content.Context, extensionRendererMode: number, out: java.util.ArrayList<androidx.media2.exoplayer.external.Renderer>): void;
					/** @deprecated */
					public constructor(context: globalAndroid.content.Context, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>);
					public setMediaCodecSelector(mediaCodecSelector: androidx.media2.exoplayer.external.mediacodec.MediaCodecSelector): androidx.media2.exoplayer.external.DefaultRenderersFactory;
					/** @deprecated */
					public constructor(context: globalAndroid.content.Context, extensionRendererMode: number, allowedVideoJoiningTimeMs: number);
					public setPlayClearSamplesWithoutKeys(playClearSamplesWithoutKeys: boolean): androidx.media2.exoplayer.external.DefaultRenderersFactory;
					public buildTextRenderers(context: globalAndroid.content.Context, output: androidx.media2.exoplayer.external.text.TextOutput, outputLooper: globalAndroid.os.Looper, extensionRendererMode: number, out: java.util.ArrayList<androidx.media2.exoplayer.external.Renderer>): void;
					public buildMiscellaneousRenderers(context: globalAndroid.content.Context, eventHandler: globalAndroid.os.Handler, extensionRendererMode: number, out: java.util.ArrayList<androidx.media2.exoplayer.external.Renderer>): void;
					public buildMetadataRenderers(context: globalAndroid.content.Context, output: androidx.media2.exoplayer.external.metadata.MetadataOutput, outputLooper: globalAndroid.os.Looper, extensionRendererMode: number, out: java.util.ArrayList<androidx.media2.exoplayer.external.Renderer>): void;
					public buildAudioProcessors(): native.Array<androidx.media2.exoplayer.external.audio.AudioProcessor>;
					public setAllowedVideoJoiningTimeMs(allowedVideoJoiningTimeMs: number): androidx.media2.exoplayer.external.DefaultRenderersFactory;
					public buildVideoRenderers(context: globalAndroid.content.Context, extensionRendererMode: number, mediaCodecSelector: androidx.media2.exoplayer.external.mediacodec.MediaCodecSelector, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>, playClearSamplesWithoutKeys: boolean, enableDecoderFallback: boolean, eventHandler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.video.VideoRendererEventListener, allowedVideoJoiningTimeMs: number, out: java.util.ArrayList<androidx.media2.exoplayer.external.Renderer>): void;
					public constructor(context: globalAndroid.content.Context);
					public buildAudioRenderers(context: globalAndroid.content.Context, extensionRendererMode: number, mediaCodecSelector: androidx.media2.exoplayer.external.mediacodec.MediaCodecSelector, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>, playClearSamplesWithoutKeys: boolean, enableDecoderFallback: boolean, audioProcessors: native.Array<androidx.media2.exoplayer.external.audio.AudioProcessor>, eventHandler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.audio.AudioRendererEventListener, out: java.util.ArrayList<androidx.media2.exoplayer.external.Renderer>): void;
					public setEnableDecoderFallback(enableDecoderFallback: boolean): androidx.media2.exoplayer.external.DefaultRenderersFactory;
					public createRenderers(eventHandler: globalAndroid.os.Handler, videoRendererEventListener: androidx.media2.exoplayer.external.video.VideoRendererEventListener, audioRendererEventListener: androidx.media2.exoplayer.external.audio.AudioRendererEventListener, textRendererOutput: androidx.media2.exoplayer.external.text.TextOutput, metadataRendererOutput: androidx.media2.exoplayer.external.metadata.MetadataOutput, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>): native.Array<androidx.media2.exoplayer.external.Renderer>;
					/** @deprecated */
					public constructor(context: globalAndroid.content.Context, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>, extensionRendererMode: number, allowedVideoJoiningTimeMs: number);
				}
				export module DefaultRenderersFactory {
					export class ExtensionRendererMode extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.DefaultRenderersFactory.ExtensionRendererMode>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.DefaultRenderersFactory$ExtensionRendererMode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export class ExoPlaybackException extends java.lang.Exception {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.ExoPlaybackException>;
					public static TYPE_SOURCE: number;
					public static TYPE_RENDERER: number;
					public static TYPE_UNEXPECTED: number;
					public static TYPE_REMOTE: number;
					public static TYPE_OUT_OF_MEMORY: number;
					public type: number;
					public rendererIndex: number;
					public timestampMs: number;
					public getSourceException(): java.io.IOException;
					public static createForRemote(message: string): androidx.media2.exoplayer.external.ExoPlaybackException;
					public static createForOutOfMemoryError(cause: java.lang.OutOfMemoryError): androidx.media2.exoplayer.external.ExoPlaybackException;
					public static createForRenderer(cause: java.lang.Exception, rendererIndex: number): androidx.media2.exoplayer.external.ExoPlaybackException;
					public static createForUnexpected(cause: java.lang.RuntimeException): androidx.media2.exoplayer.external.ExoPlaybackException;
					public getRendererException(): java.lang.Exception;
					public getUnexpectedException(): java.lang.RuntimeException;
					public getOutOfMemoryError(): java.lang.OutOfMemoryError;
					public static createForSource(cause: java.io.IOException): androidx.media2.exoplayer.external.ExoPlaybackException;
				}
				export module ExoPlaybackException {
					export class Type extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.ExoPlaybackException.Type>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.ExoPlaybackException$Type interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export class ExoPlayer extends java.lang.Object implements androidx.media2.exoplayer.external.Player {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.ExoPlayer>;
					/**
					 * Constructs a new instance of the androidx.media2.exoplayer.external.ExoPlayer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getPlaybackLooper(): globalAndroid.os.Looper;
						retry(): void;
						prepare(mediaSource0: androidx.media2.exoplayer.external.source.MediaSource): void;
						prepare(mediaSource0: androidx.media2.exoplayer.external.source.MediaSource, boolean1: boolean, boolean2: boolean): void;
						createMessage(target0: androidx.media2.exoplayer.external.PlayerMessage.Target): androidx.media2.exoplayer.external.PlayerMessage;
						setSeekParameters(seekParameters0: androidx.media2.exoplayer.external.SeekParameters): void;
						getSeekParameters(): androidx.media2.exoplayer.external.SeekParameters;
						setForegroundMode(boolean0: boolean): void;
						getAudioComponent(): androidx.media2.exoplayer.external.Player.AudioComponent;
						getVideoComponent(): androidx.media2.exoplayer.external.Player.VideoComponent;
						getTextComponent(): androidx.media2.exoplayer.external.Player.TextComponent;
						getMetadataComponent(): androidx.media2.exoplayer.external.Player.MetadataComponent;
						getApplicationLooper(): globalAndroid.os.Looper;
						addListener(eventListener0: androidx.media2.exoplayer.external.Player.EventListener): void;
						removeListener(eventListener0: androidx.media2.exoplayer.external.Player.EventListener): void;
						getPlaybackState(): number;
						getPlaybackError(): androidx.media2.exoplayer.external.ExoPlaybackException;
						setPlayWhenReady(boolean0: boolean): void;
						getPlayWhenReady(): boolean;
						setRepeatMode(int0: number): void;
						getRepeatMode(): number;
						setShuffleModeEnabled(boolean0: boolean): void;
						getShuffleModeEnabled(): boolean;
						isLoading(): boolean;
						seekToDefaultPosition(): void;
						seekToDefaultPosition(int0: number): void;
						seekTo(long0: number): void;
						seekTo(int0: number, long1: number): void;
						hasPrevious(): boolean;
						previous(): void;
						hasNext(): boolean;
						next(): void;
						setPlaybackParameters(playbackParameters0: androidx.media2.exoplayer.external.PlaybackParameters): void;
						getPlaybackParameters(): androidx.media2.exoplayer.external.PlaybackParameters;
						stop(): void;
						stop(boolean0: boolean): void;
						release(): void;
						getRendererCount(): number;
						getRendererType(int0: number): number;
						getCurrentTrackGroups(): androidx.media2.exoplayer.external.source.TrackGroupArray;
						getCurrentTrackSelections(): androidx.media2.exoplayer.external.trackselection.TrackSelectionArray;
						getCurrentManifest(): any;
						getCurrentTimeline(): androidx.media2.exoplayer.external.Timeline;
						getCurrentPeriodIndex(): number;
						getCurrentWindowIndex(): number;
						getNextWindowIndex(): number;
						getPreviousWindowIndex(): number;
						getCurrentTag(): any;
						getDuration(): number;
						getCurrentPosition(): number;
						getBufferedPosition(): number;
						getBufferedPercentage(): number;
						getTotalBufferedDuration(): number;
						isCurrentWindowDynamic(): boolean;
						isCurrentWindowSeekable(): boolean;
						isPlayingAd(): boolean;
						getCurrentAdGroupIndex(): number;
						getCurrentAdIndexInAdGroup(): number;
						getContentDuration(): number;
						getContentPosition(): number;
						getContentBufferedPosition(): number;
					});
					public constructor();
					public static DISCONTINUITY_REASON_AD_INSERTION: number;
					public static DISCONTINUITY_REASON_SEEK_ADJUSTMENT: number;
					public static REPEAT_MODE_OFF: number;
					public static STATE_READY: number;
					public static DISCONTINUITY_REASON_SEEK: number;
					public static TIMELINE_CHANGE_REASON_PREPARED: number;
					public static DISCONTINUITY_REASON_INTERNAL: number;
					public static TIMELINE_CHANGE_REASON_DYNAMIC: number;
					public static STATE_ENDED: number;
					public static REPEAT_MODE_ALL: number;
					public static STATE_IDLE: number;
					public static REPEAT_MODE_ONE: number;
					public static STATE_BUFFERING: number;
					public static TIMELINE_CHANGE_REASON_RESET: number;
					public static DISCONTINUITY_REASON_PERIOD_TRANSITION: number;
					public getPlayWhenReady(): boolean;
					public getRendererCount(): number;
					public isCurrentWindowDynamic(): boolean;
					public setShuffleModeEnabled(boolean0: boolean): void;
					public setPlayWhenReady(boolean0: boolean): void;
					public prepare(mediaSource0: androidx.media2.exoplayer.external.source.MediaSource, boolean1: boolean, boolean2: boolean): void;
					public getVideoComponent(): androidx.media2.exoplayer.external.Player.VideoComponent;
					public hasNext(): boolean;
					public seekTo(long0: number): void;
					public getPlaybackError(): androidx.media2.exoplayer.external.ExoPlaybackException;
					public getContentPosition(): number;
					public createMessage(target0: androidx.media2.exoplayer.external.PlayerMessage.Target): androidx.media2.exoplayer.external.PlayerMessage;
					public stop(boolean0: boolean): void;
					public getCurrentAdGroupIndex(): number;
					public getCurrentPeriodIndex(): number;
					public next(): void;
					public getCurrentTrackGroups(): androidx.media2.exoplayer.external.source.TrackGroupArray;
					public getShuffleModeEnabled(): boolean;
					public getCurrentWindowIndex(): number;
					public previous(): void;
					public getSeekParameters(): androidx.media2.exoplayer.external.SeekParameters;
					public getRendererType(int0: number): number;
					public seekTo(int0: number, long1: number): void;
					public release(): void;
					public getCurrentAdIndexInAdGroup(): number;
					public getPreviousWindowIndex(): number;
					public isCurrentWindowSeekable(): boolean;
					public getContentBufferedPosition(): number;
					public getCurrentTimeline(): androidx.media2.exoplayer.external.Timeline;
					public stop(): void;
					public setRepeatMode(int0: number): void;
					public prepare(mediaSource0: androidx.media2.exoplayer.external.source.MediaSource): void;
					public getPlaybackState(): number;
					public isLoading(): boolean;
					public getRepeatMode(): number;
					public getPlaybackLooper(): globalAndroid.os.Looper;
					public getTextComponent(): androidx.media2.exoplayer.external.Player.TextComponent;
					public getApplicationLooper(): globalAndroid.os.Looper;
					public getDuration(): number;
					public hasPrevious(): boolean;
					public getCurrentPosition(): number;
					public removeListener(eventListener0: androidx.media2.exoplayer.external.Player.EventListener): void;
					public getCurrentTrackSelections(): androidx.media2.exoplayer.external.trackselection.TrackSelectionArray;
					public retry(): void;
					public getMetadataComponent(): androidx.media2.exoplayer.external.Player.MetadataComponent;
					public setSeekParameters(seekParameters0: androidx.media2.exoplayer.external.SeekParameters): void;
					public getNextWindowIndex(): number;
					public getTotalBufferedDuration(): number;
					public getCurrentTag(): any;
					public seekToDefaultPosition(int0: number): void;
					public addListener(eventListener0: androidx.media2.exoplayer.external.Player.EventListener): void;
					public getPlaybackParameters(): androidx.media2.exoplayer.external.PlaybackParameters;
					public setForegroundMode(boolean0: boolean): void;
					public isPlayingAd(): boolean;
					public getBufferedPercentage(): number;
					public seekToDefaultPosition(): void;
					public setPlaybackParameters(playbackParameters0: androidx.media2.exoplayer.external.PlaybackParameters): void;
					public getBufferedPosition(): number;
					public getAudioComponent(): androidx.media2.exoplayer.external.Player.AudioComponent;
					public getCurrentManifest(): any;
					public getContentDuration(): number;
				}
				export module ExoPlayer {
					export class Builder extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.ExoPlayer.Builder>;
						public build(): androidx.media2.exoplayer.external.ExoPlayer;
						public setBandwidthMeter(bandwidthMeter: androidx.media2.exoplayer.external.upstream.BandwidthMeter): androidx.media2.exoplayer.external.ExoPlayer.Builder;
						public setUseLazyPreparation(useLazyPreparation: boolean): androidx.media2.exoplayer.external.ExoPlayer.Builder;
						public constructor(renderers: native.Array<androidx.media2.exoplayer.external.Renderer>, trackSelector: androidx.media2.exoplayer.external.trackselection.TrackSelector, loadControl: androidx.media2.exoplayer.external.LoadControl, bandwidthMeter: androidx.media2.exoplayer.external.upstream.BandwidthMeter, looper: globalAndroid.os.Looper, analyticsCollector: androidx.media2.exoplayer.external.analytics.AnalyticsCollector, useLazyPreparation: boolean, clock: androidx.media2.exoplayer.external.util.Clock);
						public setLooper(looper: globalAndroid.os.Looper): androidx.media2.exoplayer.external.ExoPlayer.Builder;
						public setClock(clock: androidx.media2.exoplayer.external.util.Clock): androidx.media2.exoplayer.external.ExoPlayer.Builder;
						public setLoadControl(loadControl: androidx.media2.exoplayer.external.LoadControl): androidx.media2.exoplayer.external.ExoPlayer.Builder;
						public setAnalyticsCollector(analyticsCollector: androidx.media2.exoplayer.external.analytics.AnalyticsCollector): androidx.media2.exoplayer.external.ExoPlayer.Builder;
						public constructor(context: globalAndroid.content.Context, renderers: native.Array<androidx.media2.exoplayer.external.Renderer>);
						public setTrackSelector(trackSelector: androidx.media2.exoplayer.external.trackselection.TrackSelector): androidx.media2.exoplayer.external.ExoPlayer.Builder;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export class ExoPlayerFactory extends java.lang.Object {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.ExoPlayerFactory>;
					/** @deprecated */
					public static newSimpleInstance(context: globalAndroid.content.Context, trackSelector: androidx.media2.exoplayer.external.trackselection.TrackSelector, loadControl: androidx.media2.exoplayer.external.LoadControl, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>, extensionRendererMode: number, allowedVideoJoiningTimeMs: number): androidx.media2.exoplayer.external.SimpleExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(context: globalAndroid.content.Context): androidx.media2.exoplayer.external.SimpleExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(context: globalAndroid.content.Context, trackSelector: androidx.media2.exoplayer.external.trackselection.TrackSelector, loadControl: androidx.media2.exoplayer.external.LoadControl): androidx.media2.exoplayer.external.SimpleExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(context: globalAndroid.content.Context, renderersFactory: androidx.media2.exoplayer.external.RenderersFactory, trackSelector: androidx.media2.exoplayer.external.trackselection.TrackSelector, loadControl: androidx.media2.exoplayer.external.LoadControl, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>, bandwidthMeter: androidx.media2.exoplayer.external.upstream.BandwidthMeter): androidx.media2.exoplayer.external.SimpleExoPlayer;
					/** @deprecated */
					public static newInstance(context: globalAndroid.content.Context, renderers: native.Array<androidx.media2.exoplayer.external.Renderer>, trackSelector: androidx.media2.exoplayer.external.trackselection.TrackSelector, loadControl: androidx.media2.exoplayer.external.LoadControl, bandwidthMeter: androidx.media2.exoplayer.external.upstream.BandwidthMeter, looper: globalAndroid.os.Looper): androidx.media2.exoplayer.external.ExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(context: globalAndroid.content.Context, renderersFactory: androidx.media2.exoplayer.external.RenderersFactory, trackSelector: androidx.media2.exoplayer.external.trackselection.TrackSelector, loadControl: androidx.media2.exoplayer.external.LoadControl, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>): androidx.media2.exoplayer.external.SimpleExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(context: globalAndroid.content.Context, trackSelector: androidx.media2.exoplayer.external.trackselection.TrackSelector): androidx.media2.exoplayer.external.SimpleExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(context: globalAndroid.content.Context, renderersFactory: androidx.media2.exoplayer.external.RenderersFactory, trackSelector: androidx.media2.exoplayer.external.trackselection.TrackSelector, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>): androidx.media2.exoplayer.external.SimpleExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(context: globalAndroid.content.Context, renderersFactory: androidx.media2.exoplayer.external.RenderersFactory, trackSelector: androidx.media2.exoplayer.external.trackselection.TrackSelector): androidx.media2.exoplayer.external.SimpleExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(context: globalAndroid.content.Context, renderersFactory: androidx.media2.exoplayer.external.RenderersFactory, trackSelector: androidx.media2.exoplayer.external.trackselection.TrackSelector, loadControl: androidx.media2.exoplayer.external.LoadControl): androidx.media2.exoplayer.external.SimpleExoPlayer;
					/** @deprecated */
					public static newInstance(context: globalAndroid.content.Context, renderers: native.Array<androidx.media2.exoplayer.external.Renderer>, trackSelector: androidx.media2.exoplayer.external.trackselection.TrackSelector, loadControl: androidx.media2.exoplayer.external.LoadControl, looper: globalAndroid.os.Looper): androidx.media2.exoplayer.external.ExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(context: globalAndroid.content.Context, trackSelector: androidx.media2.exoplayer.external.trackselection.TrackSelector, loadControl: androidx.media2.exoplayer.external.LoadControl, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>, extensionRendererMode: number): androidx.media2.exoplayer.external.SimpleExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(context: globalAndroid.content.Context, renderersFactory: androidx.media2.exoplayer.external.RenderersFactory, trackSelector: androidx.media2.exoplayer.external.trackselection.TrackSelector, loadControl: androidx.media2.exoplayer.external.LoadControl, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>, analyticsCollector: androidx.media2.exoplayer.external.analytics.AnalyticsCollector, looper: globalAndroid.os.Looper): androidx.media2.exoplayer.external.SimpleExoPlayer;
					/** @deprecated */
					public static newInstance(context: globalAndroid.content.Context, renderers: native.Array<androidx.media2.exoplayer.external.Renderer>, trackSelector: androidx.media2.exoplayer.external.trackselection.TrackSelector): androidx.media2.exoplayer.external.ExoPlayer;
					/** @deprecated */
					public static newInstance(context: globalAndroid.content.Context, renderers: native.Array<androidx.media2.exoplayer.external.Renderer>, trackSelector: androidx.media2.exoplayer.external.trackselection.TrackSelector, loadControl: androidx.media2.exoplayer.external.LoadControl): androidx.media2.exoplayer.external.ExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(context: globalAndroid.content.Context, renderersFactory: androidx.media2.exoplayer.external.RenderersFactory, trackSelector: androidx.media2.exoplayer.external.trackselection.TrackSelector, loadControl: androidx.media2.exoplayer.external.LoadControl, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>, bandwidthMeter: androidx.media2.exoplayer.external.upstream.BandwidthMeter, analyticsCollector: androidx.media2.exoplayer.external.analytics.AnalyticsCollector, looper: globalAndroid.os.Looper): androidx.media2.exoplayer.external.SimpleExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(context: globalAndroid.content.Context, renderersFactory: androidx.media2.exoplayer.external.RenderersFactory, trackSelector: androidx.media2.exoplayer.external.trackselection.TrackSelector, loadControl: androidx.media2.exoplayer.external.LoadControl, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>, looper: globalAndroid.os.Looper): androidx.media2.exoplayer.external.SimpleExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(context: globalAndroid.content.Context, trackSelector: androidx.media2.exoplayer.external.trackselection.TrackSelector, loadControl: androidx.media2.exoplayer.external.LoadControl, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>): androidx.media2.exoplayer.external.SimpleExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(context: globalAndroid.content.Context, renderersFactory: androidx.media2.exoplayer.external.RenderersFactory, trackSelector: androidx.media2.exoplayer.external.trackselection.TrackSelector, loadControl: androidx.media2.exoplayer.external.LoadControl, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>, analyticsCollector: androidx.media2.exoplayer.external.analytics.AnalyticsCollector): androidx.media2.exoplayer.external.SimpleExoPlayer;
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export class ExoPlayerImpl extends androidx.media2.exoplayer.external.BasePlayer implements androidx.media2.exoplayer.external.ExoPlayer {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.ExoPlayerImpl>;
					public stop(reset: boolean): void;
					public removeListener(listener: androidx.media2.exoplayer.external.Player.EventListener): void;
					public getPlayWhenReady(): boolean;
					public setShuffleModeEnabled(shuffleModeEnabled: boolean): void;
					public getRendererCount(): number;
					public isCurrentWindowDynamic(): boolean;
					public addListener(listener: androidx.media2.exoplayer.external.Player.EventListener): void;
					public getVideoComponent(): androidx.media2.exoplayer.external.Player.VideoComponent;
					public hasNext(): boolean;
					public createMessage(target: androidx.media2.exoplayer.external.PlayerMessage.Target): androidx.media2.exoplayer.external.PlayerMessage;
					public getPlaybackError(): androidx.media2.exoplayer.external.ExoPlaybackException;
					public getContentPosition(): number;
					public constructor();
					public setRepeatMode(repeatMode: number): void;
					public getCurrentAdGroupIndex(): number;
					public getCurrentPeriodIndex(): number;
					public getCurrentTrackGroups(): androidx.media2.exoplayer.external.source.TrackGroupArray;
					public next(): void;
					public getShuffleModeEnabled(): boolean;
					public getCurrentWindowIndex(): number;
					public previous(): void;
					public getRendererType(index: number): number;
					public seekToDefaultPosition(windowIndex: number): void;
					public getSeekParameters(): androidx.media2.exoplayer.external.SeekParameters;
					public release(): void;
					public getCurrentAdIndexInAdGroup(): number;
					public constructor(renderers: native.Array<androidx.media2.exoplayer.external.Renderer>, trackSelector: androidx.media2.exoplayer.external.trackselection.TrackSelector, loadControl: androidx.media2.exoplayer.external.LoadControl, bandwidthMeter: androidx.media2.exoplayer.external.upstream.BandwidthMeter, clock: androidx.media2.exoplayer.external.util.Clock, looper: globalAndroid.os.Looper);
					public getPreviousWindowIndex(): number;
					public isCurrentWindowSeekable(): boolean;
					public getContentBufferedPosition(): number;
					public getCurrentTimeline(): androidx.media2.exoplayer.external.Timeline;
					public setPlayWhenReady(playWhenReady: boolean, suppressPlayback: boolean): void;
					public stop(): void;
					public getPlaybackState(): number;
					public isLoading(): boolean;
					public getRepeatMode(): number;
					public setPlaybackParameters(playbackParameters: androidx.media2.exoplayer.external.PlaybackParameters): void;
					public getPlaybackLooper(): globalAndroid.os.Looper;
					public getTextComponent(): androidx.media2.exoplayer.external.Player.TextComponent;
					public getApplicationLooper(): globalAndroid.os.Looper;
					public getDuration(): number;
					public hasPrevious(): boolean;
					public setForegroundMode(foregroundMode: boolean): void;
					public getCurrentPosition(): number;
					public getCurrentTrackSelections(): androidx.media2.exoplayer.external.trackselection.TrackSelectionArray;
					public prepare(mediaSource: androidx.media2.exoplayer.external.source.MediaSource, resetPosition: boolean, resetState: boolean): void;
					public retry(): void;
					public getMetadataComponent(): androidx.media2.exoplayer.external.Player.MetadataComponent;
					public seekTo(windowIndex: number, positionMs: number): void;
					public getNextWindowIndex(): number;
					public setPlayWhenReady(playWhenReady: boolean): void;
					public prepare(mediaSource: androidx.media2.exoplayer.external.source.MediaSource): void;
					public getTotalBufferedDuration(): number;
					public getCurrentTag(): any;
					public getPlaybackParameters(): androidx.media2.exoplayer.external.PlaybackParameters;
					public isPlayingAd(): boolean;
					public getBufferedPercentage(): number;
					public seekToDefaultPosition(): void;
					public getBufferedPosition(): number;
					public seekTo(positionMs: number): void;
					public setSeekParameters(seekParameters: androidx.media2.exoplayer.external.SeekParameters): void;
					public getAudioComponent(): androidx.media2.exoplayer.external.Player.AudioComponent;
					public getCurrentManifest(): any;
					public getContentDuration(): number;
				}
				export module ExoPlayerImpl {
					export class PlaybackInfoUpdate extends java.lang.Object implements java.lang.Runnable {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.ExoPlayerImpl.PlaybackInfoUpdate>;
						public constructor(playbackInfo: androidx.media2.exoplayer.external.PlaybackInfo, previousPlaybackInfo: androidx.media2.exoplayer.external.PlaybackInfo, listeners: java.util.concurrent.CopyOnWriteArrayList<androidx.media2.exoplayer.external.BasePlayer.ListenerHolder>, trackSelector: androidx.media2.exoplayer.external.trackselection.TrackSelector, positionDiscontinuity: boolean, positionDiscontinuityReason: number, timelineChangeReason: number, seekProcessed: boolean, playWhenReady: boolean);
						public run(): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export class ExoPlayerImplInternal extends java.lang.Object implements globalAndroid.os.Handler.Callback, androidx.media2.exoplayer.external.source.MediaPeriod.Callback, androidx.media2.exoplayer.external.trackselection.TrackSelector.InvalidationListener, androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller, androidx.media2.exoplayer.external.DefaultMediaClock.PlaybackParameterListener, androidx.media2.exoplayer.external.PlayerMessage.Sender {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.ExoPlayerImplInternal>;
					public static MSG_PLAYBACK_INFO_CHANGED: number;
					public static MSG_PLAYBACK_PARAMETERS_CHANGED: number;
					public stop(reset: boolean): void;
					public setShuffleModeEnabled(shuffleModeEnabled: boolean): void;
					public onTrackSelectionsInvalidated(): void;
					public setPlaybackParameters(playbackParameters: androidx.media2.exoplayer.external.PlaybackParameters): void;
					public getPlaybackLooper(): globalAndroid.os.Looper;
					public constructor(renderers: native.Array<androidx.media2.exoplayer.external.Renderer>, trackSelector: androidx.media2.exoplayer.external.trackselection.TrackSelector, emptyTrackSelectorResult: androidx.media2.exoplayer.external.trackselection.TrackSelectorResult, loadControl: androidx.media2.exoplayer.external.LoadControl, bandwidthMeter: androidx.media2.exoplayer.external.upstream.BandwidthMeter, playWhenReady: boolean, repeatMode: number, shuffleModeEnabled: boolean, eventHandler: globalAndroid.os.Handler, clock: androidx.media2.exoplayer.external.util.Clock);
					public setPlayWhenReady(playWhenReady: boolean): void;
					public onPlaybackParametersChanged(playbackParameters: androidx.media2.exoplayer.external.PlaybackParameters): void;
					public release(): void;
					public seekTo(timeline: androidx.media2.exoplayer.external.Timeline, windowIndex: number, positionUs: number): void;
					public onContinueLoadingRequested(source: androidx.media2.exoplayer.external.source.MediaPeriod): void;
					public onContinueLoadingRequested(sequenceableLoader0: any): void;
					public onSourceInfoRefreshed(source: androidx.media2.exoplayer.external.source.MediaSource, timeline: androidx.media2.exoplayer.external.Timeline): void;
					public handleMessage(msg: globalAndroid.os.Message): boolean;
					public setRepeatMode(repeatMode: number): void;
					public setForegroundMode(foregroundMode: boolean): void;
					public prepare(mediaSource: androidx.media2.exoplayer.external.source.MediaSource, resetPosition: boolean, resetState: boolean): void;
					public setSeekParameters(seekParameters: androidx.media2.exoplayer.external.SeekParameters): void;
					public sendMessage(message: androidx.media2.exoplayer.external.PlayerMessage): void;
					public onPrepared(source: androidx.media2.exoplayer.external.source.MediaPeriod): void;
				}
				export module ExoPlayerImplInternal {
					export class MediaSourceRefreshInfo extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.ExoPlayerImplInternal.MediaSourceRefreshInfo>;
						public source: androidx.media2.exoplayer.external.source.MediaSource;
						public timeline: androidx.media2.exoplayer.external.Timeline;
						public constructor(source: androidx.media2.exoplayer.external.source.MediaSource, timeline: androidx.media2.exoplayer.external.Timeline);
					}
					export class PendingMessageInfo extends java.lang.Comparable<androidx.media2.exoplayer.external.ExoPlayerImplInternal.PendingMessageInfo> {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.ExoPlayerImplInternal.PendingMessageInfo>;
						public message: androidx.media2.exoplayer.external.PlayerMessage;
						public resolvedPeriodIndex: number;
						public resolvedPeriodTimeUs: number;
						public resolvedPeriodUid: any;
						public constructor(message: androidx.media2.exoplayer.external.PlayerMessage);
						public compareTo(other: androidx.media2.exoplayer.external.ExoPlayerImplInternal.PendingMessageInfo): number;
						public setResolvedPosition(periodIndex: number, periodTimeUs: number, periodUid: any): void;
					}
					export class PlaybackInfoUpdate extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.ExoPlayerImplInternal.PlaybackInfoUpdate>;
						public hasPendingUpdate(playbackInfo: androidx.media2.exoplayer.external.PlaybackInfo): boolean;
						public reset(playbackInfo: androidx.media2.exoplayer.external.PlaybackInfo): void;
						public incrementPendingOperationAcks(operationAcks: number): void;
						public setPositionDiscontinuity(discontinuityReason: number): void;
					}
					export class SeekPosition extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.ExoPlayerImplInternal.SeekPosition>;
						public timeline: androidx.media2.exoplayer.external.Timeline;
						public windowIndex: number;
						public windowPositionUs: number;
						public constructor(timeline: androidx.media2.exoplayer.external.Timeline, windowIndex: number, windowPositionUs: number);
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export class ExoPlayerLibraryInfo extends java.lang.Object {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.ExoPlayerLibraryInfo>;
					public static TAG: string;
					public static VERSION: string;
					public static VERSION_SLASHY: string;
					public static VERSION_INT: number;
					public static ASSERTIONS_ENABLED: boolean;
					public static GL_ASSERTIONS_ENABLED: boolean;
					public static TRACE_ENABLED: boolean;
					public static registeredModules(): string;
					public static registerModule(name: string): void;
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export class Format extends java.lang.Object implements globalAndroid.os.Parcelable {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.Format>;
					public static NO_VALUE: number;
					public static OFFSET_SAMPLE_RELATIVE: number;
					public id: string;
					public label: string;
					public selectionFlags: number;
					public roleFlags: number;
					public bitrate: number;
					public codecs: string;
					public metadata: androidx.media2.exoplayer.external.metadata.Metadata;
					public containerMimeType: string;
					public sampleMimeType: string;
					public maxInputSize: number;
					public initializationData: java.util.List<native.Array<number>>;
					public drmInitData: androidx.media2.exoplayer.external.drm.DrmInitData;
					public subsampleOffsetUs: number;
					public width: number;
					public height: number;
					public frameRate: number;
					public rotationDegrees: number;
					public pixelWidthHeightRatio: number;
					public stereoMode: number;
					public projectionData: native.Array<number>;
					public colorInfo: androidx.media2.exoplayer.external.video.ColorInfo;
					public channelCount: number;
					public sampleRate: number;
					public pcmEncoding: number;
					public encoderDelay: number;
					public encoderPadding: number;
					public language: string;
					public accessibilityChannel: number;
					public exoMediaCryptoType: java.lang.Class<any>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.Format>;
					public static createTextSampleFormat(id: string, sampleMimeType: string, selectionFlags: number, language: string): androidx.media2.exoplayer.external.Format;
					public copyWithContainerInfo(id: string, label: string, sampleMimeType: string, codecs: string, metadata: androidx.media2.exoplayer.external.metadata.Metadata, bitrate: number, width: number, height: number, channelCount: number, selectionFlags: number, language: string): androidx.media2.exoplayer.external.Format;
					public copyWithFrameRate(frameRate: number): androidx.media2.exoplayer.external.Format;
					public equals(obj: any): boolean;
					public static createTextSampleFormat(id: string, sampleMimeType: string, codecs: string, bitrate: number, selectionFlags: number, language: string, accessibilityChannel: number, drmInitData: androidx.media2.exoplayer.external.drm.DrmInitData, subsampleOffsetUs: number, initializationData: java.util.List<native.Array<number>>): androidx.media2.exoplayer.external.Format;
					public static createSampleFormat(id: string, sampleMimeType: string, subsampleOffsetUs: number): androidx.media2.exoplayer.external.Format;
					public static createVideoSampleFormat(id: string, sampleMimeType: string, codecs: string, bitrate: number, maxInputSize: number, width: number, height: number, frameRate: number, initializationData: java.util.List<native.Array<number>>, rotationDegrees: number, pixelWidthHeightRatio: number, drmInitData: androidx.media2.exoplayer.external.drm.DrmInitData): androidx.media2.exoplayer.external.Format;
					public copyWithDrmInitData(drmInitData: androidx.media2.exoplayer.external.drm.DrmInitData): androidx.media2.exoplayer.external.Format;
					/** @deprecated */
					public static createAudioContainerFormat(id: string, containerMimeType: string, sampleMimeType: string, codecs: string, bitrate: number, channelCount: number, sampleRate: number, initializationData: java.util.List<native.Array<number>>, selectionFlags: number, language: string): androidx.media2.exoplayer.external.Format;
					public copyWithGaplessInfo(encoderDelay: number, encoderPadding: number): androidx.media2.exoplayer.external.Format;
					/** @deprecated */
					public static createVideoContainerFormat(id: string, containerMimeType: string, sampleMimeType: string, codecs: string, bitrate: number, width: number, height: number, frameRate: number, initializationData: java.util.List<native.Array<number>>, selectionFlags: number): androidx.media2.exoplayer.external.Format;
					public static createImageSampleFormat(id: string, sampleMimeType: string, codecs: string, bitrate: number, selectionFlags: number, initializationData: java.util.List<native.Array<number>>, language: string, drmInitData: androidx.media2.exoplayer.external.drm.DrmInitData): androidx.media2.exoplayer.external.Format;
					public copyWithMaxInputSize(maxInputSize: number): androidx.media2.exoplayer.external.Format;
					public toString(): string;
					public copyWithSubsampleOffsetUs(subsampleOffsetUs: number): androidx.media2.exoplayer.external.Format;
					public copyWithMetadata(metadata: androidx.media2.exoplayer.external.metadata.Metadata): androidx.media2.exoplayer.external.Format;
					public static createSampleFormat(id: string, sampleMimeType: string, codecs: string, bitrate: number, drmInitData: androidx.media2.exoplayer.external.drm.DrmInitData): androidx.media2.exoplayer.external.Format;
					public copyWithExoMediaCryptoType(exoMediaCryptoType: java.lang.Class<any>): androidx.media2.exoplayer.external.Format;
					public static createAudioSampleFormat(id: string, sampleMimeType: string, codecs: string, bitrate: number, maxInputSize: number, channelCount: number, sampleRate: number, pcmEncoding: number, encoderDelay: number, encoderPadding: number, initializationData: java.util.List<native.Array<number>>, drmInitData: androidx.media2.exoplayer.external.drm.DrmInitData, selectionFlags: number, language: string, metadata: androidx.media2.exoplayer.external.metadata.Metadata): androidx.media2.exoplayer.external.Format;
					public hashCode(): number;
					public static createTextSampleFormat(id: string, sampleMimeType: string, selectionFlags: number, language: string, drmInitData: androidx.media2.exoplayer.external.drm.DrmInitData): androidx.media2.exoplayer.external.Format;
					public static createAudioSampleFormat(id: string, sampleMimeType: string, codecs: string, bitrate: number, maxInputSize: number, channelCount: number, sampleRate: number, pcmEncoding: number, initializationData: java.util.List<native.Array<number>>, drmInitData: androidx.media2.exoplayer.external.drm.DrmInitData, selectionFlags: number, language: string): androidx.media2.exoplayer.external.Format;
					public copyWithVideoSize(width: number, height: number): androidx.media2.exoplayer.external.Format;
					public static createTextSampleFormat(id: string, sampleMimeType: string, codecs: string, bitrate: number, selectionFlags: number, language: string, accessibilityChannel: number, drmInitData: androidx.media2.exoplayer.external.drm.DrmInitData): androidx.media2.exoplayer.external.Format;
					public static createTextSampleFormat(id: string, sampleMimeType: string, codecs: string, bitrate: number, selectionFlags: number, language: string, drmInitData: androidx.media2.exoplayer.external.drm.DrmInitData, subsampleOffsetUs: number): androidx.media2.exoplayer.external.Format;
					public copyWithManifestFormatInfo(manifestFormat: androidx.media2.exoplayer.external.Format): androidx.media2.exoplayer.external.Format;
					public static toLogString(format: androidx.media2.exoplayer.external.Format): string;
					public static createContainerFormat(id: string, label: string, containerMimeType: string, sampleMimeType: string, codecs: string, bitrate: number, selectionFlags: number, roleFlags: number, language: string): androidx.media2.exoplayer.external.Format;
					public copyWithAdjustments(drmInitData: androidx.media2.exoplayer.external.drm.DrmInitData, metadata: androidx.media2.exoplayer.external.metadata.Metadata): androidx.media2.exoplayer.external.Format;
					public describeContents(): number;
					public static createAudioContainerFormat(id: string, label: string, containerMimeType: string, sampleMimeType: string, codecs: string, metadata: androidx.media2.exoplayer.external.metadata.Metadata, bitrate: number, channelCount: number, sampleRate: number, initializationData: java.util.List<native.Array<number>>, selectionFlags: number, roleFlags: number, language: string): androidx.media2.exoplayer.external.Format;
					public static createVideoSampleFormat(id: string, sampleMimeType: string, codecs: string, bitrate: number, maxInputSize: number, width: number, height: number, frameRate: number, initializationData: java.util.List<native.Array<number>>, rotationDegrees: number, pixelWidthHeightRatio: number, projectionData: native.Array<number>, stereoMode: number, colorInfo: androidx.media2.exoplayer.external.video.ColorInfo, drmInitData: androidx.media2.exoplayer.external.drm.DrmInitData): androidx.media2.exoplayer.external.Format;
					public static createTextContainerFormat(id: string, label: string, containerMimeType: string, sampleMimeType: string, codecs: string, bitrate: number, selectionFlags: number, roleFlags: number, language: string): androidx.media2.exoplayer.external.Format;
					public copyWithBitrate(bitrate: number): androidx.media2.exoplayer.external.Format;
					public static createVideoContainerFormat(id: string, label: string, containerMimeType: string, sampleMimeType: string, codecs: string, metadata: androidx.media2.exoplayer.external.metadata.Metadata, bitrate: number, width: number, height: number, frameRate: number, initializationData: java.util.List<native.Array<number>>, selectionFlags: number, roleFlags: number): androidx.media2.exoplayer.external.Format;
					/** @deprecated */
					public static createContainerFormat(id: string, containerMimeType: string, sampleMimeType: string, codecs: string, bitrate: number, selectionFlags: number, language: string): androidx.media2.exoplayer.external.Format;
					public copyWithRotationDegrees(rotationDegrees: number): androidx.media2.exoplayer.external.Format;
					public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
					public initializationDataEquals(other: androidx.media2.exoplayer.external.Format): boolean;
					public static createTextContainerFormat(id: string, label: string, containerMimeType: string, sampleMimeType: string, codecs: string, bitrate: number, selectionFlags: number, roleFlags: number, language: string, accessibilityChannel: number): androidx.media2.exoplayer.external.Format;
					public static createVideoSampleFormat(id: string, sampleMimeType: string, codecs: string, bitrate: number, maxInputSize: number, width: number, height: number, frameRate: number, initializationData: java.util.List<native.Array<number>>, drmInitData: androidx.media2.exoplayer.external.drm.DrmInitData): androidx.media2.exoplayer.external.Format;
					public static createAudioSampleFormat(id: string, sampleMimeType: string, codecs: string, bitrate: number, maxInputSize: number, channelCount: number, sampleRate: number, initializationData: java.util.List<native.Array<number>>, drmInitData: androidx.media2.exoplayer.external.drm.DrmInitData, selectionFlags: number, language: string): androidx.media2.exoplayer.external.Format;
					public getPixelCount(): number;
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export class FormatHolder extends java.lang.Object {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.FormatHolder>;
					public includesDrmSession: boolean;
					public drmSession: androidx.media2.exoplayer.external.drm.DrmSession<any>;
					public format: androidx.media2.exoplayer.external.Format;
					public constructor();
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export class IllegalSeekPositionException extends java.lang.IllegalStateException {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.IllegalSeekPositionException>;
					public timeline: androidx.media2.exoplayer.external.Timeline;
					public windowIndex: number;
					public positionMs: number;
					public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
					public constructor(timeline: androidx.media2.exoplayer.external.Timeline, windowIndex: number, positionMs: number);
					public constructor();
					public constructor(s: string);
					public constructor(cause: java.lang.Throwable);
					public constructor(message: string, cause: java.lang.Throwable);
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export class LoadControl extends java.lang.Object {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.LoadControl>;
					/**
					 * Constructs a new instance of the androidx.media2.exoplayer.external.LoadControl interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onPrepared(): void;
						onTracksSelected(renderers0: native.Array<androidx.media2.exoplayer.external.Renderer>, trackGroupArray1: androidx.media2.exoplayer.external.source.TrackGroupArray, trackSelectionArray2: androidx.media2.exoplayer.external.trackselection.TrackSelectionArray): void;
						onStopped(): void;
						onReleased(): void;
						getAllocator(): androidx.media2.exoplayer.external.upstream.Allocator;
						getBackBufferDurationUs(): number;
						retainBackBufferFromKeyframe(): boolean;
						shouldContinueLoading(long0: number, float1: number): boolean;
						shouldStartPlayback(long0: number, float1: number, boolean2: boolean): boolean;
					});
					public constructor();
					public onTracksSelected(renderers0: native.Array<androidx.media2.exoplayer.external.Renderer>, trackGroupArray1: androidx.media2.exoplayer.external.source.TrackGroupArray, trackSelectionArray2: androidx.media2.exoplayer.external.trackselection.TrackSelectionArray): void;
					public onPrepared(): void;
					public onStopped(): void;
					public getBackBufferDurationUs(): number;
					public getAllocator(): androidx.media2.exoplayer.external.upstream.Allocator;
					public retainBackBufferFromKeyframe(): boolean;
					public shouldContinueLoading(long0: number, float1: number): boolean;
					public shouldStartPlayback(long0: number, float1: number, boolean2: boolean): boolean;
					public onReleased(): void;
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export class MediaPeriodHolder extends java.lang.Object {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.MediaPeriodHolder>;
					public mediaPeriod: androidx.media2.exoplayer.external.source.MediaPeriod;
					public uid: any;
					public sampleStreams: native.Array<androidx.media2.exoplayer.external.source.SampleStream>;
					public prepared: boolean;
					public hasEnabledTracks: boolean;
					public info: androidx.media2.exoplayer.external.MediaPeriodInfo;
					public continueLoading(rendererPositionUs: number): void;
					public getTrackGroups(): androidx.media2.exoplayer.external.source.TrackGroupArray;
					public setNext(nextMediaPeriodHolder: androidx.media2.exoplayer.external.MediaPeriodHolder): void;
					public getTrackSelectorResult(): androidx.media2.exoplayer.external.trackselection.TrackSelectorResult;
					public getStartPositionRendererTime(): number;
					public toRendererTime(periodTimeUs: number): number;
					public getBufferedPositionUs(): number;
					public selectTracks(playbackSpeed: number, timeline: androidx.media2.exoplayer.external.Timeline): androidx.media2.exoplayer.external.trackselection.TrackSelectorResult;
					public handlePrepared(playbackSpeed: number, timeline: androidx.media2.exoplayer.external.Timeline): void;
					public applyTrackSelection(trackSelectorResult: androidx.media2.exoplayer.external.trackselection.TrackSelectorResult, positionUs: number, forceRecreateStreams: boolean): number;
					public release(): void;
					public constructor(rendererCapabilities: native.Array<androidx.media2.exoplayer.external.RendererCapabilities>, rendererPositionOffsetUs: number, trackSelector: androidx.media2.exoplayer.external.trackselection.TrackSelector, allocator: androidx.media2.exoplayer.external.upstream.Allocator, mediaSource: androidx.media2.exoplayer.external.source.MediaSource, info: androidx.media2.exoplayer.external.MediaPeriodInfo, emptyTrackSelectorResult: androidx.media2.exoplayer.external.trackselection.TrackSelectorResult);
					public getNext(): androidx.media2.exoplayer.external.MediaPeriodHolder;
					public getRendererOffset(): number;
					public isFullyBuffered(): boolean;
					public applyTrackSelection(newTrackSelectorResult: androidx.media2.exoplayer.external.trackselection.TrackSelectorResult, positionUs: number, forceRecreateStreams: boolean, streamResetFlags: native.Array<boolean>): number;
					public getNextLoadPositionUs(): number;
					public reevaluateBuffer(rendererPositionUs: number): void;
					public toPeriodTime(rendererTimeUs: number): number;
					public setRendererOffset(rendererPositionOffsetUs: number): void;
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export class MediaPeriodInfo extends java.lang.Object {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.MediaPeriodInfo>;
					public id: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId;
					public startPositionUs: number;
					public contentPositionUs: number;
					public endPositionUs: number;
					public durationUs: number;
					public isLastInTimelinePeriod: boolean;
					public isFinal: boolean;
					public copyWithContentPositionUs(contentPositionUs: number): androidx.media2.exoplayer.external.MediaPeriodInfo;
					public equals(obj: any): boolean;
					public equals(o: any): boolean;
					public hashCode(): number;
					public copyWithStartPositionUs(startPositionUs: number): androidx.media2.exoplayer.external.MediaPeriodInfo;
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export class MediaPeriodQueue extends java.lang.Object {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.MediaPeriodQueue>;
					public clear(keepFrontPeriodUid: boolean): void;
					public shouldLoadNextMediaPeriod(): boolean;
					public updateRepeatMode(repeatMode: number): boolean;
					public enqueueNextMediaPeriodHolder(rendererCapabilities: native.Array<androidx.media2.exoplayer.external.RendererCapabilities>, trackSelector: androidx.media2.exoplayer.external.trackselection.TrackSelector, allocator: androidx.media2.exoplayer.external.upstream.Allocator, mediaSource: androidx.media2.exoplayer.external.source.MediaSource, info: androidx.media2.exoplayer.external.MediaPeriodInfo, emptyTrackSelectorResult: androidx.media2.exoplayer.external.trackselection.TrackSelectorResult): androidx.media2.exoplayer.external.MediaPeriodHolder;
					public advancePlayingPeriod(): androidx.media2.exoplayer.external.MediaPeriodHolder;
					public updateQueuedPeriods(rendererPositionUs: number, maxRendererReadPositionUs: number): boolean;
					public getNextMediaPeriodInfo(rendererPositionUs: number, playbackInfo: androidx.media2.exoplayer.external.PlaybackInfo): androidx.media2.exoplayer.external.MediaPeriodInfo;
					public getLoadingPeriod(): androidx.media2.exoplayer.external.MediaPeriodHolder;
					public getUpdatedMediaPeriodInfo(info: androidx.media2.exoplayer.external.MediaPeriodInfo): androidx.media2.exoplayer.external.MediaPeriodInfo;
					public getPlayingPeriod(): androidx.media2.exoplayer.external.MediaPeriodHolder;
					public constructor();
					public setTimeline(timeline: androidx.media2.exoplayer.external.Timeline): void;
					public resolveMediaPeriodIdForAds(periodUid: any, positionUs: number): androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId;
					public updateShuffleModeEnabled(shuffleModeEnabled: boolean): boolean;
					public isLoading(mediaPeriod: androidx.media2.exoplayer.external.source.MediaPeriod): boolean;
					public reevaluateBuffer(rendererPositionUs: number): void;
					public getReadingPeriod(): androidx.media2.exoplayer.external.MediaPeriodHolder;
					public removeAfter(mediaPeriodHolder: androidx.media2.exoplayer.external.MediaPeriodHolder): boolean;
					public advanceReadingPeriod(): androidx.media2.exoplayer.external.MediaPeriodHolder;
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export abstract class NoSampleRenderer extends java.lang.Object implements androidx.media2.exoplayer.external.Renderer, androidx.media2.exoplayer.external.RendererCapabilities {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.NoSampleRenderer>;
					public isReady(): boolean;
					public handleMessage(what: number, object: any): void;
					public onStopped(): void;
					public getCapabilities(): androidx.media2.exoplayer.external.RendererCapabilities;
					public start(): void;
					public onPositionReset(positionUs: number, joining: boolean): void;
					public onReset(): void;
					public setOperatingRate(float0: number): void;
					public supportsFormat(format: androidx.media2.exoplayer.external.Format): number;
					public onDisabled(): void;
					public disable(): void;
					public onEnabled(joining: boolean): void;
					public constructor();
					public replaceStream(formats: native.Array<androidx.media2.exoplayer.external.Format>, stream: androidx.media2.exoplayer.external.source.SampleStream, offsetUs: number): void;
					public getConfiguration(): androidx.media2.exoplayer.external.RendererConfiguration;
					public enable(configuration: androidx.media2.exoplayer.external.RendererConfiguration, formats: native.Array<androidx.media2.exoplayer.external.Format>, stream: androidx.media2.exoplayer.external.source.SampleStream, positionUs: number, joining: boolean, offsetUs: number): void;
					public getStream(): androidx.media2.exoplayer.external.source.SampleStream;
					public getReadingPositionUs(): number;
					public getTrackType(): number;
					public getIndex(): number;
					public getMediaClock(): androidx.media2.exoplayer.external.util.MediaClock;
					public setCurrentStreamFinal(): void;
					public reset(): void;
					public render(long0: number, long1: number): void;
					public hasReadStreamToEnd(): boolean;
					public maybeThrowStreamError(): void;
					public isEnded(): boolean;
					public isCurrentStreamFinal(): boolean;
					public supportsMixedMimeTypeAdaptation(): number;
					public setIndex(index: number): void;
					public resetPosition(positionUs: number): void;
					public stop(): void;
					public onRendererOffsetChanged(offsetUs: number): void;
					public onStarted(): void;
					public getState(): number;
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export class ParserException extends java.io.IOException {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.ParserException>;
					public constructor(message: string);
					public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
					public constructor();
					public constructor(cause: java.lang.Throwable);
					public constructor(message: string, cause: java.lang.Throwable);
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export class PlaybackInfo extends java.lang.Object {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.PlaybackInfo>;
					public timeline: androidx.media2.exoplayer.external.Timeline;
					public periodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId;
					public startPositionUs: number;
					public contentPositionUs: number;
					public playbackState: number;
					public playbackError: androidx.media2.exoplayer.external.ExoPlaybackException;
					public isLoading: boolean;
					public trackGroups: androidx.media2.exoplayer.external.source.TrackGroupArray;
					public trackSelectorResult: androidx.media2.exoplayer.external.trackselection.TrackSelectorResult;
					public loadingMediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId;
					public bufferedPositionUs: number;
					public totalBufferedDurationUs: number;
					public positionUs: number;
					public static createDummy(startPositionUs: number, emptyTrackSelectorResult: androidx.media2.exoplayer.external.trackselection.TrackSelectorResult): androidx.media2.exoplayer.external.PlaybackInfo;
					public copyWithNewPosition(periodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, positionUs: number, contentPositionUs: number, totalBufferedDurationUs: number): androidx.media2.exoplayer.external.PlaybackInfo;
					public getDummyFirstMediaPeriodId(shuffleModeEnabled: boolean, window: androidx.media2.exoplayer.external.Timeline.Window, period: androidx.media2.exoplayer.external.Timeline.Period): androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId;
					public copyWithPlaybackState(playbackState: number): androidx.media2.exoplayer.external.PlaybackInfo;
					public copyWithLoadingMediaPeriodId(loadingMediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): androidx.media2.exoplayer.external.PlaybackInfo;
					public copyWithPlaybackError(playbackError: androidx.media2.exoplayer.external.ExoPlaybackException): androidx.media2.exoplayer.external.PlaybackInfo;
					public copyWithTimeline(timeline: androidx.media2.exoplayer.external.Timeline): androidx.media2.exoplayer.external.PlaybackInfo;
					public constructor(timeline: androidx.media2.exoplayer.external.Timeline, periodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, startPositionUs: number, contentPositionUs: number, playbackState: number, playbackError: androidx.media2.exoplayer.external.ExoPlaybackException, isLoading: boolean, trackGroups: androidx.media2.exoplayer.external.source.TrackGroupArray, trackSelectorResult: androidx.media2.exoplayer.external.trackselection.TrackSelectorResult, loadingMediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, bufferedPositionUs: number, totalBufferedDurationUs: number, positionUs: number);
					public copyWithIsLoading(isLoading: boolean): androidx.media2.exoplayer.external.PlaybackInfo;
					public copyWithTrackInfo(trackGroups: androidx.media2.exoplayer.external.source.TrackGroupArray, trackSelectorResult: androidx.media2.exoplayer.external.trackselection.TrackSelectorResult): androidx.media2.exoplayer.external.PlaybackInfo;
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export class PlaybackParameters extends java.lang.Object {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.PlaybackParameters>;
					public static DEFAULT: androidx.media2.exoplayer.external.PlaybackParameters;
					public speed: number;
					public pitch: number;
					public skipSilence: boolean;
					public constructor(speed: number);
					public constructor(speed: number, pitch: number, skipSilence: boolean);
					public equals(obj: any): boolean;
					public getMediaTimeUsForPlayoutTimeMs(timeMs: number): number;
					public hashCode(): number;
					public constructor(speed: number, pitch: number);
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export class PlaybackPreparer extends java.lang.Object {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.PlaybackPreparer>;
					/**
					 * Constructs a new instance of the androidx.media2.exoplayer.external.PlaybackPreparer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						preparePlayback(): void;
					});
					public constructor();
					public preparePlayback(): void;
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export class Player extends java.lang.Object {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.Player>;
					/**
					 * Constructs a new instance of the androidx.media2.exoplayer.external.Player interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getAudioComponent(): androidx.media2.exoplayer.external.Player.AudioComponent;
						getVideoComponent(): androidx.media2.exoplayer.external.Player.VideoComponent;
						getTextComponent(): androidx.media2.exoplayer.external.Player.TextComponent;
						getMetadataComponent(): androidx.media2.exoplayer.external.Player.MetadataComponent;
						getApplicationLooper(): globalAndroid.os.Looper;
						addListener(eventListener0: androidx.media2.exoplayer.external.Player.EventListener): void;
						removeListener(eventListener0: androidx.media2.exoplayer.external.Player.EventListener): void;
						getPlaybackState(): number;
						getPlaybackError(): androidx.media2.exoplayer.external.ExoPlaybackException;
						setPlayWhenReady(boolean0: boolean): void;
						getPlayWhenReady(): boolean;
						setRepeatMode(int0: number): void;
						getRepeatMode(): number;
						setShuffleModeEnabled(boolean0: boolean): void;
						getShuffleModeEnabled(): boolean;
						isLoading(): boolean;
						seekToDefaultPosition(): void;
						seekToDefaultPosition(int0: number): void;
						seekTo(long0: number): void;
						seekTo(int0: number, long1: number): void;
						hasPrevious(): boolean;
						previous(): void;
						hasNext(): boolean;
						next(): void;
						setPlaybackParameters(playbackParameters0: androidx.media2.exoplayer.external.PlaybackParameters): void;
						getPlaybackParameters(): androidx.media2.exoplayer.external.PlaybackParameters;
						stop(): void;
						stop(boolean0: boolean): void;
						release(): void;
						getRendererCount(): number;
						getRendererType(int0: number): number;
						getCurrentTrackGroups(): androidx.media2.exoplayer.external.source.TrackGroupArray;
						getCurrentTrackSelections(): androidx.media2.exoplayer.external.trackselection.TrackSelectionArray;
						getCurrentManifest(): any;
						getCurrentTimeline(): androidx.media2.exoplayer.external.Timeline;
						getCurrentPeriodIndex(): number;
						getCurrentWindowIndex(): number;
						getNextWindowIndex(): number;
						getPreviousWindowIndex(): number;
						getCurrentTag(): any;
						getDuration(): number;
						getCurrentPosition(): number;
						getBufferedPosition(): number;
						getBufferedPercentage(): number;
						getTotalBufferedDuration(): number;
						isCurrentWindowDynamic(): boolean;
						isCurrentWindowSeekable(): boolean;
						isPlayingAd(): boolean;
						getCurrentAdGroupIndex(): number;
						getCurrentAdIndexInAdGroup(): number;
						getContentDuration(): number;
						getContentPosition(): number;
						getContentBufferedPosition(): number;
					});
					public constructor();
					public static DISCONTINUITY_REASON_AD_INSERTION: number;
					public static DISCONTINUITY_REASON_SEEK_ADJUSTMENT: number;
					public static REPEAT_MODE_OFF: number;
					public static STATE_READY: number;
					public static DISCONTINUITY_REASON_SEEK: number;
					public static TIMELINE_CHANGE_REASON_PREPARED: number;
					public static DISCONTINUITY_REASON_INTERNAL: number;
					public static TIMELINE_CHANGE_REASON_DYNAMIC: number;
					public static STATE_ENDED: number;
					public static REPEAT_MODE_ALL: number;
					public static STATE_IDLE: number;
					public static REPEAT_MODE_ONE: number;
					public static STATE_BUFFERING: number;
					public static TIMELINE_CHANGE_REASON_RESET: number;
					public static DISCONTINUITY_REASON_PERIOD_TRANSITION: number;
					public getPlayWhenReady(): boolean;
					public getRendererCount(): number;
					public isCurrentWindowDynamic(): boolean;
					public setShuffleModeEnabled(boolean0: boolean): void;
					public setPlayWhenReady(boolean0: boolean): void;
					public getVideoComponent(): androidx.media2.exoplayer.external.Player.VideoComponent;
					public hasNext(): boolean;
					public seekTo(long0: number): void;
					public getPlaybackError(): androidx.media2.exoplayer.external.ExoPlaybackException;
					public getContentPosition(): number;
					public stop(boolean0: boolean): void;
					public getCurrentAdGroupIndex(): number;
					public getCurrentPeriodIndex(): number;
					public next(): void;
					public getCurrentTrackGroups(): androidx.media2.exoplayer.external.source.TrackGroupArray;
					public getShuffleModeEnabled(): boolean;
					public getCurrentWindowIndex(): number;
					public previous(): void;
					public getRendererType(int0: number): number;
					public seekTo(int0: number, long1: number): void;
					public release(): void;
					public getCurrentAdIndexInAdGroup(): number;
					public getPreviousWindowIndex(): number;
					public isCurrentWindowSeekable(): boolean;
					public getContentBufferedPosition(): number;
					public getCurrentTimeline(): androidx.media2.exoplayer.external.Timeline;
					public stop(): void;
					public setRepeatMode(int0: number): void;
					public getPlaybackState(): number;
					public isLoading(): boolean;
					public getRepeatMode(): number;
					public getTextComponent(): androidx.media2.exoplayer.external.Player.TextComponent;
					public getApplicationLooper(): globalAndroid.os.Looper;
					public getDuration(): number;
					public hasPrevious(): boolean;
					public getCurrentPosition(): number;
					public removeListener(eventListener0: androidx.media2.exoplayer.external.Player.EventListener): void;
					public getCurrentTrackSelections(): androidx.media2.exoplayer.external.trackselection.TrackSelectionArray;
					public getMetadataComponent(): androidx.media2.exoplayer.external.Player.MetadataComponent;
					public getNextWindowIndex(): number;
					public getTotalBufferedDuration(): number;
					public getCurrentTag(): any;
					public seekToDefaultPosition(int0: number): void;
					public addListener(eventListener0: androidx.media2.exoplayer.external.Player.EventListener): void;
					public getPlaybackParameters(): androidx.media2.exoplayer.external.PlaybackParameters;
					public isPlayingAd(): boolean;
					public getBufferedPercentage(): number;
					public seekToDefaultPosition(): void;
					public setPlaybackParameters(playbackParameters0: androidx.media2.exoplayer.external.PlaybackParameters): void;
					public getBufferedPosition(): number;
					public getAudioComponent(): androidx.media2.exoplayer.external.Player.AudioComponent;
					public getCurrentManifest(): any;
					public getContentDuration(): number;
				}
				export module Player {
					export class AudioComponent extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.Player.AudioComponent>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.Player$AudioComponent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							addAudioListener(audioListener0: androidx.media2.exoplayer.external.audio.AudioListener): void;
							removeAudioListener(audioListener0: androidx.media2.exoplayer.external.audio.AudioListener): void;
							setAudioAttributes(audioAttributes0: androidx.media2.exoplayer.external.audio.AudioAttributes): void;
							setAudioAttributes(audioAttributes0: androidx.media2.exoplayer.external.audio.AudioAttributes, boolean1: boolean): void;
							getAudioAttributes(): androidx.media2.exoplayer.external.audio.AudioAttributes;
							getAudioSessionId(): number;
							setAuxEffectInfo(auxEffectInfo0: androidx.media2.exoplayer.external.audio.AuxEffectInfo): void;
							clearAuxEffectInfo(): void;
							setVolume(float0: number): void;
							getVolume(): number;
						});
						public constructor();
						public setAudioAttributes(audioAttributes0: androidx.media2.exoplayer.external.audio.AudioAttributes, boolean1: boolean): void;
						public removeAudioListener(audioListener0: androidx.media2.exoplayer.external.audio.AudioListener): void;
						/** @deprecated */
						public setAudioAttributes(audioAttributes0: androidx.media2.exoplayer.external.audio.AudioAttributes): void;
						public getAudioAttributes(): androidx.media2.exoplayer.external.audio.AudioAttributes;
						public clearAuxEffectInfo(): void;
						public addAudioListener(audioListener0: androidx.media2.exoplayer.external.audio.AudioListener): void;
						public getVolume(): number;
						public setAuxEffectInfo(auxEffectInfo0: androidx.media2.exoplayer.external.audio.AuxEffectInfo): void;
						public getAudioSessionId(): number;
						public setVolume(float0: number): void;
					}
					export abstract class DefaultEventListener extends java.lang.Object implements androidx.media2.exoplayer.external.Player.EventListener {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.Player.DefaultEventListener>;
						public constructor();
						public onSeekProcessed(): void;
						public onShuffleModeEnabledChanged(boolean0: boolean): void;
						public onLoadingChanged(boolean0: boolean): void;
						public onTracksChanged(trackGroupArray0: androidx.media2.exoplayer.external.source.TrackGroupArray, trackSelectionArray1: androidx.media2.exoplayer.external.trackselection.TrackSelectionArray): void;
						/** @deprecated */
						public onTimelineChanged(timeline: androidx.media2.exoplayer.external.Timeline, manifest: any): void;
						public onPlayerStateChanged(boolean0: boolean, int1: number): void;
						public onRepeatModeChanged(int0: number): void;
						public onPlaybackParametersChanged(playbackParameters0: androidx.media2.exoplayer.external.PlaybackParameters): void;
						public onTimelineChanged(timeline: androidx.media2.exoplayer.external.Timeline, manifest: any, reason: number): void;
						public onPositionDiscontinuity(int0: number): void;
						public onTimelineChanged(timeline: androidx.media2.exoplayer.external.Timeline, reason: number): void;
						public onPlayerError(exoPlaybackException0: androidx.media2.exoplayer.external.ExoPlaybackException): void;
						/** @deprecated */
						public onTimelineChanged(timeline: androidx.media2.exoplayer.external.Timeline, manifest: any, reason: number): void;
					}
					export class DiscontinuityReason extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.Player.DiscontinuityReason>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.Player$DiscontinuityReason interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class EventListener extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.Player.EventListener>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.Player$EventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onTimelineChanged(timeline0: androidx.media2.exoplayer.external.Timeline, int1: number): void;
							onTimelineChanged(timeline0: androidx.media2.exoplayer.external.Timeline, object1: any, int2: number): void;
							onTracksChanged(trackGroupArray0: androidx.media2.exoplayer.external.source.TrackGroupArray, trackSelectionArray1: androidx.media2.exoplayer.external.trackselection.TrackSelectionArray): void;
							onLoadingChanged(boolean0: boolean): void;
							onPlayerStateChanged(boolean0: boolean, int1: number): void;
							onRepeatModeChanged(int0: number): void;
							onShuffleModeEnabledChanged(boolean0: boolean): void;
							onPlayerError(exoPlaybackException0: androidx.media2.exoplayer.external.ExoPlaybackException): void;
							onPositionDiscontinuity(int0: number): void;
							onPlaybackParametersChanged(playbackParameters0: androidx.media2.exoplayer.external.PlaybackParameters): void;
							onSeekProcessed(): void;
						});
						public constructor();
						public onPlaybackParametersChanged(playbackParameters0: androidx.media2.exoplayer.external.PlaybackParameters): void;
						public onSeekProcessed(): void;
						public onTimelineChanged(timeline0: androidx.media2.exoplayer.external.Timeline, int1: number): void;
						public onShuffleModeEnabledChanged(boolean0: boolean): void;
						public onPositionDiscontinuity(int0: number): void;
						public onLoadingChanged(boolean0: boolean): void;
						public onTracksChanged(trackGroupArray0: androidx.media2.exoplayer.external.source.TrackGroupArray, trackSelectionArray1: androidx.media2.exoplayer.external.trackselection.TrackSelectionArray): void;
						public onPlayerError(exoPlaybackException0: androidx.media2.exoplayer.external.ExoPlaybackException): void;
						/** @deprecated */
						public onTimelineChanged(timeline0: androidx.media2.exoplayer.external.Timeline, object1: any, int2: number): void;
						public onPlayerStateChanged(boolean0: boolean, int1: number): void;
						public onRepeatModeChanged(int0: number): void;
					}
						export module  {
					export module EventListener {
							export abstract class CC extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.Player.EventListener..CC>;
								public static onPlayerStateChanged$$dflt$$(this0: androidx.media2.exoplayer.external.Player.EventListener, playWhenReady: boolean, playbackState: number): void;
								public static onPositionDiscontinuity$$dflt$$(this0: androidx.media2.exoplayer.external.Player.EventListener, reason: number): void;
								/** @deprecated */
								public static onTimelineChanged$$dflt$$(this0: androidx.media2.exoplayer.external.Player.EventListener, timeline: androidx.media2.exoplayer.external.Timeline, manifest: any, reason: number): void;
								public static onRepeatModeChanged$$dflt$$(this0: androidx.media2.exoplayer.external.Player.EventListener, repeatMode: number): void;
								public static onTracksChanged$$dflt$$(this0: androidx.media2.exoplayer.external.Player.EventListener, trackGroups: androidx.media2.exoplayer.external.source.TrackGroupArray, trackSelections: androidx.media2.exoplayer.external.trackselection.TrackSelectionArray): void;
								public static onSeekProcessed$$dflt$$(this0: androidx.media2.exoplayer.external.Player.EventListener): void;
								public static onShuffleModeEnabledChanged$$dflt$$(this0: androidx.media2.exoplayer.external.Player.EventListener, shuffleModeEnabled: boolean): void;
								public static onPlayerError$$dflt$$(this0: androidx.media2.exoplayer.external.Player.EventListener, error: androidx.media2.exoplayer.external.ExoPlaybackException): void;
								public static onPlaybackParametersChanged$$dflt$$(this0: androidx.media2.exoplayer.external.Player.EventListener, playbackParameters: androidx.media2.exoplayer.external.PlaybackParameters): void;
								public static onTimelineChanged$$dflt$$(this0: androidx.media2.exoplayer.external.Player.EventListener, timeline: androidx.media2.exoplayer.external.Timeline, reason: number): void;
								public static onLoadingChanged$$dflt$$(this0: androidx.media2.exoplayer.external.Player.EventListener, isLoading: boolean): void;
							}
						}
					}
					export class MetadataComponent extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.Player.MetadataComponent>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.Player$MetadataComponent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							addMetadataOutput(metadataOutput0: androidx.media2.exoplayer.external.metadata.MetadataOutput): void;
							removeMetadataOutput(metadataOutput0: androidx.media2.exoplayer.external.metadata.MetadataOutput): void;
						});
						public constructor();
						public addMetadataOutput(metadataOutput0: androidx.media2.exoplayer.external.metadata.MetadataOutput): void;
						public removeMetadataOutput(metadataOutput0: androidx.media2.exoplayer.external.metadata.MetadataOutput): void;
					}
					export class RepeatMode extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.Player.RepeatMode>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.Player$RepeatMode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class State extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.Player.State>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.Player$State interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class TextComponent extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.Player.TextComponent>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.Player$TextComponent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							addTextOutput(textOutput0: androidx.media2.exoplayer.external.text.TextOutput): void;
							removeTextOutput(textOutput0: androidx.media2.exoplayer.external.text.TextOutput): void;
						});
						public constructor();
						public removeTextOutput(textOutput0: androidx.media2.exoplayer.external.text.TextOutput): void;
						public addTextOutput(textOutput0: androidx.media2.exoplayer.external.text.TextOutput): void;
					}
					export class TimelineChangeReason extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.Player.TimelineChangeReason>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.Player$TimelineChangeReason interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
					export class VideoComponent extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.Player.VideoComponent>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.Player$VideoComponent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setVideoScalingMode(int0: number): void;
							getVideoScalingMode(): number;
							addVideoListener(videoListener0: androidx.media2.exoplayer.external.video.VideoListener): void;
							removeVideoListener(videoListener0: androidx.media2.exoplayer.external.video.VideoListener): void;
							setVideoFrameMetadataListener(videoFrameMetadataListener0: androidx.media2.exoplayer.external.video.VideoFrameMetadataListener): void;
							clearVideoFrameMetadataListener(videoFrameMetadataListener0: androidx.media2.exoplayer.external.video.VideoFrameMetadataListener): void;
							setCameraMotionListener(cameraMotionListener0: androidx.media2.exoplayer.external.video.spherical.CameraMotionListener): void;
							clearCameraMotionListener(cameraMotionListener0: androidx.media2.exoplayer.external.video.spherical.CameraMotionListener): void;
							clearVideoSurface(): void;
							clearVideoSurface(surface0: globalAndroid.view.Surface): void;
							setVideoSurface(surface0: globalAndroid.view.Surface): void;
							setVideoSurfaceHolder(surfaceHolder0: globalAndroid.view.SurfaceHolder): void;
							clearVideoSurfaceHolder(surfaceHolder0: globalAndroid.view.SurfaceHolder): void;
							setVideoSurfaceView(surfaceView0: globalAndroid.view.SurfaceView): void;
							clearVideoSurfaceView(surfaceView0: globalAndroid.view.SurfaceView): void;
							setVideoTextureView(textureView0: globalAndroid.view.TextureView): void;
							clearVideoTextureView(textureView0: globalAndroid.view.TextureView): void;
						});
						public constructor();
						public removeVideoListener(videoListener0: androidx.media2.exoplayer.external.video.VideoListener): void;
						public clearVideoTextureView(textureView0: globalAndroid.view.TextureView): void;
						public clearVideoSurfaceHolder(surfaceHolder0: globalAndroid.view.SurfaceHolder): void;
						public setVideoScalingMode(int0: number): void;
						public setVideoSurfaceHolder(surfaceHolder0: globalAndroid.view.SurfaceHolder): void;
						public clearVideoSurfaceView(surfaceView0: globalAndroid.view.SurfaceView): void;
						public clearVideoSurface(): void;
						public setVideoSurface(surface0: globalAndroid.view.Surface): void;
						public clearVideoSurface(surface0: globalAndroid.view.Surface): void;
						public addVideoListener(videoListener0: androidx.media2.exoplayer.external.video.VideoListener): void;
						public getVideoScalingMode(): number;
						public clearVideoFrameMetadataListener(videoFrameMetadataListener0: androidx.media2.exoplayer.external.video.VideoFrameMetadataListener): void;
						public clearCameraMotionListener(cameraMotionListener0: androidx.media2.exoplayer.external.video.spherical.CameraMotionListener): void;
						public setVideoSurfaceView(surfaceView0: globalAndroid.view.SurfaceView): void;
						public setVideoFrameMetadataListener(videoFrameMetadataListener0: androidx.media2.exoplayer.external.video.VideoFrameMetadataListener): void;
						public setCameraMotionListener(cameraMotionListener0: androidx.media2.exoplayer.external.video.spherical.CameraMotionListener): void;
						public setVideoTextureView(textureView0: globalAndroid.view.TextureView): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export class PlayerMessage extends java.lang.Object {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.PlayerMessage>;
					public getType(): number;
					public getPositionMs(): number;
					public setPosition(positionMs: number): androidx.media2.exoplayer.external.PlayerMessage;
					public markAsProcessed(isDelivered: boolean): void;
					public cancel(): androidx.media2.exoplayer.external.PlayerMessage;
					public getTimeline(): androidx.media2.exoplayer.external.Timeline;
					public setPosition(windowIndex: number, positionMs: number): androidx.media2.exoplayer.external.PlayerMessage;
					public blockUntilDelivered(): boolean;
					public getPayload(): any;
					public getTarget(): androidx.media2.exoplayer.external.PlayerMessage.Target;
					public setHandler(handler: globalAndroid.os.Handler): androidx.media2.exoplayer.external.PlayerMessage;
					public isCanceled(): boolean;
					public getWindowIndex(): number;
					public send(): androidx.media2.exoplayer.external.PlayerMessage;
					public constructor(sender: androidx.media2.exoplayer.external.PlayerMessage.Sender, target: androidx.media2.exoplayer.external.PlayerMessage.Target, timeline: androidx.media2.exoplayer.external.Timeline, defaultWindowIndex: number, defaultHandler: globalAndroid.os.Handler);
					public getHandler(): globalAndroid.os.Handler;
					public setDeleteAfterDelivery(deleteAfterDelivery: boolean): androidx.media2.exoplayer.external.PlayerMessage;
					public setType(messageType: number): androidx.media2.exoplayer.external.PlayerMessage;
					public getDeleteAfterDelivery(): boolean;
					public setPayload(payload: any): androidx.media2.exoplayer.external.PlayerMessage;
				}
				export module PlayerMessage {
					export class Sender extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.PlayerMessage.Sender>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.PlayerMessage$Sender interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							sendMessage(playerMessage0: androidx.media2.exoplayer.external.PlayerMessage): void;
						});
						public constructor();
						public sendMessage(playerMessage0: androidx.media2.exoplayer.external.PlayerMessage): void;
					}
					export class Target extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.PlayerMessage.Target>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.PlayerMessage$Target interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							handleMessage(int0: number, object1: any): void;
						});
						public constructor();
						public handleMessage(int0: number, object1: any): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export class Renderer extends java.lang.Object implements androidx.media2.exoplayer.external.PlayerMessage.Target {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.Renderer>;
					/**
					 * Constructs a new instance of the androidx.media2.exoplayer.external.Renderer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getTrackType(): number;
						getCapabilities(): androidx.media2.exoplayer.external.RendererCapabilities;
						setIndex(int0: number): void;
						getMediaClock(): androidx.media2.exoplayer.external.util.MediaClock;
						getState(): number;
						enable(rendererConfiguration0: androidx.media2.exoplayer.external.RendererConfiguration, formats1: native.Array<androidx.media2.exoplayer.external.Format>, sampleStream2: androidx.media2.exoplayer.external.source.SampleStream, long3: number, boolean4: boolean, long5: number): void;
						start(): void;
						replaceStream(formats0: native.Array<androidx.media2.exoplayer.external.Format>, sampleStream1: androidx.media2.exoplayer.external.source.SampleStream, long2: number): void;
						getStream(): androidx.media2.exoplayer.external.source.SampleStream;
						hasReadStreamToEnd(): boolean;
						getReadingPositionUs(): number;
						setCurrentStreamFinal(): void;
						isCurrentStreamFinal(): boolean;
						maybeThrowStreamError(): void;
						resetPosition(long0: number): void;
						setOperatingRate(float0: number): void;
						render(long0: number, long1: number): void;
						isReady(): boolean;
						isEnded(): boolean;
						stop(): void;
						disable(): void;
						reset(): void;
						handleMessage(int0: number, object1: any): void;
					});
					public constructor();
					public static STATE_STARTED: number;
					public static STATE_ENABLED: number;
					public static STATE_DISABLED: number;
					public isReady(): boolean;
					public getMediaClock(): androidx.media2.exoplayer.external.util.MediaClock;
					public setCurrentStreamFinal(): void;
					public reset(): void;
					public render(long0: number, long1: number): void;
					public hasReadStreamToEnd(): boolean;
					public resetPosition(long0: number): void;
					public getCapabilities(): androidx.media2.exoplayer.external.RendererCapabilities;
					public maybeThrowStreamError(): void;
					public isEnded(): boolean;
					public start(): void;
					public isCurrentStreamFinal(): boolean;
					public setOperatingRate(float0: number): void;
					public replaceStream(formats0: native.Array<androidx.media2.exoplayer.external.Format>, sampleStream1: androidx.media2.exoplayer.external.source.SampleStream, long2: number): void;
					public setIndex(int0: number): void;
					public enable(rendererConfiguration0: androidx.media2.exoplayer.external.RendererConfiguration, formats1: native.Array<androidx.media2.exoplayer.external.Format>, sampleStream2: androidx.media2.exoplayer.external.source.SampleStream, long3: number, boolean4: boolean, long5: number): void;
					public disable(): void;
					public stop(): void;
					public handleMessage(int0: number, object1: any): void;
					public getStream(): androidx.media2.exoplayer.external.source.SampleStream;
					public getReadingPositionUs(): number;
					public getTrackType(): number;
					public getState(): number;
				}
					export module  {
				export module Renderer {
						export abstract class CC extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.Renderer..CC>;
							public static setOperatingRate$$dflt$$(this0: androidx.media2.exoplayer.external.Renderer, operatingRate: number): void;
						}
					}
					export class State extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.Renderer.State>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.Renderer$State interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export class RendererCapabilities extends java.lang.Object {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.RendererCapabilities>;
					/**
					 * Constructs a new instance of the androidx.media2.exoplayer.external.RendererCapabilities interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getTrackType(): number;
						supportsFormat(format0: androidx.media2.exoplayer.external.Format): number;
						supportsMixedMimeTypeAdaptation(): number;
					});
					public constructor();
					public static TUNNELING_SUPPORT_MASK: number;
					public static ADAPTIVE_SUPPORT_MASK: number;
					public static FORMAT_SUPPORT_MASK: number;
					public static FORMAT_UNSUPPORTED_DRM: number;
					public static ADAPTIVE_SEAMLESS: number;
					public static TUNNELING_NOT_SUPPORTED: number;
					public static FORMAT_UNSUPPORTED_TYPE: number;
					public static ADAPTIVE_NOT_SEAMLESS: number;
					public static ADAPTIVE_NOT_SUPPORTED: number;
					public static FORMAT_EXCEEDS_CAPABILITIES: number;
					public static FORMAT_HANDLED: number;
					public static TUNNELING_SUPPORTED: number;
					public static FORMAT_UNSUPPORTED_SUBTYPE: number;
					public supportsFormat(format0: androidx.media2.exoplayer.external.Format): number;
					public getTrackType(): number;
					public supportsMixedMimeTypeAdaptation(): number;
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export class RendererConfiguration extends java.lang.Object {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.RendererConfiguration>;
					public static DEFAULT: androidx.media2.exoplayer.external.RendererConfiguration;
					public tunnelingAudioSessionId: number;
					public equals(obj: any): boolean;
					public constructor(tunnelingAudioSessionId: number);
					public hashCode(): number;
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export class RenderersFactory extends java.lang.Object {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.RenderersFactory>;
					/**
					 * Constructs a new instance of the androidx.media2.exoplayer.external.RenderersFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						createRenderers(handler0: globalAndroid.os.Handler, videoRendererEventListener1: androidx.media2.exoplayer.external.video.VideoRendererEventListener, audioRendererEventListener2: androidx.media2.exoplayer.external.audio.AudioRendererEventListener, textOutput3: androidx.media2.exoplayer.external.text.TextOutput, metadataOutput4: androidx.media2.exoplayer.external.metadata.MetadataOutput, drmSessionManager5: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>): native.Array<androidx.media2.exoplayer.external.Renderer>;
					});
					public constructor();
					public createRenderers(handler0: globalAndroid.os.Handler, videoRendererEventListener1: androidx.media2.exoplayer.external.video.VideoRendererEventListener, audioRendererEventListener2: androidx.media2.exoplayer.external.audio.AudioRendererEventListener, textOutput3: androidx.media2.exoplayer.external.text.TextOutput, metadataOutput4: androidx.media2.exoplayer.external.metadata.MetadataOutput, drmSessionManager5: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>): native.Array<androidx.media2.exoplayer.external.Renderer>;
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export class SeekParameters extends java.lang.Object {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.SeekParameters>;
					public static EXACT: androidx.media2.exoplayer.external.SeekParameters;
					public static CLOSEST_SYNC: androidx.media2.exoplayer.external.SeekParameters;
					public static PREVIOUS_SYNC: androidx.media2.exoplayer.external.SeekParameters;
					public static NEXT_SYNC: androidx.media2.exoplayer.external.SeekParameters;
					public static DEFAULT: androidx.media2.exoplayer.external.SeekParameters;
					public toleranceBeforeUs: number;
					public toleranceAfterUs: number;
					public equals(obj: any): boolean;
					public constructor(toleranceBeforeUs: number, toleranceAfterUs: number);
					public hashCode(): number;
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export class SimpleExoPlayer extends androidx.media2.exoplayer.external.BasePlayer implements androidx.media2.exoplayer.external.ExoPlayer, androidx.media2.exoplayer.external.Player.AudioComponent, androidx.media2.exoplayer.external.Player.VideoComponent, androidx.media2.exoplayer.external.Player.TextComponent, androidx.media2.exoplayer.external.Player.MetadataComponent {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.SimpleExoPlayer>;
					public renderers: native.Array<androidx.media2.exoplayer.external.Renderer>;
					public stop(reset: boolean): void;
					public removeListener(listener: androidx.media2.exoplayer.external.Player.EventListener): void;
					public getPlayWhenReady(): boolean;
					public setShuffleModeEnabled(shuffleModeEnabled: boolean): void;
					public getRendererCount(): number;
					public addListener(listener: androidx.media2.exoplayer.external.Player.EventListener): void;
					public clearVideoSurface(): void;
					public setVideoSurface(surface: globalAndroid.view.Surface): void;
					public hasNext(): boolean;
					public getPlaybackError(): androidx.media2.exoplayer.external.ExoPlaybackException;
					public getContentPosition(): number;
					public removeAudioListener(listener: androidx.media2.exoplayer.external.audio.AudioListener): void;
					public constructor();
					public setRepeatMode(repeatMode: number): void;
					public getCurrentPeriodIndex(): number;
					public getCurrentTrackGroups(): androidx.media2.exoplayer.external.source.TrackGroupArray;
					public setVideoFrameMetadataListener(listener: androidx.media2.exoplayer.external.video.VideoFrameMetadataListener): void;
					public removeAnalyticsListener(listener: androidx.media2.exoplayer.external.analytics.AnalyticsListener): void;
					/** @deprecated */
					public clearMetadataOutput(output: androidx.media2.exoplayer.external.metadata.MetadataOutput): void;
					public previous(): void;
					/** @deprecated */
					public removeVideoDebugListener(listener: androidx.media2.exoplayer.external.video.VideoRendererEventListener): void;
					public getRendererType(index: number): number;
					public getPreviousWindowIndex(): number;
					public getContentBufferedPosition(): number;
					public getCurrentTimeline(): androidx.media2.exoplayer.external.Timeline;
					public setVideoSurfaceHolder(surfaceHolder: globalAndroid.view.SurfaceHolder): void;
					public clearVideoSurfaceHolder(surfaceHolder: globalAndroid.view.SurfaceHolder): void;
					/** @deprecated */
					public constructor(context: globalAndroid.content.Context, renderersFactory: androidx.media2.exoplayer.external.RenderersFactory, trackSelector: androidx.media2.exoplayer.external.trackselection.TrackSelector, loadControl: androidx.media2.exoplayer.external.LoadControl, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>, bandwidthMeter: androidx.media2.exoplayer.external.upstream.BandwidthMeter, analyticsCollector: androidx.media2.exoplayer.external.analytics.AnalyticsCollector, clock: androidx.media2.exoplayer.external.util.Clock, looper: globalAndroid.os.Looper);
					public getPlaybackState(): number;
					public getRepeatMode(): number;
					public clearVideoSurface(surface: globalAndroid.view.Surface): void;
					/** @deprecated */
					public setAudioAttributes(audioAttributes: androidx.media2.exoplayer.external.audio.AudioAttributes): void;
					public getAudioDecoderCounters(): androidx.media2.exoplayer.external.decoder.DecoderCounters;
					/** @deprecated */
					public setTextOutput(output: androidx.media2.exoplayer.external.text.TextOutput): void;
					public getDuration(): number;
					public setAudioAttributes(audioAttributes: androidx.media2.exoplayer.external.audio.AudioAttributes, handleAudioFocus: boolean): void;
					/** @deprecated */
					public setAudioStreamType(streamType: number): void;
					/** @deprecated */
					public clearTextOutput(output: androidx.media2.exoplayer.external.text.TextOutput): void;
					public getNextWindowIndex(): number;
					/** @deprecated */
					public removeAudioDebugListener(listener: androidx.media2.exoplayer.external.audio.AudioRendererEventListener): void;
					public setPlayWhenReady(playWhenReady: boolean): void;
					public getVideoScalingMode(): number;
					public getTotalBufferedDuration(): number;
					public getPlaybackParameters(): androidx.media2.exoplayer.external.PlaybackParameters;
					public isPlayingAd(): boolean;
					public setAuxEffectInfo(auxEffectInfo: androidx.media2.exoplayer.external.audio.AuxEffectInfo): void;
					public seekTo(positionMs: number): void;
					public getAudioFormat(): androidx.media2.exoplayer.external.Format;
					public getCurrentManifest(): any;
					public isCurrentWindowDynamic(): boolean;
					public setVideoSurfaceView(surfaceView: globalAndroid.view.SurfaceView): void;
					public removeMetadataOutput(listener: androidx.media2.exoplayer.external.metadata.MetadataOutput): void;
					public clearVideoTextureView(textureView: globalAndroid.view.TextureView): void;
					public getVolume(): number;
					public getVideoComponent(): androidx.media2.exoplayer.external.Player.VideoComponent;
					public clearAuxEffectInfo(): void;
					public clearVideoFrameMetadataListener(listener: androidx.media2.exoplayer.external.video.VideoFrameMetadataListener): void;
					/** @deprecated */
					public clearVideoListener(listener: androidx.media2.exoplayer.external.SimpleExoPlayer.VideoListener): void;
					public createMessage(target: androidx.media2.exoplayer.external.PlayerMessage.Target): androidx.media2.exoplayer.external.PlayerMessage;
					public addAnalyticsListener(listener: androidx.media2.exoplayer.external.analytics.AnalyticsListener): void;
					/** @deprecated */
					public addVideoDebugListener(listener: androidx.media2.exoplayer.external.video.VideoRendererEventListener): void;
					public getCurrentAdGroupIndex(): number;
					public next(): void;
					/** @deprecated */
					public setMetadataOutput(output: androidx.media2.exoplayer.external.metadata.MetadataOutput): void;
					public getShuffleModeEnabled(): boolean;
					public addTextOutput(listener: androidx.media2.exoplayer.external.text.TextOutput): void;
					/** @deprecated */
					public setVideoDebugListener(listener: androidx.media2.exoplayer.external.video.VideoRendererEventListener): void;
					public getCurrentWindowIndex(): number;
					public getAudioSessionId(): number;
					public clearVideoSurfaceView(surfaceView: globalAndroid.view.SurfaceView): void;
					public seekToDefaultPosition(windowIndex: number): void;
					public setVideoTextureView(textureView: globalAndroid.view.TextureView): void;
					public getSeekParameters(): androidx.media2.exoplayer.external.SeekParameters;
					/** @deprecated */
					public setAudioDebugListener(listener: androidx.media2.exoplayer.external.audio.AudioRendererEventListener): void;
					public release(): void;
					public getVideoFormat(): androidx.media2.exoplayer.external.Format;
					public getCurrentAdIndexInAdGroup(): number;
					public isCurrentWindowSeekable(): boolean;
					public getAnalyticsCollector(): androidx.media2.exoplayer.external.analytics.AnalyticsCollector;
					public addMetadataOutput(listener: androidx.media2.exoplayer.external.metadata.MetadataOutput): void;
					public stop(): void;
					public addAudioListener(listener: androidx.media2.exoplayer.external.audio.AudioListener): void;
					public setAudioAttributes(audioAttributes: androidx.media2.exoplayer.external.audio.AudioAttributes): void;
					public getVideoDecoderCounters(): androidx.media2.exoplayer.external.decoder.DecoderCounters;
					public removeVideoListener(listener: androidx.media2.exoplayer.external.video.VideoListener): void;
					public isLoading(): boolean;
					public setPlaybackParameters(playbackParameters: androidx.media2.exoplayer.external.PlaybackParameters): void;
					public getPlaybackLooper(): globalAndroid.os.Looper;
					public constructor(context: globalAndroid.content.Context, renderersFactory: androidx.media2.exoplayer.external.RenderersFactory, trackSelector: androidx.media2.exoplayer.external.trackselection.TrackSelector, loadControl: androidx.media2.exoplayer.external.LoadControl, bandwidthMeter: androidx.media2.exoplayer.external.upstream.BandwidthMeter, analyticsCollector: androidx.media2.exoplayer.external.analytics.AnalyticsCollector, clock: androidx.media2.exoplayer.external.util.Clock, looper: globalAndroid.os.Looper);
					public getTextComponent(): androidx.media2.exoplayer.external.Player.TextComponent;
					public getAudioAttributes(): androidx.media2.exoplayer.external.audio.AudioAttributes;
					public getApplicationLooper(): globalAndroid.os.Looper;
					/** @deprecated */
					public setPlaybackParams(params: globalAndroid.media.PlaybackParams): void;
					public setCameraMotionListener(listener: androidx.media2.exoplayer.external.video.spherical.CameraMotionListener): void;
					public hasPrevious(): boolean;
					/** @deprecated */
					public getAudioStreamType(): number;
					public setForegroundMode(foregroundMode: boolean): void;
					public getCurrentPosition(): number;
					public clearCameraMotionListener(listener: androidx.media2.exoplayer.external.video.spherical.CameraMotionListener): void;
					public getCurrentTrackSelections(): androidx.media2.exoplayer.external.trackselection.TrackSelectionArray;
					public addVideoListener(listener: androidx.media2.exoplayer.external.video.VideoListener): void;
					public prepare(mediaSource: androidx.media2.exoplayer.external.source.MediaSource, resetPosition: boolean, resetState: boolean): void;
					public retry(): void;
					public getMetadataComponent(): androidx.media2.exoplayer.external.Player.MetadataComponent;
					public seekTo(windowIndex: number, positionMs: number): void;
					public setVolume(audioVolume: number): void;
					public setPriorityTaskManager(priorityTaskManager: androidx.media2.exoplayer.external.util.PriorityTaskManager): void;
					public removeTextOutput(listener: androidx.media2.exoplayer.external.text.TextOutput): void;
					public prepare(mediaSource: androidx.media2.exoplayer.external.source.MediaSource): void;
					public getCurrentTag(): any;
					public getBufferedPercentage(): number;
					public seekToDefaultPosition(): void;
					public getBufferedPosition(): number;
					public setVideoScalingMode(videoScalingMode: number): void;
					/** @deprecated */
					public setVideoListener(listener: androidx.media2.exoplayer.external.SimpleExoPlayer.VideoListener): void;
					public setSeekParameters(seekParameters: androidx.media2.exoplayer.external.SeekParameters): void;
					public getAudioComponent(): androidx.media2.exoplayer.external.Player.AudioComponent;
					/** @deprecated */
					public addAudioDebugListener(listener: androidx.media2.exoplayer.external.audio.AudioRendererEventListener): void;
					public getContentDuration(): number;
				}
				export module SimpleExoPlayer {
					export class Builder extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.SimpleExoPlayer.Builder>;
						public setBandwidthMeter(bandwidthMeter: androidx.media2.exoplayer.external.upstream.BandwidthMeter): androidx.media2.exoplayer.external.SimpleExoPlayer.Builder;
						public setLooper(looper: globalAndroid.os.Looper): androidx.media2.exoplayer.external.SimpleExoPlayer.Builder;
						public build(): androidx.media2.exoplayer.external.SimpleExoPlayer;
						public constructor(context: globalAndroid.content.Context, renderersFactory: androidx.media2.exoplayer.external.RenderersFactory);
						public constructor(context: globalAndroid.content.Context, renderersFactory: androidx.media2.exoplayer.external.RenderersFactory, trackSelector: androidx.media2.exoplayer.external.trackselection.TrackSelector, loadControl: androidx.media2.exoplayer.external.LoadControl, bandwidthMeter: androidx.media2.exoplayer.external.upstream.BandwidthMeter, looper: globalAndroid.os.Looper, analyticsCollector: androidx.media2.exoplayer.external.analytics.AnalyticsCollector, useLazyPreparation: boolean, clock: androidx.media2.exoplayer.external.util.Clock);
						public setTrackSelector(trackSelector: androidx.media2.exoplayer.external.trackselection.TrackSelector): androidx.media2.exoplayer.external.SimpleExoPlayer.Builder;
						public setLoadControl(loadControl: androidx.media2.exoplayer.external.LoadControl): androidx.media2.exoplayer.external.SimpleExoPlayer.Builder;
						public setAnalyticsCollector(analyticsCollector: androidx.media2.exoplayer.external.analytics.AnalyticsCollector): androidx.media2.exoplayer.external.SimpleExoPlayer.Builder;
						public setUseLazyPreparation(useLazyPreparation: boolean): androidx.media2.exoplayer.external.SimpleExoPlayer.Builder;
						public setClock(clock: androidx.media2.exoplayer.external.util.Clock): androidx.media2.exoplayer.external.SimpleExoPlayer.Builder;
						public constructor(context: globalAndroid.content.Context);
					}
					export class ComponentListener extends java.lang.Object implements androidx.media2.exoplayer.external.video.VideoRendererEventListener, androidx.media2.exoplayer.external.audio.AudioRendererEventListener, androidx.media2.exoplayer.external.text.TextOutput, androidx.media2.exoplayer.external.metadata.MetadataOutput, globalAndroid.view.SurfaceHolder.Callback, globalAndroid.view.TextureView.SurfaceTextureListener, androidx.media2.exoplayer.external.audio.AudioFocusManager.PlayerControl, androidx.media2.exoplayer.external.Player.EventListener {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.SimpleExoPlayer.ComponentListener>;
						public onSurfaceTextureUpdated(surfaceTexture: globalAndroid.graphics.SurfaceTexture): void;
						public onAudioSessionId(sessionId: number): void;
						public onSurfaceTextureDestroyed(surfaceTexture: globalAndroid.graphics.SurfaceTexture): boolean;
						public onSeekProcessed(): void;
						public onTimelineChanged(timeline0: androidx.media2.exoplayer.external.Timeline, int1: number): void;
						public onShuffleModeEnabledChanged(boolean0: boolean): void;
						public onVideoDisabled(counters: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
						/** @deprecated */
						public onTimelineChanged(timeline0: androidx.media2.exoplayer.external.Timeline, object1: any, int2: number): void;
						public onVideoSizeChanged(width: number, height: number, unappliedRotationDegrees: number, pixelWidthHeightRatio: number): void;
						public onRepeatModeChanged(int0: number): void;
						public onMetadata(metadata: androidx.media2.exoplayer.external.metadata.Metadata): void;
						public onAudioDisabled(counters: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
						public surfaceChanged(holder: globalAndroid.view.SurfaceHolder, format: number, width: number, height: number): void;
						public onRenderedFirstFrame(surface: globalAndroid.view.Surface): void;
						public onPositionDiscontinuity(int0: number): void;
						public onAudioInputFormatChanged(format: androidx.media2.exoplayer.external.Format): void;
						public onPlayerError(exoPlaybackException0: androidx.media2.exoplayer.external.ExoPlaybackException): void;
						public onVideoEnabled(counters: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
						public onDroppedFrames(count: number, elapsed: number): void;
						public onAudioEnabled(counters: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
						public setVolumeMultiplier(volumeMultiplier: number): void;
						public onCues(cues: java.util.List<androidx.media2.exoplayer.external.text.Cue>): void;
						public executePlayerCommand(playerCommand: number): void;
						public onTracksChanged(trackGroupArray0: androidx.media2.exoplayer.external.source.TrackGroupArray, trackSelectionArray1: androidx.media2.exoplayer.external.trackselection.TrackSelectionArray): void;
						public onPlayerStateChanged(boolean0: boolean, int1: number): void;
						public onVideoInputFormatChanged(format: androidx.media2.exoplayer.external.Format): void;
						public surfaceDestroyed(holder: globalAndroid.view.SurfaceHolder): void;
						public onSurfaceTextureSizeChanged(surfaceTexture: globalAndroid.graphics.SurfaceTexture, width: number, height: number): void;
						public onPlaybackParametersChanged(playbackParameters0: androidx.media2.exoplayer.external.PlaybackParameters): void;
						public onAudioSinkUnderrun(bufferSize: number, bufferSizeMs: number, elapsedSinceLastFeedMs: number): void;
						public onLoadingChanged(isLoading: boolean): void;
						public onSurfaceTextureAvailable(surfaceTexture: globalAndroid.graphics.SurfaceTexture, width: number, height: number): void;
						public surfaceCreated(holder: globalAndroid.view.SurfaceHolder): void;
						public onVideoDecoderInitialized(decoderName: string, initializedTimestampMs: number, initializationDurationMs: number): void;
						public onAudioDecoderInitialized(decoderName: string, initializedTimestampMs: number, initializationDurationMs: number): void;
					}
					export class VideoListener extends java.lang.Object implements androidx.media2.exoplayer.external.video.VideoListener {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.SimpleExoPlayer.VideoListener>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.SimpleExoPlayer$VideoListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onVideoSizeChanged(int0: number, int1: number, int2: number, float3: number): void;
							onSurfaceSizeChanged(int0: number, int1: number): void;
							onRenderedFirstFrame(): void;
						});
						public constructor();
						public onRenderedFirstFrame(): void;
						public onVideoSizeChanged(int0: number, int1: number, int2: number, float3: number): void;
						public onSurfaceSizeChanged(int0: number, int1: number): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export abstract class Timeline extends java.lang.Object {
					public static class: java.lang.Class<androidx.media2.exoplayer.external.Timeline>;
					public static EMPTY: androidx.media2.exoplayer.external.Timeline;
					public getPeriodPosition(window: androidx.media2.exoplayer.external.Timeline.Window, period: androidx.media2.exoplayer.external.Timeline.Period, windowIndex: number, windowPositionUs: number, defaultPositionProjectionUs: number): globalAndroid.util.Pair<any,java.lang.Long>;
					public getUidOfPeriod(int0: number): any;
					public getLastWindowIndex(shuffleModeEnabled: boolean): number;
					public getPeriod(periodIndex: number, period: androidx.media2.exoplayer.external.Timeline.Period): androidx.media2.exoplayer.external.Timeline.Period;
					public isEmpty(): boolean;
					public isLastPeriod(periodIndex: number, period: androidx.media2.exoplayer.external.Timeline.Period, window: androidx.media2.exoplayer.external.Timeline.Window, repeatMode: number, shuffleModeEnabled: boolean): boolean;
					public getPeriod(int0: number, period1: androidx.media2.exoplayer.external.Timeline.Period, boolean2: boolean): androidx.media2.exoplayer.external.Timeline.Period;
					public getPreviousWindowIndex(windowIndex: number, repeatMode: number, shuffleModeEnabled: boolean): number;
					public getFirstWindowIndex(shuffleModeEnabled: boolean): number;
					/** @deprecated */
					public getWindow(windowIndex: number, window: androidx.media2.exoplayer.external.Timeline.Window, setTag: boolean): androidx.media2.exoplayer.external.Timeline.Window;
					public getNextWindowIndex(windowIndex: number, repeatMode: number, shuffleModeEnabled: boolean): number;
					/** @deprecated */
					public getWindow(windowIndex: number, window: androidx.media2.exoplayer.external.Timeline.Window, setTag: boolean, defaultPositionProjectionUs: number): androidx.media2.exoplayer.external.Timeline.Window;
					public getWindowCount(): number;
					public getIndexOfPeriod(object0: any): number;
					public getPeriodByUid(periodUid: any, period: androidx.media2.exoplayer.external.Timeline.Period): androidx.media2.exoplayer.external.Timeline.Period;
					public getWindow(windowIndex: number, window: androidx.media2.exoplayer.external.Timeline.Window, defaultPositionProjectionUs: number): androidx.media2.exoplayer.external.Timeline.Window;
					public constructor();
					public getNextPeriodIndex(periodIndex: number, period: androidx.media2.exoplayer.external.Timeline.Period, window: androidx.media2.exoplayer.external.Timeline.Window, repeatMode: number, shuffleModeEnabled: boolean): number;
					public getPeriodCount(): number;
					public getWindow(windowIndex: number, window: androidx.media2.exoplayer.external.Timeline.Window): androidx.media2.exoplayer.external.Timeline.Window;
					public getPeriodPosition(window: androidx.media2.exoplayer.external.Timeline.Window, period: androidx.media2.exoplayer.external.Timeline.Period, windowIndex: number, windowPositionUs: number): globalAndroid.util.Pair<any,java.lang.Long>;
				}
				export module Timeline {
					export class Period extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.Timeline.Period>;
						public id: any;
						public uid: any;
						public windowIndex: number;
						public durationUs: number;
						public getNextAdIndexToPlay(adGroupIndex: number, lastPlayedAdIndex: number): number;
						public getDurationUs(): number;
						public constructor();
						public set(id: any, uid: any, windowIndex: number, durationUs: number, positionInWindowUs: number): androidx.media2.exoplayer.external.Timeline.Period;
						public getPositionInWindowUs(): number;
						public getAdGroupTimeUs(adGroupIndex: number): number;
						public getAdGroupIndexAfterPositionUs(positionUs: number): number;
						public getAdDurationUs(adGroupIndex: number, adIndexInAdGroup: number): number;
						public getAdGroupCount(): number;
						public getAdResumePositionUs(): number;
						public getAdCountInAdGroup(adGroupIndex: number): number;
						public getDurationMs(): number;
						public set(id: any, uid: any, windowIndex: number, durationUs: number, positionInWindowUs: number, adPlaybackState: androidx.media2.exoplayer.external.source.ads.AdPlaybackState): androidx.media2.exoplayer.external.Timeline.Period;
						public getPositionInWindowMs(): number;
						public hasPlayedAdGroup(adGroupIndex: number): boolean;
						public getAdGroupIndexForPositionUs(positionUs: number): number;
						public getFirstAdIndexToPlay(adGroupIndex: number): number;
						public isAdAvailable(adGroupIndex: number, adIndexInAdGroup: number): boolean;
					}
					export class Window extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.Timeline.Window>;
						public tag: any;
						public manifest: any;
						public presentationStartTimeMs: number;
						public windowStartTimeMs: number;
						public isSeekable: boolean;
						public isDynamic: boolean;
						public firstPeriodIndex: number;
						public lastPeriodIndex: number;
						public defaultPositionUs: number;
						public durationUs: number;
						public positionInFirstPeriodUs: number;
						public getDurationMs(): number;
						public getDurationUs(): number;
						public constructor();
						public getDefaultPositionMs(): number;
						public getDefaultPositionUs(): number;
						public set(tag: any, manifest: any, presentationStartTimeMs: number, windowStartTimeMs: number, isSeekable: boolean, isDynamic: boolean, defaultPositionUs: number, durationUs: number, firstPeriodIndex: number, lastPeriodIndex: number, positionInFirstPeriodUs: number): androidx.media2.exoplayer.external.Timeline.Window;
						public getPositionInFirstPeriodMs(): number;
						public getPositionInFirstPeriodUs(): number;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module analytics {
					export class AnalyticsCollector extends java.lang.Object implements androidx.media2.exoplayer.external.Player.EventListener, androidx.media2.exoplayer.external.metadata.MetadataOutput, androidx.media2.exoplayer.external.audio.AudioRendererEventListener, androidx.media2.exoplayer.external.video.VideoRendererEventListener, androidx.media2.exoplayer.external.source.MediaSourceEventListener, androidx.media2.exoplayer.external.upstream.BandwidthMeter.EventListener, androidx.media2.exoplayer.external.drm.DefaultDrmSessionEventListener, androidx.media2.exoplayer.external.video.VideoListener, androidx.media2.exoplayer.external.audio.AudioListener {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.analytics.AnalyticsCollector>;
						public onSurfaceSizeChanged(width: number, height: number): void;
						public onSeekProcessed(): void;
						public onAudioSessionId(audioSessionId: number): void;
						public onUpstreamDiscarded(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public setPlayer(player: androidx.media2.exoplayer.external.Player): void;
						public onVideoDisabled(counters: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
						public onLoadError(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventInfo: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData, error: java.io.IOException, wasCanceled: boolean): void;
						/** @deprecated */
						public onTimelineChanged(timeline0: androidx.media2.exoplayer.external.Timeline, object1: any, int2: number): void;
						public onTracksChanged(trackGroups: androidx.media2.exoplayer.external.source.TrackGroupArray, trackSelections: androidx.media2.exoplayer.external.trackselection.TrackSelectionArray): void;
						public onVideoSizeChanged(width: number, height: number, unappliedRotationDegrees: number, pixelWidthHeightRatio: number): void;
						public removeListener(listener: androidx.media2.exoplayer.external.analytics.AnalyticsListener): void;
						public onRepeatModeChanged(repeatMode: number): void;
						public onPositionDiscontinuity(reason: number): void;
						public onPlaybackParametersChanged(playbackParameters: androidx.media2.exoplayer.external.PlaybackParameters): void;
						public onMetadata(metadata: androidx.media2.exoplayer.external.metadata.Metadata): void;
						public constructor(clock: androidx.media2.exoplayer.external.util.Clock);
						public addListener(listener: androidx.media2.exoplayer.external.analytics.AnalyticsListener): void;
						public onLoadCanceled(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventInfo: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public onAudioInputFormatChanged(format: androidx.media2.exoplayer.external.Format): void;
						public onMediaPeriodReleased(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): void;
						public onAudioEnabled(counters: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
						public onDrmKeysRestored(): void;
						public onDroppedFrames(count: number, elapsedMs: number): void;
						public notifySeekStarted(): void;
						public onVideoInputFormatChanged(format: androidx.media2.exoplayer.external.Format): void;
						public onReadingStarted(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): void;
						public onBandwidthSample(elapsedMs: number, bytes: number, bitrate: number): void;
						public onVolumeChanged(audioVolume: number): void;
						public onAudioSinkUnderrun(bufferSize: number, bufferSizeMs: number, elapsedSinceLastFeedMs: number): void;
						public onDrmSessionManagerError(error: java.lang.Exception): void;
						public onPlayerStateChanged(playWhenReady: boolean, playbackState: number): void;
						public onMediaPeriodCreated(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): void;
						public onVideoDecoderInitialized(decoderName: string, initializedTimestampMs: number, initializationDurationMs: number): void;
						public onRenderedFirstFrame(): void;
						public onLoadStarted(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventInfo: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public onDrmSessionReleased(): void;
						public onDrmKeysRemoved(): void;
						public onAudioDisabled(counters: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
						public onRenderedFirstFrame(surface: globalAndroid.view.Surface): void;
						public onTimelineChanged(timeline: androidx.media2.exoplayer.external.Timeline, reason: number): void;
						public onVideoEnabled(counters: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
						public onDrmSessionAcquired(): void;
						public generateEventTime(timeline: androidx.media2.exoplayer.external.Timeline, windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime;
						public onPlayerError(error: androidx.media2.exoplayer.external.ExoPlaybackException): void;
						public onShuffleModeEnabledChanged(shuffleModeEnabled: boolean): void;
						public onDownstreamFormatChanged(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public getListeners(): java.util.Set<androidx.media2.exoplayer.external.analytics.AnalyticsListener>;
						public onDrmKeysLoaded(): void;
						public onLoadingChanged(isLoading: boolean): void;
						public onAudioAttributesChanged(audioAttributes: androidx.media2.exoplayer.external.audio.AudioAttributes): void;
						public resetForNewMediaSource(): void;
						public onLoadCompleted(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventInfo: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public onAudioDecoderInitialized(decoderName: string, initializedTimestampMs: number, initializationDurationMs: number): void;
					}
					export module AnalyticsCollector {
						export class MediaPeriodInfo extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.analytics.AnalyticsCollector.MediaPeriodInfo>;
							public mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId;
							public timeline: androidx.media2.exoplayer.external.Timeline;
							public windowIndex: number;
							public constructor(mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, timeline: androidx.media2.exoplayer.external.Timeline, windowIndex: number);
						}
						export class MediaPeriodQueueTracker extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.analytics.AnalyticsCollector.MediaPeriodQueueTracker>;
							public constructor();
							public onTimelineChanged(timeline: androidx.media2.exoplayer.external.Timeline): void;
							public getMediaPeriodInfo(mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): androidx.media2.exoplayer.external.analytics.AnalyticsCollector.MediaPeriodInfo;
							public onMediaPeriodReleased(mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): boolean;
							public onMediaPeriodCreated(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): void;
							public getReadingMediaPeriod(): androidx.media2.exoplayer.external.analytics.AnalyticsCollector.MediaPeriodInfo;
							public tryResolveWindowIndex(windowIndex: number): androidx.media2.exoplayer.external.analytics.AnalyticsCollector.MediaPeriodInfo;
							public getLastReportedPlayingMediaPeriod(): androidx.media2.exoplayer.external.analytics.AnalyticsCollector.MediaPeriodInfo;
							public onPositionDiscontinuity(reason: number): void;
							public getPlayingMediaPeriod(): androidx.media2.exoplayer.external.analytics.AnalyticsCollector.MediaPeriodInfo;
							public onReadingStarted(mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): void;
							public getLoadingMediaPeriod(): androidx.media2.exoplayer.external.analytics.AnalyticsCollector.MediaPeriodInfo;
							public onSeekStarted(): void;
							public isSeeking(): boolean;
							public onSeekProcessed(): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module analytics {
					export class AnalyticsListener extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.analytics.AnalyticsListener>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.analytics.AnalyticsListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onPlayerStateChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, boolean1: boolean, int2: number): void;
							onTimelineChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number): void;
							onPositionDiscontinuity(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number): void;
							onSeekStarted(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
							onSeekProcessed(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
							onPlaybackParametersChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, playbackParameters1: androidx.media2.exoplayer.external.PlaybackParameters): void;
							onRepeatModeChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number): void;
							onShuffleModeChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, boolean1: boolean): void;
							onLoadingChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, boolean1: boolean): void;
							onPlayerError(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, exoPlaybackException1: androidx.media2.exoplayer.external.ExoPlaybackException): void;
							onTracksChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, trackGroupArray1: androidx.media2.exoplayer.external.source.TrackGroupArray, trackSelectionArray2: androidx.media2.exoplayer.external.trackselection.TrackSelectionArray): void;
							onLoadStarted(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, loadEventInfo1: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
							onLoadCompleted(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, loadEventInfo1: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
							onLoadCanceled(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, loadEventInfo1: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
							onLoadError(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, loadEventInfo1: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData, iOException3: java.io.IOException, boolean4: boolean): void;
							onDownstreamFormatChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, mediaLoadData1: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
							onUpstreamDiscarded(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, mediaLoadData1: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
							onMediaPeriodCreated(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
							onMediaPeriodReleased(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
							onReadingStarted(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
							onBandwidthEstimate(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number, long2: number, long3: number): void;
							onSurfaceSizeChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number, int2: number): void;
							onMetadata(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, metadata1: androidx.media2.exoplayer.external.metadata.Metadata): void;
							onDecoderEnabled(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number, decoderCounters2: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
							onDecoderInitialized(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number, string2: string, long3: number): void;
							onDecoderInputFormatChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number, format2: androidx.media2.exoplayer.external.Format): void;
							onDecoderDisabled(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number, decoderCounters2: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
							onAudioSessionId(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number): void;
							onAudioAttributesChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, audioAttributes1: androidx.media2.exoplayer.external.audio.AudioAttributes): void;
							onVolumeChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, float1: number): void;
							onAudioUnderrun(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number, long2: number, long3: number): void;
							onDroppedVideoFrames(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number, long2: number): void;
							onVideoSizeChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number, int2: number, int3: number, float4: number): void;
							onRenderedFirstFrame(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, surface1: globalAndroid.view.Surface): void;
							onDrmSessionAcquired(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
							onDrmKeysLoaded(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
							onDrmSessionManagerError(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, exception1: java.lang.Exception): void;
							onDrmKeysRestored(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
							onDrmKeysRemoved(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
							onDrmSessionReleased(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						});
						public constructor();
						public onDrmSessionAcquired(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onDecoderEnabled(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number, decoderCounters2: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
						public onDroppedVideoFrames(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number, long2: number): void;
						public onDecoderInitialized(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number, string2: string, long3: number): void;
						public onMetadata(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, metadata1: androidx.media2.exoplayer.external.metadata.Metadata): void;
						public onDrmKeysRestored(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onMediaPeriodReleased(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onDecoderDisabled(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number, decoderCounters2: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
						public onVideoSizeChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number, int2: number, int3: number, float4: number): void;
						public onDrmKeysLoaded(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onPlayerError(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, exoPlaybackException1: androidx.media2.exoplayer.external.ExoPlaybackException): void;
						public onPlaybackParametersChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, playbackParameters1: androidx.media2.exoplayer.external.PlaybackParameters): void;
						public onTracksChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, trackGroupArray1: androidx.media2.exoplayer.external.source.TrackGroupArray, trackSelectionArray2: androidx.media2.exoplayer.external.trackselection.TrackSelectionArray): void;
						public onSurfaceSizeChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number, int2: number): void;
						public onDecoderInputFormatChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number, format2: androidx.media2.exoplayer.external.Format): void;
						public onTimelineChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number): void;
						public onUpstreamDiscarded(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, mediaLoadData1: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public onDrmSessionReleased(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onRenderedFirstFrame(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, surface1: globalAndroid.view.Surface): void;
						public onLoadCompleted(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, loadEventInfo1: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public onPlayerStateChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, boolean1: boolean, int2: number): void;
						public onVolumeChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, float1: number): void;
						public onSeekProcessed(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onShuffleModeChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, boolean1: boolean): void;
						public onDrmSessionManagerError(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, exception1: java.lang.Exception): void;
						public onAudioSessionId(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number): void;
						public onDownstreamFormatChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, mediaLoadData1: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public onReadingStarted(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onSeekStarted(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onLoadStarted(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, loadEventInfo1: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public onLoadError(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, loadEventInfo1: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData, iOException3: java.io.IOException, boolean4: boolean): void;
						public onAudioAttributesChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, audioAttributes1: androidx.media2.exoplayer.external.audio.AudioAttributes): void;
						public onMediaPeriodCreated(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onAudioUnderrun(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number, long2: number, long3: number): void;
						public onLoadCanceled(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, loadEventInfo1: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public onDrmKeysRemoved(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onPositionDiscontinuity(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number): void;
						public onRepeatModeChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number): void;
						public onBandwidthEstimate(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number, long2: number, long3: number): void;
						public onLoadingChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, boolean1: boolean): void;
					}
						export module  {
					export module AnalyticsListener {
							export abstract class CC extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.analytics.AnalyticsListener..CC>;
								public static onPlayerError$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, error: androidx.media2.exoplayer.external.ExoPlaybackException): void;
								public static onRenderedFirstFrame$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, surface: globalAndroid.view.Surface): void;
								public static onLoadCompleted$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, loadEventInfo: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
								public static onDrmKeysLoaded$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
								public static onDecoderInitialized$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, trackType: number, decoderName: string, initializationDurationMs: number): void;
								public static onLoadingChanged$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, isLoading: boolean): void;
								public static onDrmSessionReleased$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
								public static onLoadCanceled$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, loadEventInfo: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
								public static onSurfaceSizeChanged$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, width: number, height: number): void;
								public static onDrmSessionManagerError$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, error: java.lang.Exception): void;
								public static onDownstreamFormatChanged$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
								public static onRepeatModeChanged$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, repeatMode: number): void;
								public static onMediaPeriodCreated$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
								public static onAudioAttributesChanged$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, audioAttributes: androidx.media2.exoplayer.external.audio.AudioAttributes): void;
								public static onDecoderInputFormatChanged$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, trackType: number, format: androidx.media2.exoplayer.external.Format): void;
								public static onSeekProcessed$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
								public static onMediaPeriodReleased$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
								public static onMetadata$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, metadata: androidx.media2.exoplayer.external.metadata.Metadata): void;
								public static onLoadStarted$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, loadEventInfo: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
								public static onShuffleModeChanged$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, shuffleModeEnabled: boolean): void;
								public static onUpstreamDiscarded$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
								public static onReadingStarted$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
								public static onDecoderEnabled$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, trackType: number, decoderCounters: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
								public static onDecoderDisabled$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, trackType: number, decoderCounters: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
								public static onDrmKeysRemoved$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
								public static onPlaybackParametersChanged$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, playbackParameters: androidx.media2.exoplayer.external.PlaybackParameters): void;
								public static onAudioSessionId$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, audioSessionId: number): void;
								public static onVolumeChanged$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, volume: number): void;
								public static onVideoSizeChanged$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, width: number, height: number, unappliedRotationDegrees: number, pixelWidthHeightRatio: number): void;
								public static onDrmSessionAcquired$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
								public static onDrmKeysRestored$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
								public static onDroppedVideoFrames$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, droppedFrames: number, elapsedMs: number): void;
								public static onLoadError$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, loadEventInfo: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData, error: java.io.IOException, wasCanceled: boolean): void;
								public static onPositionDiscontinuity$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, reason: number): void;
								public static onAudioUnderrun$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, bufferSize: number, bufferSizeMs: number, elapsedSinceLastFeedMs: number): void;
								public static onTracksChanged$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, trackGroups: androidx.media2.exoplayer.external.source.TrackGroupArray, trackSelections: androidx.media2.exoplayer.external.trackselection.TrackSelectionArray): void;
								public static onPlayerStateChanged$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, playWhenReady: boolean, playbackState: number): void;
								public static onTimelineChanged$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, reason: number): void;
								public static onSeekStarted$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
								public static onBandwidthEstimate$$dflt$$(this0: androidx.media2.exoplayer.external.analytics.AnalyticsListener, eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, totalLoadTimeMs: number, totalBytesLoaded: number, bitrateEstimate: number): void;
							}
						}
						export class EventTime extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime>;
							public realtimeMs: number;
							public timeline: androidx.media2.exoplayer.external.Timeline;
							public windowIndex: number;
							public mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId;
							public eventPlaybackPositionMs: number;
							public currentPlaybackPositionMs: number;
							public totalBufferedDurationMs: number;
							public constructor(realtimeMs: number, timeline: androidx.media2.exoplayer.external.Timeline, windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, eventPlaybackPositionMs: number, currentPlaybackPositionMs: number, totalBufferedDurationMs: number);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module analytics {
					export abstract class DefaultAnalyticsListener extends java.lang.Object implements androidx.media2.exoplayer.external.analytics.AnalyticsListener {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.analytics.DefaultAnalyticsListener>;
						public onDrmSessionAcquired(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onDecoderEnabled(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number, decoderCounters2: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
						public onDroppedVideoFrames(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number, long2: number): void;
						public onDecoderInitialized(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number, string2: string, long3: number): void;
						public onMetadata(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, metadata1: androidx.media2.exoplayer.external.metadata.Metadata): void;
						public onDrmKeysRestored(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onMediaPeriodReleased(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onDecoderDisabled(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number, decoderCounters2: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
						public onVideoSizeChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number, int2: number, int3: number, float4: number): void;
						public onDrmKeysLoaded(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onPlayerError(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, exoPlaybackException1: androidx.media2.exoplayer.external.ExoPlaybackException): void;
						public onPlaybackParametersChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, playbackParameters1: androidx.media2.exoplayer.external.PlaybackParameters): void;
						public onTracksChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, trackGroupArray1: androidx.media2.exoplayer.external.source.TrackGroupArray, trackSelectionArray2: androidx.media2.exoplayer.external.trackselection.TrackSelectionArray): void;
						public onSurfaceSizeChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number, int2: number): void;
						public onDecoderInputFormatChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number, format2: androidx.media2.exoplayer.external.Format): void;
						public onTimelineChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number): void;
						public onUpstreamDiscarded(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, mediaLoadData1: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public onDrmSessionReleased(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public constructor();
						public onRenderedFirstFrame(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, surface1: globalAndroid.view.Surface): void;
						public onLoadCompleted(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, loadEventInfo1: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public onPlayerStateChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, boolean1: boolean, int2: number): void;
						public onVolumeChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, float1: number): void;
						public onSeekProcessed(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onShuffleModeChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, boolean1: boolean): void;
						public onDrmSessionManagerError(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, exception1: java.lang.Exception): void;
						public onAudioSessionId(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number): void;
						public onDownstreamFormatChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, mediaLoadData1: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public onReadingStarted(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onSeekStarted(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onLoadStarted(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, loadEventInfo1: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public onLoadError(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, loadEventInfo1: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData, iOException3: java.io.IOException, boolean4: boolean): void;
						public onAudioAttributesChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, audioAttributes1: androidx.media2.exoplayer.external.audio.AudioAttributes): void;
						public onMediaPeriodCreated(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onAudioUnderrun(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number, long2: number, long3: number): void;
						public onLoadCanceled(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, loadEventInfo1: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public onDrmKeysRemoved(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onPositionDiscontinuity(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number): void;
						public onRepeatModeChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number): void;
						public onBandwidthEstimate(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number, long2: number, long3: number): void;
						public onLoadingChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, boolean1: boolean): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module analytics {
					export class DefaultPlaybackSessionManager extends java.lang.Object implements androidx.media2.exoplayer.external.analytics.PlaybackSessionManager {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.analytics.DefaultPlaybackSessionManager>;
						public handleTimelineUpdate(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public constructor();
						public handlePositionDiscontinuity(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, reason: number): void;
						public setListener(listener: androidx.media2.exoplayer.external.analytics.PlaybackSessionManager.Listener): void;
						public updateSessions(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public getSessionForMediaPeriodId(timeline: androidx.media2.exoplayer.external.Timeline, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): string;
						public belongsToSession(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, sessionId: string): boolean;
					}
					export module DefaultPlaybackSessionManager {
						export class SessionDescriptor extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.analytics.DefaultPlaybackSessionManager.SessionDescriptor>;
							public belongsToSession(eventWindowIndex: number, eventMediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): boolean;
							public isFinishedAtEventTime(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): boolean;
							public maybeSetWindowSequenceNumber(eventWindowIndex: number, eventMediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): void;
							public constructor(param0: androidx.media2.exoplayer.external.analytics.DefaultPlaybackSessionManager, sessionId: string, windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId);
							public tryResolvingToNewTimeline(oldTimeline: androidx.media2.exoplayer.external.Timeline, newTimeline: androidx.media2.exoplayer.external.Timeline): boolean;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module analytics {
					export class PlaybackSessionManager extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.analytics.PlaybackSessionManager>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.analytics.PlaybackSessionManager interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setListener(listener0: androidx.media2.exoplayer.external.analytics.PlaybackSessionManager.Listener): void;
							getSessionForMediaPeriodId(timeline0: androidx.media2.exoplayer.external.Timeline, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): string;
							belongsToSession(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, string1: string): boolean;
							updateSessions(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
							handleTimelineUpdate(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
							handlePositionDiscontinuity(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number): void;
						});
						public constructor();
						public belongsToSession(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, string1: string): boolean;
						public getSessionForMediaPeriodId(timeline0: androidx.media2.exoplayer.external.Timeline, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): string;
						public handlePositionDiscontinuity(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number): void;
						public handleTimelineUpdate(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public setListener(listener0: androidx.media2.exoplayer.external.analytics.PlaybackSessionManager.Listener): void;
						public updateSessions(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
					}
					export module PlaybackSessionManager {
						export class Listener extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.analytics.PlaybackSessionManager.Listener>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.analytics.PlaybackSessionManager$Listener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onSessionCreated(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, string1: string): void;
								onSessionActive(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, string1: string): void;
								onAdPlaybackStarted(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, string1: string, string2: string): void;
								onSessionFinished(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, string1: string, boolean2: boolean): void;
							});
							public constructor();
							public onSessionCreated(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, string1: string): void;
							public onSessionActive(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, string1: string): void;
							public onSessionFinished(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, string1: string, boolean2: boolean): void;
							public onAdPlaybackStarted(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, string1: string, string2: string): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module analytics {
					export class PlaybackStats extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.analytics.PlaybackStats>;
						public static PLAYBACK_STATE_NOT_STARTED: number;
						public static PLAYBACK_STATE_JOINING_BACKGROUND: number;
						public static PLAYBACK_STATE_JOINING_FOREGROUND: number;
						public static PLAYBACK_STATE_PLAYING: number;
						public static PLAYBACK_STATE_PAUSED: number;
						public static PLAYBACK_STATE_SEEKING: number;
						public static PLAYBACK_STATE_BUFFERING: number;
						public static PLAYBACK_STATE_PAUSED_BUFFERING: number;
						public static PLAYBACK_STATE_SEEK_BUFFERING: number;
						public static PLAYBACK_STATE_ENDED: number;
						public static PLAYBACK_STATE_STOPPED: number;
						public static PLAYBACK_STATE_FAILED: number;
						public static PLAYBACK_STATE_SUSPENDED: number;
						public static EMPTY: androidx.media2.exoplayer.external.analytics.PlaybackStats;
						public playbackCount: number;
						public playbackStateHistory: java.util.List<globalAndroid.util.Pair<androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime,java.lang.Integer>>;
						public mediaTimeHistory: java.util.List<native.Array<number>>;
						public firstReportedTimeMs: number;
						public foregroundPlaybackCount: number;
						public abandonedBeforeReadyCount: number;
						public endedCount: number;
						public backgroundJoiningCount: number;
						public totalValidJoinTimeMs: number;
						public validJoinTimeCount: number;
						public totalPauseCount: number;
						public totalPauseBufferCount: number;
						public totalSeekCount: number;
						public totalRebufferCount: number;
						public maxRebufferTimeMs: number;
						public adPlaybackCount: number;
						public videoFormatHistory: java.util.List<globalAndroid.util.Pair<androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime,androidx.media2.exoplayer.external.Format>>;
						public audioFormatHistory: java.util.List<globalAndroid.util.Pair<androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime,androidx.media2.exoplayer.external.Format>>;
						public totalVideoFormatHeightTimeMs: number;
						public totalVideoFormatHeightTimeProduct: number;
						public totalVideoFormatBitrateTimeMs: number;
						public totalVideoFormatBitrateTimeProduct: number;
						public totalAudioFormatTimeMs: number;
						public totalAudioFormatBitrateTimeProduct: number;
						public initialVideoFormatHeightCount: number;
						public initialVideoFormatBitrateCount: number;
						public totalInitialVideoFormatHeight: number;
						public totalInitialVideoFormatBitrate: number;
						public initialAudioFormatBitrateCount: number;
						public totalInitialAudioFormatBitrate: number;
						public totalBandwidthTimeMs: number;
						public totalBandwidthBytes: number;
						public totalDroppedFrames: number;
						public totalAudioUnderruns: number;
						public fatalErrorPlaybackCount: number;
						public fatalErrorCount: number;
						public nonFatalErrorCount: number;
						public fatalErrorHistory: java.util.List<globalAndroid.util.Pair<androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime,java.lang.Exception>>;
						public nonFatalErrorHistory: java.util.List<globalAndroid.util.Pair<androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime,java.lang.Exception>>;
						public getMeanSeekTimeMs(): number;
						public getMeanTimeBetweenRebuffers(): number;
						public getMeanInitialVideoFormatBitrate(): number;
						public getMeanSingleRebufferTimeMs(): number;
						public getAudioUnderrunRate(): number;
						public getJoinTimeRatio(): number;
						public getMeanTimeBetweenFatalErrors(): number;
						public getMeanVideoFormatHeight(): number;
						public getTotalElapsedTimeMs(): number;
						public getWaitTimeRatio(): number;
						public getPlaybackStateDurationMs(playbackState: number): number;
						public getFatalErrorRate(): number;
						public getTotalPlayTimeMs(): number;
						public getMeanNonFatalErrorCount(): number;
						public getMeanPlayTimeMs(): number;
						public getFatalErrorRatio(): number;
						public static merge(playbackStats: native.Array<androidx.media2.exoplayer.external.analytics.PlaybackStats>): androidx.media2.exoplayer.external.analytics.PlaybackStats;
						public getDroppedFramesRate(): number;
						public getMeanWaitTimeMs(): number;
						public getPlaybackStateAtTime(realtimeMs: number): number;
						public getMeanJoinTimeMs(): number;
						public getMeanElapsedTimeMs(): number;
						public getTotalPlayAndWaitTimeMs(): number;
						public getMeanPauseCount(): number;
						public getRebufferTimeRatio(): number;
						public getMeanPauseBufferCount(): number;
						public getMeanTimeBetweenNonFatalErrors(): number;
						public getRebufferRate(): number;
						public getMeanInitialAudioFormatBitrate(): number;
						public getAbandonedBeforeReadyRatio(): number;
						public getMeanPausedTimeMs(): number;
						public getTotalWaitTimeMs(): number;
						public getTotalPausedTimeMs(): number;
						public getMeanRebufferCount(): number;
						public getTotalSeekTimeMs(): number;
						public getTotalRebufferTimeMs(): number;
						public getMeanBandwidth(): number;
						public getMeanRebufferTimeMs(): number;
						public getMeanVideoFormatBitrate(): number;
						public getMediaTimeMsAtRealtimeMs(realtimeMs: number): number;
						public getMeanAudioFormatBitrate(): number;
						public getSeekTimeRatio(): number;
						public getNonFatalErrorRate(): number;
						public getMeanSingleSeekTimeMs(): number;
						public getMeanPlayAndWaitTimeMs(): number;
						public getMeanSeekCount(): number;
						public getEndedRatio(): number;
						public getTotalJoinTimeMs(): number;
						public getMeanInitialVideoFormatHeight(): number;
					}
					export module PlaybackStats {
						export class PlaybackState extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.analytics.PlaybackStats.PlaybackState>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.analytics.PlaybackStats$PlaybackState interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module analytics {
					export class PlaybackStatsListener extends java.lang.Object implements androidx.media2.exoplayer.external.analytics.AnalyticsListener, androidx.media2.exoplayer.external.analytics.PlaybackSessionManager.Listener {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.analytics.PlaybackStatsListener>;
						public onDrmSessionManagerError(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, error: java.lang.Exception): void;
						public onPlayerError(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, error: androidx.media2.exoplayer.external.ExoPlaybackException): void;
						public onDroppedVideoFrames(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, droppedFrames: number, elapsedMs: number): void;
						public onDrmSessionAcquired(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onDecoderEnabled(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number, decoderCounters2: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
						public onTimelineChanged(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, reason: number): void;
						public getPlaybackStats(): androidx.media2.exoplayer.external.analytics.PlaybackStats;
						public onDecoderInitialized(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number, string2: string, long3: number): void;
						public onMetadata(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, metadata1: androidx.media2.exoplayer.external.metadata.Metadata): void;
						public onDrmKeysRestored(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onSeekProcessed(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onLoadStarted(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, loadEventInfo: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public finishAllSessions(): void;
						public constructor(keepHistory: boolean, callback: androidx.media2.exoplayer.external.analytics.PlaybackStatsListener.Callback);
						public onMediaPeriodReleased(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onSessionActive(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, session: string): void;
						public onDecoderDisabled(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number, decoderCounters2: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
						public onSessionFinished(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, session: string, automaticTransition: boolean): void;
						public onDownstreamFormatChanged(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public onDrmKeysLoaded(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onLoadError(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, loadEventInfo: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData, error: java.io.IOException, wasCanceled: boolean): void;
						public onSurfaceSizeChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number, int2: number): void;
						public onVideoSizeChanged(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, width: number, height: number, unappliedRotationDegrees: number, pixelWidthHeightRatio: number): void;
						public onBandwidthEstimate(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, totalLoadTimeMs: number, totalBytesLoaded: number, bitrateEstimate: number): void;
						public onPlaybackParametersChanged(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, playbackParameters: androidx.media2.exoplayer.external.PlaybackParameters): void;
						public onDecoderInputFormatChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number, format2: androidx.media2.exoplayer.external.Format): void;
						public onPlayerStateChanged(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, playWhenReady: boolean, playbackState: number): void;
						public onPositionDiscontinuity(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, reason: number): void;
						public onUpstreamDiscarded(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, mediaLoadData1: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public onDrmSessionReleased(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onRenderedFirstFrame(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, surface1: globalAndroid.view.Surface): void;
						public onLoadCompleted(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, loadEventInfo1: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public onVolumeChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, float1: number): void;
						public onShuffleModeChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, boolean1: boolean): void;
						public onAudioSessionId(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number): void;
						public onAdPlaybackStarted(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, contentSession: string, adSession: string): void;
						public onReadingStarted(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onAudioAttributesChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, audioAttributes1: androidx.media2.exoplayer.external.audio.AudioAttributes): void;
						public onMediaPeriodCreated(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onAudioUnderrun(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, bufferSize: number, bufferSizeMs: number, elapsedSinceLastFeedMs: number): void;
						public onLoadCanceled(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, loadEventInfo1: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public onDrmKeysRemoved(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onSeekStarted(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onTracksChanged(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, trackGroups: androidx.media2.exoplayer.external.source.TrackGroupArray, trackSelections: androidx.media2.exoplayer.external.trackselection.TrackSelectionArray): void;
						public onRepeatModeChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, int1: number): void;
						public onLoadingChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, boolean1: boolean): void;
						public onSessionCreated(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, session: string): void;
						public getCombinedPlaybackStats(): androidx.media2.exoplayer.external.analytics.PlaybackStats;
					}
					export module PlaybackStatsListener {
						export class Callback extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.analytics.PlaybackStatsListener.Callback>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.analytics.PlaybackStatsListener$Callback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPlaybackStatsReady(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, playbackStats1: androidx.media2.exoplayer.external.analytics.PlaybackStats): void;
							});
							public constructor();
							public onPlaybackStatsReady(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, playbackStats1: androidx.media2.exoplayer.external.analytics.PlaybackStats): void;
						}
						export class PlaybackStatsTracker extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.analytics.PlaybackStatsListener.PlaybackStatsTracker>;
							public onFatalError(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, error: java.lang.Exception): void;
							public onDownstreamFormatChanged(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
							public onAudioUnderrun(): void;
							public onForeground(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
							public onPlaybackSpeedChanged(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, playbackSpeed: number): void;
							public onDroppedVideoFrames(droppedFrames: number): void;
							public onBandwidthData(timeMs: number, bytes: number): void;
							public onNonFatalError(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, error: java.lang.Exception): void;
							public onVideoSizeChanged(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, width: number, height: number): void;
							public constructor(keepHistory: boolean, startTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime);
							public build(isFinal: boolean): androidx.media2.exoplayer.external.analytics.PlaybackStats;
							public onTracksChanged(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, trackSelections: androidx.media2.exoplayer.external.trackselection.TrackSelectionArray): void;
							public onLoadStarted(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
							public onPlayerStateChanged(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, playWhenReady: boolean, playbackState: number, belongsToPlayback: boolean): void;
							public onPositionDiscontinuity(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
							public onSeekStarted(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
							public onSuspended(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, belongsToPlayback: boolean): void;
							public onSeekProcessed(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						}
					}
				}
			}
		}
	}
}


declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module audio {
					export class Ac3Util extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.Ac3Util>;
						public static TRUEHD_RECHUNK_SAMPLE_COUNT: number;
						public static TRUEHD_SYNCFRAME_PREFIX_LENGTH: number;
						public static parseAc3SyncframeSize(data: native.Array<number>): number;
						public static parseAc3SyncframeInfo(data: androidx.media2.exoplayer.external.util.ParsableBitArray): androidx.media2.exoplayer.external.audio.Ac3Util.SyncFrameInfo;
						public static getAc3SyncframeAudioSampleCount(): number;
						public static parseAc3AnnexFFormat(data: androidx.media2.exoplayer.external.util.ParsableByteArray, trackId: string, language: string, drmInitData: androidx.media2.exoplayer.external.drm.DrmInitData): androidx.media2.exoplayer.external.Format;
						public static parseEAc3AnnexFFormat(data: androidx.media2.exoplayer.external.util.ParsableByteArray, trackId: string, language: string, drmInitData: androidx.media2.exoplayer.external.drm.DrmInitData): androidx.media2.exoplayer.external.Format;
						public static findTrueHdSyncframeOffset(buffer: java.nio.ByteBuffer): number;
						public static parseTrueHdSyncframeAudioSampleCount(buffer: java.nio.ByteBuffer, offset: number): number;
						public static parseEAc3SyncframeAudioSampleCount(buffer: java.nio.ByteBuffer): number;
						public static parseTrueHdSyncframeAudioSampleCount(syncframe: native.Array<number>): number;
					}
					export module Ac3Util {
						export class SyncFrameInfo extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.Ac3Util.SyncFrameInfo>;
							public static STREAM_TYPE_UNDEFINED: number;
							public static STREAM_TYPE_TYPE0: number;
							public static STREAM_TYPE_TYPE1: number;
							public static STREAM_TYPE_TYPE2: number;
							public mimeType: string;
							public streamType: number;
							public sampleRate: number;
							public channelCount: number;
							public frameSize: number;
							public sampleCount: number;
						}
						export module SyncFrameInfo {
							export class StreamType extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.Ac3Util.SyncFrameInfo.StreamType>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.audio.Ac3Util$SyncFrameInfo$StreamType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module audio {
					export class Ac4Util extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.Ac4Util>;
						public static AC40_SYNCWORD: number;
						public static AC41_SYNCWORD: number;
						public static HEADER_SIZE_FOR_PARSER: number;
						public static parseAc4SyncframeAudioSampleCount(buffer: java.nio.ByteBuffer): number;
						public static parseAc4SyncframeInfo(data: androidx.media2.exoplayer.external.util.ParsableBitArray): androidx.media2.exoplayer.external.audio.Ac4Util.SyncFrameInfo;
						public static parseAc4SyncframeSize(data: native.Array<number>, syncword: number): number;
						public static parseAc4AnnexEFormat(data: androidx.media2.exoplayer.external.util.ParsableByteArray, trackId: string, language: string, drmInitData: androidx.media2.exoplayer.external.drm.DrmInitData): androidx.media2.exoplayer.external.Format;
						public static getAc4SampleHeader(size: number, buffer: androidx.media2.exoplayer.external.util.ParsableByteArray): void;
					}
					export module Ac4Util {
						export class SyncFrameInfo extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.Ac4Util.SyncFrameInfo>;
							public bitstreamVersion: number;
							public sampleRate: number;
							public channelCount: number;
							public frameSize: number;
							public sampleCount: number;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module audio {
					export class AudioAttributes extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.AudioAttributes>;
						public static DEFAULT: androidx.media2.exoplayer.external.audio.AudioAttributes;
						public contentType: number;
						public flags: number;
						public usage: number;
						public equals(obj: any): boolean;
						public hashCode(): number;
						public getAudioAttributesV21(): any;
					}
					export module AudioAttributes {
						export class Builder extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.AudioAttributes.Builder>;
							public constructor();
							public setUsage(usage: number): androidx.media2.exoplayer.external.audio.AudioAttributes.Builder;
							public setFlags(flags: number): androidx.media2.exoplayer.external.audio.AudioAttributes.Builder;
							public build(): androidx.media2.exoplayer.external.audio.AudioAttributes;
							public setContentType(contentType: number): androidx.media2.exoplayer.external.audio.AudioAttributes.Builder;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module audio {
					export class AudioCapabilities extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.AudioCapabilities>;
						public static DEFAULT_AUDIO_CAPABILITIES: androidx.media2.exoplayer.external.audio.AudioCapabilities;
						public getMaxChannelCount(): number;
						public equals(obj: any): boolean;
						public equals(other: any): boolean;
						public supportsEncoding(encoding: number): boolean;
						public constructor(supportedEncodings: native.Array<number>, maxChannelCount: number);
						public hashCode(): number;
						public static getCapabilities(context: globalAndroid.content.Context): androidx.media2.exoplayer.external.audio.AudioCapabilities;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module audio {
					export class AudioCapabilitiesReceiver extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.AudioCapabilitiesReceiver>;
						public constructor(context: globalAndroid.content.Context, listener: androidx.media2.exoplayer.external.audio.AudioCapabilitiesReceiver.Listener);
						public unregister(): void;
						public register(): androidx.media2.exoplayer.external.audio.AudioCapabilities;
					}
					export module AudioCapabilitiesReceiver {
						export class ExternalSurroundSoundSettingObserver extends globalAndroid.database.ContentObserver {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.AudioCapabilitiesReceiver.ExternalSurroundSoundSettingObserver>;
							public unregister(): void;
							public onChange(selfChange: boolean): void;
							public constructor(handler: globalAndroid.os.Handler);
							public onChange(selfChange: boolean, uri: globalAndroid.net.Uri): void;
							public constructor(param0: androidx.media2.exoplayer.external.audio.AudioCapabilitiesReceiver, handler: globalAndroid.os.Handler, resolver: globalAndroid.content.ContentResolver, settingUri: globalAndroid.net.Uri);
							public register(): void;
						}
						export class HdmiAudioPlugBroadcastReceiver extends globalAndroid.content.BroadcastReceiver {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.AudioCapabilitiesReceiver.HdmiAudioPlugBroadcastReceiver>;
							public onReceive(context: globalAndroid.content.Context, intent: globalAndroid.content.Intent): void;
							public onReceive(context0: globalAndroid.content.Context, intent1: globalAndroid.content.Intent): void;
						}
						export class Listener extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.AudioCapabilitiesReceiver.Listener>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.audio.AudioCapabilitiesReceiver$Listener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onAudioCapabilitiesChanged(audioCapabilities0: androidx.media2.exoplayer.external.audio.AudioCapabilities): void;
							});
							public constructor();
							public onAudioCapabilitiesChanged(audioCapabilities0: androidx.media2.exoplayer.external.audio.AudioCapabilities): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module audio {
					export class AudioDecoderException extends java.lang.Exception {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.AudioDecoderException>;
						public constructor();
						public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						public constructor(message: string, cause: java.lang.Throwable);
						public constructor(cause: java.lang.Throwable);
						public constructor(message: string);
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module audio {
					export class AudioFocusManager extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.AudioFocusManager>;
						public static PLAYER_COMMAND_DO_NOT_PLAY: number;
						public static PLAYER_COMMAND_WAIT_FOR_CALLBACK: number;
						public static PLAYER_COMMAND_PLAY_WHEN_READY: number;
						public handleSetPlayWhenReady(playWhenReady: boolean, playerState: number): number;
						public handlePrepare(playWhenReady: boolean): number;
						public constructor(context: globalAndroid.content.Context, playerControl: androidx.media2.exoplayer.external.audio.AudioFocusManager.PlayerControl);
						public getVolumeMultiplier(): number;
						public setAudioAttributes(audioAttributes: androidx.media2.exoplayer.external.audio.AudioAttributes, playWhenReady: boolean, playerState: number): number;
						public handleStop(): void;
					}
					export module AudioFocusManager {
						export class AudioFocusListener extends java.lang.Object implements globalAndroid.media.AudioManager.OnAudioFocusChangeListener {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.AudioFocusManager.AudioFocusListener>;
							public onAudioFocusChange(focusChange: number): void;
						}
						export class AudioFocusState extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.AudioFocusManager.AudioFocusState>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.audio.AudioFocusManager$AudioFocusState interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
						export class PlayerCommand extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.AudioFocusManager.PlayerCommand>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.audio.AudioFocusManager$PlayerCommand interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
						export class PlayerControl extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.AudioFocusManager.PlayerControl>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.audio.AudioFocusManager$PlayerControl interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								setVolumeMultiplier(float0: number): void;
								executePlayerCommand(int0: number): void;
							});
							public constructor();
							public setVolumeMultiplier(float0: number): void;
							public executePlayerCommand(int0: number): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module audio {
					export class AudioListener extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.AudioListener>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.audio.AudioListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onAudioSessionId(int0: number): void;
							onAudioAttributesChanged(audioAttributes0: androidx.media2.exoplayer.external.audio.AudioAttributes): void;
							onVolumeChanged(float0: number): void;
						});
						public constructor();
						public onAudioAttributesChanged(audioAttributes0: androidx.media2.exoplayer.external.audio.AudioAttributes): void;
						public onVolumeChanged(float0: number): void;
						public onAudioSessionId(int0: number): void;
					}
						export module  {
					export module AudioListener {
							export abstract class CC extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.AudioListener..CC>;
								public static onAudioAttributesChanged$$dflt$$(this0: androidx.media2.exoplayer.external.audio.AudioListener, audioAttributes: androidx.media2.exoplayer.external.audio.AudioAttributes): void;
								public static onVolumeChanged$$dflt$$(this0: androidx.media2.exoplayer.external.audio.AudioListener, volume: number): void;
								public static onAudioSessionId$$dflt$$(this0: androidx.media2.exoplayer.external.audio.AudioListener, audioSessionId: number): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module audio {
					export class AudioProcessor extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.AudioProcessor>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.audio.AudioProcessor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							configure(int0: number, int1: number, int2: number): boolean;
							isActive(): boolean;
							getOutputChannelCount(): number;
							getOutputEncoding(): number;
							getOutputSampleRateHz(): number;
							queueInput(byteBuffer0: java.nio.ByteBuffer): void;
							queueEndOfStream(): void;
							getOutput(): java.nio.ByteBuffer;
							isEnded(): boolean;
							flush(): void;
							reset(): void;
							<clinit>(): void;
						});
						public constructor();
						public static EMPTY_BUFFER: java.nio.ByteBuffer;
						public queueEndOfStream(): void;
						public getOutput(): java.nio.ByteBuffer;
						public getOutputSampleRateHz(): number;
						public flush(): void;
						public getOutputEncoding(): number;
						public configure(int0: number, int1: number, int2: number): boolean;
						public getOutputChannelCount(): number;
						public isEnded(): boolean;
						public queueInput(byteBuffer0: java.nio.ByteBuffer): void;
						public reset(): void;
						public isActive(): boolean;
					}
					export module AudioProcessor {
						export class UnhandledFormatException extends java.lang.Exception {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.AudioProcessor.UnhandledFormatException>;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(message: string);
							public constructor(sampleRateHz: number, channelCount: number, encoding: number);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module audio {
					export class AudioRendererEventListener extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.AudioRendererEventListener>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.audio.AudioRendererEventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onAudioEnabled(decoderCounters0: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
							onAudioSessionId(int0: number): void;
							onAudioDecoderInitialized(string0: string, long1: number, long2: number): void;
							onAudioInputFormatChanged(format0: androidx.media2.exoplayer.external.Format): void;
							onAudioSinkUnderrun(int0: number, long1: number, long2: number): void;
							onAudioDisabled(decoderCounters0: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
						});
						public constructor();
						public onAudioEnabled(decoderCounters0: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
						public onAudioDisabled(decoderCounters0: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
						public onAudioDecoderInitialized(string0: string, long1: number, long2: number): void;
						public onAudioSessionId(int0: number): void;
						public onAudioInputFormatChanged(format0: androidx.media2.exoplayer.external.Format): void;
						public onAudioSinkUnderrun(int0: number, long1: number, long2: number): void;
					}
						export module  {
					export module AudioRendererEventListener {
							export abstract class CC extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.AudioRendererEventListener..CC>;
								public static onAudioInputFormatChanged$$dflt$$(this0: androidx.media2.exoplayer.external.audio.AudioRendererEventListener, format: androidx.media2.exoplayer.external.Format): void;
								public static onAudioSinkUnderrun$$dflt$$(this0: androidx.media2.exoplayer.external.audio.AudioRendererEventListener, bufferSize: number, bufferSizeMs: number, elapsedSinceLastFeedMs: number): void;
								public static onAudioEnabled$$dflt$$(this0: androidx.media2.exoplayer.external.audio.AudioRendererEventListener, counters: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
								public static onAudioDisabled$$dflt$$(this0: androidx.media2.exoplayer.external.audio.AudioRendererEventListener, counters: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
								public static onAudioSessionId$$dflt$$(this0: androidx.media2.exoplayer.external.audio.AudioRendererEventListener, audioSessionId: number): void;
								public static onAudioDecoderInitialized$$dflt$$(this0: androidx.media2.exoplayer.external.audio.AudioRendererEventListener, decoderName: string, initializedTimestampMs: number, initializationDurationMs: number): void;
							}
						}
						export class EventDispatcher extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.AudioRendererEventListener.EventDispatcher>;
							public constructor(handler: globalAndroid.os.Handler, listener: androidx.media2.exoplayer.external.audio.AudioRendererEventListener);
							public enabled(decoderCounters: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
							public audioTrackUnderrun(bufferSize: number, bufferSizeMs: number, elapsedSinceLastFeedMs: number): void;
							public disabled(counters: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
							public inputFormatChanged(format: androidx.media2.exoplayer.external.Format): void;
							public decoderInitialized(decoderName: string, initializedTimestampMs: number, initializationDurationMs: number): void;
							public audioSessionId(audioSessionId: number): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module audio {
					export class AudioSink extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.AudioSink>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.audio.AudioSink interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setListener(listener0: androidx.media2.exoplayer.external.audio.AudioSink.Listener): void;
							supportsOutput(int0: number, int1: number): boolean;
							getCurrentPositionUs(boolean0: boolean): number;
							configure(int0: number, int1: number, int2: number, int3: number, ints4: native.Array<number>, int5: number, int6: number): void;
							play(): void;
							handleDiscontinuity(): void;
							handleBuffer(byteBuffer0: java.nio.ByteBuffer, long1: number): boolean;
							playToEndOfStream(): void;
							isEnded(): boolean;
							hasPendingData(): boolean;
							setPlaybackParameters(playbackParameters0: androidx.media2.exoplayer.external.PlaybackParameters): void;
							getPlaybackParameters(): androidx.media2.exoplayer.external.PlaybackParameters;
							setAudioAttributes(audioAttributes0: androidx.media2.exoplayer.external.audio.AudioAttributes): void;
							setAudioSessionId(int0: number): void;
							setAuxEffectInfo(auxEffectInfo0: androidx.media2.exoplayer.external.audio.AuxEffectInfo): void;
							enableTunnelingV21(int0: number): void;
							disableTunneling(): void;
							setVolume(float0: number): void;
							pause(): void;
							flush(): void;
							reset(): void;
						});
						public constructor();
						public static CURRENT_POSITION_NOT_SET: number;
						public supportsOutput(int0: number, int1: number): boolean;
						public enableTunnelingV21(int0: number): void;
						public configure(int0: number, int1: number, int2: number, int3: number, ints4: native.Array<number>, int5: number, int6: number): void;
						public playToEndOfStream(): void;
						public pause(): void;
						public setAudioAttributes(audioAttributes0: androidx.media2.exoplayer.external.audio.AudioAttributes): void;
						public flush(): void;
						public handleDiscontinuity(): void;
						public getCurrentPositionUs(boolean0: boolean): number;
						public handleBuffer(byteBuffer0: java.nio.ByteBuffer, long1: number): boolean;
						public hasPendingData(): boolean;
						public setAudioSessionId(int0: number): void;
						public isEnded(): boolean;
						public setAuxEffectInfo(auxEffectInfo0: androidx.media2.exoplayer.external.audio.AuxEffectInfo): void;
						public disableTunneling(): void;
						public play(): void;
						public setPlaybackParameters(playbackParameters0: androidx.media2.exoplayer.external.PlaybackParameters): void;
						public getPlaybackParameters(): androidx.media2.exoplayer.external.PlaybackParameters;
						public setVolume(float0: number): void;
						public reset(): void;
						public setListener(listener0: androidx.media2.exoplayer.external.audio.AudioSink.Listener): void;
					}
					export module AudioSink {
						export class ConfigurationException extends java.lang.Exception {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.AudioSink.ConfigurationException>;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(message: string);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
						export class InitializationException extends java.lang.Exception {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.AudioSink.InitializationException>;
							public audioTrackState: number;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(message: string);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
							public constructor(audioTrackState: number, sampleRate: number, channelConfig: number, bufferSize: number);
						}
						export class Listener extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.AudioSink.Listener>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.audio.AudioSink$Listener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onAudioSessionId(int0: number): void;
								onPositionDiscontinuity(): void;
								onUnderrun(int0: number, long1: number, long2: number): void;
							});
							public constructor();
							public onAudioSessionId(int0: number): void;
							public onUnderrun(int0: number, long1: number, long2: number): void;
							public onPositionDiscontinuity(): void;
						}
						export class WriteException extends java.lang.Exception {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.AudioSink.WriteException>;
							public errorCode: number;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(message: string);
							public constructor(errorCode: number);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module audio {
					export class AudioTimestampPoller extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.AudioTimestampPoller>;
						public getTimestampPositionFrames(): number;
						public acceptTimestamp(): void;
						public hasTimestamp(): boolean;
						public rejectTimestamp(): void;
						public getTimestampSystemTimeUs(): number;
						public constructor(audioTrack: globalAndroid.media.AudioTrack);
						public isTimestampAdvancing(): boolean;
						public maybePollTimestamp(systemTimeUs: number): boolean;
						public reset(): void;
					}
					export module AudioTimestampPoller {
						export class AudioTimestampV19 extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.AudioTimestampPoller.AudioTimestampV19>;
							public getTimestampSystemTimeUs(): number;
							public maybeUpdateTimestamp(): boolean;
							public constructor(audioTrack: globalAndroid.media.AudioTrack);
							public getTimestampPositionFrames(): number;
						}
						export class State extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.AudioTimestampPoller.State>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.audio.AudioTimestampPoller$State interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module audio {
					export class AudioTrackPositionTracker extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.AudioTrackPositionTracker>;
						public getCurrentPositionUs(sourceEnded: boolean): number;
						public start(): void;
						public isPlaying(): boolean;
						public setAudioTrack(audioTrack: globalAndroid.media.AudioTrack, outputEncoding: number, outputPcmFrameSize: number, bufferSize: number): void;
						public mayHandleBuffer(writtenFrames: number): boolean;
						public constructor(listener: androidx.media2.exoplayer.external.audio.AudioTrackPositionTracker.Listener);
						public isStalled(writtenFrames: number): boolean;
						public hasPendingData(writtenFrames: number): boolean;
						public handleEndOfStream(writtenFrames: number): void;
						public getAvailableBufferSize(writtenBytes: number): number;
						public pause(): boolean;
						public reset(): void;
					}
					export module AudioTrackPositionTracker {
						export class Listener extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.AudioTrackPositionTracker.Listener>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.audio.AudioTrackPositionTracker$Listener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPositionFramesMismatch(long0: number, long1: number, long2: number, long3: number): void;
								onSystemTimeUsMismatch(long0: number, long1: number, long2: number, long3: number): void;
								onInvalidLatency(long0: number): void;
								onUnderrun(int0: number, long1: number): void;
							});
							public constructor();
							public onInvalidLatency(long0: number): void;
							public onUnderrun(int0: number, long1: number): void;
							public onPositionFramesMismatch(long0: number, long1: number, long2: number, long3: number): void;
							public onSystemTimeUsMismatch(long0: number, long1: number, long2: number, long3: number): void;
						}
						export class PlayState extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.AudioTrackPositionTracker.PlayState>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.audio.AudioTrackPositionTracker$PlayState interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module audio {
					export class AuxEffectInfo extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.AuxEffectInfo>;
						public static NO_AUX_EFFECT_ID: number;
						public effectId: number;
						public sendLevel: number;
						public equals(obj: any): boolean;
						public constructor(effectId: number, sendLevel: number);
						public hashCode(): number;
						public equals(o: any): boolean;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module audio {
					export abstract class BaseAudioProcessor extends java.lang.Object implements androidx.media2.exoplayer.external.audio.AudioProcessor {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.BaseAudioProcessor>;
						public sampleRateHz: number;
						public channelCount: number;
						public encoding: number;
						public constructor();
						public queueEndOfStream(): void;
						public replaceOutputBuffer(count: number): java.nio.ByteBuffer;
						public getOutputSampleRateHz(): number;
						public setInputFormat(sampleRateHz: number, channelCount: number, encoding: number): boolean;
						public flush(): void;
						public getOutputEncoding(): number;
						public onQueueEndOfStream(): void;
						public hasPendingOutput(): boolean;
						public onFlush(): void;
						public getOutput(): java.nio.ByteBuffer;
						public onReset(): void;
						public getOutputChannelCount(): number;
						public isEnded(): boolean;
						public configure(int0: number, int1: number, int2: number): boolean;
						public queueInput(byteBuffer0: java.nio.ByteBuffer): void;
						public reset(): void;
						public isActive(): boolean;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module audio {
					export class ChannelMappingAudioProcessor extends androidx.media2.exoplayer.external.audio.BaseAudioProcessor {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.ChannelMappingAudioProcessor>;
						public queueInput(inputBuffer: java.nio.ByteBuffer): void;
						public queueEndOfStream(): void;
						public getOutputSampleRateHz(): number;
						public flush(): void;
						public getOutputEncoding(): number;
						public setChannelMap(outputChannels: native.Array<number>): void;
						public getOutput(): java.nio.ByteBuffer;
						public configure(sampleRateHz: number, channelCount: number, encoding: number): boolean;
						public onReset(): void;
						public getOutputChannelCount(): number;
						public isEnded(): boolean;
						public reset(): void;
						public isActive(): boolean;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module audio {
					export class DefaultAudioSink extends java.lang.Object implements androidx.media2.exoplayer.external.audio.AudioSink {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.DefaultAudioSink>;
						public static enablePreV21AudioSessionWorkaround: boolean;
						public static failOnSpuriousAudioTimestamp: boolean;
						public setAuxEffectInfo(auxEffectInfo: androidx.media2.exoplayer.external.audio.AuxEffectInfo): void;
						public getCurrentPositionUs(sourceEnded: boolean): number;
						public playToEndOfStream(): void;
						public setAudioAttributes(audioAttributes: androidx.media2.exoplayer.external.audio.AudioAttributes): void;
						public pause(): void;
						public constructor(audioCapabilities: androidx.media2.exoplayer.external.audio.AudioCapabilities, audioProcessors: native.Array<androidx.media2.exoplayer.external.audio.AudioProcessor>);
						public flush(): void;
						public handleDiscontinuity(): void;
						public handleBuffer(buffer: java.nio.ByteBuffer, presentationTimeUs: number): boolean;
						public supportsOutput(channelCount: number, encoding: number): boolean;
						public setAudioSessionId(audioSessionId: number): void;
						public enableTunnelingV21(tunnelingAudioSessionId: number): void;
						public constructor(audioCapabilities: androidx.media2.exoplayer.external.audio.AudioCapabilities, audioProcessorChain: androidx.media2.exoplayer.external.audio.DefaultAudioSink.AudioProcessorChain, enableConvertHighResIntPcmToFloat: boolean);
						public setListener(listener: androidx.media2.exoplayer.external.audio.AudioSink.Listener): void;
						public setPlaybackParameters(playbackParameters: androidx.media2.exoplayer.external.PlaybackParameters): void;
						public hasPendingData(): boolean;
						public isEnded(): boolean;
						public disableTunneling(): void;
						public setVolume(volume: number): void;
						public configure(inputEncoding: number, inputChannelCount: number, inputSampleRate: number, specifiedBufferSize: number, outputChannels: native.Array<number>, trimStartFrames: number, trimEndFrames: number): void;
						public play(): void;
						public getPlaybackParameters(): androidx.media2.exoplayer.external.PlaybackParameters;
						public constructor(audioCapabilities: androidx.media2.exoplayer.external.audio.AudioCapabilities, audioProcessors: native.Array<androidx.media2.exoplayer.external.audio.AudioProcessor>, enableConvertHighResIntPcmToFloat: boolean);
						public reset(): void;
					}
					export module DefaultAudioSink {
						export class AudioProcessorChain extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.DefaultAudioSink.AudioProcessorChain>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.audio.DefaultAudioSink$AudioProcessorChain interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getAudioProcessors(): native.Array<androidx.media2.exoplayer.external.audio.AudioProcessor>;
								applyPlaybackParameters(playbackParameters0: androidx.media2.exoplayer.external.PlaybackParameters): androidx.media2.exoplayer.external.PlaybackParameters;
								getMediaDuration(long0: number): number;
								getSkippedOutputFrameCount(): number;
							});
							public constructor();
							public getMediaDuration(long0: number): number;
							public getAudioProcessors(): native.Array<androidx.media2.exoplayer.external.audio.AudioProcessor>;
							public applyPlaybackParameters(playbackParameters0: androidx.media2.exoplayer.external.PlaybackParameters): androidx.media2.exoplayer.external.PlaybackParameters;
							public getSkippedOutputFrameCount(): number;
						}
						export class Configuration extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.DefaultAudioSink.Configuration>;
							public isInputPcm: boolean;
							public inputPcmFrameSize: number;
							public inputSampleRate: number;
							public outputPcmFrameSize: number;
							public outputSampleRate: number;
							public outputChannelConfig: number;
							public outputEncoding: number;
							public bufferSize: number;
							public processingEnabled: boolean;
							public canApplyPlaybackParameters: boolean;
							public availableAudioProcessors: native.Array<androidx.media2.exoplayer.external.audio.AudioProcessor>;
							public framesToDurationUs(frameCount: number): number;
							public canReuseAudioTrack(audioTrackConfiguration: androidx.media2.exoplayer.external.audio.DefaultAudioSink.Configuration): boolean;
							public inputFramesToDurationUs(frameCount: number): number;
							public durationUsToFrames(durationUs: number): number;
							public buildAudioTrack(tunneling: boolean, audioAttributes: androidx.media2.exoplayer.external.audio.AudioAttributes, audioSessionId: number): globalAndroid.media.AudioTrack;
							public constructor(isInputPcm: boolean, inputPcmFrameSize: number, inputSampleRate: number, outputPcmFrameSize: number, outputSampleRate: number, outputChannelConfig: number, outputEncoding: number, specifiedBufferSize: number, processingEnabled: boolean, canApplyPlaybackParameters: boolean, availableAudioProcessors: native.Array<androidx.media2.exoplayer.external.audio.AudioProcessor>);
						}
						export class DefaultAudioProcessorChain extends java.lang.Object implements androidx.media2.exoplayer.external.audio.DefaultAudioSink.AudioProcessorChain {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.DefaultAudioSink.DefaultAudioProcessorChain>;
							public constructor(audioProcessors: native.Array<androidx.media2.exoplayer.external.audio.AudioProcessor>);
							public getAudioProcessors(): native.Array<androidx.media2.exoplayer.external.audio.AudioProcessor>;
							public getSkippedOutputFrameCount(): number;
							public applyPlaybackParameters(playbackParameters: androidx.media2.exoplayer.external.PlaybackParameters): androidx.media2.exoplayer.external.PlaybackParameters;
							public getMediaDuration(playoutDuration: number): number;
						}
						export class InvalidAudioTrackTimestampException extends java.lang.RuntimeException {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.DefaultAudioSink.InvalidAudioTrackTimestampException>;
						}
						export class PlaybackParametersCheckpoint extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.DefaultAudioSink.PlaybackParametersCheckpoint>;
						}
						export class PositionTrackerListener extends java.lang.Object implements androidx.media2.exoplayer.external.audio.AudioTrackPositionTracker.Listener {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.DefaultAudioSink.PositionTrackerListener>;
							public onSystemTimeUsMismatch(audioTimestampPositionFrames: number, audioTimestampSystemTimeUs: number, systemTimeUs: number, playbackPositionUs: number): void;
							public onUnderrun(bufferSize: number, bufferSizeMs: number): void;
							public onInvalidLatency(latencyUs: number): void;
							public onPositionFramesMismatch(audioTimestampPositionFrames: number, audioTimestampSystemTimeUs: number, systemTimeUs: number, playbackPositionUs: number): void;
						}
						export class StartMediaTimeState extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.DefaultAudioSink.StartMediaTimeState>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.audio.DefaultAudioSink$StartMediaTimeState interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module audio {
					export class DtsUtil extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.DtsUtil>;
						public static parseDtsAudioSampleCount(buffer: java.nio.ByteBuffer): number;
						public static isSyncWord(word: number): boolean;
						public static parseDtsFormat(frame: native.Array<number>, trackId: string, language: string, drmInitData: androidx.media2.exoplayer.external.drm.DrmInitData): androidx.media2.exoplayer.external.Format;
						public static parseDtsAudioSampleCount(data: native.Array<number>): number;
						public static getDtsFrameSize(data: native.Array<number>): number;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module audio {
					export class FloatResamplingAudioProcessor extends androidx.media2.exoplayer.external.audio.BaseAudioProcessor {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.FloatResamplingAudioProcessor>;
						public queueInput(inputBuffer: java.nio.ByteBuffer): void;
						public queueEndOfStream(): void;
						public getOutput(): java.nio.ByteBuffer;
						public getOutputSampleRateHz(): number;
						public configure(sampleRateHz: number, channelCount: number, encoding: number): boolean;
						public flush(): void;
						public getOutputEncoding(): number;
						public getOutputChannelCount(): number;
						public isEnded(): boolean;
						public reset(): void;
						public isActive(): boolean;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module audio {
					export class MediaCodecAudioRenderer extends androidx.media2.exoplayer.external.mediacodec.MediaCodecRenderer implements androidx.media2.exoplayer.external.util.MediaClock {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.MediaCodecAudioRenderer>;
						public allowPassthrough(channelCount: number, mimeType: string): boolean;
						public supportsFormat(mediaCodecSelector: androidx.media2.exoplayer.external.mediacodec.MediaCodecSelector, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>, format: androidx.media2.exoplayer.external.Format): number;
						public onAudioSessionId(audioSessionId: number): void;
						public render(positionUs: number, elapsedRealtimeUs: number): void;
						public getDecoderInfos(mediaCodecSelector: androidx.media2.exoplayer.external.mediacodec.MediaCodecSelector, format: androidx.media2.exoplayer.external.Format, requiresSecureDecoder: boolean): java.util.List<androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo>;
						public processOutputBuffer(positionUs: number, elapsedRealtimeUs: number, codec: globalAndroid.media.MediaCodec, buffer: java.nio.ByteBuffer, bufferIndex: number, bufferFlags: number, bufferPresentationTimeUs: number, isDecodeOnlyBuffer: boolean, isLastBuffer: boolean, format: androidx.media2.exoplayer.external.Format): boolean;
						public onAudioTrackUnderrun(bufferSize: number, bufferSizeMs: number, elapsedSinceLastFeedMs: number): void;
						public onInputFormatChanged(formatHolder: androidx.media2.exoplayer.external.FormatHolder): void;
						public getPositionUs(): number;
						public resetPosition(positionUs: number): void;
						public onEnabled(joining: boolean): void;
						public constructor(context: globalAndroid.content.Context, mediaCodecSelector: androidx.media2.exoplayer.external.mediacodec.MediaCodecSelector, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>, playClearSamplesWithoutKeys: boolean, eventHandler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.audio.AudioRendererEventListener);
						public configureCodec(codecInfo: androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo, codec: globalAndroid.media.MediaCodec, format: androidx.media2.exoplayer.external.Format, crypto: globalAndroid.media.MediaCrypto, codecOperatingRate: number): void;
						public getCodecMaxInputSize(codecInfo: androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo, format: androidx.media2.exoplayer.external.Format, streamFormats: native.Array<androidx.media2.exoplayer.external.Format>): number;
						public onAudioTrackPositionDiscontinuity(): void;
						public onDisabled(): void;
						public constructor(context: globalAndroid.content.Context, mediaCodecSelector: androidx.media2.exoplayer.external.mediacodec.MediaCodecSelector, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>, playClearSamplesWithoutKeys: boolean, eventHandler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.audio.AudioRendererEventListener, audioCapabilities: androidx.media2.exoplayer.external.audio.AudioCapabilities, audioProcessors: native.Array<androidx.media2.exoplayer.external.audio.AudioProcessor>);
						public isEnded(): boolean;
						public canKeepCodec(codec: globalAndroid.media.MediaCodec, codecInfo: androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo, oldFormat: androidx.media2.exoplayer.external.Format, newFormat: androidx.media2.exoplayer.external.Format): number;
						public areCodecConfigurationCompatible(oldFormat: androidx.media2.exoplayer.external.Format, newFormat: androidx.media2.exoplayer.external.Format): boolean;
						public onStreamChanged(formats: native.Array<androidx.media2.exoplayer.external.Format>, offsetUs: number): void;
						public setCurrentStreamFinal(): void;
						public onQueueInputBuffer(buffer: androidx.media2.exoplayer.external.decoder.DecoderInputBuffer): void;
						public getPassthroughEncoding(channelCount: number, mimeType: string): number;
						public isReady(): boolean;
						public getCapabilities(): androidx.media2.exoplayer.external.RendererCapabilities;
						public disable(): void;
						public configureCodec(mediaCodecInfo0: androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo, mediaCodec1: globalAndroid.media.MediaCodec, format2: androidx.media2.exoplayer.external.Format, mediaCrypto3: globalAndroid.media.MediaCrypto, float4: number): void;
						public enable(configuration: androidx.media2.exoplayer.external.RendererConfiguration, formats: native.Array<androidx.media2.exoplayer.external.Format>, stream: androidx.media2.exoplayer.external.source.SampleStream, positionUs: number, joining: boolean, offsetUs: number): void;
						public constructor(context: globalAndroid.content.Context, mediaCodecSelector: androidx.media2.exoplayer.external.mediacodec.MediaCodecSelector);
						public supportsFormat(mediaCodecSelector0: androidx.media2.exoplayer.external.mediacodec.MediaCodecSelector, drmSessionManager1: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>, format2: androidx.media2.exoplayer.external.Format): number;
						public replaceStream(formats: native.Array<androidx.media2.exoplayer.external.Format>, stream: androidx.media2.exoplayer.external.source.SampleStream, offsetUs: number): void;
						public onCodecInitialized(name: string, initializedTimestampMs: number, initializationDurationMs: number): void;
						public start(): void;
						public getState(): number;
						public onReset(): void;
						public onStopped(): void;
						public getReadingPositionUs(): number;
						public handleMessage(what: number, object: any): void;
						public getPlaybackParameters(): androidx.media2.exoplayer.external.PlaybackParameters;
						public reset(): void;
						public constructor(context: globalAndroid.content.Context, mediaCodecSelector: androidx.media2.exoplayer.external.mediacodec.MediaCodecSelector, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>, playClearSamplesWithoutKeys: boolean, eventHandler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.audio.AudioRendererEventListener, audioSink: androidx.media2.exoplayer.external.audio.AudioSink);
						public constructor(context: globalAndroid.content.Context, mediaCodecSelector: androidx.media2.exoplayer.external.mediacodec.MediaCodecSelector, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>, playClearSamplesWithoutKeys: boolean, enableDecoderFallback: boolean, eventHandler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.audio.AudioRendererEventListener, audioSink: androidx.media2.exoplayer.external.audio.AudioSink);
						public setOperatingRate(operatingRate: number): void;
						public onStarted(): void;
						public onProcessedOutputBuffer(presentationTimeUs: number): void;
						public isCurrentStreamFinal(): boolean;
						public getStream(): androidx.media2.exoplayer.external.source.SampleStream;
						public constructor(trackType: number);
						public processOutputBuffer(long0: number, long1: number, mediaCodec2: globalAndroid.media.MediaCodec, byteBuffer3: java.nio.ByteBuffer, int4: number, int5: number, long6: number, boolean7: boolean, boolean8: boolean, format9: androidx.media2.exoplayer.external.Format): boolean;
						public setPlaybackParameters(playbackParameters: androidx.media2.exoplayer.external.PlaybackParameters): void;
						public supportsFormat(format: androidx.media2.exoplayer.external.Format): number;
						public constructor(trackType: number, mediaCodecSelector: androidx.media2.exoplayer.external.mediacodec.MediaCodecSelector, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>, playClearSamplesWithoutKeys: boolean, enableDecoderFallback: boolean, assumedMinimumCodecOperatingRate: number);
						public constructor(context: globalAndroid.content.Context, mediaCodecSelector: androidx.media2.exoplayer.external.mediacodec.MediaCodecSelector, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>, playClearSamplesWithoutKeys: boolean);
						public onPositionReset(positionUs: number, joining: boolean): void;
						public constructor(context: globalAndroid.content.Context, mediaCodecSelector: androidx.media2.exoplayer.external.mediacodec.MediaCodecSelector, eventHandler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.audio.AudioRendererEventListener);
						public handleMessage(messageType: number, message: any): void;
						public getCodecOperatingRateV23(operatingRate: number, format: androidx.media2.exoplayer.external.Format, streamFormats: native.Array<androidx.media2.exoplayer.external.Format>): number;
						public getMediaFormat(format: androidx.media2.exoplayer.external.Format, codecMimeType: string, codecMaxInputSize: number, codecOperatingRate: number): globalAndroid.media.MediaFormat;
						public getMediaClock(): androidx.media2.exoplayer.external.util.MediaClock;
						public hasReadStreamToEnd(): boolean;
						public onOutputFormatChanged(codec: globalAndroid.media.MediaCodec, outputFormat: globalAndroid.media.MediaFormat): void;
						public getTrackType(): number;
						public supportsMixedMimeTypeAdaptation(): number;
						public stop(): void;
						public setIndex(index: number): void;
						public maybeThrowStreamError(): void;
						public getDecoderInfos(mediaCodecSelector0: androidx.media2.exoplayer.external.mediacodec.MediaCodecSelector, format1: androidx.media2.exoplayer.external.Format, boolean2: boolean): java.util.List<androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo>;
						public renderToEndOfStream(): void;
					}
					export module MediaCodecAudioRenderer {
						export class AudioSinkListener extends java.lang.Object implements androidx.media2.exoplayer.external.audio.AudioSink.Listener {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.MediaCodecAudioRenderer.AudioSinkListener>;
							public onUnderrun(bufferSize: number, bufferSizeMs: number, elapsedSinceLastFeedMs: number): void;
							public onAudioSessionId(audioSessionId: number): void;
							public onPositionDiscontinuity(): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module audio {
					export class ResamplingAudioProcessor extends androidx.media2.exoplayer.external.audio.BaseAudioProcessor {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.ResamplingAudioProcessor>;
						public queueInput(inputBuffer: java.nio.ByteBuffer): void;
						public queueEndOfStream(): void;
						public getOutput(): java.nio.ByteBuffer;
						public getOutputSampleRateHz(): number;
						public configure(sampleRateHz: number, channelCount: number, encoding: number): boolean;
						public flush(): void;
						public getOutputEncoding(): number;
						public getOutputChannelCount(): number;
						public isEnded(): boolean;
						public reset(): void;
						public isActive(): boolean;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module audio {
					export class SilenceSkippingAudioProcessor extends androidx.media2.exoplayer.external.audio.BaseAudioProcessor {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.SilenceSkippingAudioProcessor>;
						public queueInput(inputBuffer: java.nio.ByteBuffer): void;
						public constructor();
						public queueEndOfStream(): void;
						public getOutputSampleRateHz(): number;
						public flush(): void;
						public getOutputEncoding(): number;
						public onQueueEndOfStream(): void;
						public setEnabled(enabled: boolean): void;
						public onFlush(): void;
						public getOutput(): java.nio.ByteBuffer;
						public getSkippedFrames(): number;
						public configure(sampleRateHz: number, channelCount: number, encoding: number): boolean;
						public onReset(): void;
						public getOutputChannelCount(): number;
						public isEnded(): boolean;
						public reset(): void;
						public isActive(): boolean;
					}
					export module SilenceSkippingAudioProcessor {
						export class State extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.SilenceSkippingAudioProcessor.State>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.audio.SilenceSkippingAudioProcessor$State interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module audio {
					export abstract class SimpleDecoderAudioRenderer extends androidx.media2.exoplayer.external.BaseRenderer implements androidx.media2.exoplayer.external.util.MediaClock {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.SimpleDecoderAudioRenderer>;
						public supportsFormatInternal(drmSessionManager0: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.ExoMediaCrypto>, format1: androidx.media2.exoplayer.external.Format): number;
						public getOutputFormat(): androidx.media2.exoplayer.external.Format;
						public render(positionUs: number, elapsedRealtimeUs: number): void;
						public onAudioSessionId(audioSessionId: number): void;
						public onAudioTrackUnderrun(bufferSize: number, bufferSizeMs: number, elapsedSinceLastFeedMs: number): void;
						public onStarted(): void;
						public constructor(eventHandler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.audio.AudioRendererEventListener, audioCapabilities: androidx.media2.exoplayer.external.audio.AudioCapabilities);
						public supportsOutput(channelCount: number, encoding: number): boolean;
						public getPositionUs(): number;
						public isCurrentStreamFinal(): boolean;
						public getStream(): androidx.media2.exoplayer.external.source.SampleStream;
						public resetPosition(positionUs: number): void;
						public onEnabled(joining: boolean): void;
						public constructor(trackType: number);
						public setPlaybackParameters(playbackParameters: androidx.media2.exoplayer.external.PlaybackParameters): void;
						public supportsFormat(format: androidx.media2.exoplayer.external.Format): number;
						public onAudioTrackPositionDiscontinuity(): void;
						public setOperatingRate(float0: number): void;
						public onDisabled(): void;
						public isEnded(): boolean;
						public constructor(eventHandler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.audio.AudioRendererEventListener, audioProcessors: native.Array<androidx.media2.exoplayer.external.audio.AudioProcessor>);
						public onPositionReset(positionUs: number, joining: boolean): void;
						public constructor();
						public handleMessage(messageType: number, message: any): void;
						public setCurrentStreamFinal(): void;
						public constructor(eventHandler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.audio.AudioRendererEventListener, audioCapabilities: androidx.media2.exoplayer.external.audio.AudioCapabilities, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.ExoMediaCrypto>, playClearSamplesWithoutKeys: boolean, audioProcessors: native.Array<androidx.media2.exoplayer.external.audio.AudioProcessor>);
						public getMediaClock(): androidx.media2.exoplayer.external.util.MediaClock;
						public hasReadStreamToEnd(): boolean;
						public isReady(): boolean;
						public getCapabilities(): androidx.media2.exoplayer.external.RendererCapabilities;
						public disable(): void;
						public getTrackType(): number;
						public supportsMixedMimeTypeAdaptation(): number;
						public stop(): void;
						public enable(configuration: androidx.media2.exoplayer.external.RendererConfiguration, formats: native.Array<androidx.media2.exoplayer.external.Format>, stream: androidx.media2.exoplayer.external.source.SampleStream, positionUs: number, joining: boolean, offsetUs: number): void;
						public replaceStream(formats: native.Array<androidx.media2.exoplayer.external.Format>, stream: androidx.media2.exoplayer.external.source.SampleStream, offsetUs: number): void;
						public start(): void;
						public setIndex(index: number): void;
						public getState(): number;
						public maybeThrowStreamError(): void;
						public constructor(eventHandler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.audio.AudioRendererEventListener, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.ExoMediaCrypto>, playClearSamplesWithoutKeys: boolean, audioSink: androidx.media2.exoplayer.external.audio.AudioSink);
						public onStopped(): void;
						public getReadingPositionUs(): number;
						public handleMessage(what: number, object: any): void;
						public getPlaybackParameters(): androidx.media2.exoplayer.external.PlaybackParameters;
						public reset(): void;
						public createDecoder(format0: androidx.media2.exoplayer.external.Format, exoMediaCrypto1: androidx.media2.exoplayer.external.drm.ExoMediaCrypto): androidx.media2.exoplayer.external.decoder.SimpleDecoder<androidx.media2.exoplayer.external.decoder.DecoderInputBuffer,any,any>;
					}
					export module SimpleDecoderAudioRenderer {
						export class AudioSinkListener extends java.lang.Object implements androidx.media2.exoplayer.external.audio.AudioSink.Listener {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.SimpleDecoderAudioRenderer.AudioSinkListener>;
							public onUnderrun(bufferSize: number, bufferSizeMs: number, elapsedSinceLastFeedMs: number): void;
							public onAudioSessionId(audioSessionId: number): void;
							public onPositionDiscontinuity(): void;
						}
						export class ReinitializationState extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.SimpleDecoderAudioRenderer.ReinitializationState>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.audio.SimpleDecoderAudioRenderer$ReinitializationState interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module audio {
					export class Sonic extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.Sonic>;
						public queueEndOfStream(): void;
						public queueInput(buffer: java.nio.ShortBuffer): void;
						public getOutput(buffer: java.nio.ShortBuffer): void;
						public flush(): void;
						public getOutputSize(): number;
						public constructor(inputSampleRateHz: number, channelCount: number, speed: number, pitch: number, outputSampleRateHz: number);
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module audio {
					export class SonicAudioProcessor extends java.lang.Object implements androidx.media2.exoplayer.external.audio.AudioProcessor {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.SonicAudioProcessor>;
						public static MAXIMUM_SPEED: number;
						public static MINIMUM_SPEED: number;
						public static MAXIMUM_PITCH: number;
						public static MINIMUM_PITCH: number;
						public static SAMPLE_RATE_NO_CHANGE: number;
						public queueInput(inputBuffer: java.nio.ByteBuffer): void;
						public constructor();
						public queueEndOfStream(): void;
						public scaleDurationForSpeedup(duration: number): number;
						public getOutputSampleRateHz(): number;
						public setSpeed(speed: number): number;
						public flush(): void;
						public getOutputEncoding(): number;
						public setPitch(pitch: number): number;
						public getOutput(): java.nio.ByteBuffer;
						public configure(sampleRateHz: number, channelCount: number, encoding: number): boolean;
						public setOutputSampleRateHz(sampleRateHz: number): void;
						public getOutputChannelCount(): number;
						public isEnded(): boolean;
						public reset(): void;
						public isActive(): boolean;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module audio {
					export class TeeAudioProcessor extends androidx.media2.exoplayer.external.audio.BaseAudioProcessor {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.TeeAudioProcessor>;
						public queueInput(inputBuffer: java.nio.ByteBuffer): void;
						public constructor();
						public queueEndOfStream(): void;
						public getOutputSampleRateHz(): number;
						public flush(): void;
						public getOutputEncoding(): number;
						public onFlush(): void;
						public getOutput(): java.nio.ByteBuffer;
						public configure(sampleRateHz: number, channelCount: number, encoding: number): boolean;
						public getOutputChannelCount(): number;
						public isEnded(): boolean;
						public constructor(audioBufferSink: androidx.media2.exoplayer.external.audio.TeeAudioProcessor.AudioBufferSink);
						public reset(): void;
						public isActive(): boolean;
					}
					export module TeeAudioProcessor {
						export class AudioBufferSink extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.TeeAudioProcessor.AudioBufferSink>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.audio.TeeAudioProcessor$AudioBufferSink interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								flush(int0: number, int1: number, int2: number): void;
								handleBuffer(byteBuffer0: java.nio.ByteBuffer): void;
							});
							public constructor();
							public handleBuffer(byteBuffer0: java.nio.ByteBuffer): void;
							public flush(int0: number, int1: number, int2: number): void;
						}
						export class WavFileAudioBufferSink extends java.lang.Object implements androidx.media2.exoplayer.external.audio.TeeAudioProcessor.AudioBufferSink {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.TeeAudioProcessor.WavFileAudioBufferSink>;
							public constructor(outputFileNamePrefix: string);
							public handleBuffer(buffer: java.nio.ByteBuffer): void;
							public flush(sampleRateHz: number, channelCount: number, encoding: number): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module audio {
					export class TrimmingAudioProcessor extends androidx.media2.exoplayer.external.audio.BaseAudioProcessor {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.TrimmingAudioProcessor>;
						public queueInput(inputBuffer: java.nio.ByteBuffer): void;
						public constructor();
						public queueEndOfStream(): void;
						public getOutputSampleRateHz(): number;
						public flush(): void;
						public getOutputEncoding(): number;
						public onFlush(): void;
						public getOutput(): java.nio.ByteBuffer;
						public setTrimFrameCount(trimStartFrames: number, trimEndFrames: number): void;
						public resetTrimmedFrameCount(): void;
						public getTrimmedFrameCount(): number;
						public configure(sampleRateHz: number, channelCount: number, encoding: number): boolean;
						public onReset(): void;
						public isEnded(): boolean;
						public getOutputChannelCount(): number;
						public reset(): void;
						public isActive(): boolean;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module audio {
					export class WavUtil extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.audio.WavUtil>;
						public static RIFF_FOURCC: number;
						public static WAVE_FOURCC: number;
						public static FMT_FOURCC: number;
						public static DATA_FOURCC: number;
						public static getTypeForEncoding(encoding: number): number;
						public static getEncodingForType(type: number, bitsPerSample: number): number;
					}
				}
			}
		}
	}
}


declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module decoder {
					export abstract class Buffer extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.decoder.Buffer>;
						public constructor();
						public isKeyFrame(): boolean;
						public setFlags(flags: number): void;
						public isDecodeOnly(): boolean;
						public addFlag(flag: number): void;
						public getFlag(flag: number): boolean;
						public clear(): void;
						public isEndOfStream(): boolean;
						public hasSupplementalData(): boolean;
						public clearFlag(flag: number): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module decoder {
					export class CryptoInfo extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.decoder.CryptoInfo>;
						public iv: native.Array<number>;
						public key: native.Array<number>;
						public mode: number;
						public numBytesOfClearData: native.Array<number>;
						public numBytesOfEncryptedData: native.Array<number>;
						public numSubSamples: number;
						public encryptedBlocks: number;
						public clearBlocks: number;
						public getFrameworkCryptoInfo(): globalAndroid.media.MediaCodec.CryptoInfo;
						public constructor();
						public set(numSubSamples: number, numBytesOfClearData: native.Array<number>, numBytesOfEncryptedData: native.Array<number>, key: native.Array<number>, iv: native.Array<number>, mode: number, encryptedBlocks: number, clearBlocks: number): void;
						/** @deprecated */
						public getFrameworkCryptoInfoV16(): globalAndroid.media.MediaCodec.CryptoInfo;
					}
					export module CryptoInfo {
						export class PatternHolderV24 extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.decoder.CryptoInfo.PatternHolderV24>;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module decoder {
					export class Decoder<I, O, E>  extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.decoder.Decoder<any,any,any>>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.decoder.Decoder<any,any,any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getName(): string;
							dequeueInputBuffer(): I;
							queueInputBuffer(object0: I): void;
							dequeueOutputBuffer(): O;
							flush(): void;
							release(): void;
						});
						public constructor();
						public dequeueOutputBuffer(): O;
						public dequeueInputBuffer(): I;
						public queueInputBuffer(object0: I): void;
						public flush(): void;
						public release(): void;
						public getName(): string;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module decoder {
					export class DecoderCounters extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.decoder.DecoderCounters>;
						public decoderInitCount: number;
						public decoderReleaseCount: number;
						public inputBufferCount: number;
						public skippedInputBufferCount: number;
						public renderedOutputBufferCount: number;
						public skippedOutputBufferCount: number;
						public droppedBufferCount: number;
						public maxConsecutiveDroppedBufferCount: number;
						public droppedToKeyframeCount: number;
						public constructor();
						public ensureUpdated(): void;
						public merge(other: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module decoder {
					export class DecoderInputBuffer extends androidx.media2.exoplayer.external.decoder.Buffer {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.decoder.DecoderInputBuffer>;
						public static BUFFER_REPLACEMENT_MODE_DISABLED: number;
						public static BUFFER_REPLACEMENT_MODE_NORMAL: number;
						public static BUFFER_REPLACEMENT_MODE_DIRECT: number;
						public cryptoInfo: androidx.media2.exoplayer.external.decoder.CryptoInfo;
						public data: java.nio.ByteBuffer;
						public timeUs: number;
						public supplementalData: java.nio.ByteBuffer;
						public constructor();
						public isFlagsOnly(): boolean;
						public resetSupplementalData(length: number): void;
						public isEncrypted(): boolean;
						public flip(): void;
						public static newFlagsOnlyInstance(): androidx.media2.exoplayer.external.decoder.DecoderInputBuffer;
						public ensureSpaceForWrite(length: number): void;
						public clear(): void;
						public constructor(bufferReplacementMode: number);
					}
					export module DecoderInputBuffer {
						export class BufferReplacementMode extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.decoder.DecoderInputBuffer.BufferReplacementMode>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.decoder.DecoderInputBuffer$BufferReplacementMode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module decoder {
					export abstract class OutputBuffer extends androidx.media2.exoplayer.external.decoder.Buffer {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.decoder.OutputBuffer>;
						public timeUs: number;
						public skippedOutputBufferCount: number;
						public constructor();
						public release(): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module decoder {
					export abstract class SimpleDecoder<I, O, E>  extends androidx.media2.exoplayer.external.decoder.Decoder<any,any,any> {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.decoder.SimpleDecoder<any,any,any>>;
						public setInitialInputBufferSize(size: number): void;
						public createUnexpectedDecodeException(throwable0: java.lang.Throwable): any;
						public createOutputBuffer(): any;
						public releaseOutputBuffer(outputBuffer: any): void;
						public constructor(inputBuffers: native.Array<any>, outputBuffers: native.Array<any>);
						public dequeueInputBuffer(): any;
						public flush(): void;
						public release(): void;
						public getName(): string;
						public createInputBuffer(): any;
						public decode(decoderInputBuffer0: any, outputBuffer1: any, boolean2: boolean): any;
						public queueInputBuffer(object0: any): void;
						public queueInputBuffer(inputBuffer: any): void;
						public dequeueOutputBuffer(): any;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module decoder {
					export class SimpleOutputBuffer extends androidx.media2.exoplayer.external.decoder.OutputBuffer {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.decoder.SimpleOutputBuffer>;
						public data: java.nio.ByteBuffer;
						public constructor();
						public init(timeUs: number, size: number): java.nio.ByteBuffer;
						public constructor(owner: androidx.media2.exoplayer.external.decoder.SimpleDecoder<any,androidx.media2.exoplayer.external.decoder.SimpleOutputBuffer,any>);
						public clear(): void;
						public release(): void;
					}
				}
			}
		}
	}
}


declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module drm {
					export class ClearKeyUtil extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.ClearKeyUtil>;
						public static adjustRequestData(request: native.Array<number>): native.Array<number>;
						public static adjustResponseData(response: native.Array<number>): native.Array<number>;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module drm {
					export class DecryptionException extends java.lang.Exception {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.DecryptionException>;
						public errorCode: number;
						public constructor();
						public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						public constructor(errorCode: number, message: string);
						public constructor(message: string, cause: java.lang.Throwable);
						public constructor(cause: java.lang.Throwable);
						public constructor(message: string);
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module drm {
					export class DefaultDrmSession<T>  extends androidx.media2.exoplayer.external.drm.DrmSession<any> {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.DefaultDrmSession<any>>;
						public schemeDatas: java.util.List<androidx.media2.exoplayer.external.drm.DrmInitData.SchemeData>;
						public acquireReference(): void;
						public provision(): void;
						public onProvisionCompleted(): void;
						public onMediaDrmEvent(what: number): void;
						public onProvisionError(error: java.lang.Exception): void;
						public getError(): androidx.media2.exoplayer.external.drm.DrmSession.DrmSessionException;
						public getState(): number;
						public getOfflineLicenseKeySetId(): native.Array<number>;
						public releaseReference(): void;
						public hasSessionId(sessionId: native.Array<number>): boolean;
						public queryKeyStatus(): java.util.Map<string,string>;
						public getMediaCrypto(): any;
						public constructor(uuid: java.util.UUID, mediaDrm: androidx.media2.exoplayer.external.drm.ExoMediaDrm<any>, provisioningManager: androidx.media2.exoplayer.external.drm.DefaultDrmSession.ProvisioningManager<any>, releaseCallback: androidx.media2.exoplayer.external.drm.DefaultDrmSession.ReleaseCallback<any>, schemeDatas: java.util.List<androidx.media2.exoplayer.external.drm.DrmInitData.SchemeData>, mode: number, offlineLicenseKeySetId: native.Array<number>, optionalKeyRequestParameters: java.util.HashMap<string,string>, callback: androidx.media2.exoplayer.external.drm.MediaDrmCallback, playbackLooper: globalAndroid.os.Looper, eventDispatcher: androidx.media2.exoplayer.external.util.EventDispatcher<androidx.media2.exoplayer.external.drm.DefaultDrmSessionEventListener>, loadErrorHandlingPolicy: androidx.media2.exoplayer.external.upstream.LoadErrorHandlingPolicy);
					}
					export module DefaultDrmSession {
						export class ProvisioningManager<T>  extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.DefaultDrmSession.ProvisioningManager<any>>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.drm.DefaultDrmSession$ProvisioningManager interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								provisionRequired(defaultDrmSession0: androidx.media2.exoplayer.external.drm.DefaultDrmSession<T>): void;
								onProvisionError(exception0: java.lang.Exception): void;
								onProvisionCompleted(): void;
							});
							public constructor();
							public onProvisionError(exception0: java.lang.Exception): void;
							public provisionRequired(defaultDrmSession0: androidx.media2.exoplayer.external.drm.DefaultDrmSession<T>): void;
							public onProvisionCompleted(): void;
						}
						export class ReleaseCallback<T>  extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.DefaultDrmSession.ReleaseCallback<any>>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.drm.DefaultDrmSession$ReleaseCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onSessionReleased(defaultDrmSession0: androidx.media2.exoplayer.external.drm.DefaultDrmSession<T>): void;
							});
							public constructor();
							public onSessionReleased(defaultDrmSession0: androidx.media2.exoplayer.external.drm.DefaultDrmSession<T>): void;
						}
						export class RequestHandler extends globalAndroid.os.Handler {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.DefaultDrmSession.RequestHandler>;
							public constructor();
							public constructor(callback: globalAndroid.os.Handler.Callback);
							public constructor(param0: androidx.media2.exoplayer.external.drm.DefaultDrmSession<any>, backgroundLooper: globalAndroid.os.Looper);
							public handleMessage(msg: globalAndroid.os.Message): void;
							public constructor(looper: globalAndroid.os.Looper);
							public constructor(looper: globalAndroid.os.Looper, callback: globalAndroid.os.Handler.Callback);
						}
						export class RequestTask extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.DefaultDrmSession.RequestTask>;
							public allowRetry: boolean;
							public startTimeMs: number;
							public request: any;
							public errorCount: number;
							public constructor(allowRetry: boolean, startTimeMs: number, request: any);
						}
						export class ResponseHandler extends globalAndroid.os.Handler {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.DefaultDrmSession.ResponseHandler>;
							public constructor();
							public constructor(callback: globalAndroid.os.Handler.Callback);
							public handleMessage(msg: globalAndroid.os.Message): void;
							public constructor(looper: globalAndroid.os.Looper);
							public constructor(looper: globalAndroid.os.Looper, callback: globalAndroid.os.Handler.Callback);
							public constructor(param0: androidx.media2.exoplayer.external.drm.DefaultDrmSession<any>, looper: globalAndroid.os.Looper);
						}
						export class UnexpectedDrmSessionException extends java.io.IOException {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.DefaultDrmSession.UnexpectedDrmSessionException>;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(message: string);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module drm {
					export class DefaultDrmSessionEventListener extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.DefaultDrmSessionEventListener>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.drm.DefaultDrmSessionEventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onDrmSessionAcquired(): void;
							onDrmKeysLoaded(): void;
							onDrmSessionManagerError(exception0: java.lang.Exception): void;
							onDrmKeysRestored(): void;
							onDrmKeysRemoved(): void;
							onDrmSessionReleased(): void;
						});
						public constructor();
						public onDrmKeysLoaded(): void;
						public onDrmKeysRestored(): void;
						public onDrmSessionAcquired(): void;
						public onDrmSessionReleased(): void;
						public onDrmKeysRemoved(): void;
						public onDrmSessionManagerError(exception0: java.lang.Exception): void;
					}
						export module  {
					export module DefaultDrmSessionEventListener {
							export abstract class CC extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.DefaultDrmSessionEventListener..CC>;
								public static onDrmSessionAcquired$$dflt$$(this0: androidx.media2.exoplayer.external.drm.DefaultDrmSessionEventListener): void;
								public static onDrmSessionReleased$$dflt$$(this0: androidx.media2.exoplayer.external.drm.DefaultDrmSessionEventListener): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module drm {
					export class DefaultDrmSessionManager<T>  extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.DefaultDrmSessionManager<any>>;
						public static PLAYREADY_CUSTOM_DATA_KEY: string;
						public static MODE_PLAYBACK: number;
						public static MODE_QUERY: number;
						public static MODE_DOWNLOAD: number;
						public static MODE_RELEASE: number;
						public static INITIAL_DRM_REQUEST_RETRY_COUNT: number;
						public static newWidevineInstance(callback: androidx.media2.exoplayer.external.drm.MediaDrmCallback, optionalKeyRequestParameters: java.util.HashMap<string,string>): androidx.media2.exoplayer.external.drm.DefaultDrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>;
						public onProvisionCompleted(): void;
						public setPropertyString(key: string, value: string): void;
						public constructor(uuid: java.util.UUID, mediaDrm: androidx.media2.exoplayer.external.drm.ExoMediaDrm<T>, callback: androidx.media2.exoplayer.external.drm.MediaDrmCallback, optionalKeyRequestParameters: java.util.HashMap<string,string>, multiSession: boolean);
						public static newFrameworkInstance(uuid: java.util.UUID, callback: androidx.media2.exoplayer.external.drm.MediaDrmCallback, optionalKeyRequestParameters: java.util.HashMap<string,string>): androidx.media2.exoplayer.external.drm.DefaultDrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>;
						public removeListener(eventListener: androidx.media2.exoplayer.external.drm.DefaultDrmSessionEventListener): void;
						public setMode(mode: number, offlineLicenseKeySetId: native.Array<number>): void;
						public provisionRequired(session: androidx.media2.exoplayer.external.drm.DefaultDrmSession<T>): void;
						public canAcquireSession(drmInitData: androidx.media2.exoplayer.external.drm.DrmInitData): boolean;
						public onProvisionError(error: java.lang.Exception): void;
						public getExoMediaCryptoType(drmInitData: androidx.media2.exoplayer.external.drm.DrmInitData): java.lang.Class<T>;
						public static newPlayReadyInstance(callback: androidx.media2.exoplayer.external.drm.MediaDrmCallback, customData: string): androidx.media2.exoplayer.external.drm.DefaultDrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>;
						public constructor(uuid: java.util.UUID, mediaDrm: androidx.media2.exoplayer.external.drm.ExoMediaDrm<T>, callback: androidx.media2.exoplayer.external.drm.MediaDrmCallback, optionalKeyRequestParameters: java.util.HashMap<string,string>);
						public getPropertyString(key: string): string;
						public acquireSession(playbackLooper: globalAndroid.os.Looper, drmInitData: androidx.media2.exoplayer.external.drm.DrmInitData): androidx.media2.exoplayer.external.drm.DrmSession<T>;
						public addListener(handler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.drm.DefaultDrmSessionEventListener): void;
						public constructor(uuid: java.util.UUID, mediaDrm: androidx.media2.exoplayer.external.drm.ExoMediaDrm<T>, callback: androidx.media2.exoplayer.external.drm.MediaDrmCallback, optionalKeyRequestParameters: java.util.HashMap<string,string>, multiSession: boolean, initialDrmRequestRetryCount: number);
						public getFlags(): number;
						public getPropertyByteArray(key: string): native.Array<number>;
						public getExoMediaCryptoType(drmInitData: androidx.media2.exoplayer.external.drm.DrmInitData): java.lang.Class<any>;
						public setPropertyByteArray(key: string, value: native.Array<number>): void;
					}
					export module DefaultDrmSessionManager {
						export class MediaDrmEventListener extends androidx.media2.exoplayer.external.drm.ExoMediaDrm.OnEventListener<any> {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.DefaultDrmSessionManager.MediaDrmEventListener>;
							public onEvent(md: androidx.media2.exoplayer.external.drm.ExoMediaDrm<any>, sessionId: native.Array<number>, event: number, extra: number, data: native.Array<number>): void;
						}
						export class MediaDrmHandler extends globalAndroid.os.Handler {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.DefaultDrmSessionManager.MediaDrmHandler>;
							public constructor();
							public constructor(param0: androidx.media2.exoplayer.external.drm.DefaultDrmSessionManager<any>, looper: globalAndroid.os.Looper);
							public constructor(callback: globalAndroid.os.Handler.Callback);
							public handleMessage(msg: globalAndroid.os.Message): void;
							public constructor(looper: globalAndroid.os.Looper);
							public constructor(looper: globalAndroid.os.Looper, callback: globalAndroid.os.Handler.Callback);
						}
						export class MissingSchemeDataException extends java.lang.Exception {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.DefaultDrmSessionManager.MissingSchemeDataException>;
						}
						export class Mode extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.DefaultDrmSessionManager.Mode>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.drm.DefaultDrmSessionManager$Mode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module drm {
					export class DrmInitData extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.DrmInitData>;
						public schemeType: string;
						public schemeDataCount: number;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.drm.DrmInitData>;
						public equals(obj: any): boolean;
						public static nullsLast(comparator: java.util.Comparator<any>): java.util.Comparator<any>;
						/** @deprecated */
						public get(uuid: java.util.UUID): androidx.media2.exoplayer.external.drm.DrmInitData.SchemeData;
						public hashCode(): number;
						public constructor(schemeDatas: java.util.List<androidx.media2.exoplayer.external.drm.DrmInitData.SchemeData>);
						public thenComparing(keyExtractor: any /* any*/): java.util.Comparator<any>;
						public static reverseOrder(): java.util.Comparator<any>;
						public static comparingDouble(keyExtractor: any /* any*/): java.util.Comparator<any>;
						public copyWithSchemeType(schemeType: string): androidx.media2.exoplayer.external.drm.DrmInitData;
						public reversed(): java.util.Comparator<any>;
						public thenComparingInt(keyExtractor: any /* any*/): java.util.Comparator<any>;
						public merge(drmInitData: androidx.media2.exoplayer.external.drm.DrmInitData): androidx.media2.exoplayer.external.drm.DrmInitData;
						public compare(first: androidx.media2.exoplayer.external.drm.DrmInitData.SchemeData, second: androidx.media2.exoplayer.external.drm.DrmInitData.SchemeData): number;
						public thenComparing(keyExtractor: any /* any*/, keyComparator: java.util.Comparator<any>): java.util.Comparator<any>;
						public static nullsFirst(comparator: java.util.Comparator<any>): java.util.Comparator<any>;
						public static naturalOrder(): java.util.Comparator<any>;
						public thenComparing(other: java.util.Comparator<any>): java.util.Comparator<any>;
						public static comparingLong(keyExtractor: any /* any*/): java.util.Comparator<any>;
						public static comparingInt(keyExtractor: any /* any*/): java.util.Comparator<any>;
						public describeContents(): number;
						public compare(object0: any, object1: any): number;
						public constructor(schemeType: string, schemeDatas: java.util.List<androidx.media2.exoplayer.external.drm.DrmInitData.SchemeData>);
						public thenComparingLong(keyExtractor: any /* any*/): java.util.Comparator<any>;
						public constructor(schemeType: string, schemeDatas: native.Array<androidx.media2.exoplayer.external.drm.DrmInitData.SchemeData>);
						public get(index: number): androidx.media2.exoplayer.external.drm.DrmInitData.SchemeData;
						public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
						public static createSessionCreationData(manifestData: androidx.media2.exoplayer.external.drm.DrmInitData, mediaData: androidx.media2.exoplayer.external.drm.DrmInitData): androidx.media2.exoplayer.external.drm.DrmInitData;
						public thenComparingDouble(keyExtractor: any /* any*/): java.util.Comparator<any>;
						public constructor(schemeDatas: native.Array<androidx.media2.exoplayer.external.drm.DrmInitData.SchemeData>);
						public static comparing(keyExtractor: any /* any*/): java.util.Comparator<any>;
						public static comparing(keyExtractor: any /* any*/, keyComparator: java.util.Comparator<any>): java.util.Comparator<any>;
					}
					export module DrmInitData {
						export class SchemeData extends java.lang.Object implements globalAndroid.os.Parcelable {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.DrmInitData.SchemeData>;
							public licenseServerUrl: string;
							public mimeType: string;
							public data: native.Array<number>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.drm.DrmInitData.SchemeData>;
							public canReplace(other: androidx.media2.exoplayer.external.drm.DrmInitData.SchemeData): boolean;
							public hashCode(): number;
							public copyWithData(data: native.Array<number>): androidx.media2.exoplayer.external.drm.DrmInitData.SchemeData;
							public describeContents(): number;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public matches(schemeUuid: java.util.UUID): boolean;
							public equals(obj: any): boolean;
							public hasData(): boolean;
							public constructor(uuid: java.util.UUID, licenseServerUrl: string, mimeType: string, data: native.Array<number>);
							public constructor(uuid: java.util.UUID, mimeType: string, data: native.Array<number>);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module drm {
					export class DrmSession<T>  extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.DrmSession<any>>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.drm.DrmSession<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getState(): number;
							getError(): androidx.media2.exoplayer.external.drm.DrmSession.DrmSessionException;
							getMediaCrypto(): T;
							queryKeyStatus(): java.util.Map<string,string>;
							getOfflineLicenseKeySetId(): native.Array<number>;
							acquireReference(): void;
							releaseReference(): void;
						});
						public constructor();
						public static STATE_OPENING: number;
						public static STATE_OPENED_WITH_KEYS: number;
						public static STATE_RELEASED: number;
						public static STATE_OPENED: number;
						public static STATE_ERROR: number;
						public getError(): androidx.media2.exoplayer.external.drm.DrmSession.DrmSessionException;
						public acquireReference(): void;
						public getState(): number;
						public getOfflineLicenseKeySetId(): native.Array<number>;
						public releaseReference(): void;
						public getMediaCrypto(): T;
						public queryKeyStatus(): java.util.Map<string,string>;
					}
						export module  {
					export module DrmSession {
							export abstract class CC extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.DrmSession..CC>;
								public static replaceSessionReferences$$STATIC$$(previousSession: androidx.media2.exoplayer.external.drm.DrmSession<any>, newSession: androidx.media2.exoplayer.external.drm.DrmSession<any>): void;
							}
						}
						export class DrmSessionException extends java.io.IOException {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.DrmSession.DrmSessionException>;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(message: string);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
						export class State extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.DrmSession.State>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.drm.DrmSession$State interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module drm {
					export class DrmSessionManager<T>  extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.DrmSessionManager<any>>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.drm.DrmSessionManager<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							canAcquireSession(drmInitData0: androidx.media2.exoplayer.external.drm.DrmInitData): boolean;
							acquireSession(looper0: globalAndroid.os.Looper, drmInitData1: androidx.media2.exoplayer.external.drm.DrmInitData): androidx.media2.exoplayer.external.drm.DrmSession<T>;
							getFlags(): number;
							getExoMediaCryptoType(drmInitData0: androidx.media2.exoplayer.external.drm.DrmInitData): java.lang.Class<any>;
							<clinit>(): void;
						});
						public constructor();
						public static DUMMY: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.ExoMediaCrypto>;
						public static FLAG_PLAY_CLEAR_SAMPLES_WITHOUT_KEYS: number;
						public acquireSession(looper0: globalAndroid.os.Looper, drmInitData1: androidx.media2.exoplayer.external.drm.DrmInitData): androidx.media2.exoplayer.external.drm.DrmSession<T>;
						public getExoMediaCryptoType(drmInitData0: androidx.media2.exoplayer.external.drm.DrmInitData): java.lang.Class<any>;
						public getFlags(): number;
						public canAcquireSession(drmInitData0: androidx.media2.exoplayer.external.drm.DrmInitData): boolean;
					}
						export module  {
					export module DrmSessionManager {
							export abstract class CC extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.DrmSessionManager..CC>;
								public static getFlags$$dflt$$(this0: androidx.media2.exoplayer.external.drm.DrmSessionManager<any>): number;
								public static $$triggerInterfaceInit(): void;
								public static getDummyDrmSessionManager$$STATIC$$(): androidx.media2.exoplayer.external.drm.DrmSessionManager<any>;
							}
						}
						export class Flags extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.DrmSessionManager.Flags>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.drm.DrmSessionManager$Flags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module drm {
					export class ErrorStateDrmSession<T>  extends androidx.media2.exoplayer.external.drm.DrmSession<any> {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.ErrorStateDrmSession<any>>;
						public getError(): androidx.media2.exoplayer.external.drm.DrmSession.DrmSessionException;
						public acquireReference(): void;
						public constructor(error: androidx.media2.exoplayer.external.drm.DrmSession.DrmSessionException);
						public getState(): number;
						public getOfflineLicenseKeySetId(): native.Array<number>;
						public releaseReference(): void;
						public queryKeyStatus(): java.util.Map<string,string>;
						public getMediaCrypto(): any;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module drm {
					export class ExoMediaCrypto extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.ExoMediaCrypto>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.drm.ExoMediaCrypto interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module drm {
					export class ExoMediaDrm<T>  extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.ExoMediaDrm<any>>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.drm.ExoMediaDrm<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setOnEventListener(onEventListener0: androidx.media2.exoplayer.external.drm.ExoMediaDrm.OnEventListener<any>): void;
							setOnKeyStatusChangeListener(onKeyStatusChangeListener0: androidx.media2.exoplayer.external.drm.ExoMediaDrm.OnKeyStatusChangeListener<any>): void;
							openSession(): native.Array<number>;
							closeSession(bytes0: native.Array<number>): void;
							getKeyRequest(bytes0: native.Array<number>, list1: java.util.List<androidx.media2.exoplayer.external.drm.DrmInitData.SchemeData>, int2: number, hashMap3: java.util.HashMap<string,string>): androidx.media2.exoplayer.external.drm.ExoMediaDrm.KeyRequest;
							provideKeyResponse(bytes0: native.Array<number>, bytes1: native.Array<number>): native.Array<number>;
							getProvisionRequest(): androidx.media2.exoplayer.external.drm.ExoMediaDrm.ProvisionRequest;
							provideProvisionResponse(bytes0: native.Array<number>): void;
							queryKeyStatus(bytes0: native.Array<number>): java.util.Map<string,string>;
							release(): void;
							restoreKeys(bytes0: native.Array<number>, bytes1: native.Array<number>): void;
							getPropertyString(string0: string): string;
							getPropertyByteArray(string0: string): native.Array<number>;
							setPropertyString(string0: string, string1: string): void;
							setPropertyByteArray(string0: string, bytes1: native.Array<number>): void;
							createMediaCrypto(bytes0: native.Array<number>): T;
							getExoMediaCryptoType(): java.lang.Class<T>;
						});
						public constructor();
						public static KEY_TYPE_RELEASE: number;
						public static KEY_TYPE_STREAMING: number;
						public static EVENT_KEY_REQUIRED: number;
						public static EVENT_KEY_EXPIRED: number;
						public static EVENT_PROVISION_REQUIRED: number;
						public static KEY_TYPE_OFFLINE: number;
						public provideProvisionResponse(bytes0: native.Array<number>): void;
						public getExoMediaCryptoType(): java.lang.Class<T>;
						public provideKeyResponse(bytes0: native.Array<number>, bytes1: native.Array<number>): native.Array<number>;
						public setPropertyString(string0: string, string1: string): void;
						public setOnKeyStatusChangeListener(onKeyStatusChangeListener0: androidx.media2.exoplayer.external.drm.ExoMediaDrm.OnKeyStatusChangeListener<any>): void;
						public release(): void;
						public getPropertyByteArray(string0: string): native.Array<number>;
						public getKeyRequest(bytes0: native.Array<number>, list1: java.util.List<androidx.media2.exoplayer.external.drm.DrmInitData.SchemeData>, int2: number, hashMap3: java.util.HashMap<string,string>): androidx.media2.exoplayer.external.drm.ExoMediaDrm.KeyRequest;
						public createMediaCrypto(bytes0: native.Array<number>): T;
						public openSession(): native.Array<number>;
						public getProvisionRequest(): androidx.media2.exoplayer.external.drm.ExoMediaDrm.ProvisionRequest;
						public setPropertyByteArray(string0: string, bytes1: native.Array<number>): void;
						public setOnEventListener(onEventListener0: androidx.media2.exoplayer.external.drm.ExoMediaDrm.OnEventListener<any>): void;
						public closeSession(bytes0: native.Array<number>): void;
						public getPropertyString(string0: string): string;
						public queryKeyStatus(bytes0: native.Array<number>): java.util.Map<string,string>;
						public restoreKeys(bytes0: native.Array<number>, bytes1: native.Array<number>): void;
					}
					export module ExoMediaDrm {
						export class KeyRequest extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.ExoMediaDrm.KeyRequest>;
							public getLicenseServerUrl(): string;
							public getData(): native.Array<number>;
							public constructor(data: native.Array<number>, licenseServerUrl: string);
						}
						export class KeyStatus extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.ExoMediaDrm.KeyStatus>;
							public getStatusCode(): number;
							public getKeyId(): native.Array<number>;
							public constructor(statusCode: number, keyId: native.Array<number>);
						}
						export class OnEventListener<T>  extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.ExoMediaDrm.OnEventListener<any>>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.drm.ExoMediaDrm$OnEventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onEvent(exoMediaDrm0: androidx.media2.exoplayer.external.drm.ExoMediaDrm<any>, bytes1: native.Array<number>, int2: number, int3: number, bytes4: native.Array<number>): void;
							});
							public constructor();
							public onEvent(exoMediaDrm0: androidx.media2.exoplayer.external.drm.ExoMediaDrm<any>, bytes1: native.Array<number>, int2: number, int3: number, bytes4: native.Array<number>): void;
						}
						export class OnKeyStatusChangeListener<T>  extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.ExoMediaDrm.OnKeyStatusChangeListener<any>>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.drm.ExoMediaDrm$OnKeyStatusChangeListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onKeyStatusChange(exoMediaDrm0: androidx.media2.exoplayer.external.drm.ExoMediaDrm<any>, bytes1: native.Array<number>, list2: java.util.List<androidx.media2.exoplayer.external.drm.ExoMediaDrm.KeyStatus>, boolean3: boolean): void;
							});
							public constructor();
							public onKeyStatusChange(exoMediaDrm0: androidx.media2.exoplayer.external.drm.ExoMediaDrm<any>, bytes1: native.Array<number>, list2: java.util.List<androidx.media2.exoplayer.external.drm.ExoMediaDrm.KeyStatus>, boolean3: boolean): void;
						}
						export class ProvisionRequest extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.ExoMediaDrm.ProvisionRequest>;
							public getDefaultUrl(): string;
							public getData(): native.Array<number>;
							public constructor(data: native.Array<number>, defaultUrl: string);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module drm {
					export class FrameworkMediaCrypto extends java.lang.Object implements androidx.media2.exoplayer.external.drm.ExoMediaCrypto {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>;
						public uuid: java.util.UUID;
						public sessionId: native.Array<number>;
						public forceAllowInsecureDecoderComponents: boolean;
						public constructor(uuid: java.util.UUID, sessionId: native.Array<number>, forceAllowInsecureDecoderComponents: boolean);
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module drm {
					export class FrameworkMediaDrm extends androidx.media2.exoplayer.external.drm.ExoMediaDrm<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto> {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.FrameworkMediaDrm>;
						public provideProvisionResponse(response: native.Array<number>): void;
						public restoreKeys(sessionId: native.Array<number>, keySetId: native.Array<number>): void;
						public setOnKeyStatusChangeListener(listener: androidx.media2.exoplayer.external.drm.ExoMediaDrm.OnKeyStatusChangeListener<any>): void;
						public closeSession(sessionId: native.Array<number>): void;
						public getPropertyByteArray(propertyName: string): native.Array<number>;
						public release(): void;
						public static newInstance(uuid: java.util.UUID): androidx.media2.exoplayer.external.drm.FrameworkMediaDrm;
						public getKeyRequest(scope: native.Array<number>, schemeDatas: java.util.List<androidx.media2.exoplayer.external.drm.DrmInitData.SchemeData>, keyType: number, optionalParameters: java.util.HashMap<string,string>): androidx.media2.exoplayer.external.drm.ExoMediaDrm.KeyRequest;
						public getPropertyString(propertyName: string): string;
						public setPropertyByteArray(propertyName: string, value: native.Array<number>): void;
						public getExoMediaCryptoType(): java.lang.Class<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>;
						public queryKeyStatus(sessionId: native.Array<number>): java.util.Map<string,string>;
						public openSession(): native.Array<number>;
						public getProvisionRequest(): androidx.media2.exoplayer.external.drm.ExoMediaDrm.ProvisionRequest;
						public getExoMediaCryptoType(): java.lang.Class<any>;
						public setPropertyString(propertyName: string, value: string): void;
						public setOnEventListener(listener: androidx.media2.exoplayer.external.drm.ExoMediaDrm.OnEventListener<any>): void;
						public createMediaCrypto(bytes0: native.Array<number>): any;
						public provideKeyResponse(scope: native.Array<number>, response: native.Array<number>): native.Array<number>;
						public createMediaCrypto(initData: native.Array<number>): androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module drm {
					export class HttpMediaDrmCallback extends java.lang.Object implements androidx.media2.exoplayer.external.drm.MediaDrmCallback {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.HttpMediaDrmCallback>;
						public constructor(defaultLicenseUrl: string, forceDefaultLicenseUrl: boolean, dataSourceFactory: androidx.media2.exoplayer.external.upstream.HttpDataSource.Factory);
						public clearAllKeyRequestProperties(): void;
						public executeProvisionRequest(uuid: java.util.UUID, request: androidx.media2.exoplayer.external.drm.ExoMediaDrm.ProvisionRequest): native.Array<number>;
						public constructor(defaultLicenseUrl: string, dataSourceFactory: androidx.media2.exoplayer.external.upstream.HttpDataSource.Factory);
						public setKeyRequestProperty(name: string, value: string): void;
						public executeKeyRequest(uuid: java.util.UUID, request: androidx.media2.exoplayer.external.drm.ExoMediaDrm.KeyRequest): native.Array<number>;
						public clearKeyRequestProperty(name: string): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module drm {
					export class KeysExpiredException extends java.lang.Exception {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.KeysExpiredException>;
						public constructor();
						public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						public constructor(message: string, cause: java.lang.Throwable);
						public constructor(cause: java.lang.Throwable);
						public constructor(message: string);
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module drm {
					export class LocalMediaDrmCallback extends java.lang.Object implements androidx.media2.exoplayer.external.drm.MediaDrmCallback {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.LocalMediaDrmCallback>;
						public constructor(keyResponse: native.Array<number>);
						public executeProvisionRequest(uuid: java.util.UUID, request: androidx.media2.exoplayer.external.drm.ExoMediaDrm.ProvisionRequest): native.Array<number>;
						public executeKeyRequest(uuid: java.util.UUID, request: androidx.media2.exoplayer.external.drm.ExoMediaDrm.KeyRequest): native.Array<number>;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module drm {
					export class MediaDrmCallback extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.MediaDrmCallback>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.drm.MediaDrmCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							executeProvisionRequest(uUID0: java.util.UUID, provisionRequest1: androidx.media2.exoplayer.external.drm.ExoMediaDrm.ProvisionRequest): native.Array<number>;
							executeKeyRequest(uUID0: java.util.UUID, keyRequest1: androidx.media2.exoplayer.external.drm.ExoMediaDrm.KeyRequest): native.Array<number>;
						});
						public constructor();
						public executeProvisionRequest(uUID0: java.util.UUID, provisionRequest1: androidx.media2.exoplayer.external.drm.ExoMediaDrm.ProvisionRequest): native.Array<number>;
						public executeKeyRequest(uUID0: java.util.UUID, keyRequest1: androidx.media2.exoplayer.external.drm.ExoMediaDrm.KeyRequest): native.Array<number>;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module drm {
					export class OfflineLicenseHelper<T>  extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.OfflineLicenseHelper<any>>;
						public static newWidevineInstance(defaultLicenseUrl: string, httpDataSourceFactory: androidx.media2.exoplayer.external.upstream.HttpDataSource.Factory): androidx.media2.exoplayer.external.drm.OfflineLicenseHelper<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>;
						public setPropertyString(key: string, value: string): void;
						public releaseLicense(offlineLicenseKeySetId: native.Array<number>): void;
						public static newWidevineInstance(defaultLicenseUrl: string, forceDefaultLicenseUrl: boolean, httpDataSourceFactory: androidx.media2.exoplayer.external.upstream.HttpDataSource.Factory): androidx.media2.exoplayer.external.drm.OfflineLicenseHelper<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>;
						public release(): void;
						public getLicenseDurationRemainingSec(offlineLicenseKeySetId: native.Array<number>): globalAndroid.util.Pair<java.lang.Long,java.lang.Long>;
						public constructor(uuid: java.util.UUID, mediaDrm: androidx.media2.exoplayer.external.drm.ExoMediaDrm<T>, callback: androidx.media2.exoplayer.external.drm.MediaDrmCallback, optionalKeyRequestParameters: java.util.HashMap<string,string>);
						public getPropertyString(key: string): string;
						public downloadLicense(drmInitData: androidx.media2.exoplayer.external.drm.DrmInitData): native.Array<number>;
						public getPropertyByteArray(key: string): native.Array<number>;
						public static newWidevineInstance(defaultLicenseUrl: string, forceDefaultLicenseUrl: boolean, httpDataSourceFactory: androidx.media2.exoplayer.external.upstream.HttpDataSource.Factory, optionalKeyRequestParameters: java.util.HashMap<string,string>): androidx.media2.exoplayer.external.drm.OfflineLicenseHelper<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>;
						public setPropertyByteArray(key: string, value: native.Array<number>): void;
						public renewLicense(offlineLicenseKeySetId: native.Array<number>): native.Array<number>;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module drm {
					export class UnsupportedDrmException extends java.lang.Exception {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.UnsupportedDrmException>;
						public static REASON_UNSUPPORTED_SCHEME: number;
						public static REASON_INSTANTIATION_ERROR: number;
						public reason: number;
						public constructor();
						public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						public constructor(message: string, cause: java.lang.Throwable);
						public constructor(cause: java.lang.Throwable);
						public constructor(message: string);
						public constructor(reason: number);
						public constructor(reason: number, cause: java.lang.Exception);
					}
					export module UnsupportedDrmException {
						export class Reason extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.UnsupportedDrmException.Reason>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.drm.UnsupportedDrmException$Reason interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module drm {
					export class WidevineUtil extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.drm.WidevineUtil>;
						public static PROPERTY_LICENSE_DURATION_REMAINING: string;
						public static PROPERTY_PLAYBACK_DURATION_REMAINING: string;
						public static getLicenseDurationRemainingSec(drmSession: androidx.media2.exoplayer.external.drm.DrmSession<any>): globalAndroid.util.Pair<java.lang.Long,java.lang.Long>;
					}
				}
			}
		}
	}
}


declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export abstract class BinarySearchSeeker extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.BinarySearchSeeker>;
						public seekMap: androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.BinarySearchSeekMap;
						public timestampSeeker: androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.TimestampSeeker;
						public seekOperationParams: androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.SeekOperationParams;
						public createSeekParamsForTargetTimeUs(timeUs: number): androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.SeekOperationParams;
						public setSeekTargetUs(timeUs: number): void;
						public isSeeking(): boolean;
						public skipInputUntilPosition(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, position: number): boolean;
						public markSeekOperationFinished(foundTargetFrame: boolean, resultPosition: number): void;
						public constructor(seekTimestampConverter: androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.SeekTimestampConverter, timestampSeeker: androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.TimestampSeeker, durationUs: number, floorTimePosition: number, ceilingTimePosition: number, floorBytePosition: number, ceilingBytePosition: number, approxBytesPerFrame: number, minimumSearchRange: number);
						public handlePendingSeek(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, seekPositionHolder: androidx.media2.exoplayer.external.extractor.PositionHolder, outputFrameHolder: androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.OutputFrameHolder): number;
						public seekToPosition(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, position: number, seekPositionHolder: androidx.media2.exoplayer.external.extractor.PositionHolder): number;
						public getSeekMap(): androidx.media2.exoplayer.external.extractor.SeekMap;
						public onSeekOperationFinished(foundTargetFrame: boolean, resultPosition: number): void;
					}
					export module BinarySearchSeeker {
						export class BinarySearchSeekMap extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.SeekMap {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.BinarySearchSeekMap>;
							public getDurationUs(): number;
							public constructor(seekTimestampConverter: androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.SeekTimestampConverter, durationUs: number, floorTimePosition: number, ceilingTimePosition: number, floorBytePosition: number, ceilingBytePosition: number, approxBytesPerFrame: number);
							public getSeekPoints(timeUs: number): androidx.media2.exoplayer.external.extractor.SeekMap.SeekPoints;
							public timeUsToTargetTime(timeUs: number): number;
							public isSeekable(): boolean;
						}
						export class DefaultSeekTimestampConverter extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.SeekTimestampConverter {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.DefaultSeekTimestampConverter>;
							public constructor();
							public timeUsToTargetTime(timeUs: number): number;
						}
						export class OutputFrameHolder extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.OutputFrameHolder>;
							public byteBuffer: java.nio.ByteBuffer;
							public timeUs: number;
							public constructor(outputByteBuffer: java.nio.ByteBuffer);
						}
						export class SeekOperationParams extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.SeekOperationParams>;
							public constructor(seekTimeUs: number, targetTimePosition: number, floorTimePosition: number, ceilingTimePosition: number, floorBytePosition: number, ceilingBytePosition: number, approxBytesPerFrame: number);
							public static calculateNextSearchBytePosition(targetTimePosition: number, floorTimePosition: number, ceilingTimePosition: number, floorBytePosition: number, ceilingBytePosition: number, approxBytesPerFrame: number): number;
						}
						export class SeekTimestampConverter extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.SeekTimestampConverter>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.BinarySearchSeeker$SeekTimestampConverter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								timeUsToTargetTime(long0: number): number;
							});
							public constructor();
							public timeUsToTargetTime(long0: number): number;
						}
						export class TimestampSearchResult extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.TimestampSearchResult>;
							public static TYPE_TARGET_TIMESTAMP_FOUND: number;
							public static TYPE_POSITION_OVERESTIMATED: number;
							public static TYPE_POSITION_UNDERESTIMATED: number;
							public static TYPE_NO_TIMESTAMP: number;
							public static NO_TIMESTAMP_IN_RANGE_RESULT: androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.TimestampSearchResult;
							public static targetFoundResult(resultBytePosition: number): androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.TimestampSearchResult;
							public static underestimatedResult(newFloorTimestamp: number, newCeilingBytePosition: number): androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.TimestampSearchResult;
							public static overestimatedResult(newCeilingTimestamp: number, newCeilingBytePosition: number): androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.TimestampSearchResult;
						}
						export module TimestampSearchResult {
							export class Type extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.TimestampSearchResult.Type>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.BinarySearchSeeker$TimestampSearchResult$Type interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
						}
						export class TimestampSeeker extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.TimestampSeeker>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.BinarySearchSeeker$TimestampSeeker interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								searchForTimestamp(extractorInput0: androidx.media2.exoplayer.external.extractor.ExtractorInput, long1: number, outputFrameHolder2: androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.OutputFrameHolder): androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.TimestampSearchResult;
								onSeekFinished(): void;
							});
							public constructor();
							public searchForTimestamp(extractorInput0: androidx.media2.exoplayer.external.extractor.ExtractorInput, long1: number, outputFrameHolder2: androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.OutputFrameHolder): androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.TimestampSearchResult;
							public onSeekFinished(): void;
						}
							export module  {
						export module TimestampSeeker {
								export abstract class CC extends java.lang.Object {
									public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.TimestampSeeker..CC>;
									public static onSeekFinished$$dflt$$(this0: androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.TimestampSeeker): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export class ChunkIndex extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.SeekMap {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ChunkIndex>;
						public length: number;
						public sizes: native.Array<number>;
						public offsets: native.Array<number>;
						public durationsUs: native.Array<number>;
						public timesUs: native.Array<number>;
						public getDurationUs(): number;
						public constructor(sizes: native.Array<number>, offsets: native.Array<number>, durationsUs: native.Array<number>, timesUs: native.Array<number>);
						public getSeekPoints(timeUs: number): androidx.media2.exoplayer.external.extractor.SeekMap.SeekPoints;
						public getChunkIndex(timeUs: number): number;
						public isSeekable(): boolean;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export class ConstantBitrateSeekMap extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.SeekMap {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ConstantBitrateSeekMap>;
						public getDurationUs(): number;
						public getTimeUsAtPosition(position: number): number;
						public constructor(inputLength: number, firstFrameBytePosition: number, bitrate: number, frameSize: number);
						public getSeekPoints(timeUs: number): androidx.media2.exoplayer.external.extractor.SeekMap.SeekPoints;
						public isSeekable(): boolean;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export class DefaultExtractorInput extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.ExtractorInput {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.DefaultExtractorInput>;
						public readFully(target: native.Array<number>, offset: number, length: number): void;
						public advancePeekPosition(length: number, allowEndOfInput: boolean): boolean;
						public read(target: native.Array<number>, offset: number, length: number): number;
						public resetPeekPosition(): void;
						public getPosition(): number;
						public constructor(dataSource: androidx.media2.exoplayer.external.upstream.DataSource, position: number, length: number);
						public readFully(target: native.Array<number>, offset: number, length: number, allowEndOfInput: boolean): boolean;
						public getLength(): number;
						public skipFully(length: number): void;
						public peekFully(target: native.Array<number>, offset: number, length: number): void;
						public skipFully(length: number, allowEndOfInput: boolean): boolean;
						public setRetryPosition(position: number, e: java.lang.Throwable): void;
						public advancePeekPosition(length: number): void;
						public getPeekPosition(): number;
						public skip(length: number): number;
						public peekFully(target: native.Array<number>, offset: number, length: number, allowEndOfInput: boolean): boolean;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export class DefaultExtractorsFactory extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.ExtractorsFactory {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.DefaultExtractorsFactory>;
						public constructor();
						public createExtractors(): native.Array<androidx.media2.exoplayer.external.extractor.Extractor>;
						public setMp4ExtractorFlags(flags: number): androidx.media2.exoplayer.external.extractor.DefaultExtractorsFactory;
						public setMp3ExtractorFlags(flags: number): androidx.media2.exoplayer.external.extractor.DefaultExtractorsFactory;
						public setAdtsExtractorFlags(flags: number): androidx.media2.exoplayer.external.extractor.DefaultExtractorsFactory;
						public setMatroskaExtractorFlags(flags: number): androidx.media2.exoplayer.external.extractor.DefaultExtractorsFactory;
						public setConstantBitrateSeekingEnabled(constantBitrateSeekingEnabled: boolean): androidx.media2.exoplayer.external.extractor.DefaultExtractorsFactory;
						public setTsExtractorFlags(flags: number): androidx.media2.exoplayer.external.extractor.DefaultExtractorsFactory;
						public setTsExtractorMode(mode: number): androidx.media2.exoplayer.external.extractor.DefaultExtractorsFactory;
						public setAmrExtractorFlags(flags: number): androidx.media2.exoplayer.external.extractor.DefaultExtractorsFactory;
						public setFragmentedMp4ExtractorFlags(flags: number): androidx.media2.exoplayer.external.extractor.DefaultExtractorsFactory;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export class DummyExtractorOutput extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.ExtractorOutput {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.DummyExtractorOutput>;
						public constructor();
						public seekMap(seekMap: androidx.media2.exoplayer.external.extractor.SeekMap): void;
						public endTracks(): void;
						public track(id: number, type: number): androidx.media2.exoplayer.external.extractor.TrackOutput;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export class DummyTrackOutput extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.TrackOutput {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.DummyTrackOutput>;
						public format(format: androidx.media2.exoplayer.external.Format): void;
						public constructor();
						public sampleMetadata(timeUs: number, flags: number, size: number, offset: number, cryptoData: androidx.media2.exoplayer.external.extractor.TrackOutput.CryptoData): void;
						public sampleData(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, length: number, allowEndOfInput: boolean): number;
						public sampleData(data: androidx.media2.exoplayer.external.util.ParsableByteArray, length: number): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export class Extractor extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.Extractor>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.Extractor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							sniff(extractorInput0: androidx.media2.exoplayer.external.extractor.ExtractorInput): boolean;
							init(extractorOutput0: androidx.media2.exoplayer.external.extractor.ExtractorOutput): void;
							read(extractorInput0: androidx.media2.exoplayer.external.extractor.ExtractorInput, positionHolder1: androidx.media2.exoplayer.external.extractor.PositionHolder): number;
							seek(long0: number, long1: number): void;
							release(): void;
						});
						public constructor();
						public static RESULT_CONTINUE: number;
						public static RESULT_SEEK: number;
						public static RESULT_END_OF_INPUT: number;
						public sniff(extractorInput0: androidx.media2.exoplayer.external.extractor.ExtractorInput): boolean;
						public release(): void;
						public seek(long0: number, long1: number): void;
						public init(extractorOutput0: androidx.media2.exoplayer.external.extractor.ExtractorOutput): void;
						public read(extractorInput0: androidx.media2.exoplayer.external.extractor.ExtractorInput, positionHolder1: androidx.media2.exoplayer.external.extractor.PositionHolder): number;
					}
					export module Extractor {
						export class ReadResult extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.Extractor.ReadResult>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.Extractor$ReadResult interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export class ExtractorInput extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ExtractorInput>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.ExtractorInput interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							read(bytes0: native.Array<number>, int1: number, int2: number): number;
							readFully(bytes0: native.Array<number>, int1: number, int2: number, boolean3: boolean): boolean;
							readFully(bytes0: native.Array<number>, int1: number, int2: number): void;
							skip(int0: number): number;
							skipFully(int0: number, boolean1: boolean): boolean;
							skipFully(int0: number): void;
							peekFully(bytes0: native.Array<number>, int1: number, int2: number, boolean3: boolean): boolean;
							peekFully(bytes0: native.Array<number>, int1: number, int2: number): void;
							advancePeekPosition(int0: number, boolean1: boolean): boolean;
							advancePeekPosition(int0: number): void;
							resetPeekPosition(): void;
							getPeekPosition(): number;
							getPosition(): number;
							getLength(): number;
							setRetryPosition(long0: number, throwable1: java.lang.Throwable): void;
						});
						public constructor();
						public peekFully(bytes0: native.Array<number>, int1: number, int2: number, boolean3: boolean): boolean;
						public advancePeekPosition(int0: number): void;
						public resetPeekPosition(): void;
						public getPosition(): number;
						public getLength(): number;
						public peekFully(bytes0: native.Array<number>, int1: number, int2: number): void;
						public skip(int0: number): number;
						public skipFully(int0: number, boolean1: boolean): boolean;
						public readFully(bytes0: native.Array<number>, int1: number, int2: number, boolean3: boolean): boolean;
						public readFully(bytes0: native.Array<number>, int1: number, int2: number): void;
						public advancePeekPosition(int0: number, boolean1: boolean): boolean;
						public read(bytes0: native.Array<number>, int1: number, int2: number): number;
						public getPeekPosition(): number;
						public skipFully(int0: number): void;
						public setRetryPosition(long0: number, throwable1: java.lang.Throwable): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export class ExtractorOutput extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ExtractorOutput>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.ExtractorOutput interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							track(int0: number, int1: number): androidx.media2.exoplayer.external.extractor.TrackOutput;
							endTracks(): void;
							seekMap(seekMap0: androidx.media2.exoplayer.external.extractor.SeekMap): void;
						});
						public constructor();
						public track(int0: number, int1: number): androidx.media2.exoplayer.external.extractor.TrackOutput;
						public endTracks(): void;
						public seekMap(seekMap0: androidx.media2.exoplayer.external.extractor.SeekMap): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export class ExtractorsFactory extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ExtractorsFactory>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.ExtractorsFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							createExtractors(): native.Array<androidx.media2.exoplayer.external.extractor.Extractor>;
						});
						public constructor();
						public createExtractors(): native.Array<androidx.media2.exoplayer.external.extractor.Extractor>;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export class GaplessInfoHolder extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.GaplessInfoHolder>;
						public encoderDelay: number;
						public encoderPadding: number;
						public constructor();
						public setFromXingHeaderValue(value: number): boolean;
						public setFromMetadata(metadata: androidx.media2.exoplayer.external.metadata.Metadata): boolean;
						public hasGaplessInfo(): boolean;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export class Id3Peeker extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.Id3Peeker>;
						public peekId3Data(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, id3FramePredicate: androidx.media2.exoplayer.external.metadata.id3.Id3Decoder.FramePredicate): androidx.media2.exoplayer.external.metadata.Metadata;
						public constructor();
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export class MpegAudioHeader extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.MpegAudioHeader>;
						public static MAX_FRAME_SIZE_BYTES: number;
						public version: number;
						public mimeType: string;
						public frameSize: number;
						public sampleRate: number;
						public channels: number;
						public bitrate: number;
						public samplesPerFrame: number;
						public constructor();
						public static getFrameSize(header: number): number;
						public static populateHeader(headerData: number, header: androidx.media2.exoplayer.external.extractor.MpegAudioHeader): boolean;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export class PositionHolder extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.PositionHolder>;
						public position: number;
						public constructor();
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export class SeekMap extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.SeekMap>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.SeekMap interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							isSeekable(): boolean;
							getDurationUs(): number;
							getSeekPoints(long0: number): androidx.media2.exoplayer.external.extractor.SeekMap.SeekPoints;
						});
						public constructor();
						public getDurationUs(): number;
						public getSeekPoints(long0: number): androidx.media2.exoplayer.external.extractor.SeekMap.SeekPoints;
						public isSeekable(): boolean;
					}
					export module SeekMap {
						export class SeekPoints extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.SeekMap.SeekPoints>;
							public first: androidx.media2.exoplayer.external.extractor.SeekPoint;
							public second: androidx.media2.exoplayer.external.extractor.SeekPoint;
							public hashCode(): number;
							public equals(obj: any): boolean;
							public constructor(point: androidx.media2.exoplayer.external.extractor.SeekPoint);
							public toString(): string;
							public constructor(first: androidx.media2.exoplayer.external.extractor.SeekPoint, second: androidx.media2.exoplayer.external.extractor.SeekPoint);
						}
						export class Unseekable extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.SeekMap {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.SeekMap.Unseekable>;
							public constructor(durationUs: number);
							public getDurationUs(): number;
							public getSeekPoints(timeUs: number): androidx.media2.exoplayer.external.extractor.SeekMap.SeekPoints;
							public constructor(durationUs: number, startPosition: number);
							public isSeekable(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export class SeekPoint extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.SeekPoint>;
						public static START: androidx.media2.exoplayer.external.extractor.SeekPoint;
						public timeUs: number;
						public position: number;
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public constructor(timeUs: number, position: number);
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export class TrackOutput extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.TrackOutput>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.TrackOutput interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							format(format0: androidx.media2.exoplayer.external.Format): void;
							sampleData(extractorInput0: androidx.media2.exoplayer.external.extractor.ExtractorInput, int1: number, boolean2: boolean): number;
							sampleData(parsableByteArray0: androidx.media2.exoplayer.external.util.ParsableByteArray, int1: number): void;
							sampleMetadata(long0: number, int1: number, int2: number, int3: number, cryptoData4: androidx.media2.exoplayer.external.extractor.TrackOutput.CryptoData): void;
						});
						public constructor();
						public sampleMetadata(long0: number, int1: number, int2: number, int3: number, cryptoData4: androidx.media2.exoplayer.external.extractor.TrackOutput.CryptoData): void;
						public sampleData(extractorInput0: androidx.media2.exoplayer.external.extractor.ExtractorInput, int1: number, boolean2: boolean): number;
						public format(format0: androidx.media2.exoplayer.external.Format): void;
						public sampleData(parsableByteArray0: androidx.media2.exoplayer.external.util.ParsableByteArray, int1: number): void;
					}
					export module TrackOutput {
						export class CryptoData extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.TrackOutput.CryptoData>;
							public cryptoMode: number;
							public encryptionKey: native.Array<number>;
							public encryptedBlocks: number;
							public clearBlocks: number;
							public hashCode(): number;
							public equals(obj: any): boolean;
							public constructor(cryptoMode: number, encryptionKey: native.Array<number>, encryptedBlocks: number, clearBlocks: number);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module amr {
						export class AmrExtractor extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.Extractor {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.amr.AmrExtractor>;
							public static FACTORY: androidx.media2.exoplayer.external.extractor.ExtractorsFactory;
							public static FLAG_ENABLE_CONSTANT_BITRATE_SEEKING: number;
							public constructor();
							public constructor(flags: number);
							public init(extractorOutput: androidx.media2.exoplayer.external.extractor.ExtractorOutput): void;
							public sniff(input: androidx.media2.exoplayer.external.extractor.ExtractorInput): boolean;
							public read(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, seekPosition: androidx.media2.exoplayer.external.extractor.PositionHolder): number;
							public seek(position: number, timeUs: number): void;
							public release(): void;
						}
						export module AmrExtractor {
							export class Flags extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.amr.AmrExtractor.Flags>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.amr.AmrExtractor$Flags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module flv {
						export class AudioTagPayloadReader extends androidx.media2.exoplayer.external.extractor.flv.TagPayloadReader {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.flv.AudioTagPayloadReader>;
							public constructor(output: androidx.media2.exoplayer.external.extractor.TrackOutput);
							public parsePayload(parsableByteArray0: androidx.media2.exoplayer.external.util.ParsableByteArray, long1: number): boolean;
							public seek(): void;
							public parseHeader(data: androidx.media2.exoplayer.external.util.ParsableByteArray): boolean;
							public parsePayload(data: androidx.media2.exoplayer.external.util.ParsableByteArray, timeUs: number): boolean;
							public parseHeader(parsableByteArray0: androidx.media2.exoplayer.external.util.ParsableByteArray): boolean;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module flv {
						export class FlvExtractor extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.Extractor {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.flv.FlvExtractor>;
							public static FACTORY: androidx.media2.exoplayer.external.extractor.ExtractorsFactory;
							public constructor();
							public sniff(input: androidx.media2.exoplayer.external.extractor.ExtractorInput): boolean;
							public seek(position: number, timeUs: number): void;
							public read(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, seekPosition: androidx.media2.exoplayer.external.extractor.PositionHolder): number;
							public release(): void;
							public init(output: androidx.media2.exoplayer.external.extractor.ExtractorOutput): void;
						}
						export module FlvExtractor {
							export class States extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.flv.FlvExtractor.States>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.flv.FlvExtractor$States interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module flv {
						export class ScriptTagPayloadReader extends androidx.media2.exoplayer.external.extractor.flv.TagPayloadReader {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.flv.ScriptTagPayloadReader>;
							public constructor(output: androidx.media2.exoplayer.external.extractor.TrackOutput);
							public constructor();
							public parsePayload(parsableByteArray0: androidx.media2.exoplayer.external.util.ParsableByteArray, long1: number): boolean;
							public getDurationUs(): number;
							public seek(): void;
							public parseHeader(data: androidx.media2.exoplayer.external.util.ParsableByteArray): boolean;
							public parsePayload(data: androidx.media2.exoplayer.external.util.ParsableByteArray, timeUs: number): boolean;
							public parseHeader(parsableByteArray0: androidx.media2.exoplayer.external.util.ParsableByteArray): boolean;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module flv {
						export abstract class TagPayloadReader extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.flv.TagPayloadReader>;
							public output: androidx.media2.exoplayer.external.extractor.TrackOutput;
							public constructor(output: androidx.media2.exoplayer.external.extractor.TrackOutput);
							public parsePayload(parsableByteArray0: androidx.media2.exoplayer.external.util.ParsableByteArray, long1: number): boolean;
							public consume(data: androidx.media2.exoplayer.external.util.ParsableByteArray, timeUs: number): boolean;
							public seek(): void;
							public parseHeader(parsableByteArray0: androidx.media2.exoplayer.external.util.ParsableByteArray): boolean;
						}
						export module TagPayloadReader {
							export class UnsupportedFormatException extends androidx.media2.exoplayer.external.ParserException {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.flv.TagPayloadReader.UnsupportedFormatException>;
								public constructor(message: string);
								public constructor(cause: java.lang.Throwable);
								public constructor(msg: string);
								public constructor(message: string, cause: java.lang.Throwable);
								public constructor();
								public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module flv {
						export class VideoTagPayloadReader extends androidx.media2.exoplayer.external.extractor.flv.TagPayloadReader {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.flv.VideoTagPayloadReader>;
							public constructor(output: androidx.media2.exoplayer.external.extractor.TrackOutput);
							public parsePayload(parsableByteArray0: androidx.media2.exoplayer.external.util.ParsableByteArray, long1: number): boolean;
							public seek(): void;
							public parseHeader(data: androidx.media2.exoplayer.external.util.ParsableByteArray): boolean;
							public parsePayload(data: androidx.media2.exoplayer.external.util.ParsableByteArray, timeUs: number): boolean;
							public parseHeader(parsableByteArray0: androidx.media2.exoplayer.external.util.ParsableByteArray): boolean;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module mkv {
						export class DefaultEbmlReader extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.mkv.EbmlReader {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mkv.DefaultEbmlReader>;
							public constructor();
							public init(processor: androidx.media2.exoplayer.external.extractor.mkv.EbmlProcessor): void;
							public read(input: androidx.media2.exoplayer.external.extractor.ExtractorInput): boolean;
							public reset(): void;
						}
						export module DefaultEbmlReader {
							export class ElementState extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mkv.DefaultEbmlReader.ElementState>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.mkv.DefaultEbmlReader$ElementState interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
							export class MasterElement extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mkv.DefaultEbmlReader.MasterElement>;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module mkv {
						export class EbmlProcessor extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mkv.EbmlProcessor>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.mkv.EbmlProcessor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getElementType(int0: number): number;
								isLevel1Element(int0: number): boolean;
								startMasterElement(int0: number, long1: number, long2: number): void;
								endMasterElement(int0: number): void;
								integerElement(int0: number, long1: number): void;
								floatElement(int0: number, double1: number): void;
								stringElement(int0: number, string1: string): void;
								binaryElement(int0: number, int1: number, extractorInput2: androidx.media2.exoplayer.external.extractor.ExtractorInput): void;
							});
							public constructor();
							public static ELEMENT_TYPE_UNKNOWN: number;
							public static ELEMENT_TYPE_MASTER: number;
							public static ELEMENT_TYPE_FLOAT: number;
							public static ELEMENT_TYPE_UNSIGNED_INT: number;
							public static ELEMENT_TYPE_STRING: number;
							public static ELEMENT_TYPE_BINARY: number;
							public startMasterElement(int0: number, long1: number, long2: number): void;
							public floatElement(int0: number, double1: number): void;
							public binaryElement(int0: number, int1: number, extractorInput2: androidx.media2.exoplayer.external.extractor.ExtractorInput): void;
							public isLevel1Element(int0: number): boolean;
							public getElementType(int0: number): number;
							public integerElement(int0: number, long1: number): void;
							public stringElement(int0: number, string1: string): void;
							public endMasterElement(int0: number): void;
						}
						export module EbmlProcessor {
							export class ElementType extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mkv.EbmlProcessor.ElementType>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.mkv.EbmlProcessor$ElementType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module mkv {
						export class EbmlReader extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mkv.EbmlReader>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.mkv.EbmlReader interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								init(ebmlProcessor0: androidx.media2.exoplayer.external.extractor.mkv.EbmlProcessor): void;
								reset(): void;
								read(extractorInput0: androidx.media2.exoplayer.external.extractor.ExtractorInput): boolean;
							});
							public constructor();
							public init(ebmlProcessor0: androidx.media2.exoplayer.external.extractor.mkv.EbmlProcessor): void;
							public reset(): void;
							public read(extractorInput0: androidx.media2.exoplayer.external.extractor.ExtractorInput): boolean;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module mkv {
						export class MatroskaExtractor extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.Extractor {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mkv.MatroskaExtractor>;
							public static FACTORY: androidx.media2.exoplayer.external.extractor.ExtractorsFactory;
							public static FLAG_DISABLE_SEEK_FOR_CUES: number;
							public constructor();
							public constructor(flags: number);
							public binaryElement(id: number, contentSize: number, input: androidx.media2.exoplayer.external.extractor.ExtractorInput): void;
							public startMasterElement(id: number, contentPosition: number, contentSize: number): void;
							public sniff(input: androidx.media2.exoplayer.external.extractor.ExtractorInput): boolean;
							public release(): void;
							public handleBlockAdditionalData(track: androidx.media2.exoplayer.external.extractor.mkv.MatroskaExtractor.Track, blockAddId: number, input: androidx.media2.exoplayer.external.extractor.ExtractorInput, contentSize: number): void;
							public floatElement(id: number, value: number): void;
							public getElementType(id: number): number;
							public stringElement(id: number, value: string): void;
							public seek(position: number, timeUs: number): void;
							public read(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, seekPosition: androidx.media2.exoplayer.external.extractor.PositionHolder): number;
							public integerElement(id: number, value: number): void;
							public isLevel1Element(id: number): boolean;
							public endMasterElement(id: number): void;
							public init(output: androidx.media2.exoplayer.external.extractor.ExtractorOutput): void;
						}
						export module MatroskaExtractor {
							export class Flags extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mkv.MatroskaExtractor.Flags>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.mkv.MatroskaExtractor$Flags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
							export class InnerEbmlProcessor extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.mkv.EbmlProcessor {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mkv.MatroskaExtractor.InnerEbmlProcessor>;
								public integerElement(id: number, value: number): void;
								public getElementType(id: number): number;
								public isLevel1Element(id: number): boolean;
								public startMasterElement(id: number, contentPosition: number, contentSize: number): void;
								public floatElement(id: number, value: number): void;
								public endMasterElement(id: number): void;
								public stringElement(id: number, value: string): void;
								public binaryElement(id: number, contentsSize: number, input: androidx.media2.exoplayer.external.extractor.ExtractorInput): void;
							}
							export class Track extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mkv.MatroskaExtractor.Track>;
								public name: string;
								public codecId: string;
								public number: number;
								public type: number;
								public defaultSampleDurationNs: number;
								public maxBlockAdditionId: number;
								public hasContentEncryption: boolean;
								public sampleStrippedBytes: native.Array<number>;
								public cryptoData: androidx.media2.exoplayer.external.extractor.TrackOutput.CryptoData;
								public codecPrivate: native.Array<number>;
								public drmInitData: androidx.media2.exoplayer.external.drm.DrmInitData;
								public width: number;
								public height: number;
								public displayWidth: number;
								public displayHeight: number;
								public displayUnit: number;
								public projectionType: number;
								public projectionPoseYaw: number;
								public projectionPosePitch: number;
								public projectionPoseRoll: number;
								public projectionData: native.Array<number>;
								public stereoMode: number;
								public hasColorInfo: boolean;
								public colorSpace: number;
								public colorTransfer: number;
								public colorRange: number;
								public maxContentLuminance: number;
								public maxFrameAverageLuminance: number;
								public primaryRChromaticityX: number;
								public primaryRChromaticityY: number;
								public primaryGChromaticityX: number;
								public primaryGChromaticityY: number;
								public primaryBChromaticityX: number;
								public primaryBChromaticityY: number;
								public whitePointChromaticityX: number;
								public whitePointChromaticityY: number;
								public maxMasteringLuminance: number;
								public minMasteringLuminance: number;
								public channelCount: number;
								public audioBitDepth: number;
								public sampleRate: number;
								public codecDelayNs: number;
								public seekPreRollNs: number;
								public trueHdSampleRechunker: androidx.media2.exoplayer.external.extractor.mkv.MatroskaExtractor.TrueHdSampleRechunker;
								public flagForced: boolean;
								public flagDefault: boolean;
								public output: androidx.media2.exoplayer.external.extractor.TrackOutput;
								public nalUnitLengthFieldLength: number;
								public initializeOutput(output: androidx.media2.exoplayer.external.extractor.ExtractorOutput, trackId: number): void;
								public reset(): void;
								public outputPendingSampleMetadata(): void;
							}
							export class TrueHdSampleRechunker extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mkv.MatroskaExtractor.TrueHdSampleRechunker>;
								public startSample(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, blockFlags: number, size: number): void;
								public sampleMetadata(track: androidx.media2.exoplayer.external.extractor.mkv.MatroskaExtractor.Track, timeUs: number): void;
								public reset(): void;
								public constructor();
								public outputPendingSampleMetadata(track: androidx.media2.exoplayer.external.extractor.mkv.MatroskaExtractor.Track): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module mkv {
						export class Sniffer extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mkv.Sniffer>;
							public constructor();
							public sniff(input: androidx.media2.exoplayer.external.extractor.ExtractorInput): boolean;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module mkv {
						export class VarintReader extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mkv.VarintReader>;
							public constructor();
							public readUnsignedVarint(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, allowEndOfInput: boolean, removeLengthMask: boolean, maximumAllowedLength: number): number;
							public static parseUnsignedVarintLength(firstByte: number): number;
							public getLastLength(): number;
							public static assembleVarint(varintBytes: native.Array<number>, varintLength: number, removeLengthMask: boolean): number;
							public reset(): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module mp3 {
						export class ConstantBitrateSeeker extends androidx.media2.exoplayer.external.extractor.ConstantBitrateSeekMap implements androidx.media2.exoplayer.external.extractor.mp3.Mp3Extractor.Seeker {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp3.ConstantBitrateSeeker>;
							public getTimeUs(position: number): number;
							public getDataEndPosition(): number;
							public getDurationUs(): number;
							public getSeekPoints(timeUs: number): androidx.media2.exoplayer.external.extractor.SeekMap.SeekPoints;
							public constructor(inputLength: number, firstFramePosition: number, mpegAudioHeader: androidx.media2.exoplayer.external.extractor.MpegAudioHeader);
							public isSeekable(): boolean;
							public constructor(inputLength: number, firstFrameBytePosition: number, bitrate: number, frameSize: number);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module mp3 {
						export class MlltSeeker extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.mp3.Mp3Extractor.Seeker {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp3.MlltSeeker>;
							public getTimeUs(position: number): number;
							public static create(firstFramePosition: number, mlltFrame: androidx.media2.exoplayer.external.metadata.id3.MlltFrame): androidx.media2.exoplayer.external.extractor.mp3.MlltSeeker;
							public getDurationUs(): number;
							public getDataEndPosition(): number;
							public getSeekPoints(timeUs: number): androidx.media2.exoplayer.external.extractor.SeekMap.SeekPoints;
							public isSeekable(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module mp3 {
						export class Mp3Extractor extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.Extractor {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp3.Mp3Extractor>;
							public static FACTORY: androidx.media2.exoplayer.external.extractor.ExtractorsFactory;
							public static FLAG_ENABLE_CONSTANT_BITRATE_SEEKING: number;
							public static FLAG_DISABLE_ID3_METADATA: number;
							public constructor();
							public constructor(flags: number);
							public sniff(input: androidx.media2.exoplayer.external.extractor.ExtractorInput): boolean;
							public seek(position: number, timeUs: number): void;
							public read(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, seekPosition: androidx.media2.exoplayer.external.extractor.PositionHolder): number;
							public constructor(flags: number, forcedFirstSampleTimestampUs: number);
							public release(): void;
							public init(output: androidx.media2.exoplayer.external.extractor.ExtractorOutput): void;
						}
						export module Mp3Extractor {
							export class Flags extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp3.Mp3Extractor.Flags>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.mp3.Mp3Extractor$Flags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
							export class Seeker extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.SeekMap {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp3.Mp3Extractor.Seeker>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.mp3.Mp3Extractor$Seeker interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									getTimeUs(long0: number): number;
									getDataEndPosition(): number;
									isSeekable(): boolean;
									getDurationUs(): number;
									getSeekPoints(long0: number): androidx.media2.exoplayer.external.extractor.SeekMap.SeekPoints;
								});
								public constructor();
								public getDurationUs(): number;
								public getSeekPoints(long0: number): androidx.media2.exoplayer.external.extractor.SeekMap.SeekPoints;
								public getDataEndPosition(): number;
								public isSeekable(): boolean;
								public getTimeUs(long0: number): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module mp3 {
						export class VbriSeeker extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.mp3.Mp3Extractor.Seeker {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp3.VbriSeeker>;
							public getTimeUs(position: number): number;
							public getDurationUs(): number;
							public getDataEndPosition(): number;
							public getSeekPoints(timeUs: number): androidx.media2.exoplayer.external.extractor.SeekMap.SeekPoints;
							public static create(inputLength: number, position: number, mpegAudioHeader: androidx.media2.exoplayer.external.extractor.MpegAudioHeader, frame: androidx.media2.exoplayer.external.util.ParsableByteArray): androidx.media2.exoplayer.external.extractor.mp3.VbriSeeker;
							public isSeekable(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module mp3 {
						export class XingSeeker extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.mp3.Mp3Extractor.Seeker {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp3.XingSeeker>;
							public getTimeUs(position: number): number;
							public getDurationUs(): number;
							public getDataEndPosition(): number;
							public getSeekPoints(timeUs: number): androidx.media2.exoplayer.external.extractor.SeekMap.SeekPoints;
							public static create(inputLength: number, position: number, mpegAudioHeader: androidx.media2.exoplayer.external.extractor.MpegAudioHeader, frame: androidx.media2.exoplayer.external.util.ParsableByteArray): androidx.media2.exoplayer.external.extractor.mp3.XingSeeker;
							public isSeekable(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module mp4 {
						export abstract class Atom extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp4.Atom>;
							public static HEADER_SIZE: number;
							public static FULL_HEADER_SIZE: number;
							public static LONG_HEADER_SIZE: number;
							public static DEFINES_LARGE_SIZE: number;
							public static EXTENDS_TO_END_SIZE: number;
							public static TYPE_ftyp: number;
							public static TYPE_avc1: number;
							public static TYPE_avc3: number;
							public static TYPE_avcC: number;
							public static TYPE_hvc1: number;
							public static TYPE_hev1: number;
							public static TYPE_hvcC: number;
							public static TYPE_vp08: number;
							public static TYPE_vp09: number;
							public static TYPE_vpcC: number;
							public static TYPE_av01: number;
							public static TYPE_av1C: number;
							public static TYPE_dvav: number;
							public static TYPE_dva1: number;
							public static TYPE_dvhe: number;
							public static TYPE_dvh1: number;
							public static TYPE_dvcC: number;
							public static TYPE_dvvC: number;
							public static TYPE_s263: number;
							public static TYPE_d263: number;
							public static TYPE_mdat: number;
							public static TYPE_mp4a: number;
							public static TYPE__mp3: number;
							public static TYPE_wave: number;
							public static TYPE_lpcm: number;
							public static TYPE_sowt: number;
							public static TYPE_ac_3: number;
							public static TYPE_dac3: number;
							public static TYPE_ec_3: number;
							public static TYPE_dec3: number;
							public static TYPE_ac_4: number;
							public static TYPE_dac4: number;
							public static TYPE_dtsc: number;
							public static TYPE_dtsh: number;
							public static TYPE_dtsl: number;
							public static TYPE_dtse: number;
							public static TYPE_ddts: number;
							public static TYPE_tfdt: number;
							public static TYPE_tfhd: number;
							public static TYPE_trex: number;
							public static TYPE_trun: number;
							public static TYPE_sidx: number;
							public static TYPE_moov: number;
							public static TYPE_mvhd: number;
							public static TYPE_trak: number;
							public static TYPE_mdia: number;
							public static TYPE_minf: number;
							public static TYPE_stbl: number;
							public static TYPE_esds: number;
							public static TYPE_moof: number;
							public static TYPE_traf: number;
							public static TYPE_mvex: number;
							public static TYPE_mehd: number;
							public static TYPE_tkhd: number;
							public static TYPE_edts: number;
							public static TYPE_elst: number;
							public static TYPE_mdhd: number;
							public static TYPE_hdlr: number;
							public static TYPE_stsd: number;
							public static TYPE_pssh: number;
							public static TYPE_sinf: number;
							public static TYPE_schm: number;
							public static TYPE_schi: number;
							public static TYPE_tenc: number;
							public static TYPE_encv: number;
							public static TYPE_enca: number;
							public static TYPE_frma: number;
							public static TYPE_saiz: number;
							public static TYPE_saio: number;
							public static TYPE_sbgp: number;
							public static TYPE_sgpd: number;
							public static TYPE_uuid: number;
							public static TYPE_senc: number;
							public static TYPE_pasp: number;
							public static TYPE_TTML: number;
							public static TYPE_vmhd: number;
							public static TYPE_mp4v: number;
							public static TYPE_stts: number;
							public static TYPE_stss: number;
							public static TYPE_ctts: number;
							public static TYPE_stsc: number;
							public static TYPE_stsz: number;
							public static TYPE_stz2: number;
							public static TYPE_stco: number;
							public static TYPE_co64: number;
							public static TYPE_tx3g: number;
							public static TYPE_wvtt: number;
							public static TYPE_stpp: number;
							public static TYPE_c608: number;
							public static TYPE_samr: number;
							public static TYPE_sawb: number;
							public static TYPE_udta: number;
							public static TYPE_meta: number;
							public static TYPE_keys: number;
							public static TYPE_ilst: number;
							public static TYPE_mean: number;
							public static TYPE_name: number;
							public static TYPE_data: number;
							public static TYPE_emsg: number;
							public static TYPE_st3d: number;
							public static TYPE_sv3d: number;
							public static TYPE_proj: number;
							public static TYPE_camm: number;
							public static TYPE_alac: number;
							public static TYPE_alaw: number;
							public static TYPE_ulaw: number;
							public static TYPE_Opus: number;
							public static TYPE_dOps: number;
							public static TYPE_fLaC: number;
							public static TYPE_dfLa: number;
							public type: number;
							public static parseFullAtomFlags(fullAtomInt: number): number;
							public static getAtomTypeString(type: number): string;
							public toString(): string;
							public constructor(type: number);
							public static parseFullAtomVersion(fullAtomInt: number): number;
						}
						export module Atom {
							export class ContainerAtom extends androidx.media2.exoplayer.external.extractor.mp4.Atom {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp4.Atom.ContainerAtom>;
								public endPosition: number;
								public leafChildren: java.util.List<androidx.media2.exoplayer.external.extractor.mp4.Atom.LeafAtom>;
								public containerChildren: java.util.List<androidx.media2.exoplayer.external.extractor.mp4.Atom.ContainerAtom>;
								public toString(): string;
								public add(atom: androidx.media2.exoplayer.external.extractor.mp4.Atom.ContainerAtom): void;
								public getContainerAtomOfType(type: number): androidx.media2.exoplayer.external.extractor.mp4.Atom.ContainerAtom;
								public getLeafAtomOfType(type: number): androidx.media2.exoplayer.external.extractor.mp4.Atom.LeafAtom;
								public constructor(type: number, endPosition: number);
								public constructor(type: number);
								public getChildAtomOfTypeCount(type: number): number;
								public add(atom: androidx.media2.exoplayer.external.extractor.mp4.Atom.LeafAtom): void;
							}
							export class LeafAtom extends androidx.media2.exoplayer.external.extractor.mp4.Atom {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp4.Atom.LeafAtom>;
								public data: androidx.media2.exoplayer.external.util.ParsableByteArray;
								public constructor(type: number, data: androidx.media2.exoplayer.external.util.ParsableByteArray);
								public constructor(type: number);
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module mp4 {
						export class AtomParsers extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp4.AtomParsers>;
							public static parseTrak(trak: androidx.media2.exoplayer.external.extractor.mp4.Atom.ContainerAtom, mvhd: androidx.media2.exoplayer.external.extractor.mp4.Atom.LeafAtom, duration: number, drmInitData: androidx.media2.exoplayer.external.drm.DrmInitData, ignoreEditLists: boolean, isQuickTime: boolean): androidx.media2.exoplayer.external.extractor.mp4.Track;
							public static parseUdta(udtaAtom: androidx.media2.exoplayer.external.extractor.mp4.Atom.LeafAtom, isQuickTime: boolean): androidx.media2.exoplayer.external.metadata.Metadata;
							public static parseMdtaFromMeta(meta: androidx.media2.exoplayer.external.extractor.mp4.Atom.ContainerAtom): androidx.media2.exoplayer.external.metadata.Metadata;
							public static parseStbl(track: androidx.media2.exoplayer.external.extractor.mp4.Track, stblAtom: androidx.media2.exoplayer.external.extractor.mp4.Atom.ContainerAtom, gaplessInfoHolder: androidx.media2.exoplayer.external.extractor.GaplessInfoHolder): androidx.media2.exoplayer.external.extractor.mp4.TrackSampleTable;
						}
						export module AtomParsers {
							export class ChunkIterator extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp4.AtomParsers.ChunkIterator>;
								public length: number;
								public index: number;
								public numSamples: number;
								public offset: number;
								public moveNext(): boolean;
								public constructor(stsc: androidx.media2.exoplayer.external.util.ParsableByteArray, chunkOffsets: androidx.media2.exoplayer.external.util.ParsableByteArray, chunkOffsetsAreLongs: boolean);
							}
							export class SampleSizeBox extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp4.AtomParsers.SampleSizeBox>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.mp4.AtomParsers$SampleSizeBox interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									getSampleCount(): number;
									readNextSampleSize(): number;
									isFixedSampleSize(): boolean;
								});
								public constructor();
								public getSampleCount(): number;
								public isFixedSampleSize(): boolean;
								public readNextSampleSize(): number;
							}
							export class StsdData extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp4.AtomParsers.StsdData>;
								public static STSD_HEADER_SIZE: number;
								public trackEncryptionBoxes: native.Array<androidx.media2.exoplayer.external.extractor.mp4.TrackEncryptionBox>;
								public format: androidx.media2.exoplayer.external.Format;
								public nalUnitLengthFieldLength: number;
								public requiredSampleTransformation: number;
								public constructor(numberOfEntries: number);
							}
							export class StszSampleSizeBox extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.mp4.AtomParsers.SampleSizeBox {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp4.AtomParsers.StszSampleSizeBox>;
								public getSampleCount(): number;
								public isFixedSampleSize(): boolean;
								public readNextSampleSize(): number;
								public constructor(stszAtom: androidx.media2.exoplayer.external.extractor.mp4.Atom.LeafAtom);
							}
							export class Stz2SampleSizeBox extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.mp4.AtomParsers.SampleSizeBox {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp4.AtomParsers.Stz2SampleSizeBox>;
								public getSampleCount(): number;
								public isFixedSampleSize(): boolean;
								public readNextSampleSize(): number;
								public constructor(stz2Atom: androidx.media2.exoplayer.external.extractor.mp4.Atom.LeafAtom);
							}
							export class TkhdData extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp4.AtomParsers.TkhdData>;
								public constructor(id: number, duration: number, rotationDegrees: number);
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module mp4 {
						export class DefaultSampleValues extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp4.DefaultSampleValues>;
							public sampleDescriptionIndex: number;
							public duration: number;
							public size: number;
							public flags: number;
							public constructor(sampleDescriptionIndex: number, duration: number, size: number, flags: number);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module mp4 {
						export class FixedSampleSizeRechunker extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp4.FixedSampleSizeRechunker>;
							public static rechunk(fixedSampleSize: number, chunkOffsets: native.Array<number>, chunkSampleCounts: native.Array<number>, timestampDeltaInTimeUnits: number): androidx.media2.exoplayer.external.extractor.mp4.FixedSampleSizeRechunker.Results;
						}
						export module FixedSampleSizeRechunker {
							export class Results extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp4.FixedSampleSizeRechunker.Results>;
								public offsets: native.Array<number>;
								public sizes: native.Array<number>;
								public maximumSize: number;
								public timestamps: native.Array<number>;
								public flags: native.Array<number>;
								public duration: number;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module mp4 {
						export class FragmentedMp4Extractor extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.Extractor {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp4.FragmentedMp4Extractor>;
							public static FACTORY: androidx.media2.exoplayer.external.extractor.ExtractorsFactory;
							public static FLAG_WORKAROUND_EVERY_VIDEO_FRAME_IS_SYNC_FRAME: number;
							public static FLAG_WORKAROUND_IGNORE_TFDT_BOX: number;
							public static FLAG_ENABLE_EMSG_TRACK: number;
							public static FLAG_WORKAROUND_IGNORE_EDIT_LISTS: number;
							public constructor();
							public constructor(flags: number);
							public constructor(flags: number, timestampAdjuster: androidx.media2.exoplayer.external.util.TimestampAdjuster, sideloadedTrack: androidx.media2.exoplayer.external.extractor.mp4.Track, sideloadedDrmInitData: androidx.media2.exoplayer.external.drm.DrmInitData);
							public constructor(flags: number, timestampAdjuster: androidx.media2.exoplayer.external.util.TimestampAdjuster, sideloadedTrack: androidx.media2.exoplayer.external.extractor.mp4.Track, sideloadedDrmInitData: androidx.media2.exoplayer.external.drm.DrmInitData, closedCaptionFormats: java.util.List<androidx.media2.exoplayer.external.Format>, additionalEmsgTrackOutput: androidx.media2.exoplayer.external.extractor.TrackOutput);
							public constructor(flags: number, timestampAdjuster: androidx.media2.exoplayer.external.util.TimestampAdjuster);
							public sniff(input: androidx.media2.exoplayer.external.extractor.ExtractorInput): boolean;
							public modifyTrack(track: androidx.media2.exoplayer.external.extractor.mp4.Track): androidx.media2.exoplayer.external.extractor.mp4.Track;
							public seek(position: number, timeUs: number): void;
							public read(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, seekPosition: androidx.media2.exoplayer.external.extractor.PositionHolder): number;
							public release(): void;
							public constructor(flags: number, timestampAdjuster: androidx.media2.exoplayer.external.util.TimestampAdjuster, sideloadedTrack: androidx.media2.exoplayer.external.extractor.mp4.Track, sideloadedDrmInitData: androidx.media2.exoplayer.external.drm.DrmInitData, closedCaptionFormats: java.util.List<androidx.media2.exoplayer.external.Format>);
							public init(output: androidx.media2.exoplayer.external.extractor.ExtractorOutput): void;
						}
						export module FragmentedMp4Extractor {
							export class Flags extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp4.FragmentedMp4Extractor.Flags>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.mp4.FragmentedMp4Extractor$Flags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
							export class MetadataSampleInfo extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp4.FragmentedMp4Extractor.MetadataSampleInfo>;
								public presentationTimeDeltaUs: number;
								public size: number;
								public constructor(presentationTimeDeltaUs: number, size: number);
							}
							export class TrackBundle extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp4.FragmentedMp4Extractor.TrackBundle>;
								public output: androidx.media2.exoplayer.external.extractor.TrackOutput;
								public fragment: androidx.media2.exoplayer.external.extractor.mp4.TrackFragment;
								public track: androidx.media2.exoplayer.external.extractor.mp4.Track;
								public defaultSampleValues: androidx.media2.exoplayer.external.extractor.mp4.DefaultSampleValues;
								public currentSampleIndex: number;
								public currentSampleInTrackRun: number;
								public currentTrackRunIndex: number;
								public firstSampleToOutputIndex: number;
								public updateDrmInitData(drmInitData: androidx.media2.exoplayer.external.drm.DrmInitData): void;
								public outputSampleEncryptionData(): number;
								public reset(): void;
								public init(track: androidx.media2.exoplayer.external.extractor.mp4.Track, defaultSampleValues: androidx.media2.exoplayer.external.extractor.mp4.DefaultSampleValues): void;
								public next(): boolean;
								public seek(timeUs: number): void;
								public constructor(output: androidx.media2.exoplayer.external.extractor.TrackOutput);
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module mp4 {
						export class MdtaMetadataEntry extends java.lang.Object implements androidx.media2.exoplayer.external.metadata.Metadata.Entry {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp4.MdtaMetadataEntry>;
							public key: string;
							public value: native.Array<number>;
							public localeIndicator: number;
							public typeIndicator: number;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.extractor.mp4.MdtaMetadataEntry>;
							public constructor(key: string, value: native.Array<number>, localeIndicator: number, typeIndicator: number);
							public hashCode(): number;
							public getWrappedMetadataFormat(): androidx.media2.exoplayer.external.Format;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public describeContents(): number;
							public getWrappedMetadataBytes(): native.Array<number>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module mp4 {
						export class MetadataUtil extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp4.MetadataUtil>;
							public static getFormatWithMetadata(trackType: number, format: androidx.media2.exoplayer.external.Format, udtaMetadata: androidx.media2.exoplayer.external.metadata.Metadata, mdtaMetadata: androidx.media2.exoplayer.external.metadata.Metadata, gaplessInfoHolder: androidx.media2.exoplayer.external.extractor.GaplessInfoHolder): androidx.media2.exoplayer.external.Format;
							public static parseIlstElement(ilst: androidx.media2.exoplayer.external.util.ParsableByteArray): androidx.media2.exoplayer.external.metadata.Metadata.Entry;
							public static parseMdtaMetadataEntryFromIlst(ilst: androidx.media2.exoplayer.external.util.ParsableByteArray, endPosition: number, key: string): androidx.media2.exoplayer.external.extractor.mp4.MdtaMetadataEntry;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module mp4 {
						export class Mp4Extractor extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.Extractor, androidx.media2.exoplayer.external.extractor.SeekMap {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp4.Mp4Extractor>;
							public static FACTORY: androidx.media2.exoplayer.external.extractor.ExtractorsFactory;
							public static FLAG_WORKAROUND_IGNORE_EDIT_LISTS: number;
							public constructor();
							public constructor(flags: number);
							public getDurationUs(): number;
							public getSeekPoints(timeUs: number): androidx.media2.exoplayer.external.extractor.SeekMap.SeekPoints;
							public sniff(input: androidx.media2.exoplayer.external.extractor.ExtractorInput): boolean;
							public seek(position: number, timeUs: number): void;
							public read(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, seekPosition: androidx.media2.exoplayer.external.extractor.PositionHolder): number;
							public release(): void;
							public isSeekable(): boolean;
							public init(output: androidx.media2.exoplayer.external.extractor.ExtractorOutput): void;
						}
						export module Mp4Extractor {
							export class Flags extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp4.Mp4Extractor.Flags>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.mp4.Mp4Extractor$Flags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
							export class Mp4Track extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp4.Mp4Extractor.Mp4Track>;
								public track: androidx.media2.exoplayer.external.extractor.mp4.Track;
								public sampleTable: androidx.media2.exoplayer.external.extractor.mp4.TrackSampleTable;
								public trackOutput: androidx.media2.exoplayer.external.extractor.TrackOutput;
								public sampleIndex: number;
								public constructor(track: androidx.media2.exoplayer.external.extractor.mp4.Track, sampleTable: androidx.media2.exoplayer.external.extractor.mp4.TrackSampleTable, trackOutput: androidx.media2.exoplayer.external.extractor.TrackOutput);
							}
							export class State extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp4.Mp4Extractor.State>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.mp4.Mp4Extractor$State interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module mp4 {
						export class PsshAtomUtil extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp4.PsshAtomUtil>;
							public static parseVersion(atom: native.Array<number>): number;
							public static buildPsshAtom(systemId: java.util.UUID, keyIds: native.Array<java.util.UUID>, data: native.Array<number>): native.Array<number>;
							public static parseUuid(atom: native.Array<number>): java.util.UUID;
							public static isPsshAtom(data: native.Array<number>): boolean;
							public static buildPsshAtom(systemId: java.util.UUID, data: native.Array<number>): native.Array<number>;
							public static parseSchemeSpecificData(atom: native.Array<number>, uuid: java.util.UUID): native.Array<number>;
						}
						export module PsshAtomUtil {
							export class PsshAtom extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp4.PsshAtomUtil.PsshAtom>;
								public constructor(uuid: java.util.UUID, version: number, schemeData: native.Array<number>);
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module mp4 {
						export class Sniffer extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp4.Sniffer>;
							public static sniffUnfragmented(input: androidx.media2.exoplayer.external.extractor.ExtractorInput): boolean;
							public static sniffFragmented(input: androidx.media2.exoplayer.external.extractor.ExtractorInput): boolean;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module mp4 {
						export class Track extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp4.Track>;
							public static TRANSFORMATION_NONE: number;
							public static TRANSFORMATION_CEA608_CDAT: number;
							public id: number;
							public type: number;
							public timescale: number;
							public movieTimescale: number;
							public durationUs: number;
							public format: androidx.media2.exoplayer.external.Format;
							public sampleTransformation: number;
							public editListDurations: native.Array<number>;
							public editListMediaTimes: native.Array<number>;
							public nalUnitLengthFieldLength: number;
							public copyWithFormat(format: androidx.media2.exoplayer.external.Format): androidx.media2.exoplayer.external.extractor.mp4.Track;
							public constructor(id: number, type: number, timescale: number, movieTimescale: number, durationUs: number, format: androidx.media2.exoplayer.external.Format, sampleTransformation: number, sampleDescriptionEncryptionBoxes: native.Array<androidx.media2.exoplayer.external.extractor.mp4.TrackEncryptionBox>, nalUnitLengthFieldLength: number, editListDurations: native.Array<number>, editListMediaTimes: native.Array<number>);
							public getSampleDescriptionEncryptionBox(sampleDescriptionIndex: number): androidx.media2.exoplayer.external.extractor.mp4.TrackEncryptionBox;
						}
						export module Track {
							export class Transformation extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp4.Track.Transformation>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.mp4.Track$Transformation interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module mp4 {
						export class TrackEncryptionBox extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp4.TrackEncryptionBox>;
							public isEncrypted: boolean;
							public schemeType: string;
							public cryptoData: androidx.media2.exoplayer.external.extractor.TrackOutput.CryptoData;
							public perSampleIvSize: number;
							public defaultInitializationVector: native.Array<number>;
							public constructor(isEncrypted: boolean, schemeType: string, perSampleIvSize: number, keyId: native.Array<number>, defaultEncryptedBlocks: number, defaultClearBlocks: number, defaultInitializationVector: native.Array<number>);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module mp4 {
						export class TrackFragment extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp4.TrackFragment>;
							public header: androidx.media2.exoplayer.external.extractor.mp4.DefaultSampleValues;
							public atomPosition: number;
							public dataPosition: number;
							public auxiliaryDataPosition: number;
							public trunCount: number;
							public sampleCount: number;
							public trunDataPosition: native.Array<number>;
							public trunLength: native.Array<number>;
							public sampleSizeTable: native.Array<number>;
							public sampleCompositionTimeOffsetTable: native.Array<number>;
							public sampleDecodingTimeTable: native.Array<number>;
							public sampleIsSyncFrameTable: native.Array<boolean>;
							public definesEncryptionData: boolean;
							public trackEncryptionBox: androidx.media2.exoplayer.external.extractor.mp4.TrackEncryptionBox;
							public sampleEncryptionDataLength: number;
							public sampleEncryptionData: androidx.media2.exoplayer.external.util.ParsableByteArray;
							public sampleEncryptionDataNeedsFill: boolean;
							public nextFragmentDecodeTime: number;
							public fillEncryptionData(input: androidx.media2.exoplayer.external.extractor.ExtractorInput): void;
							public fillEncryptionData(source: androidx.media2.exoplayer.external.util.ParsableByteArray): void;
							public sampleHasSubsampleEncryptionTable(index: number): boolean;
							public initEncryptionData(length: number): void;
							public getSamplePresentationTime(index: number): number;
							public initTables(trunCount: number, sampleCount: number): void;
							public reset(): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module mp4 {
						export class TrackSampleTable extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.mp4.TrackSampleTable>;
							public track: androidx.media2.exoplayer.external.extractor.mp4.Track;
							public sampleCount: number;
							public offsets: native.Array<number>;
							public sizes: native.Array<number>;
							public maximumSize: number;
							public timestampsUs: native.Array<number>;
							public flags: native.Array<number>;
							public durationUs: number;
							public constructor(track: androidx.media2.exoplayer.external.extractor.mp4.Track, offsets: native.Array<number>, sizes: native.Array<number>, maximumSize: number, timestampsUs: native.Array<number>, flags: native.Array<number>, durationUs: number);
							public getIndexOfEarlierOrEqualSynchronizationSample(timeUs: number): number;
							public getIndexOfLaterOrEqualSynchronizationSample(timeUs: number): number;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ogg {
						export class DefaultOggSeeker extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.ogg.OggSeeker {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ogg.DefaultOggSeeker>;
							public createSeekMap(): androidx.media2.exoplayer.external.extractor.SeekMap;
							public createSeekMap(): androidx.media2.exoplayer.external.extractor.ogg.DefaultOggSeeker.OggSeekMap;
							public read(input: androidx.media2.exoplayer.external.extractor.ExtractorInput): number;
							public startSeek(targetGranule: number): void;
							public constructor(streamReader: androidx.media2.exoplayer.external.extractor.ogg.StreamReader, payloadStartPosition: number, payloadEndPosition: number, firstPayloadPageSize: number, firstPayloadPageGranulePosition: number, firstPayloadPageIsLastPage: boolean);
						}
						export module DefaultOggSeeker {
							export class OggSeekMap extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.SeekMap {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ogg.DefaultOggSeeker.OggSeekMap>;
								public getDurationUs(): number;
								public getSeekPoints(timeUs: number): androidx.media2.exoplayer.external.extractor.SeekMap.SeekPoints;
								public isSeekable(): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ogg {
						export class FlacReader extends androidx.media2.exoplayer.external.extractor.ogg.StreamReader {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ogg.FlacReader>;
							public reset(headerData: boolean): void;
							public preparePayload(parsableByteArray0: androidx.media2.exoplayer.external.util.ParsableByteArray): number;
							public readHeaders(parsableByteArray0: androidx.media2.exoplayer.external.util.ParsableByteArray, long1: number, setupData2: androidx.media2.exoplayer.external.extractor.ogg.StreamReader.SetupData): boolean;
							public readHeaders(packet: androidx.media2.exoplayer.external.util.ParsableByteArray, position: number, setupData: androidx.media2.exoplayer.external.extractor.ogg.StreamReader.SetupData): boolean;
							public static verifyBitstreamType(data: androidx.media2.exoplayer.external.util.ParsableByteArray): boolean;
							public preparePayload(packet: androidx.media2.exoplayer.external.util.ParsableByteArray): number;
						}
						export module FlacReader {
							export class FlacOggSeeker extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.ogg.OggSeeker, androidx.media2.exoplayer.external.extractor.SeekMap {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ogg.FlacReader.FlacOggSeeker>;
								public getDurationUs(): number;
								public read(input: androidx.media2.exoplayer.external.extractor.ExtractorInput): number;
								public setFirstFrameOffset(firstFrameOffset: number): void;
								public startSeek(targetGranule: number): void;
								public createSeekMap(): androidx.media2.exoplayer.external.extractor.SeekMap;
								public parseSeekTable(data: androidx.media2.exoplayer.external.util.ParsableByteArray): void;
								public getSeekPoints(timeUs: number): androidx.media2.exoplayer.external.extractor.SeekMap.SeekPoints;
								public isSeekable(): boolean;
								public constructor(param0: androidx.media2.exoplayer.external.extractor.ogg.FlacReader);
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ogg {
						export class OggExtractor extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.Extractor {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ogg.OggExtractor>;
							public static FACTORY: androidx.media2.exoplayer.external.extractor.ExtractorsFactory;
							public constructor();
							public sniff(input: androidx.media2.exoplayer.external.extractor.ExtractorInput): boolean;
							public seek(position: number, timeUs: number): void;
							public read(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, seekPosition: androidx.media2.exoplayer.external.extractor.PositionHolder): number;
							public release(): void;
							public init(output: androidx.media2.exoplayer.external.extractor.ExtractorOutput): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ogg {
						export class OggPacket extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ogg.OggPacket>;
							public populate(input: androidx.media2.exoplayer.external.extractor.ExtractorInput): boolean;
							public trimPayload(): void;
							public getPayload(): androidx.media2.exoplayer.external.util.ParsableByteArray;
							public getPageHeader(): androidx.media2.exoplayer.external.extractor.ogg.OggPageHeader;
							public reset(): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ogg {
						export class OggPageHeader extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ogg.OggPageHeader>;
							public static EMPTY_PAGE_HEADER_SIZE: number;
							public static MAX_SEGMENT_COUNT: number;
							public static MAX_PAGE_PAYLOAD: number;
							public static MAX_PAGE_SIZE: number;
							public revision: number;
							public type: number;
							public granulePosition: number;
							public streamSerialNumber: number;
							public pageSequenceNumber: number;
							public pageChecksum: number;
							public pageSegmentCount: number;
							public headerSize: number;
							public bodySize: number;
							public laces: native.Array<number>;
							public populate(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, quiet: boolean): boolean;
							public reset(): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ogg {
						export class OggSeeker extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ogg.OggSeeker>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.ogg.OggSeeker interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								createSeekMap(): androidx.media2.exoplayer.external.extractor.SeekMap;
								startSeek(long0: number): void;
								read(extractorInput0: androidx.media2.exoplayer.external.extractor.ExtractorInput): number;
							});
							public constructor();
							public createSeekMap(): androidx.media2.exoplayer.external.extractor.SeekMap;
							public read(extractorInput0: androidx.media2.exoplayer.external.extractor.ExtractorInput): number;
							public startSeek(long0: number): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ogg {
						export class OpusReader extends androidx.media2.exoplayer.external.extractor.ogg.StreamReader {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ogg.OpusReader>;
							public reset(headerData: boolean): void;
							public preparePayload(parsableByteArray0: androidx.media2.exoplayer.external.util.ParsableByteArray): number;
							public readHeaders(parsableByteArray0: androidx.media2.exoplayer.external.util.ParsableByteArray, long1: number, setupData2: androidx.media2.exoplayer.external.extractor.ogg.StreamReader.SetupData): boolean;
							public readHeaders(packet: androidx.media2.exoplayer.external.util.ParsableByteArray, position: number, setupData: androidx.media2.exoplayer.external.extractor.ogg.StreamReader.SetupData): boolean;
							public static verifyBitstreamType(data: androidx.media2.exoplayer.external.util.ParsableByteArray): boolean;
							public preparePayload(packet: androidx.media2.exoplayer.external.util.ParsableByteArray): number;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ogg {
						export abstract class StreamReader extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ogg.StreamReader>;
							public constructor();
							public reset(headerData: boolean): void;
							public onSeekEnd(currentGranule: number): void;
							public preparePayload(parsableByteArray0: androidx.media2.exoplayer.external.util.ParsableByteArray): number;
							public readHeaders(parsableByteArray0: androidx.media2.exoplayer.external.util.ParsableByteArray, long1: number, setupData2: androidx.media2.exoplayer.external.extractor.ogg.StreamReader.SetupData): boolean;
							public convertGranuleToTime(granule: number): number;
							public convertTimeToGranule(timeUs: number): number;
						}
						export module StreamReader {
							export class SetupData extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ogg.StreamReader.SetupData>;
							}
							export class UnseekableOggSeeker extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.ogg.OggSeeker {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ogg.StreamReader.UnseekableOggSeeker>;
								public read(input: androidx.media2.exoplayer.external.extractor.ExtractorInput): number;
								public startSeek(targetGranule: number): void;
								public createSeekMap(): androidx.media2.exoplayer.external.extractor.SeekMap;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ogg {
						export class VorbisBitArray extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ogg.VorbisBitArray>;
							public readBits(numBits: number): number;
							public bitsLeft(): number;
							public getPosition(): number;
							public readBit(): boolean;
							public setPosition(position: number): void;
							public skipBits(numBits: number): void;
							public constructor(data: native.Array<number>);
							public reset(): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ogg {
						export class VorbisReader extends androidx.media2.exoplayer.external.extractor.ogg.StreamReader {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ogg.VorbisReader>;
							public reset(headerData: boolean): void;
							public onSeekEnd(currentGranule: number): void;
							public preparePayload(parsableByteArray0: androidx.media2.exoplayer.external.util.ParsableByteArray): number;
							public readHeaders(parsableByteArray0: androidx.media2.exoplayer.external.util.ParsableByteArray, long1: number, setupData2: androidx.media2.exoplayer.external.extractor.ogg.StreamReader.SetupData): boolean;
							public readHeaders(packet: androidx.media2.exoplayer.external.util.ParsableByteArray, position: number, setupData: androidx.media2.exoplayer.external.extractor.ogg.StreamReader.SetupData): boolean;
							public static verifyBitstreamType(data: androidx.media2.exoplayer.external.util.ParsableByteArray): boolean;
							public preparePayload(packet: androidx.media2.exoplayer.external.util.ParsableByteArray): number;
						}
						export module VorbisReader {
							export class VorbisSetup extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ogg.VorbisReader.VorbisSetup>;
								public idHeader: androidx.media2.exoplayer.external.extractor.ogg.VorbisUtil.VorbisIdHeader;
								public commentHeader: androidx.media2.exoplayer.external.extractor.ogg.VorbisUtil.CommentHeader;
								public setupHeaderData: native.Array<number>;
								public modes: native.Array<androidx.media2.exoplayer.external.extractor.ogg.VorbisUtil.Mode>;
								public iLogModes: number;
								public constructor(idHeader: androidx.media2.exoplayer.external.extractor.ogg.VorbisUtil.VorbisIdHeader, commentHeader: androidx.media2.exoplayer.external.extractor.ogg.VorbisUtil.CommentHeader, setupHeaderData: native.Array<number>, modes: native.Array<androidx.media2.exoplayer.external.extractor.ogg.VorbisUtil.Mode>, iLogModes: number);
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ogg {
						export class VorbisUtil extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ogg.VorbisUtil>;
							public static readVorbisCommentHeader(headerData: androidx.media2.exoplayer.external.util.ParsableByteArray): androidx.media2.exoplayer.external.extractor.ogg.VorbisUtil.CommentHeader;
							public static readVorbisModes(headerData: androidx.media2.exoplayer.external.util.ParsableByteArray, channels: number): native.Array<androidx.media2.exoplayer.external.extractor.ogg.VorbisUtil.Mode>;
							public static verifyVorbisHeaderCapturePattern(headerType: number, header: androidx.media2.exoplayer.external.util.ParsableByteArray, quiet: boolean): boolean;
							public static readVorbisIdentificationHeader(headerData: androidx.media2.exoplayer.external.util.ParsableByteArray): androidx.media2.exoplayer.external.extractor.ogg.VorbisUtil.VorbisIdHeader;
							public static iLog(x: number): number;
						}
						export module VorbisUtil {
							export class CodeBook extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ogg.VorbisUtil.CodeBook>;
								public dimensions: number;
								public entries: number;
								public lengthMap: native.Array<number>;
								public lookupType: number;
								public isOrdered: boolean;
								public constructor(dimensions: number, entries: number, lengthMap: native.Array<number>, lookupType: number, isOrdered: boolean);
							}
							export class CommentHeader extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ogg.VorbisUtil.CommentHeader>;
								public vendor: string;
								public comments: native.Array<string>;
								public length: number;
								public constructor(vendor: string, comments: native.Array<string>, length: number);
							}
							export class Mode extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ogg.VorbisUtil.Mode>;
								public blockFlag: boolean;
								public windowType: number;
								public transformType: number;
								public mapping: number;
								public constructor(blockFlag: boolean, windowType: number, transformType: number, mapping: number);
							}
							export class VorbisIdHeader extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ogg.VorbisUtil.VorbisIdHeader>;
								public version: number;
								public channels: number;
								public sampleRate: number;
								public bitrateMax: number;
								public bitrateNominal: number;
								public bitrateMin: number;
								public blockSize0: number;
								public blockSize1: number;
								public framingFlag: boolean;
								public data: native.Array<number>;
								public constructor(version: number, channels: number, sampleRate: number, bitrateMax: number, bitrateNominal: number, bitrateMin: number, blockSize0: number, blockSize1: number, framingFlag: boolean, data: native.Array<number>);
								public getApproximateBitrate(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module rawcc {
						export class RawCcExtractor extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.Extractor {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.rawcc.RawCcExtractor>;
							public constructor(format: androidx.media2.exoplayer.external.Format);
							public sniff(input: androidx.media2.exoplayer.external.extractor.ExtractorInput): boolean;
							public read(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, seekPosition: androidx.media2.exoplayer.external.extractor.PositionHolder): number;
							public seek(position: number, timeUs: number): void;
							public release(): void;
							public init(output: androidx.media2.exoplayer.external.extractor.ExtractorOutput): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ts {
						export class Ac3Extractor extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.Extractor {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.Ac3Extractor>;
							public static FACTORY: androidx.media2.exoplayer.external.extractor.ExtractorsFactory;
							public constructor();
							public sniff(input: androidx.media2.exoplayer.external.extractor.ExtractorInput): boolean;
							public seek(position: number, timeUs: number): void;
							public read(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, seekPosition: androidx.media2.exoplayer.external.extractor.PositionHolder): number;
							public release(): void;
							public init(output: androidx.media2.exoplayer.external.extractor.ExtractorOutput): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ts {
						export class Ac3Reader extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.ts.ElementaryStreamReader {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.Ac3Reader>;
							public constructor();
							public consume(data: androidx.media2.exoplayer.external.util.ParsableByteArray): void;
							public constructor(language: string);
							public packetFinished(): void;
							public seek(): void;
							public createTracks(extractorOutput: androidx.media2.exoplayer.external.extractor.ExtractorOutput, generator: androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
							public packetStarted(pesTimeUs: number, flags: number): void;
						}
						export module Ac3Reader {
							export class State extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.Ac3Reader.State>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.ts.Ac3Reader$State interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ts {
						export class Ac4Extractor extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.Extractor {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.Ac4Extractor>;
							public static FACTORY: androidx.media2.exoplayer.external.extractor.ExtractorsFactory;
							public constructor();
							public sniff(input: androidx.media2.exoplayer.external.extractor.ExtractorInput): boolean;
							public seek(position: number, timeUs: number): void;
							public read(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, seekPosition: androidx.media2.exoplayer.external.extractor.PositionHolder): number;
							public release(): void;
							public init(output: androidx.media2.exoplayer.external.extractor.ExtractorOutput): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ts {
						export class Ac4Reader extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.ts.ElementaryStreamReader {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.Ac4Reader>;
							public constructor();
							public consume(data: androidx.media2.exoplayer.external.util.ParsableByteArray): void;
							public constructor(language: string);
							public packetFinished(): void;
							public seek(): void;
							public createTracks(extractorOutput: androidx.media2.exoplayer.external.extractor.ExtractorOutput, generator: androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
							public packetStarted(pesTimeUs: number, flags: number): void;
						}
						export module Ac4Reader {
							export class State extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.Ac4Reader.State>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.ts.Ac4Reader$State interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ts {
						export class AdtsExtractor extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.Extractor {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.AdtsExtractor>;
							public static FACTORY: androidx.media2.exoplayer.external.extractor.ExtractorsFactory;
							public static FLAG_ENABLE_CONSTANT_BITRATE_SEEKING: number;
							public constructor();
							public constructor(flags: number);
							public sniff(input: androidx.media2.exoplayer.external.extractor.ExtractorInput): boolean;
							public seek(position: number, timeUs: number): void;
							public read(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, seekPosition: androidx.media2.exoplayer.external.extractor.PositionHolder): number;
							public release(): void;
							public init(output: androidx.media2.exoplayer.external.extractor.ExtractorOutput): void;
						}
						export module AdtsExtractor {
							export class Flags extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.AdtsExtractor.Flags>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.ts.AdtsExtractor$Flags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ts {
						export class AdtsReader extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.ts.ElementaryStreamReader {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.AdtsReader>;
							public consume(data: androidx.media2.exoplayer.external.util.ParsableByteArray): void;
							public createTracks(extractorOutput: androidx.media2.exoplayer.external.extractor.ExtractorOutput, idGenerator: androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
							public packetFinished(): void;
							public static isAdtsSyncWord(candidateSyncWord: number): boolean;
							public seek(): void;
							public getSampleDurationUs(): number;
							public packetStarted(pesTimeUs: number, flags: number): void;
							public constructor(exposeId3: boolean);
							public constructor(exposeId3: boolean, language: string);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ts {
						export class DefaultTsPayloadReaderFactory extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.Factory {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.DefaultTsPayloadReaderFactory>;
							public static FLAG_ALLOW_NON_IDR_KEYFRAMES: number;
							public static FLAG_IGNORE_AAC_STREAM: number;
							public static FLAG_IGNORE_H264_STREAM: number;
							public static FLAG_DETECT_ACCESS_UNITS: number;
							public static FLAG_IGNORE_SPLICE_INFO_STREAM: number;
							public static FLAG_OVERRIDE_CAPTION_DESCRIPTORS: number;
							public static FLAG_ENABLE_HDMV_DTS_AUDIO_STREAMS: number;
							public constructor();
							public constructor(flags: number);
							public createPayloadReader(streamType: number, esInfo: androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.EsInfo): androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader;
							public createInitialPayloadReaders(): globalAndroid.util.SparseArray<androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader>;
							public constructor(flags: number, closedCaptionFormats: java.util.List<androidx.media2.exoplayer.external.Format>);
						}
						export module DefaultTsPayloadReaderFactory {
							export class Flags extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.DefaultTsPayloadReaderFactory.Flags>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.ts.DefaultTsPayloadReaderFactory$Flags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ts {
						export class DtsReader extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.ts.ElementaryStreamReader {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.DtsReader>;
							public consume(data: androidx.media2.exoplayer.external.util.ParsableByteArray): void;
							public constructor(language: string);
							public createTracks(extractorOutput: androidx.media2.exoplayer.external.extractor.ExtractorOutput, idGenerator: androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
							public packetFinished(): void;
							public seek(): void;
							public packetStarted(pesTimeUs: number, flags: number): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ts {
						export class DvbSubtitleReader extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.ts.ElementaryStreamReader {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.DvbSubtitleReader>;
							public consume(data: androidx.media2.exoplayer.external.util.ParsableByteArray): void;
							public createTracks(extractorOutput: androidx.media2.exoplayer.external.extractor.ExtractorOutput, idGenerator: androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
							public packetFinished(): void;
							public seek(): void;
							public packetStarted(pesTimeUs: number, flags: number): void;
							public constructor(subtitleInfos: java.util.List<androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.DvbSubtitleInfo>);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ts {
						export class ElementaryStreamReader extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.ElementaryStreamReader>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.ts.ElementaryStreamReader interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								seek(): void;
								createTracks(extractorOutput0: androidx.media2.exoplayer.external.extractor.ExtractorOutput, trackIdGenerator1: androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
								packetStarted(long0: number, int1: number): void;
								consume(parsableByteArray0: androidx.media2.exoplayer.external.util.ParsableByteArray): void;
								packetFinished(): void;
							});
							public constructor();
							public packetFinished(): void;
							public createTracks(extractorOutput0: androidx.media2.exoplayer.external.extractor.ExtractorOutput, trackIdGenerator1: androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
							public consume(parsableByteArray0: androidx.media2.exoplayer.external.util.ParsableByteArray): void;
							public seek(): void;
							public packetStarted(long0: number, int1: number): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ts {
						export class H262Reader extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.ts.ElementaryStreamReader {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.H262Reader>;
							public constructor();
							public consume(data: androidx.media2.exoplayer.external.util.ParsableByteArray): void;
							public createTracks(extractorOutput: androidx.media2.exoplayer.external.extractor.ExtractorOutput, idGenerator: androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
							public packetFinished(): void;
							public seek(): void;
							public packetStarted(pesTimeUs: number, flags: number): void;
						}
						export module H262Reader {
							export class CsdBuffer extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.H262Reader.CsdBuffer>;
								public length: number;
								public sequenceExtensionPosition: number;
								public data: native.Array<number>;
								public onData(newData: native.Array<number>, offset: number, limit: number): void;
								public onStartCode(startCodeValue: number, bytesAlreadyPassed: number): boolean;
								public constructor(initialCapacity: number);
								public reset(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ts {
						export class H264Reader extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.ts.ElementaryStreamReader {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.H264Reader>;
							public consume(data: androidx.media2.exoplayer.external.util.ParsableByteArray): void;
							public createTracks(extractorOutput: androidx.media2.exoplayer.external.extractor.ExtractorOutput, idGenerator: androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
							public packetFinished(): void;
							public seek(): void;
							public constructor(seiReader: androidx.media2.exoplayer.external.extractor.ts.SeiReader, allowNonIdrKeyframes: boolean, detectAccessUnits: boolean);
							public packetStarted(pesTimeUs: number, flags: number): void;
						}
						export module H264Reader {
							export class SampleReader extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.H264Reader.SampleReader>;
								public putPps(ppsData: androidx.media2.exoplayer.external.util.NalUnitUtil.PpsData): void;
								public constructor(output: androidx.media2.exoplayer.external.extractor.TrackOutput, allowNonIdrKeyframes: boolean, detectAccessUnits: boolean);
								public putSps(spsData: androidx.media2.exoplayer.external.util.NalUnitUtil.SpsData): void;
								public startNalUnit(position: number, type: number, pesTimeUs: number): void;
								public reset(): void;
								public appendToNalUnit(data: native.Array<number>, offset: number, limit: number): void;
								public endNalUnit(position: number, offset: number, hasOutputFormat: boolean, randomAccessIndicator: boolean): boolean;
								public needsSpsPps(): boolean;
							}
							export module SampleReader {
								export class SliceHeaderData extends java.lang.Object {
									public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.H264Reader.SampleReader.SliceHeaderData>;
									public setAll(spsData: androidx.media2.exoplayer.external.util.NalUnitUtil.SpsData, nalRefIdc: number, sliceType: number, frameNum: number, picParameterSetId: number, fieldPicFlag: boolean, bottomFieldFlagPresent: boolean, bottomFieldFlag: boolean, idrPicFlag: boolean, idrPicId: number, picOrderCntLsb: number, deltaPicOrderCntBottom: number, deltaPicOrderCnt0: number, deltaPicOrderCnt1: number): void;
									public setSliceType(sliceType: number): void;
									public clear(): void;
									public isISlice(): boolean;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ts {
						export class H265Reader extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.ts.ElementaryStreamReader {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.H265Reader>;
							public consume(data: androidx.media2.exoplayer.external.util.ParsableByteArray): void;
							public createTracks(extractorOutput: androidx.media2.exoplayer.external.extractor.ExtractorOutput, idGenerator: androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
							public packetFinished(): void;
							public seek(): void;
							public constructor(seiReader: androidx.media2.exoplayer.external.extractor.ts.SeiReader);
							public packetStarted(pesTimeUs: number, flags: number): void;
						}
						export module H265Reader {
							export class SampleReader extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.H265Reader.SampleReader>;
								public endNalUnit(position: number, offset: number): void;
								public readNalUnitData(data: native.Array<number>, offset: number, limit: number): void;
								public reset(): void;
								public startNalUnit(position: number, offset: number, nalUnitType: number, pesTimeUs: number): void;
								public constructor(output: androidx.media2.exoplayer.external.extractor.TrackOutput);
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ts {
						export class Id3Reader extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.ts.ElementaryStreamReader {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.Id3Reader>;
							public constructor();
							public consume(data: androidx.media2.exoplayer.external.util.ParsableByteArray): void;
							public createTracks(extractorOutput: androidx.media2.exoplayer.external.extractor.ExtractorOutput, idGenerator: androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
							public packetFinished(): void;
							public seek(): void;
							public packetStarted(pesTimeUs: number, flags: number): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ts {
						export class LatmReader extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.ts.ElementaryStreamReader {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.LatmReader>;
							public consume(data: androidx.media2.exoplayer.external.util.ParsableByteArray): void;
							public constructor(language: string);
							public createTracks(extractorOutput: androidx.media2.exoplayer.external.extractor.ExtractorOutput, idGenerator: androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
							public packetFinished(): void;
							public seek(): void;
							public packetStarted(pesTimeUs: number, flags: number): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ts {
						export class MpegAudioReader extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.ts.ElementaryStreamReader {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.MpegAudioReader>;
							public constructor();
							public consume(data: androidx.media2.exoplayer.external.util.ParsableByteArray): void;
							public constructor(language: string);
							public createTracks(extractorOutput: androidx.media2.exoplayer.external.extractor.ExtractorOutput, idGenerator: androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
							public packetFinished(): void;
							public seek(): void;
							public packetStarted(pesTimeUs: number, flags: number): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ts {
						export class NalUnitTargetBuffer extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.NalUnitTargetBuffer>;
							public nalData: native.Array<number>;
							public nalLength: number;
							public appendToNalUnit(data: native.Array<number>, offset: number, limit: number): void;
							public endNalUnit(discardPadding: number): boolean;
							public constructor(targetType: number, initialCapacity: number);
							public isCompleted(): boolean;
							public reset(): void;
							public startNalUnit(type: number): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ts {
						export class PesReader extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.PesReader>;
							public constructor(reader: androidx.media2.exoplayer.external.extractor.ts.ElementaryStreamReader);
							public seek(): void;
							public consume(data: androidx.media2.exoplayer.external.util.ParsableByteArray, flags: number): void;
							public init(timestampAdjuster: androidx.media2.exoplayer.external.util.TimestampAdjuster, extractorOutput: androidx.media2.exoplayer.external.extractor.ExtractorOutput, idGenerator: androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ts {
						export class PsBinarySearchSeeker extends androidx.media2.exoplayer.external.extractor.BinarySearchSeeker {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.PsBinarySearchSeeker>;
							public constructor(scrTimestampAdjuster: androidx.media2.exoplayer.external.util.TimestampAdjuster, streamDurationUs: number, inputLength: number);
							public constructor(seekTimestampConverter: androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.SeekTimestampConverter, timestampSeeker: androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.TimestampSeeker, durationUs: number, floorTimePosition: number, ceilingTimePosition: number, floorBytePosition: number, ceilingBytePosition: number, approxBytesPerFrame: number, minimumSearchRange: number);
						}
						export module PsBinarySearchSeeker {
							export class PsScrSeeker extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.TimestampSeeker {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.PsBinarySearchSeeker.PsScrSeeker>;
								public searchForTimestamp(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, targetTimestamp: number, outputFrameHolder: androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.OutputFrameHolder): androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.TimestampSearchResult;
								public onSeekFinished(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ts {
						export class PsDurationReader extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.PsDurationReader>;
							public getScrTimestampAdjuster(): androidx.media2.exoplayer.external.util.TimestampAdjuster;
							public getDurationUs(): number;
							public static readScrValueFromPack(packetBuffer: androidx.media2.exoplayer.external.util.ParsableByteArray): number;
							public isDurationReadFinished(): boolean;
							public readDuration(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, seekPositionHolder: androidx.media2.exoplayer.external.extractor.PositionHolder): number;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ts {
						export class PsExtractor extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.Extractor {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.PsExtractor>;
							public static FACTORY: androidx.media2.exoplayer.external.extractor.ExtractorsFactory;
							public static PRIVATE_STREAM_1: number;
							public static AUDIO_STREAM: number;
							public static AUDIO_STREAM_MASK: number;
							public static VIDEO_STREAM: number;
							public static VIDEO_STREAM_MASK: number;
							public constructor();
							public sniff(input: androidx.media2.exoplayer.external.extractor.ExtractorInput): boolean;
							public constructor(timestampAdjuster: androidx.media2.exoplayer.external.util.TimestampAdjuster);
							public seek(position: number, timeUs: number): void;
							public read(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, seekPosition: androidx.media2.exoplayer.external.extractor.PositionHolder): number;
							public release(): void;
							public init(output: androidx.media2.exoplayer.external.extractor.ExtractorOutput): void;
						}
						export module PsExtractor {
							export class PesReader extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.PsExtractor.PesReader>;
								public constructor(pesPayloadReader: androidx.media2.exoplayer.external.extractor.ts.ElementaryStreamReader, timestampAdjuster: androidx.media2.exoplayer.external.util.TimestampAdjuster);
								public consume(data: androidx.media2.exoplayer.external.util.ParsableByteArray): void;
								public seek(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ts {
						export class SectionPayloadReader extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.SectionPayloadReader>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.ts.SectionPayloadReader interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								init(timestampAdjuster0: androidx.media2.exoplayer.external.util.TimestampAdjuster, extractorOutput1: androidx.media2.exoplayer.external.extractor.ExtractorOutput, trackIdGenerator2: androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
								consume(parsableByteArray0: androidx.media2.exoplayer.external.util.ParsableByteArray): void;
							});
							public constructor();
							public consume(parsableByteArray0: androidx.media2.exoplayer.external.util.ParsableByteArray): void;
							public init(timestampAdjuster0: androidx.media2.exoplayer.external.util.TimestampAdjuster, extractorOutput1: androidx.media2.exoplayer.external.extractor.ExtractorOutput, trackIdGenerator2: androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ts {
						export class SectionReader extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.SectionReader>;
							public constructor(reader: androidx.media2.exoplayer.external.extractor.ts.SectionPayloadReader);
							public seek(): void;
							public consume(data: androidx.media2.exoplayer.external.util.ParsableByteArray, flags: number): void;
							public init(timestampAdjuster: androidx.media2.exoplayer.external.util.TimestampAdjuster, extractorOutput: androidx.media2.exoplayer.external.extractor.ExtractorOutput, idGenerator: androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ts {
						export class SeiReader extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.SeiReader>;
							public constructor(closedCaptionFormats: java.util.List<androidx.media2.exoplayer.external.Format>);
							public createTracks(extractorOutput: androidx.media2.exoplayer.external.extractor.ExtractorOutput, idGenerator: androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
							public consume(pesTimeUs: number, seiBuffer: androidx.media2.exoplayer.external.util.ParsableByteArray): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ts {
						export class SpliceInfoSectionReader extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.ts.SectionPayloadReader {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.SpliceInfoSectionReader>;
							public constructor();
							public init(timestampAdjuster: androidx.media2.exoplayer.external.util.TimestampAdjuster, extractorOutput: androidx.media2.exoplayer.external.extractor.ExtractorOutput, idGenerator: androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
							public consume(sectionData: androidx.media2.exoplayer.external.util.ParsableByteArray): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ts {
						export class TsBinarySearchSeeker extends androidx.media2.exoplayer.external.extractor.BinarySearchSeeker {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.TsBinarySearchSeeker>;
							public constructor(seekTimestampConverter: androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.SeekTimestampConverter, timestampSeeker: androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.TimestampSeeker, durationUs: number, floorTimePosition: number, ceilingTimePosition: number, floorBytePosition: number, ceilingBytePosition: number, approxBytesPerFrame: number, minimumSearchRange: number);
							public constructor(pcrTimestampAdjuster: androidx.media2.exoplayer.external.util.TimestampAdjuster, streamDurationUs: number, inputLength: number, pcrPid: number);
						}
						export module TsBinarySearchSeeker {
							export class TsPcrSeeker extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.TimestampSeeker {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.TsBinarySearchSeeker.TsPcrSeeker>;
								public searchForTimestamp(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, targetTimestamp: number, outputFrameHolder: androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.OutputFrameHolder): androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.TimestampSearchResult;
								public constructor(pcrPid: number, pcrTimestampAdjuster: androidx.media2.exoplayer.external.util.TimestampAdjuster);
								public onSeekFinished(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ts {
						export class TsDurationReader extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.TsDurationReader>;
							public getDurationUs(): number;
							public isDurationReadFinished(): boolean;
							public getPcrTimestampAdjuster(): androidx.media2.exoplayer.external.util.TimestampAdjuster;
							public readDuration(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, seekPositionHolder: androidx.media2.exoplayer.external.extractor.PositionHolder, pcrPid: number): number;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ts {
						export class TsExtractor extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.Extractor {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.TsExtractor>;
							public static FACTORY: androidx.media2.exoplayer.external.extractor.ExtractorsFactory;
							public static MODE_MULTI_PMT: number;
							public static MODE_SINGLE_PMT: number;
							public static MODE_HLS: number;
							public static TS_STREAM_TYPE_MPA: number;
							public static TS_STREAM_TYPE_MPA_LSF: number;
							public static TS_STREAM_TYPE_AAC_ADTS: number;
							public static TS_STREAM_TYPE_AAC_LATM: number;
							public static TS_STREAM_TYPE_AC3: number;
							public static TS_STREAM_TYPE_DTS: number;
							public static TS_STREAM_TYPE_HDMV_DTS: number;
							public static TS_STREAM_TYPE_E_AC3: number;
							public static TS_STREAM_TYPE_AC4: number;
							public static TS_STREAM_TYPE_H262: number;
							public static TS_STREAM_TYPE_H264: number;
							public static TS_STREAM_TYPE_H265: number;
							public static TS_STREAM_TYPE_ID3: number;
							public static TS_STREAM_TYPE_SPLICE_INFO: number;
							public static TS_STREAM_TYPE_DVBSUBS: number;
							public static TS_PACKET_SIZE: number;
							public static TS_SYNC_BYTE: number;
							public constructor();
							public sniff(input: androidx.media2.exoplayer.external.extractor.ExtractorInput): boolean;
							public seek(position: number, timeUs: number): void;
							public read(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, seekPosition: androidx.media2.exoplayer.external.extractor.PositionHolder): number;
							public constructor(mode: number, defaultTsPayloadReaderFlags: number);
							public constructor(mode: number, timestampAdjuster: androidx.media2.exoplayer.external.util.TimestampAdjuster, payloadReaderFactory: androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.Factory);
							public release(): void;
							public constructor(defaultTsPayloadReaderFlags: number);
							public init(output: androidx.media2.exoplayer.external.extractor.ExtractorOutput): void;
						}
						export module TsExtractor {
							export class Mode extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.TsExtractor.Mode>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.ts.TsExtractor$Mode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
							export class PatReader extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.ts.SectionPayloadReader {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.TsExtractor.PatReader>;
								public consume(sectionData: androidx.media2.exoplayer.external.util.ParsableByteArray): void;
								public init(timestampAdjuster: androidx.media2.exoplayer.external.util.TimestampAdjuster, extractorOutput: androidx.media2.exoplayer.external.extractor.ExtractorOutput, idGenerator: androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
								public constructor(param0: androidx.media2.exoplayer.external.extractor.ts.TsExtractor);
							}
							export class PmtReader extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.ts.SectionPayloadReader {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.TsExtractor.PmtReader>;
								public consume(sectionData: androidx.media2.exoplayer.external.util.ParsableByteArray): void;
								public constructor(param0: androidx.media2.exoplayer.external.extractor.ts.TsExtractor, pid: number);
								public init(timestampAdjuster: androidx.media2.exoplayer.external.util.TimestampAdjuster, extractorOutput: androidx.media2.exoplayer.external.extractor.ExtractorOutput, idGenerator: androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ts {
						export class TsPayloadReader extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								init(timestampAdjuster0: androidx.media2.exoplayer.external.util.TimestampAdjuster, extractorOutput1: androidx.media2.exoplayer.external.extractor.ExtractorOutput, trackIdGenerator2: androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
								seek(): void;
								consume(parsableByteArray0: androidx.media2.exoplayer.external.util.ParsableByteArray, int1: number): void;
							});
							public constructor();
							public static FLAG_PAYLOAD_UNIT_START_INDICATOR: number;
							public static FLAG_DATA_ALIGNMENT_INDICATOR: number;
							public static FLAG_RANDOM_ACCESS_INDICATOR: number;
							public init(timestampAdjuster0: androidx.media2.exoplayer.external.util.TimestampAdjuster, extractorOutput1: androidx.media2.exoplayer.external.extractor.ExtractorOutput, trackIdGenerator2: androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
							public seek(): void;
							public consume(parsableByteArray0: androidx.media2.exoplayer.external.util.ParsableByteArray, int1: number): void;
						}
						export module TsPayloadReader {
							export class DvbSubtitleInfo extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.DvbSubtitleInfo>;
								public language: string;
								public type: number;
								public initializationData: native.Array<number>;
								public constructor(language: string, type: number, initializationData: native.Array<number>);
							}
							export class EsInfo extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.EsInfo>;
								public streamType: number;
								public language: string;
								public dvbSubtitleInfos: java.util.List<androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.DvbSubtitleInfo>;
								public descriptorBytes: native.Array<number>;
								public constructor(streamType: number, language: string, dvbSubtitleInfos: java.util.List<androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.DvbSubtitleInfo>, descriptorBytes: native.Array<number>);
							}
							export class Factory extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.Factory>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader$Factory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									createInitialPayloadReaders(): globalAndroid.util.SparseArray<androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader>;
									createPayloadReader(int0: number, esInfo1: androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.EsInfo): androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader;
								});
								public constructor();
								public createInitialPayloadReaders(): globalAndroid.util.SparseArray<androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader>;
								public createPayloadReader(int0: number, esInfo1: androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.EsInfo): androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader;
							}
							export class Flags extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.Flags>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader$Flags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
							export class TrackIdGenerator extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.TrackIdGenerator>;
								public constructor(firstTrackId: number, trackIdIncrement: number);
								public generateNewId(): void;
								public getTrackId(): number;
								public getFormatId(): string;
								public constructor(programNumber: number, firstTrackId: number, trackIdIncrement: number);
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ts {
						export class TsUtil extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.TsUtil>;
							public static findSyncBytePosition(data: native.Array<number>, startPosition: number, limitPosition: number): number;
							public static readPcrFromPacket(packetBuffer: androidx.media2.exoplayer.external.util.ParsableByteArray, startOfPacket: number, pcrPid: number): number;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module ts {
						export class UserDataReader extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.ts.UserDataReader>;
							public constructor(closedCaptionFormats: java.util.List<androidx.media2.exoplayer.external.Format>);
							public createTracks(extractorOutput: androidx.media2.exoplayer.external.extractor.ExtractorOutput, idGenerator: androidx.media2.exoplayer.external.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
							public consume(pesTimeUs: number, userDataPayload: androidx.media2.exoplayer.external.util.ParsableByteArray): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module wav {
						export class WavExtractor extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.Extractor {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.wav.WavExtractor>;
							public static FACTORY: androidx.media2.exoplayer.external.extractor.ExtractorsFactory;
							public constructor();
							public sniff(input: androidx.media2.exoplayer.external.extractor.ExtractorInput): boolean;
							public seek(position: number, timeUs: number): void;
							public read(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, seekPosition: androidx.media2.exoplayer.external.extractor.PositionHolder): number;
							public release(): void;
							public init(output: androidx.media2.exoplayer.external.extractor.ExtractorOutput): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module wav {
						export class WavHeader extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.SeekMap {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.wav.WavHeader>;
							public getBytesPerFrame(): number;
							public getDataStartPosition(): number;
							public getEncoding(): number;
							public getDataEndPosition(): number;
							public hasDataBounds(): boolean;
							public getBitrate(): number;
							public getSeekPoints(timeUs: number): androidx.media2.exoplayer.external.extractor.SeekMap.SeekPoints;
							public isSeekable(): boolean;
							public getTimeUs(position: number): number;
							public getDurationUs(): number;
							public getNumChannels(): number;
							public constructor(numChannels: number, sampleRateHz: number, averageBytesPerSecond: number, blockAlignment: number, bitsPerSample: number, encoding: number);
							public getSampleRateHz(): number;
							public setDataBounds(dataStartPosition: number, dataEndPosition: number): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module extractor {
					export module wav {
						export class WavHeaderReader extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.wav.WavHeaderReader>;
							public static peek(input: androidx.media2.exoplayer.external.extractor.ExtractorInput): androidx.media2.exoplayer.external.extractor.wav.WavHeader;
							public static skipToData(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, wavHeader: androidx.media2.exoplayer.external.extractor.wav.WavHeader): void;
						}
						export module WavHeaderReader {
							export class ChunkHeader extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.extractor.wav.WavHeaderReader.ChunkHeader>;
								public static SIZE_IN_BYTES: number;
								public id: number;
								public size: number;
								public static peek(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, scratch: androidx.media2.exoplayer.external.util.ParsableByteArray): androidx.media2.exoplayer.external.extractor.wav.WavHeaderReader.ChunkHeader;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module mediacodec {
					export class MediaCodecInfo extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo>;
						public static TAG: string;
						public static MAX_SUPPORTED_INSTANCES_UNKNOWN: number;
						public name: string;
						public mimeType: string;
						public codecMimeType: string;
						public capabilities: globalAndroid.media.MediaCodecInfo.CodecCapabilities;
						public adaptive: boolean;
						public tunneling: boolean;
						public secure: boolean;
						public passthrough: boolean;
						public hardwareAccelerated: boolean;
						public softwareOnly: boolean;
						public vendor: boolean;
						public isCodecSupported(format: androidx.media2.exoplayer.external.Format): boolean;
						public alignVideoSizeV21(width: number, height: number): globalAndroid.graphics.Point;
						public isSeamlessAdaptationSupported(format: androidx.media2.exoplayer.external.Format): boolean;
						public isHdr10PlusOutOfBandMetadataSupported(): boolean;
						public toString(): string;
						public isFormatSupported(format: androidx.media2.exoplayer.external.Format): boolean;
						public isAudioChannelCountSupportedV21(channelCount: number): boolean;
						public static newInstance(name: string, mimeType: string, codecMimeType: string, capabilities: globalAndroid.media.MediaCodecInfo.CodecCapabilities, hardwareAccelerated: boolean, softwareOnly: boolean, vendor: boolean, forceDisableAdaptive: boolean, forceSecure: boolean): androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo;
						public isVideoSizeAndRateSupportedV21(width: number, height: number, frameRate: number): boolean;
						public getProfileLevels(): native.Array<globalAndroid.media.MediaCodecInfo.CodecProfileLevel>;
						public getMaxSupportedInstances(): number;
						public isSeamlessAdaptationSupported(oldFormat: androidx.media2.exoplayer.external.Format, newFormat: androidx.media2.exoplayer.external.Format, isNewFormatComplete: boolean): boolean;
						public static newPassthroughInstance(name: string): androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo;
						public isAudioSampleRateSupportedV21(sampleRate: number): boolean;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module mediacodec {
					export abstract class MediaCodecRenderer extends androidx.media2.exoplayer.external.BaseRenderer {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.mediacodec.MediaCodecRenderer>;
						public static CODEC_OPERATING_RATE_UNSET: number;
						public static KEEP_CODEC_RESULT_NO: number;
						public static KEEP_CODEC_RESULT_YES_WITH_FLUSH: number;
						public static KEEP_CODEC_RESULT_YES_WITH_RECONFIGURATION: number;
						public static KEEP_CODEC_RESULT_YES_WITHOUT_RECONFIGURATION: number;
						public decoderCounters: androidx.media2.exoplayer.external.decoder.DecoderCounters;
						public render(positionUs: number, elapsedRealtimeUs: number): void;
						public experimental_setRenderTimeLimitMs(renderTimeLimitMs: number): void;
						public onInputFormatChanged(formatHolder: androidx.media2.exoplayer.external.FormatHolder): void;
						public resetPosition(positionUs: number): void;
						public onEnabled(joining: boolean): void;
						public setOperatingRate(float0: number): void;
						public onDisabled(): void;
						public isEnded(): boolean;
						public releaseCodec(): void;
						public canKeepCodec(codec: globalAndroid.media.MediaCodec, codecInfo: androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo, oldFormat: androidx.media2.exoplayer.external.Format, newFormat: androidx.media2.exoplayer.external.Format): number;
						public handleInputBufferSupplementalData(buffer: androidx.media2.exoplayer.external.decoder.DecoderInputBuffer): void;
						public setCurrentStreamFinal(): void;
						public onQueueInputBuffer(buffer: androidx.media2.exoplayer.external.decoder.DecoderInputBuffer): void;
						public isReady(): boolean;
						public getCapabilities(): androidx.media2.exoplayer.external.RendererCapabilities;
						public disable(): void;
						public configureCodec(mediaCodecInfo0: androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo, mediaCodec1: globalAndroid.media.MediaCodec, format2: androidx.media2.exoplayer.external.Format, mediaCrypto3: globalAndroid.media.MediaCrypto, float4: number): void;
						public enable(configuration: androidx.media2.exoplayer.external.RendererConfiguration, formats: native.Array<androidx.media2.exoplayer.external.Format>, stream: androidx.media2.exoplayer.external.source.SampleStream, positionUs: number, joining: boolean, offsetUs: number): void;
						public updateOutputFormatForTime(presentationTimeUs: number): androidx.media2.exoplayer.external.Format;
						public supportsFormat(mediaCodecSelector0: androidx.media2.exoplayer.external.mediacodec.MediaCodecSelector, drmSessionManager1: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>, format2: androidx.media2.exoplayer.external.Format): number;
						public replaceStream(formats: native.Array<androidx.media2.exoplayer.external.Format>, stream: androidx.media2.exoplayer.external.source.SampleStream, offsetUs: number): void;
						public onCodecInitialized(name: string, initializedTimestampMs: number, initializationDurationMs: number): void;
						public start(): void;
						public getState(): number;
						public onReset(): void;
						public onStopped(): void;
						public getReadingPositionUs(): number;
						public reset(): void;
						public maybeInitCodec(): void;
						public flushOrReleaseCodec(): boolean;
						public getCodecNeedsEosPropagation(): boolean;
						public setOperatingRate(operatingRate: number): void;
						public onStarted(): void;
						public shouldInitCodec(codecInfo: androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo): boolean;
						public onProcessedOutputBuffer(presentationTimeUs: number): void;
						public isCurrentStreamFinal(): boolean;
						public getStream(): androidx.media2.exoplayer.external.source.SampleStream;
						public constructor(trackType: number);
						public processOutputBuffer(long0: number, long1: number, mediaCodec2: globalAndroid.media.MediaCodec, byteBuffer3: java.nio.ByteBuffer, int4: number, int5: number, long6: number, boolean7: boolean, boolean8: boolean, format9: androidx.media2.exoplayer.external.Format): boolean;
						public supportsFormat(format: androidx.media2.exoplayer.external.Format): number;
						public constructor(trackType: number, mediaCodecSelector: androidx.media2.exoplayer.external.mediacodec.MediaCodecSelector, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>, playClearSamplesWithoutKeys: boolean, enableDecoderFallback: boolean, assumedMinimumCodecOperatingRate: number);
						public onPositionReset(positionUs: number, joining: boolean): void;
						public createDecoderException(cause: java.lang.Throwable, codecInfo: androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo): androidx.media2.exoplayer.external.mediacodec.MediaCodecRenderer.DecoderException;
						public getCodecInfo(): androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo;
						public getCodec(): globalAndroid.media.MediaCodec;
						public getCodecOperatingRateV23(operatingRate: number, format: androidx.media2.exoplayer.external.Format, streamFormats: native.Array<androidx.media2.exoplayer.external.Format>): number;
						public getMediaClock(): androidx.media2.exoplayer.external.util.MediaClock;
						public hasReadStreamToEnd(): boolean;
						public onOutputFormatChanged(codec: globalAndroid.media.MediaCodec, outputFormat: globalAndroid.media.MediaFormat): void;
						public supportsMixedMimeTypeAdaptation(): number;
						public getTrackType(): number;
						public stop(): void;
						public flushOrReinitializeCodec(): boolean;
						public getDequeueOutputBufferTimeoutUs(): number;
						public setIndex(index: number): void;
						public maybeThrowStreamError(): void;
						public getDecoderInfos(mediaCodecSelector0: androidx.media2.exoplayer.external.mediacodec.MediaCodecSelector, format1: androidx.media2.exoplayer.external.Format, boolean2: boolean): java.util.List<androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo>;
						public renderToEndOfStream(): void;
					}
					export module MediaCodecRenderer {
						export class AdaptationWorkaroundMode extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.mediacodec.MediaCodecRenderer.AdaptationWorkaroundMode>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.mediacodec.MediaCodecRenderer$AdaptationWorkaroundMode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
						export class DecoderException extends java.lang.Exception {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.mediacodec.MediaCodecRenderer.DecoderException>;
							public codecInfo: androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo;
							public diagnosticInfo: string;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(message: string);
							public constructor(cause: java.lang.Throwable, codecInfo: androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
						export class DecoderInitializationException extends java.lang.Exception {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.mediacodec.MediaCodecRenderer.DecoderInitializationException>;
							public mimeType: string;
							public secureDecoderRequired: boolean;
							public codecInfo: androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo;
							public diagnosticInfo: string;
							public fallbackDecoderInitializationException: androidx.media2.exoplayer.external.mediacodec.MediaCodecRenderer.DecoderInitializationException;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(message: string);
							public constructor(format: androidx.media2.exoplayer.external.Format, cause: java.lang.Throwable, secureDecoderRequired: boolean, errorCode: number);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
							public constructor(format: androidx.media2.exoplayer.external.Format, cause: java.lang.Throwable, secureDecoderRequired: boolean, mediaCodecInfo: androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo);
						}
						export class DrainAction extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.mediacodec.MediaCodecRenderer.DrainAction>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.mediacodec.MediaCodecRenderer$DrainAction interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
						export class DrainState extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.mediacodec.MediaCodecRenderer.DrainState>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.mediacodec.MediaCodecRenderer$DrainState interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
						export class KeepCodecResult extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.mediacodec.MediaCodecRenderer.KeepCodecResult>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.mediacodec.MediaCodecRenderer$KeepCodecResult interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
						export class ReconfigurationState extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.mediacodec.MediaCodecRenderer.ReconfigurationState>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.mediacodec.MediaCodecRenderer$ReconfigurationState interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module mediacodec {
					export class MediaCodecSelector extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.mediacodec.MediaCodecSelector>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.mediacodec.MediaCodecSelector interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getDecoderInfos(string0: string, boolean1: boolean, boolean2: boolean): java.util.List<androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo>;
							getPassthroughDecoderInfo(): androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo;
							<clinit>(): void;
						});
						public constructor();
						public static DEFAULT: androidx.media2.exoplayer.external.mediacodec.MediaCodecSelector;
						public getPassthroughDecoderInfo(): androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo;
						public getDecoderInfos(string0: string, boolean1: boolean, boolean2: boolean): java.util.List<androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo>;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module mediacodec {
					export class MediaCodecUtil extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.mediacodec.MediaCodecUtil>;
						public static warmDecoderInfoCache(mimeType: string, secure: boolean, tunneling: boolean): void;
						public static getPassthroughDecoderInfo(): androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo;
						public static getDecoderInfosSortedByFormatSupport(decoderInfos: java.util.List<androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo>, format: androidx.media2.exoplayer.external.Format): java.util.List<androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo>;
						public static getDecoderInfo(mimeType: string, secure: boolean, tunneling: boolean): androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo;
						public static getDecoderInfos(mimeType: string, secure: boolean, tunneling: boolean): java.util.List<androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo>;
						public static maxH264DecodableFrameSize(): number;
						public static getCodecProfileAndLevel(format: androidx.media2.exoplayer.external.Format): globalAndroid.util.Pair<java.lang.Integer,java.lang.Integer>;
					}
					export module MediaCodecUtil {
						export class CodecKey extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.mediacodec.MediaCodecUtil.CodecKey>;
							public mimeType: string;
							public secure: boolean;
							public tunneling: boolean;
							public hashCode(): number;
							public equals(obj: any): boolean;
							public constructor(mimeType: string, secure: boolean, tunneling: boolean);
						}
						export class DecoderQueryException extends java.lang.Exception {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.mediacodec.MediaCodecUtil.DecoderQueryException>;
						}
						export class MediaCodecListCompat extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.mediacodec.MediaCodecUtil.MediaCodecListCompat>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.mediacodec.MediaCodecUtil$MediaCodecListCompat interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getCodecCount(): number;
								getCodecInfoAt(int0: number): globalAndroid.media.MediaCodecInfo;
								secureDecodersExplicit(): boolean;
								isFeatureSupported(string0: string, string1: string, codecCapabilities2: globalAndroid.media.MediaCodecInfo.CodecCapabilities): boolean;
								isFeatureRequired(string0: string, string1: string, codecCapabilities2: globalAndroid.media.MediaCodecInfo.CodecCapabilities): boolean;
							});
							public constructor();
							public isFeatureRequired(string0: string, string1: string, codecCapabilities2: globalAndroid.media.MediaCodecInfo.CodecCapabilities): boolean;
							public secureDecodersExplicit(): boolean;
							public isFeatureSupported(string0: string, string1: string, codecCapabilities2: globalAndroid.media.MediaCodecInfo.CodecCapabilities): boolean;
							public getCodecInfoAt(int0: number): globalAndroid.media.MediaCodecInfo;
							public getCodecCount(): number;
						}
						export class MediaCodecListCompatV16 extends java.lang.Object implements androidx.media2.exoplayer.external.mediacodec.MediaCodecUtil.MediaCodecListCompat {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.mediacodec.MediaCodecUtil.MediaCodecListCompatV16>;
							public getCodecInfoAt(index: number): globalAndroid.media.MediaCodecInfo;
							public secureDecodersExplicit(): boolean;
							public isFeatureRequired(feature: string, mimeType: string, capabilities: globalAndroid.media.MediaCodecInfo.CodecCapabilities): boolean;
							public getCodecCount(): number;
							public isFeatureSupported(feature: string, mimeType: string, capabilities: globalAndroid.media.MediaCodecInfo.CodecCapabilities): boolean;
						}
						export class MediaCodecListCompatV21 extends java.lang.Object implements androidx.media2.exoplayer.external.mediacodec.MediaCodecUtil.MediaCodecListCompat {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.mediacodec.MediaCodecUtil.MediaCodecListCompatV21>;
							public getCodecInfoAt(index: number): globalAndroid.media.MediaCodecInfo;
							public secureDecodersExplicit(): boolean;
							public constructor(includeSecure: boolean, includeTunneling: boolean);
							public isFeatureRequired(feature: string, mimeType: string, capabilities: globalAndroid.media.MediaCodecInfo.CodecCapabilities): boolean;
							public getCodecCount(): number;
							public isFeatureSupported(feature: string, mimeType: string, capabilities: globalAndroid.media.MediaCodecInfo.CodecCapabilities): boolean;
						}
						export class ScoreProvider<T>  extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.mediacodec.MediaCodecUtil.ScoreProvider<any>>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.mediacodec.MediaCodecUtil$ScoreProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getScore(object0: T): number;
							});
							public constructor();
							public getScore(object0: T): number;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module mediacodec {
					export class MediaFormatUtil extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.mediacodec.MediaFormatUtil>;
						public static maybeSetInteger(format: globalAndroid.media.MediaFormat, key: string, value: number): void;
						public static maybeSetFloat(format: globalAndroid.media.MediaFormat, key: string, value: number): void;
						public static maybeSetColorInfo(format: globalAndroid.media.MediaFormat, colorInfo: androidx.media2.exoplayer.external.video.ColorInfo): void;
						public static setCsdBuffers(format: globalAndroid.media.MediaFormat, csdBuffers: java.util.List<native.Array<number>>): void;
						public static maybeSetByteBuffer(format: globalAndroid.media.MediaFormat, key: string, value: native.Array<number>): void;
						public static setString(format: globalAndroid.media.MediaFormat, key: string, value: string): void;
					}
				}
			}
		}
	}
}


declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export class Metadata extends java.lang.Object implements globalAndroid.os.Parcelable {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.Metadata>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.metadata.Metadata>;
						public equals(obj: any): boolean;
						public describeContents(): number;
						public length(): number;
						public copyWithAppendedEntries(entriesToAppend: native.Array<androidx.media2.exoplayer.external.metadata.Metadata.Entry>): androidx.media2.exoplayer.external.metadata.Metadata;
						public hashCode(): number;
						public constructor(entries: native.Array<androidx.media2.exoplayer.external.metadata.Metadata.Entry>);
						public constructor(entries: java.util.List<any>);
						public copyWithAppendedEntriesFrom(other: androidx.media2.exoplayer.external.metadata.Metadata): androidx.media2.exoplayer.external.metadata.Metadata;
						public get(index: number): androidx.media2.exoplayer.external.metadata.Metadata.Entry;
						public toString(): string;
						public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
					}
					export module Metadata {
						export class Entry extends java.lang.Object implements globalAndroid.os.Parcelable {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.Metadata.Entry>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.metadata.Metadata$Entry interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getWrappedMetadataFormat(): androidx.media2.exoplayer.external.Format;
								getWrappedMetadataBytes(): native.Array<number>;
								describeContents(): number;
								writeToParcel(parcel0: globalAndroid.os.Parcel, int1: number): void;
							});
							public constructor();
							public static PARCELABLE_WRITE_RETURN_VALUE: number;
							public static CONTENTS_FILE_DESCRIPTOR: number;
							public writeToParcel(parcel0: globalAndroid.os.Parcel, int1: number): void;
							public getWrappedMetadataFormat(): androidx.media2.exoplayer.external.Format;
							public describeContents(): number;
							public getWrappedMetadataBytes(): native.Array<number>;
						}
							export module  {
						export module Entry {
								export abstract class CC extends java.lang.Object {
									public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.Metadata.Entry..CC>;
									public static getWrappedMetadataFormat$$dflt$$(this0: androidx.media2.exoplayer.external.metadata.Metadata.Entry): androidx.media2.exoplayer.external.Format;
									public static getWrappedMetadataBytes$$dflt$$(this0: androidx.media2.exoplayer.external.metadata.Metadata.Entry): native.Array<number>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export class MetadataDecoder extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.MetadataDecoder>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.metadata.MetadataDecoder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							decode(metadataInputBuffer0: androidx.media2.exoplayer.external.metadata.MetadataInputBuffer): androidx.media2.exoplayer.external.metadata.Metadata;
						});
						public constructor();
						public decode(metadataInputBuffer0: androidx.media2.exoplayer.external.metadata.MetadataInputBuffer): androidx.media2.exoplayer.external.metadata.Metadata;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export class MetadataDecoderFactory extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.MetadataDecoderFactory>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.metadata.MetadataDecoderFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							supportsFormat(format0: androidx.media2.exoplayer.external.Format): boolean;
							createDecoder(format0: androidx.media2.exoplayer.external.Format): androidx.media2.exoplayer.external.metadata.MetadataDecoder;
							<clinit>(): void;
						});
						public constructor();
						public static DEFAULT: androidx.media2.exoplayer.external.metadata.MetadataDecoderFactory;
						public createDecoder(format0: androidx.media2.exoplayer.external.Format): androidx.media2.exoplayer.external.metadata.MetadataDecoder;
						public supportsFormat(format0: androidx.media2.exoplayer.external.Format): boolean;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export class MetadataInputBuffer extends androidx.media2.exoplayer.external.decoder.DecoderInputBuffer {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.MetadataInputBuffer>;
						public subsampleOffsetUs: number;
						public constructor();
						public constructor(bufferReplacementMode: number);
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export class MetadataOutput extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.MetadataOutput>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.metadata.MetadataOutput interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onMetadata(metadata0: androidx.media2.exoplayer.external.metadata.Metadata): void;
						});
						public constructor();
						public onMetadata(metadata0: androidx.media2.exoplayer.external.metadata.Metadata): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export class MetadataRenderer extends androidx.media2.exoplayer.external.BaseRenderer implements globalAndroid.os.Handler.Callback {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.MetadataRenderer>;
						public render(positionUs: number, elapsedRealtimeUs: number): void;
						public handleMessage(msg: globalAndroid.os.Message): boolean;
						public isCurrentStreamFinal(): boolean;
						public getStream(): androidx.media2.exoplayer.external.source.SampleStream;
						public resetPosition(positionUs: number): void;
						public constructor(trackType: number);
						public constructor(output: androidx.media2.exoplayer.external.metadata.MetadataOutput, outputLooper: globalAndroid.os.Looper);
						public supportsFormat(format: androidx.media2.exoplayer.external.Format): number;
						public setOperatingRate(float0: number): void;
						public onDisabled(): void;
						public isEnded(): boolean;
						public onStreamChanged(formats: native.Array<androidx.media2.exoplayer.external.Format>, offsetUs: number): void;
						public onPositionReset(positionUs: number, joining: boolean): void;
						public constructor(output: androidx.media2.exoplayer.external.metadata.MetadataOutput, outputLooper: globalAndroid.os.Looper, decoderFactory: androidx.media2.exoplayer.external.metadata.MetadataDecoderFactory);
						public setCurrentStreamFinal(): void;
						public getMediaClock(): androidx.media2.exoplayer.external.util.MediaClock;
						public hasReadStreamToEnd(): boolean;
						public isReady(): boolean;
						public getCapabilities(): androidx.media2.exoplayer.external.RendererCapabilities;
						public disable(): void;
						public getTrackType(): number;
						public supportsMixedMimeTypeAdaptation(): number;
						public stop(): void;
						public enable(configuration: androidx.media2.exoplayer.external.RendererConfiguration, formats: native.Array<androidx.media2.exoplayer.external.Format>, stream: androidx.media2.exoplayer.external.source.SampleStream, positionUs: number, joining: boolean, offsetUs: number): void;
						public replaceStream(formats: native.Array<androidx.media2.exoplayer.external.Format>, stream: androidx.media2.exoplayer.external.source.SampleStream, offsetUs: number): void;
						public start(): void;
						public setIndex(index: number): void;
						public getState(): number;
						public maybeThrowStreamError(): void;
						public getReadingPositionUs(): number;
						public handleMessage(what: number, object: any): void;
						public reset(): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export module emsg {
						export class EventMessage extends java.lang.Object implements androidx.media2.exoplayer.external.metadata.Metadata.Entry {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.emsg.EventMessage>;
							public static ID3_SCHEME_ID_AOM: string;
							public static SCTE35_SCHEME_ID: string;
							public schemeIdUri: string;
							public value: string;
							public durationMs: number;
							public id: number;
							public messageData: native.Array<number>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.metadata.emsg.EventMessage>;
							public hashCode(): number;
							public getWrappedMetadataFormat(): androidx.media2.exoplayer.external.Format;
							public constructor(schemeIdUri: string, value: string, durationMs: number, id: number, messageData: native.Array<number>);
							public describeContents(): number;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public getWrappedMetadataBytes(): native.Array<number>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export module emsg {
						export class EventMessageDecoder extends java.lang.Object implements androidx.media2.exoplayer.external.metadata.MetadataDecoder {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.emsg.EventMessageDecoder>;
							public constructor();
							public decode(emsgData: androidx.media2.exoplayer.external.util.ParsableByteArray): androidx.media2.exoplayer.external.metadata.emsg.EventMessage;
							public decode(inputBuffer: androidx.media2.exoplayer.external.metadata.MetadataInputBuffer): androidx.media2.exoplayer.external.metadata.Metadata;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export module emsg {
						export class EventMessageEncoder extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.emsg.EventMessageEncoder>;
							public constructor();
							public encode(eventMessage: androidx.media2.exoplayer.external.metadata.emsg.EventMessage): native.Array<number>;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export module flac {
						export class PictureFrame extends java.lang.Object implements androidx.media2.exoplayer.external.metadata.Metadata.Entry {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.flac.PictureFrame>;
							public pictureType: number;
							public mimeType: string;
							public description: string;
							public width: number;
							public height: number;
							public depth: number;
							public colors: number;
							public pictureData: native.Array<number>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.metadata.flac.PictureFrame>;
							public constructor(pictureType: number, mimeType: string, description: string, width: number, height: number, depth: number, colors: number, pictureData: native.Array<number>);
							public hashCode(): number;
							public getWrappedMetadataFormat(): androidx.media2.exoplayer.external.Format;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public describeContents(): number;
							public getWrappedMetadataBytes(): native.Array<number>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export module flac {
						export class VorbisComment extends java.lang.Object implements androidx.media2.exoplayer.external.metadata.Metadata.Entry {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.flac.VorbisComment>;
							public key: string;
							public value: string;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.metadata.flac.VorbisComment>;
							public hashCode(): number;
							public getWrappedMetadataFormat(): androidx.media2.exoplayer.external.Format;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public describeContents(): number;
							public getWrappedMetadataBytes(): native.Array<number>;
							public equals(obj: any): boolean;
							public toString(): string;
							public constructor(key: string, value: string);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export module icy {
						export class IcyDecoder extends java.lang.Object implements androidx.media2.exoplayer.external.metadata.MetadataDecoder {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.icy.IcyDecoder>;
							public constructor();
							public decode(inputBuffer: androidx.media2.exoplayer.external.metadata.MetadataInputBuffer): androidx.media2.exoplayer.external.metadata.Metadata;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export module icy {
						export class IcyHeaders extends java.lang.Object implements androidx.media2.exoplayer.external.metadata.Metadata.Entry {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.icy.IcyHeaders>;
							public static REQUEST_HEADER_ENABLE_METADATA_NAME: string;
							public static REQUEST_HEADER_ENABLE_METADATA_VALUE: string;
							public bitrate: number;
							public genre: string;
							public name: string;
							public url: string;
							public isPublic: boolean;
							public metadataInterval: number;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.metadata.icy.IcyHeaders>;
							public static parse(responseHeaders: java.util.Map<string,java.util.List<string>>): androidx.media2.exoplayer.external.metadata.icy.IcyHeaders;
							public hashCode(): number;
							public getWrappedMetadataFormat(): androidx.media2.exoplayer.external.Format;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public describeContents(): number;
							public getWrappedMetadataBytes(): native.Array<number>;
							public equals(obj: any): boolean;
							public toString(): string;
							public constructor(bitrate: number, genre: string, name: string, url: string, isPublic: boolean, metadataInterval: number);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export module icy {
						export class IcyInfo extends java.lang.Object implements androidx.media2.exoplayer.external.metadata.Metadata.Entry {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.icy.IcyInfo>;
							public title: string;
							public url: string;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.metadata.icy.IcyInfo>;
							public constructor(title: string, url: string);
							public hashCode(): number;
							public getWrappedMetadataFormat(): androidx.media2.exoplayer.external.Format;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public describeContents(): number;
							public getWrappedMetadataBytes(): native.Array<number>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export module id3 {
						export class ApicFrame extends androidx.media2.exoplayer.external.metadata.id3.Id3Frame {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.id3.ApicFrame>;
							public static ID: string;
							public mimeType: string;
							public description: string;
							public pictureType: number;
							public pictureData: native.Array<number>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.metadata.id3.ApicFrame>;
							public constructor(mimeType: string, description: string, pictureType: number, pictureData: native.Array<number>);
							public hashCode(): number;
							public getWrappedMetadataFormat(): androidx.media2.exoplayer.external.Format;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public getWrappedMetadataBytes(): native.Array<number>;
							public equals(obj: any): boolean;
							public constructor(id: string);
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export module id3 {
						export class BinaryFrame extends androidx.media2.exoplayer.external.metadata.id3.Id3Frame {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.id3.BinaryFrame>;
							public data: native.Array<number>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.metadata.id3.BinaryFrame>;
							public hashCode(): number;
							public getWrappedMetadataFormat(): androidx.media2.exoplayer.external.Format;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public getWrappedMetadataBytes(): native.Array<number>;
							public equals(obj: any): boolean;
							public constructor(id: string);
							public constructor(id: string, data: native.Array<number>);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export module id3 {
						export class ChapterFrame extends androidx.media2.exoplayer.external.metadata.id3.Id3Frame {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.id3.ChapterFrame>;
							public static ID: string;
							public chapterId: string;
							public startTimeMs: number;
							public endTimeMs: number;
							public startOffset: number;
							public endOffset: number;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.metadata.id3.ChapterFrame>;
							public getSubFrame(index: number): androidx.media2.exoplayer.external.metadata.id3.Id3Frame;
							public hashCode(): number;
							public getSubFrameCount(): number;
							public getWrappedMetadataFormat(): androidx.media2.exoplayer.external.Format;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public describeContents(): number;
							public getWrappedMetadataBytes(): native.Array<number>;
							public equals(obj: any): boolean;
							public constructor(id: string);
							public constructor(chapterId: string, startTimeMs: number, endTimeMs: number, startOffset: number, endOffset: number, subFrames: native.Array<androidx.media2.exoplayer.external.metadata.id3.Id3Frame>);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export module id3 {
						export class ChapterTocFrame extends androidx.media2.exoplayer.external.metadata.id3.Id3Frame {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.id3.ChapterTocFrame>;
							public static ID: string;
							public elementId: string;
							public isRoot: boolean;
							public isOrdered: boolean;
							public children: native.Array<string>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.metadata.id3.ChapterTocFrame>;
							public getSubFrame(index: number): androidx.media2.exoplayer.external.metadata.id3.Id3Frame;
							public constructor(elementId: string, isRoot: boolean, isOrdered: boolean, children: native.Array<string>, subFrames: native.Array<androidx.media2.exoplayer.external.metadata.id3.Id3Frame>);
							public hashCode(): number;
							public getSubFrameCount(): number;
							public getWrappedMetadataFormat(): androidx.media2.exoplayer.external.Format;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public getWrappedMetadataBytes(): native.Array<number>;
							public equals(obj: any): boolean;
							public constructor(id: string);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export module id3 {
						export class CommentFrame extends androidx.media2.exoplayer.external.metadata.id3.Id3Frame {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.id3.CommentFrame>;
							public static ID: string;
							public language: string;
							public description: string;
							public text: string;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.metadata.id3.CommentFrame>;
							public hashCode(): number;
							public getWrappedMetadataFormat(): androidx.media2.exoplayer.external.Format;
							public constructor(language: string, description: string, text: string);
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public getWrappedMetadataBytes(): native.Array<number>;
							public equals(obj: any): boolean;
							public constructor(id: string);
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export module id3 {
						export class GeobFrame extends androidx.media2.exoplayer.external.metadata.id3.Id3Frame {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.id3.GeobFrame>;
							public static ID: string;
							public mimeType: string;
							public filename: string;
							public description: string;
							public data: native.Array<number>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.metadata.id3.GeobFrame>;
							public constructor(mimeType: string, filename: string, description: string, data: native.Array<number>);
							public hashCode(): number;
							public getWrappedMetadataFormat(): androidx.media2.exoplayer.external.Format;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public getWrappedMetadataBytes(): native.Array<number>;
							public equals(obj: any): boolean;
							public constructor(id: string);
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export module id3 {
						export class Id3Decoder extends java.lang.Object implements androidx.media2.exoplayer.external.metadata.MetadataDecoder {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.id3.Id3Decoder>;
							public static NO_FRAMES_PREDICATE: androidx.media2.exoplayer.external.metadata.id3.Id3Decoder.FramePredicate;
							public static ID3_TAG: number;
							public static ID3_HEADER_LENGTH: number;
							public constructor();
							public constructor(framePredicate: androidx.media2.exoplayer.external.metadata.id3.Id3Decoder.FramePredicate);
							public decode(inputBuffer: androidx.media2.exoplayer.external.metadata.MetadataInputBuffer): androidx.media2.exoplayer.external.metadata.Metadata;
							public decode(data: native.Array<number>, size: number): androidx.media2.exoplayer.external.metadata.Metadata;
						}
						export module Id3Decoder {
							export class FramePredicate extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.id3.Id3Decoder.FramePredicate>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.metadata.id3.Id3Decoder$FramePredicate interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									evaluate(int0: number, int1: number, int2: number, int3: number, int4: number): boolean;
								});
								public constructor();
								public evaluate(int0: number, int1: number, int2: number, int3: number, int4: number): boolean;
							}
							export class Id3Header extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.id3.Id3Decoder.Id3Header>;
								public constructor(majorVersion: number, isUnsynchronized: boolean, framesSize: number);
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export module id3 {
						export abstract class Id3Frame extends java.lang.Object implements androidx.media2.exoplayer.external.metadata.Metadata.Entry {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.id3.Id3Frame>;
							public id: string;
							public writeToParcel(parcel0: globalAndroid.os.Parcel, int1: number): void;
							public getWrappedMetadataFormat(): androidx.media2.exoplayer.external.Format;
							public describeContents(): number;
							public getWrappedMetadataBytes(): native.Array<number>;
							public constructor(id: string);
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export module id3 {
						export class InternalFrame extends androidx.media2.exoplayer.external.metadata.id3.Id3Frame {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.id3.InternalFrame>;
							public static ID: string;
							public domain: string;
							public description: string;
							public text: string;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.metadata.id3.InternalFrame>;
							public hashCode(): number;
							public constructor(domain: string, description: string, text: string);
							public getWrappedMetadataFormat(): androidx.media2.exoplayer.external.Format;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public getWrappedMetadataBytes(): native.Array<number>;
							public equals(obj: any): boolean;
							public constructor(id: string);
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export module id3 {
						export class MlltFrame extends androidx.media2.exoplayer.external.metadata.id3.Id3Frame {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.id3.MlltFrame>;
							public static ID: string;
							public mpegFramesBetweenReference: number;
							public bytesBetweenReference: number;
							public millisecondsBetweenReference: number;
							public bytesDeviations: native.Array<number>;
							public millisecondsDeviations: native.Array<number>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.metadata.id3.MlltFrame>;
							public hashCode(): number;
							public constructor(mpegFramesBetweenReference: number, bytesBetweenReference: number, millisecondsBetweenReference: number, bytesDeviations: native.Array<number>, millisecondsDeviations: native.Array<number>);
							public getWrappedMetadataFormat(): androidx.media2.exoplayer.external.Format;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public describeContents(): number;
							public getWrappedMetadataBytes(): native.Array<number>;
							public equals(obj: any): boolean;
							public constructor(id: string);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export module id3 {
						export class PrivFrame extends androidx.media2.exoplayer.external.metadata.id3.Id3Frame {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.id3.PrivFrame>;
							public static ID: string;
							public owner: string;
							public privateData: native.Array<number>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.metadata.id3.PrivFrame>;
							public hashCode(): number;
							public getWrappedMetadataFormat(): androidx.media2.exoplayer.external.Format;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public getWrappedMetadataBytes(): native.Array<number>;
							public equals(obj: any): boolean;
							public constructor(owner: string, privateData: native.Array<number>);
							public constructor(id: string);
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export module id3 {
						export class TextInformationFrame extends androidx.media2.exoplayer.external.metadata.id3.Id3Frame {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.id3.TextInformationFrame>;
							public description: string;
							public value: string;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.metadata.id3.TextInformationFrame>;
							public hashCode(): number;
							public getWrappedMetadataFormat(): androidx.media2.exoplayer.external.Format;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public getWrappedMetadataBytes(): native.Array<number>;
							public equals(obj: any): boolean;
							public constructor(id: string);
							public toString(): string;
							public constructor(id: string, description: string, value: string);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export module id3 {
						export class UrlLinkFrame extends androidx.media2.exoplayer.external.metadata.id3.Id3Frame {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.id3.UrlLinkFrame>;
							public description: string;
							public url: string;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.metadata.id3.UrlLinkFrame>;
							public hashCode(): number;
							public getWrappedMetadataFormat(): androidx.media2.exoplayer.external.Format;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public getWrappedMetadataBytes(): native.Array<number>;
							public equals(obj: any): boolean;
							public constructor(id: string, description: string, url: string);
							public constructor(id: string);
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export module scte35 {
						export class PrivateCommand extends androidx.media2.exoplayer.external.metadata.scte35.SpliceCommand {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.scte35.PrivateCommand>;
							public ptsAdjustment: number;
							public identifier: number;
							public commandBytes: native.Array<number>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.metadata.scte35.PrivateCommand>;
							public getWrappedMetadataFormat(): androidx.media2.exoplayer.external.Format;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public getWrappedMetadataBytes(): native.Array<number>;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export module scte35 {
						export abstract class SpliceCommand extends java.lang.Object implements androidx.media2.exoplayer.external.metadata.Metadata.Entry {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.scte35.SpliceCommand>;
							public constructor();
							public writeToParcel(parcel0: globalAndroid.os.Parcel, int1: number): void;
							public getWrappedMetadataFormat(): androidx.media2.exoplayer.external.Format;
							public describeContents(): number;
							public getWrappedMetadataBytes(): native.Array<number>;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export module scte35 {
						export class SpliceInfoDecoder extends java.lang.Object implements androidx.media2.exoplayer.external.metadata.MetadataDecoder {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.scte35.SpliceInfoDecoder>;
							public constructor();
							public decode(inputBuffer: androidx.media2.exoplayer.external.metadata.MetadataInputBuffer): androidx.media2.exoplayer.external.metadata.Metadata;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export module scte35 {
						export class SpliceInsertCommand extends androidx.media2.exoplayer.external.metadata.scte35.SpliceCommand {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.scte35.SpliceInsertCommand>;
							public spliceEventId: number;
							public spliceEventCancelIndicator: boolean;
							public outOfNetworkIndicator: boolean;
							public programSpliceFlag: boolean;
							public spliceImmediateFlag: boolean;
							public programSplicePts: number;
							public programSplicePlaybackPositionUs: number;
							public componentSpliceList: java.util.List<androidx.media2.exoplayer.external.metadata.scte35.SpliceInsertCommand.ComponentSplice>;
							public autoReturn: boolean;
							public breakDurationUs: number;
							public uniqueProgramId: number;
							public availNum: number;
							public availsExpected: number;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.metadata.scte35.SpliceInsertCommand>;
							public getWrappedMetadataFormat(): androidx.media2.exoplayer.external.Format;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public getWrappedMetadataBytes(): native.Array<number>;
						}
						export module SpliceInsertCommand {
							export class ComponentSplice extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.scte35.SpliceInsertCommand.ComponentSplice>;
								public componentTag: number;
								public componentSplicePts: number;
								public componentSplicePlaybackPositionUs: number;
								public static createFromParcel(in0: globalAndroid.os.Parcel): androidx.media2.exoplayer.external.metadata.scte35.SpliceInsertCommand.ComponentSplice;
								public writeToParcel(dest: globalAndroid.os.Parcel): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export module scte35 {
						export class SpliceNullCommand extends androidx.media2.exoplayer.external.metadata.scte35.SpliceCommand {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.scte35.SpliceNullCommand>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.metadata.scte35.SpliceNullCommand>;
							public constructor();
							public getWrappedMetadataFormat(): androidx.media2.exoplayer.external.Format;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public getWrappedMetadataBytes(): native.Array<number>;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export module scte35 {
						export class SpliceScheduleCommand extends androidx.media2.exoplayer.external.metadata.scte35.SpliceCommand {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.scte35.SpliceScheduleCommand>;
							public events: java.util.List<androidx.media2.exoplayer.external.metadata.scte35.SpliceScheduleCommand.Event>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.metadata.scte35.SpliceScheduleCommand>;
							public getWrappedMetadataFormat(): androidx.media2.exoplayer.external.Format;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public getWrappedMetadataBytes(): native.Array<number>;
						}
						export module SpliceScheduleCommand {
							export class ComponentSplice extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.scte35.SpliceScheduleCommand.ComponentSplice>;
								public componentTag: number;
								public utcSpliceTime: number;
							}
							export class Event extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.scte35.SpliceScheduleCommand.Event>;
								public spliceEventId: number;
								public spliceEventCancelIndicator: boolean;
								public outOfNetworkIndicator: boolean;
								public programSpliceFlag: boolean;
								public utcSpliceTime: number;
								public componentSpliceList: java.util.List<androidx.media2.exoplayer.external.metadata.scte35.SpliceScheduleCommand.ComponentSplice>;
								public autoReturn: boolean;
								public breakDurationUs: number;
								public uniqueProgramId: number;
								public availNum: number;
								public availsExpected: number;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module metadata {
					export module scte35 {
						export class TimeSignalCommand extends androidx.media2.exoplayer.external.metadata.scte35.SpliceCommand {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.metadata.scte35.TimeSignalCommand>;
							public ptsTime: number;
							public playbackPositionUs: number;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.metadata.scte35.TimeSignalCommand>;
							public getWrappedMetadataFormat(): androidx.media2.exoplayer.external.Format;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public getWrappedMetadataBytes(): native.Array<number>;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module offline {
					export class FilterableManifest<T>  extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.offline.FilterableManifest<any>>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.offline.FilterableManifest<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							copy(list0: java.util.List<androidx.media2.exoplayer.external.offline.StreamKey>): T;
						});
						public constructor();
						public copy(list0: java.util.List<androidx.media2.exoplayer.external.offline.StreamKey>): T;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module offline {
					export class FilteringManifestParser<T>  extends androidx.media2.exoplayer.external.upstream.ParsingLoadable.Parser<any> {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.offline.FilteringManifestParser<any>>;
						public parse(uri: globalAndroid.net.Uri, inputStream: java.io.InputStream): any;
						public parse(uri0: globalAndroid.net.Uri, inputStream1: java.io.InputStream): any;
						public constructor(parser: androidx.media2.exoplayer.external.upstream.ParsingLoadable.Parser<any>, streamKeys: java.util.List<androidx.media2.exoplayer.external.offline.StreamKey>);
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module offline {
					export class StreamKey extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.offline.StreamKey>;
						public periodIndex: number;
						public groupIndex: number;
						public trackIndex: number;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.offline.StreamKey>;
						public compareTo(o: androidx.media2.exoplayer.external.offline.StreamKey): number;
						public equals(obj: any): boolean;
						public describeContents(): number;
						public constructor(periodIndex: number, groupIndex: number, trackIndex: number);
						public constructor(groupIndex: number, trackIndex: number);
						public hashCode(): number;
						public equals(o: any): boolean;
						public toString(): string;
						public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
					}
				}
			}
		}
	}
}


declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export abstract class AbstractConcatenatedTimeline extends androidx.media2.exoplayer.external.Timeline {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.AbstractConcatenatedTimeline>;
						public getPeriod(periodIndex: number, period: androidx.media2.exoplayer.external.Timeline.Period, setIds: boolean): androidx.media2.exoplayer.external.Timeline.Period;
						public getPeriod(int0: number, period1: androidx.media2.exoplayer.external.Timeline.Period, boolean2: boolean): androidx.media2.exoplayer.external.Timeline.Period;
						public getFirstWindowIndexByChildIndex(int0: number): number;
						/** @deprecated */
						public getWindow(windowIndex: number, window: androidx.media2.exoplayer.external.Timeline.Window, setTag: boolean, defaultPositionProjectionUs: number): androidx.media2.exoplayer.external.Timeline.Window;
						public getFirstPeriodIndexByChildIndex(int0: number): number;
						public getPeriodByUid(periodUid: any, period: androidx.media2.exoplayer.external.Timeline.Period): androidx.media2.exoplayer.external.Timeline.Period;
						public getFirstWindowIndex(shuffleModeEnabled: boolean): number;
						public getChildIndexByChildUid(object0: any): number;
						public getTimelineByChildIndex(int0: number): androidx.media2.exoplayer.external.Timeline;
						public getPeriod(periodIndex: number, period: androidx.media2.exoplayer.external.Timeline.Period): androidx.media2.exoplayer.external.Timeline.Period;
						public getLastWindowIndex(shuffleModeEnabled: boolean): number;
						public getNextWindowIndex(windowIndex: number, repeatMode: number, shuffleModeEnabled: boolean): number;
						public getChildIndexByWindowIndex(int0: number): number;
						public getPreviousWindowIndex(windowIndex: number, repeatMode: number, shuffleModeEnabled: boolean): number;
						public constructor();
						public getIndexOfPeriod(uid: any): number;
						/** @deprecated */
						public getWindow(windowIndex: number, window: androidx.media2.exoplayer.external.Timeline.Window, setTag: boolean): androidx.media2.exoplayer.external.Timeline.Window;
						public static getConcatenatedUid(childTimelineUid: any, childPeriodUid: any): any;
						public getWindow(windowIndex: number, window: androidx.media2.exoplayer.external.Timeline.Window): androidx.media2.exoplayer.external.Timeline.Window;
						public getChildIndexByPeriodIndex(int0: number): number;
						public getPeriodByUid(uid: any, period: androidx.media2.exoplayer.external.Timeline.Period): androidx.media2.exoplayer.external.Timeline.Period;
						public constructor(isAtomic: boolean, shuffleOrder: androidx.media2.exoplayer.external.source.ShuffleOrder);
						public getWindow(windowIndex: number, window: androidx.media2.exoplayer.external.Timeline.Window, defaultPositionProjectionUs: number): androidx.media2.exoplayer.external.Timeline.Window;
						public getUidOfPeriod(periodIndex: number): any;
						public getChildUidByChildIndex(int0: number): any;
						public getIndexOfPeriod(object0: any): number;
						public static getChildTimelineUidFromConcatenatedUid(concatenatedUid: any): any;
						public getUidOfPeriod(int0: number): any;
						public static getChildPeriodUidFromConcatenatedUid(concatenatedUid: any): any;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class AdaptiveMediaSourceEventListener extends java.lang.Object implements androidx.media2.exoplayer.external.source.MediaSourceEventListener {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.AdaptiveMediaSourceEventListener>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.source.AdaptiveMediaSourceEventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onMediaPeriodCreated(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): void;
							onMediaPeriodReleased(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): void;
							onLoadStarted(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventInfo2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData3: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
							onLoadCompleted(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventInfo2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData3: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
							onLoadCanceled(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventInfo2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData3: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
							onLoadError(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventInfo2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData3: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData, iOException4: java.io.IOException, boolean5: boolean): void;
							onReadingStarted(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): void;
							onUpstreamDiscarded(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, mediaLoadData2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
							onDownstreamFormatChanged(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, mediaLoadData2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						});
						public constructor();
						public onLoadCanceled(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventInfo2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData3: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public onLoadError(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventInfo2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData3: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData, iOException4: java.io.IOException, boolean5: boolean): void;
						public onUpstreamDiscarded(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, mediaLoadData2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public onDownstreamFormatChanged(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, mediaLoadData2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public onReadingStarted(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): void;
						public onLoadCompleted(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventInfo2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData3: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public onMediaPeriodReleased(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): void;
						public onMediaPeriodCreated(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): void;
						public onLoadStarted(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventInfo2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData3: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export abstract class BaseMediaSource extends java.lang.Object implements androidx.media2.exoplayer.external.source.MediaSource {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.BaseMediaSource>;
						public disableInternal(): void;
						public releaseSource(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						public constructor();
						public removeEventListener(eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
						public enableInternal(): void;
						public createPeriod(mediaPeriodId0: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, allocator1: androidx.media2.exoplayer.external.upstream.Allocator, long2: number): androidx.media2.exoplayer.external.source.MediaPeriod;
						public prepareSourceInternal(transferListener0: androidx.media2.exoplayer.external.upstream.TransferListener): void;
						public maybeThrowSourceInfoRefreshError(): void;
						public enable(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						public isEnabled(): boolean;
						public createEventDispatcher(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, mediaTimeOffsetMs: number): androidx.media2.exoplayer.external.source.MediaSourceEventListener.EventDispatcher;
						public releaseSourceInternal(): void;
						public getTag(): any;
						public releasePeriod(mediaPeriod0: androidx.media2.exoplayer.external.source.MediaPeriod): void;
						public refreshSourceInfo(timeline: androidx.media2.exoplayer.external.Timeline): void;
						public prepareSource(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller, mediaTransferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
						public addEventListener(handler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
						public disable(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						public createEventDispatcher(mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): androidx.media2.exoplayer.external.source.MediaSourceEventListener.EventDispatcher;
						public createEventDispatcher(mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, mediaTimeOffsetMs: number): androidx.media2.exoplayer.external.source.MediaSourceEventListener.EventDispatcher;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class BehindLiveWindowException extends java.io.IOException {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.BehindLiveWindowException>;
						public constructor();
						public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						public constructor(message: string, cause: java.lang.Throwable);
						public constructor(cause: java.lang.Throwable);
						public constructor(message: string);
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class ClippingMediaPeriod extends java.lang.Object implements androidx.media2.exoplayer.external.source.MediaPeriod, androidx.media2.exoplayer.external.source.MediaPeriod.Callback {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ClippingMediaPeriod>;
						public mediaPeriod: androidx.media2.exoplayer.external.source.MediaPeriod;
						public readDiscontinuity(): number;
						public getStreamKeys(list0: java.util.List<androidx.media2.exoplayer.external.trackselection.TrackSelection>): java.util.List<androidx.media2.exoplayer.external.offline.StreamKey>;
						public updateClipping(startUs: number, endUs: number): void;
						public discardBuffer(positionUs: number, toKeyframe: boolean): void;
						public constructor(mediaPeriod: androidx.media2.exoplayer.external.source.MediaPeriod, enableInitialDiscontinuity: boolean, startUs: number, endUs: number);
						public onPrepared(mediaPeriod: androidx.media2.exoplayer.external.source.MediaPeriod): void;
						public getTrackGroups(): androidx.media2.exoplayer.external.source.TrackGroupArray;
						public prepare(callback: androidx.media2.exoplayer.external.source.MediaPeriod.Callback, positionUs: number): void;
						public selectTracks(selections: native.Array<androidx.media2.exoplayer.external.trackselection.TrackSelection>, mayRetainStreamFlags: native.Array<boolean>, streams: native.Array<androidx.media2.exoplayer.external.source.SampleStream>, streamResetFlags: native.Array<boolean>, positionUs: number): number;
						public getNextLoadPositionUs(): number;
						public reevaluateBuffer(positionUs: number): void;
						public continueLoading(positionUs: number): boolean;
						public getStreamKeys(list0: java.util.List<any>): java.util.List<any>;
						public getBufferedPositionUs(): number;
						public seekToUs(positionUs: number): number;
						public onContinueLoadingRequested(sequenceableLoader0: any): void;
						public onContinueLoadingRequested(source: androidx.media2.exoplayer.external.source.MediaPeriod): void;
						public getAdjustedSeekPositionUs(positionUs: number, seekParameters: androidx.media2.exoplayer.external.SeekParameters): number;
						public maybeThrowPrepareError(): void;
					}
					export module ClippingMediaPeriod {
						export class ClippingSampleStream extends java.lang.Object implements androidx.media2.exoplayer.external.source.SampleStream {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ClippingMediaPeriod.ClippingSampleStream>;
							public childStream: androidx.media2.exoplayer.external.source.SampleStream;
							public clearSentEos(): void;
							public constructor(param0: androidx.media2.exoplayer.external.source.ClippingMediaPeriod, childStream: androidx.media2.exoplayer.external.source.SampleStream);
							public skipData(positionUs: number): number;
							public isReady(): boolean;
							public readData(formatHolder: androidx.media2.exoplayer.external.FormatHolder, buffer: androidx.media2.exoplayer.external.decoder.DecoderInputBuffer, requireFormat: boolean): number;
							public maybeThrowError(): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class ClippingMediaSource extends androidx.media2.exoplayer.external.source.CompositeMediaSource<java.lang.Void> {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ClippingMediaSource>;
						public constructor(mediaSource: androidx.media2.exoplayer.external.source.MediaSource, durationUs: number);
						public releaseSource(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						public constructor();
						public releasePeriod(mediaPeriod: androidx.media2.exoplayer.external.source.MediaPeriod): void;
						public removeEventListener(eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
						public maybeThrowSourceInfoRefreshError(): void;
						public enable(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						public createPeriod(id: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, allocator: androidx.media2.exoplayer.external.upstream.Allocator, startPositionUs: number): androidx.media2.exoplayer.external.source.MediaPeriod;
						public onChildSourceInfoRefreshed(object0: any, mediaSource1: androidx.media2.exoplayer.external.source.MediaSource, timeline2: androidx.media2.exoplayer.external.Timeline): void;
						public releaseSourceInternal(): void;
						public onChildSourceInfoRefreshed(id: java.lang.Void, mediaSource: androidx.media2.exoplayer.external.source.MediaSource, timeline: androidx.media2.exoplayer.external.Timeline): void;
						public getMediaTimeForChildMediaTime(id: any, mediaTimeMs: number): number;
						public constructor(mediaSource: androidx.media2.exoplayer.external.source.MediaSource, startPositionUs: number, endPositionUs: number, enableInitialDiscontinuity: boolean, allowDynamicClippingUpdates: boolean, relativeToDefaultPosition: boolean);
						public getTag(): any;
						public prepareSourceInternal(mediaTransferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
						public getMediaTimeForChildMediaTime(id: java.lang.Void, mediaTimeMs: number): number;
						public prepareSource(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller, mediaTransferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
						public constructor(mediaSource: androidx.media2.exoplayer.external.source.MediaSource, startPositionUs: number, endPositionUs: number);
						public addEventListener(handler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
						public disable(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
					}
					export module ClippingMediaSource {
						export class ClippingTimeline extends androidx.media2.exoplayer.external.source.ForwardingTimeline {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ClippingMediaSource.ClippingTimeline>;
							public constructor();
							public constructor(timeline: androidx.media2.exoplayer.external.Timeline);
							public getWindow(windowIndex: number, window: androidx.media2.exoplayer.external.Timeline.Window): androidx.media2.exoplayer.external.Timeline.Window;
							public getWindow(windowIndex: number, window: androidx.media2.exoplayer.external.Timeline.Window, setIds: boolean, defaultPositionProjectionUs: number): androidx.media2.exoplayer.external.Timeline.Window;
							/** @deprecated */
							public getWindow(windowIndex: number, window: androidx.media2.exoplayer.external.Timeline.Window, setTag: boolean): androidx.media2.exoplayer.external.Timeline.Window;
							public constructor(timeline: androidx.media2.exoplayer.external.Timeline, startUs: number, endUs: number);
							public getPeriod(periodIndex: number, period: androidx.media2.exoplayer.external.Timeline.Period): androidx.media2.exoplayer.external.Timeline.Period;
							public getPeriod(periodIndex: number, period: androidx.media2.exoplayer.external.Timeline.Period, setIds: boolean): androidx.media2.exoplayer.external.Timeline.Period;
							public getWindow(windowIndex: number, window: androidx.media2.exoplayer.external.Timeline.Window, defaultPositionProjectionUs: number): androidx.media2.exoplayer.external.Timeline.Window;
						}
						export class IllegalClippingException extends java.io.IOException {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ClippingMediaSource.IllegalClippingException>;
							public static REASON_INVALID_PERIOD_COUNT: number;
							public static REASON_NOT_SEEKABLE_TO_START: number;
							public static REASON_START_EXCEEDS_END: number;
							public reason: number;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(reason: number);
							public constructor(message: string);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
						export module IllegalClippingException {
							export class Reason extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ClippingMediaSource.IllegalClippingException.Reason>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.source.ClippingMediaSource$IllegalClippingException$Reason interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export abstract class CompositeMediaSource<T>  extends androidx.media2.exoplayer.external.source.BaseMediaSource {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.CompositeMediaSource<any>>;
						public disableInternal(): void;
						public removeEventListener(eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
						public enableInternal(): void;
						public enableChildSource(id: any): void;
						public createPeriod(mediaPeriodId0: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, allocator1: androidx.media2.exoplayer.external.upstream.Allocator, long2: number): androidx.media2.exoplayer.external.source.MediaPeriod;
						public prepareSourceInternal(transferListener0: androidx.media2.exoplayer.external.upstream.TransferListener): void;
						public disableChildSource(id: any): void;
						public onChildSourceInfoRefreshed(object0: any, mediaSource1: androidx.media2.exoplayer.external.source.MediaSource, timeline2: androidx.media2.exoplayer.external.Timeline): void;
						public prepareChildSource(id: any, mediaSource: androidx.media2.exoplayer.external.source.MediaSource): void;
						public addEventListener(handler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
						public releaseSource(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						public constructor();
						public maybeThrowSourceInfoRefreshError(): void;
						public enable(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						public releaseSourceInternal(): void;
						public getMediaTimeForChildMediaTime(id: any, mediaTimeMs: number): number;
						public getMediaPeriodIdForChildMediaPeriodId(id: any, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId;
						public getTag(): any;
						public prepareSourceInternal(mediaTransferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
						public releasePeriod(mediaPeriod0: androidx.media2.exoplayer.external.source.MediaPeriod): void;
						public prepareSource(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller, mediaTransferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
						public shouldDispatchCreateOrReleaseEvent(mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): boolean;
						public disable(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						public releaseChildSource(id: any): void;
						public getWindowIndexForChildWindowIndex(id: any, windowIndex: number): number;
					}
					export module CompositeMediaSource {
						export class ForwardingEventListener extends java.lang.Object implements androidx.media2.exoplayer.external.source.MediaSourceEventListener {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.CompositeMediaSource.ForwardingEventListener>;
							public onLoadCanceled(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
							public onUpstreamDiscarded(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
							public onLoadError(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData, error: java.io.IOException, wasCanceled: boolean): void;
							public onReadingStarted(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): void;
							public onDownstreamFormatChanged(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
							public onMediaPeriodCreated(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): void;
							public onMediaPeriodReleased(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): void;
							public onLoadStarted(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
							public onLoadCompleted(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
							public constructor(param0: any);
						}
						export class MediaSourceAndListener extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.CompositeMediaSource.MediaSourceAndListener>;
							public mediaSource: androidx.media2.exoplayer.external.source.MediaSource;
							public caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller;
							public eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener;
							public constructor(mediaSource: androidx.media2.exoplayer.external.source.MediaSource, caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller, eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class CompositeSequenceableLoader extends java.lang.Object implements androidx.media2.exoplayer.external.source.SequenceableLoader {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.CompositeSequenceableLoader>;
						public loaders: native.Array<androidx.media2.exoplayer.external.source.SequenceableLoader>;
						public getNextLoadPositionUs(): number;
						public reevaluateBuffer(positionUs: number): void;
						public continueLoading(positionUs: number): boolean;
						public getBufferedPositionUs(): number;
						public constructor(loaders: native.Array<androidx.media2.exoplayer.external.source.SequenceableLoader>);
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class CompositeSequenceableLoaderFactory extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.CompositeSequenceableLoaderFactory>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.source.CompositeSequenceableLoaderFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							createCompositeSequenceableLoader(sequenceableLoaders0: native.Array<androidx.media2.exoplayer.external.source.SequenceableLoader>): androidx.media2.exoplayer.external.source.SequenceableLoader;
						});
						public constructor();
						public createCompositeSequenceableLoader(sequenceableLoaders0: native.Array<androidx.media2.exoplayer.external.source.SequenceableLoader>): androidx.media2.exoplayer.external.source.SequenceableLoader;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class ConcatenatingMediaSource extends androidx.media2.exoplayer.external.source.CompositeMediaSource<androidx.media2.exoplayer.external.source.ConcatenatingMediaSource.MediaSourceHolder> {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ConcatenatingMediaSource>;
						public disableInternal(): void;
						public constructor(isAtomic: boolean, useLazyPreparation: boolean, shuffleOrder: androidx.media2.exoplayer.external.source.ShuffleOrder, mediaSources: native.Array<androidx.media2.exoplayer.external.source.MediaSource>);
						public removeMediaSourceRange(fromIndex: number, toIndex: number): void;
						public releasePeriod(mediaPeriod: androidx.media2.exoplayer.external.source.MediaPeriod): void;
						public removeEventListener(eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
						public enableInternal(): void;
						public addMediaSources(mediaSources: java.util.Collection<androidx.media2.exoplayer.external.source.MediaSource>, handler: globalAndroid.os.Handler, onCompletionAction: java.lang.Runnable): void;
						public onChildSourceInfoRefreshed(object0: any, mediaSource1: androidx.media2.exoplayer.external.source.MediaSource, timeline2: androidx.media2.exoplayer.external.Timeline): void;
						public setShuffleOrder(shuffleOrder: androidx.media2.exoplayer.external.source.ShuffleOrder): void;
						public addMediaSources(index: number, mediaSources: java.util.Collection<androidx.media2.exoplayer.external.source.MediaSource>): void;
						public addEventListener(handler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
						public addMediaSource(index: number, mediaSource: androidx.media2.exoplayer.external.source.MediaSource, handler: globalAndroid.os.Handler, onCompletionAction: java.lang.Runnable): void;
						public setShuffleOrder(shuffleOrder: androidx.media2.exoplayer.external.source.ShuffleOrder, handler: globalAndroid.os.Handler, onCompletionAction: java.lang.Runnable): void;
						public constructor(mediaSources: native.Array<androidx.media2.exoplayer.external.source.MediaSource>);
						public removeMediaSourceRange(fromIndex: number, toIndex: number, handler: globalAndroid.os.Handler, onCompletionAction: java.lang.Runnable): void;
						public getWindowIndexForChildWindowIndex(mediaSourceHolder: androidx.media2.exoplayer.external.source.ConcatenatingMediaSource.MediaSourceHolder, windowIndex: number): number;
						public releaseSource(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						public constructor();
						public onChildSourceInfoRefreshed(mediaSourceHolder: androidx.media2.exoplayer.external.source.ConcatenatingMediaSource.MediaSourceHolder, mediaSource: androidx.media2.exoplayer.external.source.MediaSource, timeline: androidx.media2.exoplayer.external.Timeline): void;
						public getMediaPeriodIdForChildMediaPeriodId(mediaSourceHolder: androidx.media2.exoplayer.external.source.ConcatenatingMediaSource.MediaSourceHolder, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId;
						public maybeThrowSourceInfoRefreshError(): void;
						public enable(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						public createPeriod(id: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, allocator: androidx.media2.exoplayer.external.upstream.Allocator, startPositionUs: number): androidx.media2.exoplayer.external.source.MediaPeriod;
						public constructor(isAtomic: boolean, mediaSources: native.Array<androidx.media2.exoplayer.external.source.MediaSource>);
						public releaseSourceInternal(): void;
						public addMediaSource(mediaSource: androidx.media2.exoplayer.external.source.MediaSource, handler: globalAndroid.os.Handler, onCompletionAction: java.lang.Runnable): void;
						public addMediaSource(mediaSource: androidx.media2.exoplayer.external.source.MediaSource): void;
						public getMediaSource(index: number): androidx.media2.exoplayer.external.source.MediaSource;
						public getMediaPeriodIdForChildMediaPeriodId(id: any, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId;
						public addMediaSources(mediaSources: java.util.Collection<androidx.media2.exoplayer.external.source.MediaSource>): void;
						public removeMediaSource(index: number, handler: globalAndroid.os.Handler, onCompletionAction: java.lang.Runnable): androidx.media2.exoplayer.external.source.MediaSource;
						public getSize(): number;
						public getTag(): any;
						public prepareSourceInternal(mediaTransferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
						public constructor(isAtomic: boolean, shuffleOrder: androidx.media2.exoplayer.external.source.ShuffleOrder, mediaSources: native.Array<androidx.media2.exoplayer.external.source.MediaSource>);
						public prepareSource(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller, mediaTransferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
						public addMediaSource(index: number, mediaSource: androidx.media2.exoplayer.external.source.MediaSource): void;
						public moveMediaSource(currentIndex: number, newIndex: number, handler: globalAndroid.os.Handler, onCompletionAction: java.lang.Runnable): void;
						public clear(): void;
						public disable(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						public addMediaSources(index: number, mediaSources: java.util.Collection<androidx.media2.exoplayer.external.source.MediaSource>, handler: globalAndroid.os.Handler, onCompletionAction: java.lang.Runnable): void;
						public removeMediaSource(index: number): androidx.media2.exoplayer.external.source.MediaSource;
						public moveMediaSource(currentIndex: number, newIndex: number): void;
						public clear(handler: globalAndroid.os.Handler, onCompletionAction: java.lang.Runnable): void;
						public getWindowIndexForChildWindowIndex(id: any, windowIndex: number): number;
					}
					export module ConcatenatingMediaSource {
						export class ConcatenatedTimeline extends androidx.media2.exoplayer.external.source.AbstractConcatenatedTimeline {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ConcatenatingMediaSource.ConcatenatedTimeline>;
							public constructor();
							public getChildIndexByChildUid(object0: any): number;
							public getFirstWindowIndexByChildIndex(int0: number): number;
							public getChildIndexByChildUid(childUid: any): number;
							public getWindowCount(): number;
							public getFirstPeriodIndexByChildIndex(int0: number): number;
							public getChildUidByChildIndex(int0: number): any;
							public getChildIndexByWindowIndex(int0: number): number;
							public getPeriodCount(): number;
							public getTimelineByChildIndex(int0: number): androidx.media2.exoplayer.external.Timeline;
							public getTimelineByChildIndex(childIndex: number): androidx.media2.exoplayer.external.Timeline;
							public getFirstPeriodIndexByChildIndex(childIndex: number): number;
							public getFirstWindowIndexByChildIndex(childIndex: number): number;
							public constructor(isAtomic: boolean, shuffleOrder: androidx.media2.exoplayer.external.source.ShuffleOrder);
							public getChildUidByChildIndex(childIndex: number): any;
							public constructor(mediaSourceHolders: java.util.Collection<androidx.media2.exoplayer.external.source.ConcatenatingMediaSource.MediaSourceHolder>, shuffleOrder: androidx.media2.exoplayer.external.source.ShuffleOrder, isAtomic: boolean);
							public getChildIndexByPeriodIndex(int0: number): number;
							public getChildIndexByWindowIndex(windowIndex: number): number;
							public getChildIndexByPeriodIndex(periodIndex: number): number;
						}
						export class DummyMediaSource extends androidx.media2.exoplayer.external.source.BaseMediaSource {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ConcatenatingMediaSource.DummyMediaSource>;
							public removeEventListener(eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
							public prepareSource(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller, mediaTransferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
							public prepareSourceInternal(transferListener0: androidx.media2.exoplayer.external.upstream.TransferListener): void;
							public createPeriod(id: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, allocator: androidx.media2.exoplayer.external.upstream.Allocator, startPositionUs: number): androidx.media2.exoplayer.external.source.MediaPeriod;
							public releaseSourceInternal(): void;
							public maybeThrowSourceInfoRefreshError(): void;
							public addEventListener(handler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
							public getTag(): any;
							public releaseSource(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
							public disable(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
							public releasePeriod(mediaPeriod: androidx.media2.exoplayer.external.source.MediaPeriod): void;
							public prepareSourceInternal(mediaTransferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
							public enable(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						}
						export class HandlerAndRunnable extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ConcatenatingMediaSource.HandlerAndRunnable>;
							public dispatch(): void;
							public constructor(handler: globalAndroid.os.Handler, runnable: java.lang.Runnable);
						}
						export class MediaSourceHolder extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ConcatenatingMediaSource.MediaSourceHolder>;
							public mediaSource: androidx.media2.exoplayer.external.source.MaskingMediaSource;
							public uid: any;
							public activeMediaPeriodIds: java.util.List<androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId>;
							public childIndex: number;
							public firstWindowIndexInChild: number;
							public isRemoved: boolean;
							public constructor(mediaSource: androidx.media2.exoplayer.external.source.MediaSource, useLazyPreparation: boolean);
							public reset(childIndex: number, firstWindowIndexInChild: number): void;
						}
						export class MessageData<T>  extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ConcatenatingMediaSource.MessageData<any>>;
							public index: number;
							public customData: T;
							public onCompletionAction: androidx.media2.exoplayer.external.source.ConcatenatingMediaSource.HandlerAndRunnable;
							public constructor(index: number, customData: T, onCompletionAction: androidx.media2.exoplayer.external.source.ConcatenatingMediaSource.HandlerAndRunnable);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class DecryptableSampleQueueReader extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.DecryptableSampleQueueReader>;
						public isReady(loadingFinished: boolean): boolean;
						public constructor(upstream: androidx.media2.exoplayer.external.source.SampleQueue, sessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<any>);
						public release(): void;
						public maybeThrowError(): void;
						public read(outputFormatHolder: androidx.media2.exoplayer.external.FormatHolder, buffer: androidx.media2.exoplayer.external.decoder.DecoderInputBuffer, formatRequired: boolean, loadingFinished: boolean, decodeOnlyUntilUs: number): number;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class DefaultCompositeSequenceableLoaderFactory extends java.lang.Object implements androidx.media2.exoplayer.external.source.CompositeSequenceableLoaderFactory {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.DefaultCompositeSequenceableLoaderFactory>;
						public constructor();
						public createCompositeSequenceableLoader(loaders: native.Array<androidx.media2.exoplayer.external.source.SequenceableLoader>): androidx.media2.exoplayer.external.source.SequenceableLoader;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export abstract class DefaultMediaSourceEventListener extends java.lang.Object implements androidx.media2.exoplayer.external.source.MediaSourceEventListener {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.DefaultMediaSourceEventListener>;
						public onLoadStarted(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventInfo: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public constructor();
						public onUpstreamDiscarded(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public onLoadCanceled(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventInfo: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public onLoadError(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventInfo: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData, error: java.io.IOException, wasCanceled: boolean): void;
						public onMediaPeriodCreated(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): void;
						public onLoadCompleted(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventInfo: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public onMediaPeriodReleased(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): void;
						public onReadingStarted(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): void;
						public onDownstreamFormatChanged(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class EmptySampleStream extends java.lang.Object implements androidx.media2.exoplayer.external.source.SampleStream {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.EmptySampleStream>;
						public constructor();
						public readData(formatHolder: androidx.media2.exoplayer.external.FormatHolder, buffer: androidx.media2.exoplayer.external.decoder.DecoderInputBuffer, formatRequired: boolean): number;
						public skipData(positionUs: number): number;
						public isReady(): boolean;
						public maybeThrowError(): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class ExtractorMediaSource extends androidx.media2.exoplayer.external.source.CompositeMediaSource<java.lang.Void> {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ExtractorMediaSource>;
						public static DEFAULT_LOADING_CHECK_INTERVAL_BYTES: number;
						/** @deprecated */
						public constructor(uri: globalAndroid.net.Uri, dataSourceFactory: androidx.media2.exoplayer.external.upstream.DataSource.Factory, extractorsFactory: androidx.media2.exoplayer.external.extractor.ExtractorsFactory, eventHandler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.source.ExtractorMediaSource.EventListener, customCacheKey: string);
						public releaseSource(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						public constructor();
						public releasePeriod(mediaPeriod: androidx.media2.exoplayer.external.source.MediaPeriod): void;
						public removeEventListener(eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
						public maybeThrowSourceInfoRefreshError(): void;
						/** @deprecated */
						public constructor(uri: globalAndroid.net.Uri, dataSourceFactory: androidx.media2.exoplayer.external.upstream.DataSource.Factory, extractorsFactory: androidx.media2.exoplayer.external.extractor.ExtractorsFactory, eventHandler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.source.ExtractorMediaSource.EventListener, customCacheKey: string, continueLoadingCheckIntervalBytes: number);
						public enable(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						public createPeriod(id: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, allocator: androidx.media2.exoplayer.external.upstream.Allocator, startPositionUs: number): androidx.media2.exoplayer.external.source.MediaPeriod;
						public onChildSourceInfoRefreshed(object0: any, mediaSource1: androidx.media2.exoplayer.external.source.MediaSource, timeline2: androidx.media2.exoplayer.external.Timeline): void;
						public onChildSourceInfoRefreshed(id: java.lang.Void, mediaSource: androidx.media2.exoplayer.external.source.MediaSource, timeline: androidx.media2.exoplayer.external.Timeline): void;
						public getTag(): any;
						public prepareSourceInternal(mediaTransferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
						public prepareSource(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller, mediaTransferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
						public addEventListener(handler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
						public disable(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						/** @deprecated */
						public constructor(uri: globalAndroid.net.Uri, dataSourceFactory: androidx.media2.exoplayer.external.upstream.DataSource.Factory, extractorsFactory: androidx.media2.exoplayer.external.extractor.ExtractorsFactory, eventHandler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.source.ExtractorMediaSource.EventListener);
					}
					export module ExtractorMediaSource {
						export class EventListener extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ExtractorMediaSource.EventListener>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.source.ExtractorMediaSource$EventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onLoadError(iOException0: java.io.IOException): void;
							});
							public constructor();
							public onLoadError(iOException0: java.io.IOException): void;
						}
						export class EventListenerWrapper extends androidx.media2.exoplayer.external.source.DefaultMediaSourceEventListener {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ExtractorMediaSource.EventListenerWrapper>;
							public constructor();
							public onLoadCanceled(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventInfo: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
							public onUpstreamDiscarded(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
							public onLoadCompleted(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventInfo: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
							public onReadingStarted(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): void;
							public onLoadError(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventInfo: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData, error: java.io.IOException, wasCanceled: boolean): void;
							public onDownstreamFormatChanged(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
							public onMediaPeriodCreated(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): void;
							public onMediaPeriodReleased(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): void;
							public constructor(eventListener: androidx.media2.exoplayer.external.source.ExtractorMediaSource.EventListener);
							public onLoadStarted(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventInfo: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						}
						export class Factory extends java.lang.Object implements androidx.media2.exoplayer.external.source.MediaSourceFactory {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ExtractorMediaSource.Factory>;
							public setLoadErrorHandlingPolicy(loadErrorHandlingPolicy: androidx.media2.exoplayer.external.upstream.LoadErrorHandlingPolicy): androidx.media2.exoplayer.external.source.ExtractorMediaSource.Factory;
							public setContinueLoadingCheckIntervalBytes(continueLoadingCheckIntervalBytes: number): androidx.media2.exoplayer.external.source.ExtractorMediaSource.Factory;
							/** @deprecated */
							public createMediaSource(uri: globalAndroid.net.Uri, eventHandler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): androidx.media2.exoplayer.external.source.ExtractorMediaSource;
							/** @deprecated */
							public setMinLoadableRetryCount(minLoadableRetryCount: number): androidx.media2.exoplayer.external.source.ExtractorMediaSource.Factory;
							public createMediaSource(uri: globalAndroid.net.Uri): androidx.media2.exoplayer.external.source.ExtractorMediaSource;
							public setExtractorsFactory(extractorsFactory: androidx.media2.exoplayer.external.extractor.ExtractorsFactory): androidx.media2.exoplayer.external.source.ExtractorMediaSource.Factory;
							public setCustomCacheKey(customCacheKey: string): androidx.media2.exoplayer.external.source.ExtractorMediaSource.Factory;
							public setStreamKeys(list0: java.util.List<any>): androidx.media2.exoplayer.external.source.MediaSourceFactory;
							public createMediaSource(uri0: globalAndroid.net.Uri): androidx.media2.exoplayer.external.source.MediaSource;
							public constructor(dataSourceFactory: androidx.media2.exoplayer.external.upstream.DataSource.Factory);
							public setTag(tag: any): androidx.media2.exoplayer.external.source.ExtractorMediaSource.Factory;
							public setStreamKeys(list0: java.util.List<androidx.media2.exoplayer.external.offline.StreamKey>): androidx.media2.exoplayer.external.source.MediaSourceFactory;
							public getSupportedTypes(): native.Array<number>;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export abstract class ForwardingTimeline extends androidx.media2.exoplayer.external.Timeline {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ForwardingTimeline>;
						public timeline: androidx.media2.exoplayer.external.Timeline;
						public constructor();
						public getPeriod(periodIndex: number, period: androidx.media2.exoplayer.external.Timeline.Period, setIds: boolean): androidx.media2.exoplayer.external.Timeline.Period;
						public getIndexOfPeriod(uid: any): number;
						public getWindowCount(): number;
						public getWindow(windowIndex: number, window: androidx.media2.exoplayer.external.Timeline.Window, setIds: boolean, defaultPositionProjectionUs: number): androidx.media2.exoplayer.external.Timeline.Window;
						public getPeriod(int0: number, period1: androidx.media2.exoplayer.external.Timeline.Period, boolean2: boolean): androidx.media2.exoplayer.external.Timeline.Period;
						/** @deprecated */
						public getWindow(windowIndex: number, window: androidx.media2.exoplayer.external.Timeline.Window, setTag: boolean): androidx.media2.exoplayer.external.Timeline.Window;
						public getWindow(windowIndex: number, window: androidx.media2.exoplayer.external.Timeline.Window): androidx.media2.exoplayer.external.Timeline.Window;
						/** @deprecated */
						public getWindow(windowIndex: number, window: androidx.media2.exoplayer.external.Timeline.Window, setTag: boolean, defaultPositionProjectionUs: number): androidx.media2.exoplayer.external.Timeline.Window;
						public constructor(timeline: androidx.media2.exoplayer.external.Timeline);
						public getFirstWindowIndex(shuffleModeEnabled: boolean): number;
						public getWindow(windowIndex: number, window: androidx.media2.exoplayer.external.Timeline.Window, defaultPositionProjectionUs: number): androidx.media2.exoplayer.external.Timeline.Window;
						public getUidOfPeriod(periodIndex: number): any;
						public getPeriod(periodIndex: number, period: androidx.media2.exoplayer.external.Timeline.Period): androidx.media2.exoplayer.external.Timeline.Period;
						public getIndexOfPeriod(object0: any): number;
						public getLastWindowIndex(shuffleModeEnabled: boolean): number;
						public getNextWindowIndex(windowIndex: number, repeatMode: number, shuffleModeEnabled: boolean): number;
						public getPeriodCount(): number;
						public getUidOfPeriod(int0: number): any;
						public getPreviousWindowIndex(windowIndex: number, repeatMode: number, shuffleModeEnabled: boolean): number;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class IcyDataSource extends java.lang.Object implements androidx.media2.exoplayer.external.upstream.DataSource {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.IcyDataSource>;
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public open(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec): number;
						public close(): void;
						public constructor(upstream: androidx.media2.exoplayer.external.upstream.DataSource, metadataIntervalBytes: number, listener: androidx.media2.exoplayer.external.source.IcyDataSource.Listener);
						public read(buffer: native.Array<number>, offset: number, readLength: number): number;
						public getUri(): globalAndroid.net.Uri;
						public addTransferListener(transferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
					}
					export module IcyDataSource {
						export class Listener extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.IcyDataSource.Listener>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.source.IcyDataSource$Listener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onIcyMetadata(parsableByteArray0: androidx.media2.exoplayer.external.util.ParsableByteArray): void;
							});
							public constructor();
							public onIcyMetadata(parsableByteArray0: androidx.media2.exoplayer.external.util.ParsableByteArray): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class LoopingMediaSource extends androidx.media2.exoplayer.external.source.CompositeMediaSource<java.lang.Void> {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.LoopingMediaSource>;
						public releaseSource(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						public constructor();
						public releasePeriod(mediaPeriod: androidx.media2.exoplayer.external.source.MediaPeriod): void;
						public removeEventListener(eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
						public constructor(childSource: androidx.media2.exoplayer.external.source.MediaSource, loopCount: number);
						public maybeThrowSourceInfoRefreshError(): void;
						public enable(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						public createPeriod(id: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, allocator: androidx.media2.exoplayer.external.upstream.Allocator, startPositionUs: number): androidx.media2.exoplayer.external.source.MediaPeriod;
						public onChildSourceInfoRefreshed(object0: any, mediaSource1: androidx.media2.exoplayer.external.source.MediaSource, timeline2: androidx.media2.exoplayer.external.Timeline): void;
						public onChildSourceInfoRefreshed(id: java.lang.Void, mediaSource: androidx.media2.exoplayer.external.source.MediaSource, timeline: androidx.media2.exoplayer.external.Timeline): void;
						public getMediaPeriodIdForChildMediaPeriodId(id: any, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId;
						public getMediaPeriodIdForChildMediaPeriodId(id: java.lang.Void, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId;
						public getTag(): any;
						public prepareSourceInternal(mediaTransferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
						public prepareSource(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller, mediaTransferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
						public addEventListener(handler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
						public disable(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						public constructor(childSource: androidx.media2.exoplayer.external.source.MediaSource);
					}
					export module LoopingMediaSource {
						export class InfinitelyLoopingTimeline extends androidx.media2.exoplayer.external.source.ForwardingTimeline {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.LoopingMediaSource.InfinitelyLoopingTimeline>;
							public constructor();
							public constructor(timeline: androidx.media2.exoplayer.external.Timeline);
							public getPreviousWindowIndex(windowIndex: number, repeatMode: number, shuffleModeEnabled: boolean): number;
							public getNextWindowIndex(windowIndex: number, repeatMode: number, shuffleModeEnabled: boolean): number;
						}
						export class LoopingTimeline extends androidx.media2.exoplayer.external.source.AbstractConcatenatedTimeline {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.LoopingMediaSource.LoopingTimeline>;
							public constructor();
							public getChildIndexByChildUid(object0: any): number;
							public getFirstWindowIndexByChildIndex(int0: number): number;
							public getWindowCount(): number;
							public getChildIndexByChildUid(childUid: any): number;
							public getFirstPeriodIndexByChildIndex(int0: number): number;
							public getChildUidByChildIndex(int0: number): any;
							public constructor(childTimeline: androidx.media2.exoplayer.external.Timeline, loopCount: number);
							public getChildIndexByWindowIndex(int0: number): number;
							public getPeriodCount(): number;
							public getTimelineByChildIndex(int0: number): androidx.media2.exoplayer.external.Timeline;
							public getTimelineByChildIndex(childIndex: number): androidx.media2.exoplayer.external.Timeline;
							public getFirstPeriodIndexByChildIndex(childIndex: number): number;
							public getFirstWindowIndexByChildIndex(childIndex: number): number;
							public constructor(isAtomic: boolean, shuffleOrder: androidx.media2.exoplayer.external.source.ShuffleOrder);
							public getChildUidByChildIndex(childIndex: number): any;
							public getChildIndexByPeriodIndex(int0: number): number;
							public getChildIndexByWindowIndex(windowIndex: number): number;
							public getChildIndexByPeriodIndex(periodIndex: number): number;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class MaskingMediaPeriod extends java.lang.Object implements androidx.media2.exoplayer.external.source.MediaPeriod, androidx.media2.exoplayer.external.source.MediaPeriod.Callback {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.MaskingMediaPeriod>;
						public mediaSource: androidx.media2.exoplayer.external.source.MediaSource;
						public id: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId;
						public setPrepareErrorListener(listener: androidx.media2.exoplayer.external.source.MaskingMediaPeriod.PrepareErrorListener): void;
						public readDiscontinuity(): number;
						public getStreamKeys(list0: java.util.List<androidx.media2.exoplayer.external.trackselection.TrackSelection>): java.util.List<androidx.media2.exoplayer.external.offline.StreamKey>;
						public getPreparePositionUs(): number;
						public createPeriod(id: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): void;
						public discardBuffer(positionUs: number, toKeyframe: boolean): void;
						public onPrepared(mediaPeriod: androidx.media2.exoplayer.external.source.MediaPeriod): void;
						public getTrackGroups(): androidx.media2.exoplayer.external.source.TrackGroupArray;
						public prepare(callback: androidx.media2.exoplayer.external.source.MediaPeriod.Callback, preparePositionUs: number): void;
						public selectTracks(selections: native.Array<androidx.media2.exoplayer.external.trackselection.TrackSelection>, mayRetainStreamFlags: native.Array<boolean>, streams: native.Array<androidx.media2.exoplayer.external.source.SampleStream>, streamResetFlags: native.Array<boolean>, positionUs: number): number;
						public getNextLoadPositionUs(): number;
						public constructor(mediaSource: androidx.media2.exoplayer.external.source.MediaSource, id: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, allocator: androidx.media2.exoplayer.external.upstream.Allocator, preparePositionUs: number);
						public reevaluateBuffer(positionUs: number): void;
						public continueLoading(positionUs: number): boolean;
						public getStreamKeys(list0: java.util.List<any>): java.util.List<any>;
						public overridePreparePositionUs(preparePositionUs: number): void;
						public releasePeriod(): void;
						public getBufferedPositionUs(): number;
						public seekToUs(positionUs: number): number;
						public onContinueLoadingRequested(sequenceableLoader0: any): void;
						public onContinueLoadingRequested(source: androidx.media2.exoplayer.external.source.MediaPeriod): void;
						public getAdjustedSeekPositionUs(positionUs: number, seekParameters: androidx.media2.exoplayer.external.SeekParameters): number;
						public maybeThrowPrepareError(): void;
					}
					export module MaskingMediaPeriod {
						export class PrepareErrorListener extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.MaskingMediaPeriod.PrepareErrorListener>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.source.MaskingMediaPeriod$PrepareErrorListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPrepareError(mediaPeriodId0: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, iOException1: java.io.IOException): void;
							});
							public constructor();
							public onPrepareError(mediaPeriodId0: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, iOException1: java.io.IOException): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class MaskingMediaSource extends androidx.media2.exoplayer.external.source.CompositeMediaSource<java.lang.Void> {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.MaskingMediaSource>;
						public releaseSource(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						public constructor();
						public releasePeriod(mediaPeriod: androidx.media2.exoplayer.external.source.MediaPeriod): void;
						public removeEventListener(eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
						public createPeriod(mediaPeriodId0: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, allocator1: androidx.media2.exoplayer.external.upstream.Allocator, long2: number): androidx.media2.exoplayer.external.source.MediaPeriod;
						public maybeThrowSourceInfoRefreshError(): void;
						public enable(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						public onChildSourceInfoRefreshed(object0: any, mediaSource1: androidx.media2.exoplayer.external.source.MediaSource, timeline2: androidx.media2.exoplayer.external.Timeline): void;
						public releaseSourceInternal(): void;
						public getTimeline(): androidx.media2.exoplayer.external.Timeline;
						public getMediaPeriodIdForChildMediaPeriodId(id: any, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId;
						public getMediaPeriodIdForChildMediaPeriodId(id: java.lang.Void, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId;
						public getTag(): any;
						public constructor(mediaSource: androidx.media2.exoplayer.external.source.MediaSource, useLazyPreparation: boolean);
						public prepareSourceInternal(mediaTransferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
						public prepareSource(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller, mediaTransferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
						public shouldDispatchCreateOrReleaseEvent(mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): boolean;
						public onChildSourceInfoRefreshed(id: java.lang.Void, mediaSource: androidx.media2.exoplayer.external.source.MediaSource, newTimeline: androidx.media2.exoplayer.external.Timeline): void;
						public addEventListener(handler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
						public disable(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						public createPeriod(id: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, allocator: androidx.media2.exoplayer.external.upstream.Allocator, startPositionUs: number): androidx.media2.exoplayer.external.source.MaskingMediaPeriod;
					}
					export module MaskingMediaSource {
						export class DummyTimeline extends androidx.media2.exoplayer.external.Timeline {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.MaskingMediaSource.DummyTimeline>;
							public constructor();
							public getWindowCount(): number;
							public getIndexOfPeriod(object0: any): number;
							/** @deprecated */
							public getWindow(windowIndex: number, window: androidx.media2.exoplayer.external.Timeline.Window, setTag: boolean): androidx.media2.exoplayer.external.Timeline.Window;
							public getPeriod(int0: number, period1: androidx.media2.exoplayer.external.Timeline.Period, boolean2: boolean): androidx.media2.exoplayer.external.Timeline.Period;
							public getPeriod(periodIndex: number, period: androidx.media2.exoplayer.external.Timeline.Period): androidx.media2.exoplayer.external.Timeline.Period;
							public getPeriodCount(): number;
							public getPeriod(periodIndex: number, period: androidx.media2.exoplayer.external.Timeline.Period, setIds: boolean): androidx.media2.exoplayer.external.Timeline.Period;
							public constructor(tag: any);
							public getWindow(windowIndex: number, window: androidx.media2.exoplayer.external.Timeline.Window, defaultPositionProjectionUs: number): androidx.media2.exoplayer.external.Timeline.Window;
							public getWindow(windowIndex: number, window: androidx.media2.exoplayer.external.Timeline.Window): androidx.media2.exoplayer.external.Timeline.Window;
							public getUidOfPeriod(int0: number): any;
							public getIndexOfPeriod(uid: any): number;
							public getUidOfPeriod(periodIndex: number): any;
							/** @deprecated */
							public getWindow(windowIndex: number, window: androidx.media2.exoplayer.external.Timeline.Window, setTag: boolean, defaultPositionProjectionUs: number): androidx.media2.exoplayer.external.Timeline.Window;
						}
						export class MaskingTimeline extends androidx.media2.exoplayer.external.source.ForwardingTimeline {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.MaskingMediaSource.MaskingTimeline>;
							public static DUMMY_EXTERNAL_ID: any;
							public cloneWithUpdatedTimeline(timeline: androidx.media2.exoplayer.external.Timeline): androidx.media2.exoplayer.external.source.MaskingMediaSource.MaskingTimeline;
							public getTimeline(): androidx.media2.exoplayer.external.Timeline;
							public getIndexOfPeriod(uid: any): number;
							public getUidOfPeriod(periodIndex: number): any;
							public static createWithDummyTimeline(windowTag: any): androidx.media2.exoplayer.external.source.MaskingMediaSource.MaskingTimeline;
							public static createWithRealTimeline(timeline: androidx.media2.exoplayer.external.Timeline, firstPeriodUid: any): androidx.media2.exoplayer.external.source.MaskingMediaSource.MaskingTimeline;
							public getPeriod(periodIndex: number, period: androidx.media2.exoplayer.external.Timeline.Period): androidx.media2.exoplayer.external.Timeline.Period;
							public getPeriod(periodIndex: number, period: androidx.media2.exoplayer.external.Timeline.Period, setIds: boolean): androidx.media2.exoplayer.external.Timeline.Period;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class MediaPeriod extends java.lang.Object implements androidx.media2.exoplayer.external.source.SequenceableLoader {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.MediaPeriod>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.source.MediaPeriod interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							prepare(callback0: androidx.media2.exoplayer.external.source.MediaPeriod.Callback, long1: number): void;
							maybeThrowPrepareError(): void;
							getTrackGroups(): androidx.media2.exoplayer.external.source.TrackGroupArray;
							getStreamKeys(list0: java.util.List<androidx.media2.exoplayer.external.trackselection.TrackSelection>): java.util.List<androidx.media2.exoplayer.external.offline.StreamKey>;
							selectTracks(trackSelections0: native.Array<androidx.media2.exoplayer.external.trackselection.TrackSelection>, booleans1: native.Array<boolean>, sampleStreams2: native.Array<androidx.media2.exoplayer.external.source.SampleStream>, booleans3: native.Array<boolean>, long4: number): number;
							discardBuffer(long0: number, boolean1: boolean): void;
							readDiscontinuity(): number;
							seekToUs(long0: number): number;
							getAdjustedSeekPositionUs(long0: number, seekParameters1: androidx.media2.exoplayer.external.SeekParameters): number;
							getBufferedPositionUs(): number;
							getNextLoadPositionUs(): number;
							continueLoading(long0: number): boolean;
							reevaluateBuffer(long0: number): void;
							getBufferedPositionUs(): number;
							getNextLoadPositionUs(): number;
							continueLoading(long0: number): boolean;
							reevaluateBuffer(long0: number): void;
						});
						public constructor();
						public readDiscontinuity(): number;
						public getStreamKeys(list0: java.util.List<androidx.media2.exoplayer.external.trackselection.TrackSelection>): java.util.List<androidx.media2.exoplayer.external.offline.StreamKey>;
						public continueLoading(long0: number): boolean;
						public seekToUs(long0: number): number;
						public getTrackGroups(): androidx.media2.exoplayer.external.source.TrackGroupArray;
						public reevaluateBuffer(long0: number): void;
						public discardBuffer(long0: number, boolean1: boolean): void;
						public selectTracks(trackSelections0: native.Array<androidx.media2.exoplayer.external.trackselection.TrackSelection>, booleans1: native.Array<boolean>, sampleStreams2: native.Array<androidx.media2.exoplayer.external.source.SampleStream>, booleans3: native.Array<boolean>, long4: number): number;
						public getNextLoadPositionUs(): number;
						public getAdjustedSeekPositionUs(long0: number, seekParameters1: androidx.media2.exoplayer.external.SeekParameters): number;
						public getBufferedPositionUs(): number;
						public prepare(callback0: androidx.media2.exoplayer.external.source.MediaPeriod.Callback, long1: number): void;
						public maybeThrowPrepareError(): void;
					}
						export module  {
					export module MediaPeriod {
							export abstract class CC extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.MediaPeriod..CC>;
								public static getStreamKeys$$dflt$$(this0: androidx.media2.exoplayer.external.source.MediaPeriod, trackSelections: java.util.List<any>): java.util.List<any>;
							}
						}
						export class Callback extends androidx.media2.exoplayer.external.source.SequenceableLoader.Callback<androidx.media2.exoplayer.external.source.MediaPeriod> {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.MediaPeriod.Callback>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.source.MediaPeriod$Callback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPrepared(mediaPeriod0: androidx.media2.exoplayer.external.source.MediaPeriod): void;
								onContinueLoadingRequested(sequenceableLoader0: any): void;
							});
							public constructor();
							public onPrepared(mediaPeriod0: androidx.media2.exoplayer.external.source.MediaPeriod): void;
							public onContinueLoadingRequested(sequenceableLoader0: any): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class MediaSource extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.MediaSource>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.source.MediaSource interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							addEventListener(handler0: globalAndroid.os.Handler, mediaSourceEventListener1: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
							removeEventListener(mediaSourceEventListener0: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
							getTag(): any;
							prepareSource(mediaSourceCaller0: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller, transferListener1: androidx.media2.exoplayer.external.upstream.TransferListener): void;
							maybeThrowSourceInfoRefreshError(): void;
							enable(mediaSourceCaller0: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
							createPeriod(mediaPeriodId0: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, allocator1: androidx.media2.exoplayer.external.upstream.Allocator, long2: number): androidx.media2.exoplayer.external.source.MediaPeriod;
							releasePeriod(mediaPeriod0: androidx.media2.exoplayer.external.source.MediaPeriod): void;
							disable(mediaSourceCaller0: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
							releaseSource(mediaSourceCaller0: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						});
						public constructor();
						public getTag(): any;
						public enable(mediaSourceCaller0: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						public createPeriod(mediaPeriodId0: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, allocator1: androidx.media2.exoplayer.external.upstream.Allocator, long2: number): androidx.media2.exoplayer.external.source.MediaPeriod;
						public releasePeriod(mediaPeriod0: androidx.media2.exoplayer.external.source.MediaPeriod): void;
						public addEventListener(handler0: globalAndroid.os.Handler, mediaSourceEventListener1: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
						public maybeThrowSourceInfoRefreshError(): void;
						public disable(mediaSourceCaller0: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						public releaseSource(mediaSourceCaller0: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						public prepareSource(mediaSourceCaller0: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller, transferListener1: androidx.media2.exoplayer.external.upstream.TransferListener): void;
						public removeEventListener(mediaSourceEventListener0: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
					}
						export module  {
					export module MediaSource {
							export abstract class CC extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.MediaSource..CC>;
								public static getTag$$dflt$$(this0: androidx.media2.exoplayer.external.source.MediaSource): any;
							}
						}
						export class MediaPeriodId extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId>;
							public periodUid: any;
							public adGroupIndex: number;
							public adIndexInAdGroup: number;
							public windowSequenceNumber: number;
							public nextAdGroupIndex: number;
							public constructor(periodUid: any);
							public constructor(periodUid: any, windowSequenceNumber: number);
							public hashCode(): number;
							public constructor(periodUid: any, windowSequenceNumber: number, nextAdGroupIndex: number);
							public isAd(): boolean;
							public equals(obj: any): boolean;
							public constructor(periodUid: any, adGroupIndex: number, adIndexInAdGroup: number, windowSequenceNumber: number);
							public copyWithPeriodUid(newPeriodUid: any): androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId;
						}
						export class MediaSourceCaller extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.source.MediaSource$MediaSourceCaller interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onSourceInfoRefreshed(mediaSource0: androidx.media2.exoplayer.external.source.MediaSource, timeline1: androidx.media2.exoplayer.external.Timeline): void;
							});
							public constructor();
							public onSourceInfoRefreshed(mediaSource0: androidx.media2.exoplayer.external.source.MediaSource, timeline1: androidx.media2.exoplayer.external.Timeline): void;
						}
						export class SourceInfoRefreshListener extends java.lang.Object implements androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.MediaSource.SourceInfoRefreshListener>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.source.MediaSource$SourceInfoRefreshListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onSourceInfoRefreshed(mediaSource0: androidx.media2.exoplayer.external.source.MediaSource, timeline1: androidx.media2.exoplayer.external.Timeline): void;
								onSourceInfoRefreshed(mediaSource0: androidx.media2.exoplayer.external.source.MediaSource, timeline1: androidx.media2.exoplayer.external.Timeline, object2: any): void;
								onSourceInfoRefreshed(mediaSource0: androidx.media2.exoplayer.external.source.MediaSource, timeline1: androidx.media2.exoplayer.external.Timeline): void;
							});
							public constructor();
							/** @deprecated */
							public onSourceInfoRefreshed(mediaSource0: androidx.media2.exoplayer.external.source.MediaSource, timeline1: androidx.media2.exoplayer.external.Timeline, object2: any): void;
							public onSourceInfoRefreshed(mediaSource0: androidx.media2.exoplayer.external.source.MediaSource, timeline1: androidx.media2.exoplayer.external.Timeline): void;
						}
							export module  {
						export module SourceInfoRefreshListener {
								export abstract class CC extends java.lang.Object {
									public static class: java.lang.Class<androidx.media2.exoplayer.external.source.MediaSource.SourceInfoRefreshListener..CC>;
									public static onSourceInfoRefreshed$$dflt$$(this0: androidx.media2.exoplayer.external.source.MediaSource.SourceInfoRefreshListener, source: androidx.media2.exoplayer.external.source.MediaSource, timeline: androidx.media2.exoplayer.external.Timeline): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class MediaSourceEventListener extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.MediaSourceEventListener>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.source.MediaSourceEventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onMediaPeriodCreated(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): void;
							onMediaPeriodReleased(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): void;
							onLoadStarted(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventInfo2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData3: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
							onLoadCompleted(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventInfo2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData3: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
							onLoadCanceled(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventInfo2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData3: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
							onLoadError(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventInfo2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData3: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData, iOException4: java.io.IOException, boolean5: boolean): void;
							onReadingStarted(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): void;
							onUpstreamDiscarded(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, mediaLoadData2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
							onDownstreamFormatChanged(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, mediaLoadData2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						});
						public constructor();
						public onLoadCanceled(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventInfo2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData3: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public onLoadError(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventInfo2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData3: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData, iOException4: java.io.IOException, boolean5: boolean): void;
						public onUpstreamDiscarded(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, mediaLoadData2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public onDownstreamFormatChanged(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, mediaLoadData2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public onReadingStarted(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): void;
						public onLoadCompleted(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventInfo2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData3: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public onMediaPeriodReleased(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): void;
						public onMediaPeriodCreated(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): void;
						public onLoadStarted(int0: number, mediaPeriodId1: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventInfo2: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData3: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
					}
					export module MediaSourceEventListener {
						export class EventDispatcher extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.MediaSourceEventListener.EventDispatcher>;
							public windowIndex: number;
							public mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId;
							public constructor();
							public loadCanceled(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, uri: globalAndroid.net.Uri, responseHeaders: java.util.Map<string,java.util.List<string>>, dataType: number, trackType: number, trackFormat: androidx.media2.exoplayer.external.Format, trackSelectionReason: number, trackSelectionData: any, mediaStartTimeUs: number, mediaEndTimeUs: number, elapsedRealtimeMs: number, loadDurationMs: number, bytesLoaded: number): void;
							public downstreamFormatChanged(trackType: number, trackFormat: androidx.media2.exoplayer.external.Format, trackSelectionReason: number, trackSelectionData: any, mediaTimeUs: number): void;
							public removeEventListener(eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
							public mediaPeriodCreated(): void;
							public loadCompleted(loadEventInfo: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
							public withParameters(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, mediaTimeOffsetMs: number): androidx.media2.exoplayer.external.source.MediaSourceEventListener.EventDispatcher;
							public loadStarted(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, dataType: number, trackType: number, trackFormat: androidx.media2.exoplayer.external.Format, trackSelectionReason: number, trackSelectionData: any, mediaStartTimeUs: number, mediaEndTimeUs: number, elapsedRealtimeMs: number): void;
							public loadStarted(loadEventInfo: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
							public upstreamDiscarded(trackType: number, mediaStartTimeUs: number, mediaEndTimeUs: number): void;
							public loadError(loadEventInfo: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData, error: java.io.IOException, wasCanceled: boolean): void;
							public loadError(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, uri: globalAndroid.net.Uri, responseHeaders: java.util.Map<string,java.util.List<string>>, dataType: number, elapsedRealtimeMs: number, loadDurationMs: number, bytesLoaded: number, error: java.io.IOException, wasCanceled: boolean): void;
							public loadCompleted(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, uri: globalAndroid.net.Uri, responseHeaders: java.util.Map<string,java.util.List<string>>, dataType: number, trackType: number, trackFormat: androidx.media2.exoplayer.external.Format, trackSelectionReason: number, trackSelectionData: any, mediaStartTimeUs: number, mediaEndTimeUs: number, elapsedRealtimeMs: number, loadDurationMs: number, bytesLoaded: number): void;
							public addEventListener(handler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
							public loadError(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, uri: globalAndroid.net.Uri, responseHeaders: java.util.Map<string,java.util.List<string>>, dataType: number, trackType: number, trackFormat: androidx.media2.exoplayer.external.Format, trackSelectionReason: number, trackSelectionData: any, mediaStartTimeUs: number, mediaEndTimeUs: number, elapsedRealtimeMs: number, loadDurationMs: number, bytesLoaded: number, error: java.io.IOException, wasCanceled: boolean): void;
							public loadCanceled(loadEventInfo: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
							public upstreamDiscarded(mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
							public loadCanceled(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, uri: globalAndroid.net.Uri, responseHeaders: java.util.Map<string,java.util.List<string>>, dataType: number, elapsedRealtimeMs: number, loadDurationMs: number, bytesLoaded: number): void;
							public mediaPeriodReleased(): void;
							public loadStarted(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, dataType: number, elapsedRealtimeMs: number): void;
							public readingStarted(): void;
							public loadCompleted(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, uri: globalAndroid.net.Uri, responseHeaders: java.util.Map<string,java.util.List<string>>, dataType: number, elapsedRealtimeMs: number, loadDurationMs: number, bytesLoaded: number): void;
							public downstreamFormatChanged(mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						}
						export module EventDispatcher {
							export class ListenerAndHandler extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.MediaSourceEventListener.EventDispatcher.ListenerAndHandler>;
								public handler: globalAndroid.os.Handler;
								public listener: androidx.media2.exoplayer.external.source.MediaSourceEventListener;
								public constructor(handler: globalAndroid.os.Handler, listener: androidx.media2.exoplayer.external.source.MediaSourceEventListener);
							}
						}
						export class LoadEventInfo extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo>;
							public dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec;
							public uri: globalAndroid.net.Uri;
							public responseHeaders: java.util.Map<string,java.util.List<string>>;
							public elapsedRealtimeMs: number;
							public loadDurationMs: number;
							public bytesLoaded: number;
							public constructor(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, uri: globalAndroid.net.Uri, responseHeaders: java.util.Map<string,java.util.List<string>>, elapsedRealtimeMs: number, loadDurationMs: number, bytesLoaded: number);
						}
						export class MediaLoadData extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData>;
							public dataType: number;
							public trackType: number;
							public trackFormat: androidx.media2.exoplayer.external.Format;
							public trackSelectionReason: number;
							public trackSelectionData: any;
							public mediaStartTimeMs: number;
							public mediaEndTimeMs: number;
							public constructor(dataType: number, trackType: number, trackFormat: androidx.media2.exoplayer.external.Format, trackSelectionReason: number, trackSelectionData: any, mediaStartTimeMs: number, mediaEndTimeMs: number);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class MediaSourceFactory extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.MediaSourceFactory>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.source.MediaSourceFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setStreamKeys(list0: java.util.List<androidx.media2.exoplayer.external.offline.StreamKey>): androidx.media2.exoplayer.external.source.MediaSourceFactory;
							createMediaSource(uri0: globalAndroid.net.Uri): androidx.media2.exoplayer.external.source.MediaSource;
							getSupportedTypes(): native.Array<number>;
						});
						public constructor();
						public getSupportedTypes(): native.Array<number>;
						public createMediaSource(uri0: globalAndroid.net.Uri): androidx.media2.exoplayer.external.source.MediaSource;
						public setStreamKeys(list0: java.util.List<androidx.media2.exoplayer.external.offline.StreamKey>): androidx.media2.exoplayer.external.source.MediaSourceFactory;
					}
						export module  {
					export module MediaSourceFactory {
							export abstract class CC extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.MediaSourceFactory..CC>;
								public static setStreamKeys$$dflt$$(this0: androidx.media2.exoplayer.external.source.MediaSourceFactory, streamKeys: java.util.List<any>): androidx.media2.exoplayer.external.source.MediaSourceFactory;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class MergingMediaPeriod extends java.lang.Object implements androidx.media2.exoplayer.external.source.MediaPeriod, androidx.media2.exoplayer.external.source.MediaPeriod.Callback {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.MergingMediaPeriod>;
						public periods: native.Array<androidx.media2.exoplayer.external.source.MediaPeriod>;
						public readDiscontinuity(): number;
						public onPrepared(preparedPeriod: androidx.media2.exoplayer.external.source.MediaPeriod): void;
						public getStreamKeys(list0: java.util.List<androidx.media2.exoplayer.external.trackselection.TrackSelection>): java.util.List<androidx.media2.exoplayer.external.offline.StreamKey>;
						public discardBuffer(positionUs: number, toKeyframe: boolean): void;
						public getTrackGroups(): androidx.media2.exoplayer.external.source.TrackGroupArray;
						public prepare(callback: androidx.media2.exoplayer.external.source.MediaPeriod.Callback, positionUs: number): void;
						public onContinueLoadingRequested(ignored: androidx.media2.exoplayer.external.source.MediaPeriod): void;
						public selectTracks(selections: native.Array<androidx.media2.exoplayer.external.trackselection.TrackSelection>, mayRetainStreamFlags: native.Array<boolean>, streams: native.Array<androidx.media2.exoplayer.external.source.SampleStream>, streamResetFlags: native.Array<boolean>, positionUs: number): number;
						public getNextLoadPositionUs(): number;
						public reevaluateBuffer(positionUs: number): void;
						public continueLoading(positionUs: number): boolean;
						public getStreamKeys(list0: java.util.List<any>): java.util.List<any>;
						public constructor(compositeSequenceableLoaderFactory: androidx.media2.exoplayer.external.source.CompositeSequenceableLoaderFactory, periods: native.Array<androidx.media2.exoplayer.external.source.MediaPeriod>);
						public getBufferedPositionUs(): number;
						public seekToUs(positionUs: number): number;
						public onContinueLoadingRequested(sequenceableLoader0: any): void;
						public getAdjustedSeekPositionUs(positionUs: number, seekParameters: androidx.media2.exoplayer.external.SeekParameters): number;
						public maybeThrowPrepareError(): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class MergingMediaSource extends androidx.media2.exoplayer.external.source.CompositeMediaSource<java.lang.Integer> {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.MergingMediaSource>;
						public constructor(mediaSources: native.Array<androidx.media2.exoplayer.external.source.MediaSource>);
						public releaseSource(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						public constructor();
						public releasePeriod(mediaPeriod: androidx.media2.exoplayer.external.source.MediaPeriod): void;
						public getMediaPeriodIdForChildMediaPeriodId(id: java.lang.Integer, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId;
						public removeEventListener(eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
						public onChildSourceInfoRefreshed(id: java.lang.Integer, mediaSource: androidx.media2.exoplayer.external.source.MediaSource, timeline: androidx.media2.exoplayer.external.Timeline): void;
						public maybeThrowSourceInfoRefreshError(): void;
						public enable(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						public createPeriod(id: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, allocator: androidx.media2.exoplayer.external.upstream.Allocator, startPositionUs: number): androidx.media2.exoplayer.external.source.MediaPeriod;
						public onChildSourceInfoRefreshed(object0: any, mediaSource1: androidx.media2.exoplayer.external.source.MediaSource, timeline2: androidx.media2.exoplayer.external.Timeline): void;
						public releaseSourceInternal(): void;
						public getMediaPeriodIdForChildMediaPeriodId(id: any, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId;
						public constructor(compositeSequenceableLoaderFactory: androidx.media2.exoplayer.external.source.CompositeSequenceableLoaderFactory, mediaSources: native.Array<androidx.media2.exoplayer.external.source.MediaSource>);
						public getTag(): any;
						public prepareSourceInternal(mediaTransferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
						public prepareSource(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller, mediaTransferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
						public addEventListener(handler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
						public disable(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
					}
					export module MergingMediaSource {
						export class IllegalMergeException extends java.io.IOException {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.MergingMediaSource.IllegalMergeException>;
							public static REASON_PERIOD_COUNT_MISMATCH: number;
							public reason: number;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(reason: number);
							public constructor(message: string);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
						export module IllegalMergeException {
							export class Reason extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.MergingMediaSource.IllegalMergeException.Reason>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.source.MergingMediaSource$IllegalMergeException$Reason interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class ProgressiveMediaPeriod extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ProgressiveMediaPeriod>;
						public discardBuffer(positionUs: number, toKeyframe: boolean): void;
						public endTracks(): void;
						public onLoaderReleased(): void;
						public getTrackGroups(): androidx.media2.exoplayer.external.source.TrackGroupArray;
						public prepare(callback: androidx.media2.exoplayer.external.source.MediaPeriod.Callback, positionUs: number): void;
						public selectTracks(selections: native.Array<androidx.media2.exoplayer.external.trackselection.TrackSelection>, mayRetainStreamFlags: native.Array<boolean>, streams: native.Array<androidx.media2.exoplayer.external.source.SampleStream>, streamResetFlags: native.Array<boolean>, positionUs: number): number;
						public getNextLoadPositionUs(): number;
						public seekMap(seekMap: androidx.media2.exoplayer.external.extractor.SeekMap): void;
						public onUpstreamFormatChanged(format: androidx.media2.exoplayer.external.Format): void;
						public reevaluateBuffer(positionUs: number): void;
						public getStreamKeys(list0: java.util.List<any>): java.util.List<any>;
						public continueLoading(playbackPositionUs: number): boolean;
						public track(id: number, type: number): androidx.media2.exoplayer.external.extractor.TrackOutput;
						public getAdjustedSeekPositionUs(positionUs: number, seekParameters: androidx.media2.exoplayer.external.SeekParameters): number;
						public readDiscontinuity(): number;
						public onLoadCanceled(loadable: androidx.media2.exoplayer.external.source.ProgressiveMediaPeriod.ExtractingLoadable, elapsedRealtimeMs: number, loadDurationMs: number, released: boolean): void;
						public getStreamKeys(list0: java.util.List<androidx.media2.exoplayer.external.trackselection.TrackSelection>): java.util.List<androidx.media2.exoplayer.external.offline.StreamKey>;
						public constructor(uri: globalAndroid.net.Uri, dataSource: androidx.media2.exoplayer.external.upstream.DataSource, extractors: native.Array<androidx.media2.exoplayer.external.extractor.Extractor>, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<any>, loadErrorHandlingPolicy: androidx.media2.exoplayer.external.upstream.LoadErrorHandlingPolicy, eventDispatcher: androidx.media2.exoplayer.external.source.MediaSourceEventListener.EventDispatcher, listener: androidx.media2.exoplayer.external.source.ProgressiveMediaPeriod.Listener, allocator: androidx.media2.exoplayer.external.upstream.Allocator, customCacheKey: string, continueLoadingCheckIntervalBytes: number);
						public onLoadCompleted(loadable0: any, long1: number, long2: number): void;
						public release(): void;
						public onLoadCompleted(loadable: androidx.media2.exoplayer.external.source.ProgressiveMediaPeriod.ExtractingLoadable, elapsedRealtimeMs: number, loadDurationMs: number): void;
						public onLoadCanceled(loadable0: any, long1: number, long2: number, boolean3: boolean): void;
						public onLoadError(loadable0: any, long1: number, long2: number, iOException3: java.io.IOException, int4: number): androidx.media2.exoplayer.external.upstream.Loader.LoadErrorAction;
						public onLoadError(loadable: androidx.media2.exoplayer.external.source.ProgressiveMediaPeriod.ExtractingLoadable, elapsedRealtimeMs: number, loadDurationMs: number, error: java.io.IOException, errorCount: number): androidx.media2.exoplayer.external.upstream.Loader.LoadErrorAction;
						public getBufferedPositionUs(): number;
						public seekToUs(positionUs: number): number;
						public maybeThrowPrepareError(): void;
					}
					export module ProgressiveMediaPeriod {
						export class ExtractingLoadable extends java.lang.Object implements androidx.media2.exoplayer.external.upstream.Loader.Loadable, androidx.media2.exoplayer.external.source.IcyDataSource.Listener {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ProgressiveMediaPeriod.ExtractingLoadable>;
							public cancelLoad(): void;
							public constructor(this0: androidx.media2.exoplayer.external.source.ProgressiveMediaPeriod, uri: globalAndroid.net.Uri, dataSource: androidx.media2.exoplayer.external.upstream.DataSource, extractorHolder: androidx.media2.exoplayer.external.source.ProgressiveMediaPeriod.ExtractorHolder, extractorOutput: androidx.media2.exoplayer.external.extractor.ExtractorOutput, loadCondition: androidx.media2.exoplayer.external.util.ConditionVariable);
							public load(): void;
							public onIcyMetadata(metadata: androidx.media2.exoplayer.external.util.ParsableByteArray): void;
						}
						export class ExtractorHolder extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ProgressiveMediaPeriod.ExtractorHolder>;
							public constructor(extractors: native.Array<androidx.media2.exoplayer.external.extractor.Extractor>);
							public selectExtractor(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, output: androidx.media2.exoplayer.external.extractor.ExtractorOutput, uri: globalAndroid.net.Uri): androidx.media2.exoplayer.external.extractor.Extractor;
							public release(): void;
						}
						export class Listener extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ProgressiveMediaPeriod.Listener>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.source.ProgressiveMediaPeriod$Listener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onSourceInfoRefreshed(long0: number, boolean1: boolean): void;
							});
							public constructor();
							public onSourceInfoRefreshed(long0: number, boolean1: boolean): void;
						}
						export class PreparedState extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ProgressiveMediaPeriod.PreparedState>;
							public seekMap: androidx.media2.exoplayer.external.extractor.SeekMap;
							public tracks: androidx.media2.exoplayer.external.source.TrackGroupArray;
							public trackIsAudioVideoFlags: native.Array<boolean>;
							public trackEnabledStates: native.Array<boolean>;
							public trackNotifiedDownstreamFormats: native.Array<boolean>;
							public constructor(seekMap: androidx.media2.exoplayer.external.extractor.SeekMap, tracks: androidx.media2.exoplayer.external.source.TrackGroupArray, trackIsAudioVideoFlags: native.Array<boolean>);
						}
						export class SampleStreamImpl extends java.lang.Object implements androidx.media2.exoplayer.external.source.SampleStream {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ProgressiveMediaPeriod.SampleStreamImpl>;
							public skipData(positionUs: number): number;
							public isReady(): boolean;
							public constructor(param0: androidx.media2.exoplayer.external.source.ProgressiveMediaPeriod, track: number);
							public maybeThrowError(): void;
							public readData(formatHolder: androidx.media2.exoplayer.external.FormatHolder, buffer: androidx.media2.exoplayer.external.decoder.DecoderInputBuffer, formatRequired: boolean): number;
						}
						export class TrackId extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ProgressiveMediaPeriod.TrackId>;
							public id: number;
							public isIcyTrack: boolean;
							public hashCode(): number;
							public equals(obj: any): boolean;
							public constructor(id: number, isIcyTrack: boolean);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class ProgressiveMediaSource extends androidx.media2.exoplayer.external.source.BaseMediaSource implements androidx.media2.exoplayer.external.source.ProgressiveMediaPeriod.Listener {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ProgressiveMediaSource>;
						public static DEFAULT_LOADING_CHECK_INTERVAL_BYTES: number;
						public releaseSource(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						public releasePeriod(mediaPeriod: androidx.media2.exoplayer.external.source.MediaPeriod): void;
						public removeEventListener(eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
						public prepareSourceInternal(transferListener0: androidx.media2.exoplayer.external.upstream.TransferListener): void;
						public maybeThrowSourceInfoRefreshError(): void;
						public enable(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						public createPeriod(id: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, allocator: androidx.media2.exoplayer.external.upstream.Allocator, startPositionUs: number): androidx.media2.exoplayer.external.source.MediaPeriod;
						public releaseSourceInternal(): void;
						public getTag(): any;
						public prepareSourceInternal(mediaTransferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
						public prepareSource(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller, mediaTransferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
						public addEventListener(handler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
						public disable(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						public onSourceInfoRefreshed(durationUs: number, isSeekable: boolean): void;
					}
					export module ProgressiveMediaSource {
						export class Factory extends java.lang.Object implements androidx.media2.exoplayer.external.source.MediaSourceFactory {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ProgressiveMediaSource.Factory>;
							/** @deprecated */
							public setExtractorsFactory(extractorsFactory: androidx.media2.exoplayer.external.extractor.ExtractorsFactory): androidx.media2.exoplayer.external.source.ProgressiveMediaSource.Factory;
							public setCustomCacheKey(customCacheKey: string): androidx.media2.exoplayer.external.source.ProgressiveMediaSource.Factory;
							public setTag(tag: any): androidx.media2.exoplayer.external.source.ProgressiveMediaSource.Factory;
							public constructor(dataSourceFactory: androidx.media2.exoplayer.external.upstream.DataSource.Factory, extractorsFactory: androidx.media2.exoplayer.external.extractor.ExtractorsFactory);
							public setDrmSessionManager(drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<any>): androidx.media2.exoplayer.external.source.ProgressiveMediaSource.Factory;
							public setStreamKeys(list0: java.util.List<any>): androidx.media2.exoplayer.external.source.MediaSourceFactory;
							public createMediaSource(uri: globalAndroid.net.Uri): androidx.media2.exoplayer.external.source.ProgressiveMediaSource;
							public createMediaSource(uri0: globalAndroid.net.Uri): androidx.media2.exoplayer.external.source.MediaSource;
							public constructor(dataSourceFactory: androidx.media2.exoplayer.external.upstream.DataSource.Factory);
							public setLoadErrorHandlingPolicy(loadErrorHandlingPolicy: androidx.media2.exoplayer.external.upstream.LoadErrorHandlingPolicy): androidx.media2.exoplayer.external.source.ProgressiveMediaSource.Factory;
							public setContinueLoadingCheckIntervalBytes(continueLoadingCheckIntervalBytes: number): androidx.media2.exoplayer.external.source.ProgressiveMediaSource.Factory;
							public setStreamKeys(list0: java.util.List<androidx.media2.exoplayer.external.offline.StreamKey>): androidx.media2.exoplayer.external.source.MediaSourceFactory;
							public getSupportedTypes(): native.Array<number>;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class SampleMetadataQueue extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.SampleMetadataQueue>;
						public getWriteIndex(): number;
						public getReadIndex(): number;
						public peekSourceId(): number;
						public format(format: androidx.media2.exoplayer.external.Format): boolean;
						public getFirstTimestampUs(): number;
						public peekNext(downstreamFormat: androidx.media2.exoplayer.external.Format): number;
						public getUpstreamFormat(): androidx.media2.exoplayer.external.Format;
						public getFirstIndex(): number;
						public read(formatHolder: androidx.media2.exoplayer.external.FormatHolder, buffer: androidx.media2.exoplayer.external.decoder.DecoderInputBuffer, formatRequired: boolean, allowOnlyClearBuffers: boolean, loadingFinished: boolean, downstreamFormat: androidx.media2.exoplayer.external.Format, extrasHolder: androidx.media2.exoplayer.external.source.SampleMetadataQueue.SampleExtrasHolder): number;
						public rewind(): void;
						public getLargestQueuedTimestampUs(): number;
						public setReadPosition(sampleIndex: number): boolean;
						public attemptSplice(timeUs: number): boolean;
						public sourceId(sourceId: number): void;
						public advanceTo(timeUs: number, toKeyframe: boolean, allowTimeBeyondBuffer: boolean): number;
						public advanceToEnd(): number;
						public constructor();
						public discardToRead(): number;
						public hasNextSample(): boolean;
						public discardUpstreamSamples(discardFromIndex: number): number;
						public isLastSampleQueued(): boolean;
						public discardTo(timeUs: number, toKeyframe: boolean, stopAtReadPosition: boolean): number;
						public discardToEnd(): number;
						public reset(resetUpstreamFormat: boolean): void;
						public commitSample(timeUs: number, sampleFlags: number, offset: number, size: number, cryptoData: androidx.media2.exoplayer.external.extractor.TrackOutput.CryptoData): void;
					}
					export module SampleMetadataQueue {
						export class SampleExtrasHolder extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.SampleMetadataQueue.SampleExtrasHolder>;
							public size: number;
							public offset: number;
							public cryptoData: androidx.media2.exoplayer.external.extractor.TrackOutput.CryptoData;
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class SampleQueue extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.TrackOutput {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.SampleQueue>;
						public static PEEK_RESULT_NOTHING: number;
						public static PEEK_RESULT_FORMAT: number;
						public static PEEK_RESULT_BUFFER_CLEAR: number;
						public static PEEK_RESULT_BUFFER_ENCRYPTED: number;
						public static ADVANCE_FAILED: number;
						public getWriteIndex(): number;
						public getReadIndex(): number;
						public peekSourceId(): number;
						public getFirstTimestampUs(): number;
						public constructor(allocator: androidx.media2.exoplayer.external.upstream.Allocator);
						public getUpstreamFormat(): androidx.media2.exoplayer.external.Format;
						public getFirstIndex(): number;
						public rewind(): void;
						public getLargestQueuedTimestampUs(): number;
						public setUpstreamFormatChangeListener(listener: androidx.media2.exoplayer.external.source.SampleQueue.UpstreamFormatChangedListener): void;
						public discardTo(timeUs: number, toKeyframe: boolean, stopAtReadPosition: boolean): void;
						public peekNext(): number;
						public setReadPosition(sampleIndex: number): boolean;
						public discardToRead(): void;
						public sourceId(sourceId: number): void;
						public advanceTo(timeUs: number, toKeyframe: boolean, allowTimeBeyondBuffer: boolean): number;
						public advanceToEnd(): number;
						public hasNextSample(): boolean;
						public sampleMetadata(timeUs: number, flags: number, size: number, offset: number, cryptoData: androidx.media2.exoplayer.external.extractor.TrackOutput.CryptoData): void;
						public isLastSampleQueued(): boolean;
						public reset(resetUpstreamFormat: boolean): void;
						public read(formatHolder: androidx.media2.exoplayer.external.FormatHolder, buffer: androidx.media2.exoplayer.external.decoder.DecoderInputBuffer, formatRequired: boolean, allowOnlyClearBuffers: boolean, loadingFinished: boolean, decodeOnlyUntilUs: number): number;
						public format(format: androidx.media2.exoplayer.external.Format): void;
						public discardToEnd(): void;
						public sampleData(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, length: number, allowEndOfInput: boolean): number;
						public sampleData(buffer: androidx.media2.exoplayer.external.util.ParsableByteArray, length: number): void;
						public splice(): void;
						public setSampleOffsetUs(sampleOffsetUs: number): void;
						public discardUpstreamSamples(discardFromIndex: number): void;
						public reset(): void;
					}
					export module SampleQueue {
						export class AllocationNode extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.SampleQueue.AllocationNode>;
							public startPosition: number;
							public endPosition: number;
							public wasInitialized: boolean;
							public allocation: androidx.media2.exoplayer.external.upstream.Allocation;
							public next: androidx.media2.exoplayer.external.source.SampleQueue.AllocationNode;
							public constructor(startPosition: number, allocationLength: number);
							public translateOffset(absolutePosition: number): number;
							public clear(): androidx.media2.exoplayer.external.source.SampleQueue.AllocationNode;
							public initialize(allocation: androidx.media2.exoplayer.external.upstream.Allocation, next: androidx.media2.exoplayer.external.source.SampleQueue.AllocationNode): void;
						}
						export class PeekResult extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.SampleQueue.PeekResult>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.source.SampleQueue$PeekResult interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
						export class UpstreamFormatChangedListener extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.SampleQueue.UpstreamFormatChangedListener>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.source.SampleQueue$UpstreamFormatChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onUpstreamFormatChanged(format0: androidx.media2.exoplayer.external.Format): void;
							});
							public constructor();
							public onUpstreamFormatChanged(format0: androidx.media2.exoplayer.external.Format): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class SampleStream extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.SampleStream>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.source.SampleStream interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							isReady(): boolean;
							maybeThrowError(): void;
							readData(formatHolder0: androidx.media2.exoplayer.external.FormatHolder, decoderInputBuffer1: androidx.media2.exoplayer.external.decoder.DecoderInputBuffer, boolean2: boolean): number;
							skipData(long0: number): number;
						});
						public constructor();
						public isReady(): boolean;
						public maybeThrowError(): void;
						public skipData(long0: number): number;
						public readData(formatHolder0: androidx.media2.exoplayer.external.FormatHolder, decoderInputBuffer1: androidx.media2.exoplayer.external.decoder.DecoderInputBuffer, boolean2: boolean): number;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class SequenceableLoader extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.SequenceableLoader>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.source.SequenceableLoader interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getBufferedPositionUs(): number;
							getNextLoadPositionUs(): number;
							continueLoading(long0: number): boolean;
							reevaluateBuffer(long0: number): void;
						});
						public constructor();
						public reevaluateBuffer(long0: number): void;
						public getNextLoadPositionUs(): number;
						public continueLoading(long0: number): boolean;
						public getBufferedPositionUs(): number;
					}
					export module SequenceableLoader {
						export class Callback<T>  extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.SequenceableLoader.Callback<any>>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.source.SequenceableLoader$Callback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onContinueLoadingRequested(sequenceableLoader0: T): void;
							});
							public constructor();
							public onContinueLoadingRequested(sequenceableLoader0: T): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class ShuffleOrder extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ShuffleOrder>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.source.ShuffleOrder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getLength(): number;
							getNextIndex(int0: number): number;
							getPreviousIndex(int0: number): number;
							getLastIndex(): number;
							getFirstIndex(): number;
							cloneAndInsert(int0: number, int1: number): androidx.media2.exoplayer.external.source.ShuffleOrder;
							cloneAndRemove(int0: number, int1: number): androidx.media2.exoplayer.external.source.ShuffleOrder;
							cloneAndClear(): androidx.media2.exoplayer.external.source.ShuffleOrder;
						});
						public constructor();
						public cloneAndClear(): androidx.media2.exoplayer.external.source.ShuffleOrder;
						public getLastIndex(): number;
						public cloneAndInsert(int0: number, int1: number): androidx.media2.exoplayer.external.source.ShuffleOrder;
						public getLength(): number;
						public getNextIndex(int0: number): number;
						public getFirstIndex(): number;
						public cloneAndRemove(int0: number, int1: number): androidx.media2.exoplayer.external.source.ShuffleOrder;
						public getPreviousIndex(int0: number): number;
					}
					export module ShuffleOrder {
						export class DefaultShuffleOrder extends java.lang.Object implements androidx.media2.exoplayer.external.source.ShuffleOrder {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ShuffleOrder.DefaultShuffleOrder>;
							public getLength(): number;
							public constructor(length: number);
							public cloneAndRemove(indexFrom: number, indexToExclusive: number): androidx.media2.exoplayer.external.source.ShuffleOrder;
							public getLastIndex(): number;
							public constructor(length: number, randomSeed: number);
							public getNextIndex(index: number): number;
							public getFirstIndex(): number;
							public constructor(shuffledIndices: native.Array<number>, randomSeed: number);
							public getPreviousIndex(index: number): number;
							public cloneAndInsert(insertionIndex: number, insertionCount: number): androidx.media2.exoplayer.external.source.ShuffleOrder;
							public cloneAndClear(): androidx.media2.exoplayer.external.source.ShuffleOrder;
						}
						export class UnshuffledShuffleOrder extends java.lang.Object implements androidx.media2.exoplayer.external.source.ShuffleOrder {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ShuffleOrder.UnshuffledShuffleOrder>;
							public getLength(): number;
							public constructor(length: number);
							public cloneAndRemove(indexFrom: number, indexToExclusive: number): androidx.media2.exoplayer.external.source.ShuffleOrder;
							public getLastIndex(): number;
							public getNextIndex(index: number): number;
							public getFirstIndex(): number;
							public getPreviousIndex(index: number): number;
							public cloneAndInsert(insertionIndex: number, insertionCount: number): androidx.media2.exoplayer.external.source.ShuffleOrder;
							public cloneAndClear(): androidx.media2.exoplayer.external.source.ShuffleOrder;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class SilenceMediaSource extends androidx.media2.exoplayer.external.source.BaseMediaSource {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.SilenceMediaSource>;
						public releaseSource(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						public constructor();
						public constructor(durationUs: number);
						public releasePeriod(mediaPeriod: androidx.media2.exoplayer.external.source.MediaPeriod): void;
						public removeEventListener(eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
						public prepareSourceInternal(transferListener0: androidx.media2.exoplayer.external.upstream.TransferListener): void;
						public maybeThrowSourceInfoRefreshError(): void;
						public enable(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						public createPeriod(id: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, allocator: androidx.media2.exoplayer.external.upstream.Allocator, startPositionUs: number): androidx.media2.exoplayer.external.source.MediaPeriod;
						public releaseSourceInternal(): void;
						public getTag(): any;
						public prepareSourceInternal(mediaTransferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
						public prepareSource(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller, mediaTransferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
						public addEventListener(handler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
						public disable(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
					}
					export module SilenceMediaSource {
						export class SilenceMediaPeriod extends java.lang.Object implements androidx.media2.exoplayer.external.source.MediaPeriod {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.SilenceMediaSource.SilenceMediaPeriod>;
							public constructor(durationUs: number);
							public reevaluateBuffer(positionUs: number): void;
							public seekToUs(positionUs: number): number;
							public prepare(callback: androidx.media2.exoplayer.external.source.MediaPeriod.Callback, positionUs: number): void;
							public maybeThrowPrepareError(): void;
							public getBufferedPositionUs(): number;
							public discardBuffer(positionUs: number, toKeyframe: boolean): void;
							public getNextLoadPositionUs(): number;
							public continueLoading(positionUs: number): boolean;
							public getStreamKeys(list0: java.util.List<androidx.media2.exoplayer.external.trackselection.TrackSelection>): java.util.List<androidx.media2.exoplayer.external.offline.StreamKey>;
							public selectTracks(selections: native.Array<androidx.media2.exoplayer.external.trackselection.TrackSelection>, mayRetainStreamFlags: native.Array<boolean>, streams: native.Array<androidx.media2.exoplayer.external.source.SampleStream>, streamResetFlags: native.Array<boolean>, positionUs: number): number;
							public readDiscontinuity(): number;
							public getAdjustedSeekPositionUs(positionUs: number, seekParameters: androidx.media2.exoplayer.external.SeekParameters): number;
							public getStreamKeys(list0: java.util.List<any>): java.util.List<any>;
							public getTrackGroups(): androidx.media2.exoplayer.external.source.TrackGroupArray;
						}
						export class SilenceSampleStream extends java.lang.Object implements androidx.media2.exoplayer.external.source.SampleStream {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.SilenceMediaSource.SilenceSampleStream>;
							public constructor(durationUs: number);
							public seekTo(positionUs: number): void;
							public skipData(positionUs: number): number;
							public isReady(): boolean;
							public maybeThrowError(): void;
							public readData(formatHolder: androidx.media2.exoplayer.external.FormatHolder, buffer: androidx.media2.exoplayer.external.decoder.DecoderInputBuffer, formatRequired: boolean): number;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class SinglePeriodTimeline extends androidx.media2.exoplayer.external.Timeline {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.SinglePeriodTimeline>;
						public constructor(periodDurationUs: number, windowDurationUs: number, windowPositionInPeriodUs: number, windowDefaultStartPositionUs: number, isSeekable: boolean, isDynamic: boolean, manifest: any, tag: any);
						public constructor(durationUs: number, isSeekable: boolean, isDynamic: boolean, manifest: any, tag: any);
						public constructor();
						public getPeriod(periodIndex: number, period: androidx.media2.exoplayer.external.Timeline.Period, setIds: boolean): androidx.media2.exoplayer.external.Timeline.Period;
						public getIndexOfPeriod(uid: any): number;
						public getWindowCount(): number;
						public getPeriod(int0: number, period1: androidx.media2.exoplayer.external.Timeline.Period, boolean2: boolean): androidx.media2.exoplayer.external.Timeline.Period;
						/** @deprecated */
						public getWindow(windowIndex: number, window: androidx.media2.exoplayer.external.Timeline.Window, setTag: boolean): androidx.media2.exoplayer.external.Timeline.Window;
						public getWindow(windowIndex: number, window: androidx.media2.exoplayer.external.Timeline.Window): androidx.media2.exoplayer.external.Timeline.Window;
						/** @deprecated */
						public getWindow(windowIndex: number, window: androidx.media2.exoplayer.external.Timeline.Window, setTag: boolean, defaultPositionProjectionUs: number): androidx.media2.exoplayer.external.Timeline.Window;
						public constructor(presentationStartTimeMs: number, windowStartTimeMs: number, periodDurationUs: number, windowDurationUs: number, windowPositionInPeriodUs: number, windowDefaultStartPositionUs: number, isSeekable: boolean, isDynamic: boolean, manifest: any, tag: any);
						public getWindow(windowIndex: number, window: androidx.media2.exoplayer.external.Timeline.Window, defaultPositionProjectionUs: number): androidx.media2.exoplayer.external.Timeline.Window;
						public getUidOfPeriod(periodIndex: number): any;
						public getPeriod(periodIndex: number, period: androidx.media2.exoplayer.external.Timeline.Period): androidx.media2.exoplayer.external.Timeline.Period;
						public getIndexOfPeriod(object0: any): number;
						public constructor(durationUs: number, isSeekable: boolean, isDynamic: boolean);
						public getPeriodCount(): number;
						public getUidOfPeriod(int0: number): any;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class SingleSampleMediaPeriod extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.SingleSampleMediaPeriod>;
						public readDiscontinuity(): number;
						public getStreamKeys(list0: java.util.List<androidx.media2.exoplayer.external.trackselection.TrackSelection>): java.util.List<androidx.media2.exoplayer.external.offline.StreamKey>;
						public discardBuffer(positionUs: number, toKeyframe: boolean): void;
						public onLoadCompleted(loadable0: any, long1: number, long2: number): void;
						public constructor(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, dataSourceFactory: androidx.media2.exoplayer.external.upstream.DataSource.Factory, transferListener: androidx.media2.exoplayer.external.upstream.TransferListener, format: androidx.media2.exoplayer.external.Format, durationUs: number, loadErrorHandlingPolicy: androidx.media2.exoplayer.external.upstream.LoadErrorHandlingPolicy, eventDispatcher: androidx.media2.exoplayer.external.source.MediaSourceEventListener.EventDispatcher, treatLoadErrorsAsEndOfStream: boolean);
						public release(): void;
						public getTrackGroups(): androidx.media2.exoplayer.external.source.TrackGroupArray;
						public prepare(callback: androidx.media2.exoplayer.external.source.MediaPeriod.Callback, positionUs: number): void;
						public onLoadCanceled(loadable: androidx.media2.exoplayer.external.source.SingleSampleMediaPeriod.SourceLoadable, elapsedRealtimeMs: number, loadDurationMs: number, released: boolean): void;
						public onLoadCanceled(loadable0: any, long1: number, long2: number, boolean3: boolean): void;
						public selectTracks(selections: native.Array<androidx.media2.exoplayer.external.trackselection.TrackSelection>, mayRetainStreamFlags: native.Array<boolean>, streams: native.Array<androidx.media2.exoplayer.external.source.SampleStream>, streamResetFlags: native.Array<boolean>, positionUs: number): number;
						public getNextLoadPositionUs(): number;
						public onLoadError(loadable0: any, long1: number, long2: number, iOException3: java.io.IOException, int4: number): androidx.media2.exoplayer.external.upstream.Loader.LoadErrorAction;
						public reevaluateBuffer(positionUs: number): void;
						public continueLoading(positionUs: number): boolean;
						public onLoadError(loadable: androidx.media2.exoplayer.external.source.SingleSampleMediaPeriod.SourceLoadable, elapsedRealtimeMs: number, loadDurationMs: number, error: java.io.IOException, errorCount: number): androidx.media2.exoplayer.external.upstream.Loader.LoadErrorAction;
						public getStreamKeys(list0: java.util.List<any>): java.util.List<any>;
						public getBufferedPositionUs(): number;
						public seekToUs(positionUs: number): number;
						public onLoadCompleted(loadable: androidx.media2.exoplayer.external.source.SingleSampleMediaPeriod.SourceLoadable, elapsedRealtimeMs: number, loadDurationMs: number): void;
						public getAdjustedSeekPositionUs(positionUs: number, seekParameters: androidx.media2.exoplayer.external.SeekParameters): number;
						public maybeThrowPrepareError(): void;
					}
					export module SingleSampleMediaPeriod {
						export class SampleStreamImpl extends java.lang.Object implements androidx.media2.exoplayer.external.source.SampleStream {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.SingleSampleMediaPeriod.SampleStreamImpl>;
							public skipData(positionUs: number): number;
							public isReady(): boolean;
							public readData(formatHolder: androidx.media2.exoplayer.external.FormatHolder, buffer: androidx.media2.exoplayer.external.decoder.DecoderInputBuffer, requireFormat: boolean): number;
							public maybeThrowError(): void;
							public reset(): void;
						}
						export class SourceLoadable extends java.lang.Object implements androidx.media2.exoplayer.external.upstream.Loader.Loadable {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.SingleSampleMediaPeriod.SourceLoadable>;
							public dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec;
							public cancelLoad(): void;
							public constructor(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, dataSource: androidx.media2.exoplayer.external.upstream.DataSource);
							public load(): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class SingleSampleMediaSource extends androidx.media2.exoplayer.external.source.BaseMediaSource {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.SingleSampleMediaSource>;
						public releaseSource(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						public constructor();
						public releasePeriod(mediaPeriod: androidx.media2.exoplayer.external.source.MediaPeriod): void;
						public removeEventListener(eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
						public prepareSourceInternal(transferListener0: androidx.media2.exoplayer.external.upstream.TransferListener): void;
						public maybeThrowSourceInfoRefreshError(): void;
						/** @deprecated */
						public constructor(uri: globalAndroid.net.Uri, dataSourceFactory: androidx.media2.exoplayer.external.upstream.DataSource.Factory, format: androidx.media2.exoplayer.external.Format, durationUs: number, minLoadableRetryCount: number);
						public enable(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						public createPeriod(id: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, allocator: androidx.media2.exoplayer.external.upstream.Allocator, startPositionUs: number): androidx.media2.exoplayer.external.source.MediaPeriod;
						public releaseSourceInternal(): void;
						/** @deprecated */
						public constructor(uri: globalAndroid.net.Uri, dataSourceFactory: androidx.media2.exoplayer.external.upstream.DataSource.Factory, format: androidx.media2.exoplayer.external.Format, durationUs: number);
						public getTag(): any;
						public prepareSourceInternal(mediaTransferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
						public prepareSource(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller, mediaTransferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
						public addEventListener(handler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
						/** @deprecated */
						public constructor(uri: globalAndroid.net.Uri, dataSourceFactory: androidx.media2.exoplayer.external.upstream.DataSource.Factory, format: androidx.media2.exoplayer.external.Format, durationUs: number, minLoadableRetryCount: number, eventHandler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.source.SingleSampleMediaSource.EventListener, eventSourceId: number, treatLoadErrorsAsEndOfStream: boolean);
						public disable(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
					}
					export module SingleSampleMediaSource {
						export class EventListener extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.SingleSampleMediaSource.EventListener>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.source.SingleSampleMediaSource$EventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onLoadError(int0: number, iOException1: java.io.IOException): void;
							});
							public constructor();
							public onLoadError(int0: number, iOException1: java.io.IOException): void;
						}
						export class EventListenerWrapper extends androidx.media2.exoplayer.external.source.DefaultMediaSourceEventListener {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.SingleSampleMediaSource.EventListenerWrapper>;
							public constructor();
							public onLoadCanceled(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventInfo: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
							public onUpstreamDiscarded(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
							public onLoadCompleted(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventInfo: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
							public onReadingStarted(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): void;
							public onLoadError(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventInfo: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData, error: java.io.IOException, wasCanceled: boolean): void;
							public onDownstreamFormatChanged(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
							public onMediaPeriodCreated(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): void;
							public onMediaPeriodReleased(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): void;
							public constructor(eventListener: androidx.media2.exoplayer.external.source.SingleSampleMediaSource.EventListener, eventSourceId: number);
							public onLoadStarted(windowIndex: number, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, loadEventInfo: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						}
						export class Factory extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.SingleSampleMediaSource.Factory>;
							public setLoadErrorHandlingPolicy(loadErrorHandlingPolicy: androidx.media2.exoplayer.external.upstream.LoadErrorHandlingPolicy): androidx.media2.exoplayer.external.source.SingleSampleMediaSource.Factory;
							public setTreatLoadErrorsAsEndOfStream(treatLoadErrorsAsEndOfStream: boolean): androidx.media2.exoplayer.external.source.SingleSampleMediaSource.Factory;
							public constructor(dataSourceFactory: androidx.media2.exoplayer.external.upstream.DataSource.Factory);
							/** @deprecated */
							public createMediaSource(uri: globalAndroid.net.Uri, format: androidx.media2.exoplayer.external.Format, durationUs: number, eventHandler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): androidx.media2.exoplayer.external.source.SingleSampleMediaSource;
							/** @deprecated */
							public setMinLoadableRetryCount(minLoadableRetryCount: number): androidx.media2.exoplayer.external.source.SingleSampleMediaSource.Factory;
							public setTag(tag: any): androidx.media2.exoplayer.external.source.SingleSampleMediaSource.Factory;
							public createMediaSource(uri: globalAndroid.net.Uri, format: androidx.media2.exoplayer.external.Format, durationUs: number): androidx.media2.exoplayer.external.source.SingleSampleMediaSource;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class TrackGroup extends java.lang.Object implements globalAndroid.os.Parcelable {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.TrackGroup>;
						public length: number;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.source.TrackGroup>;
						public equals(obj: any): boolean;
						public describeContents(): number;
						public indexOf(format: androidx.media2.exoplayer.external.Format): number;
						public hashCode(): number;
						public constructor(formats: native.Array<androidx.media2.exoplayer.external.Format>);
						public getFormat(index: number): androidx.media2.exoplayer.external.Format;
						public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class TrackGroupArray extends java.lang.Object implements globalAndroid.os.Parcelable {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.TrackGroupArray>;
						public static EMPTY: androidx.media2.exoplayer.external.source.TrackGroupArray;
						public length: number;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.source.TrackGroupArray>;
						public equals(obj: any): boolean;
						public describeContents(): number;
						public indexOf(group: androidx.media2.exoplayer.external.source.TrackGroup): number;
						public get(index: number): androidx.media2.exoplayer.external.source.TrackGroup;
						public isEmpty(): boolean;
						public hashCode(): number;
						public constructor(trackGroups: native.Array<androidx.media2.exoplayer.external.source.TrackGroup>);
						public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export class UnrecognizedInputFormatException extends androidx.media2.exoplayer.external.ParserException {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.source.UnrecognizedInputFormatException>;
						public uri: globalAndroid.net.Uri;
						public constructor();
						public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						public constructor(message: string, uri: globalAndroid.net.Uri);
						public constructor(cause: java.lang.Throwable);
						public constructor(message: string, cause: java.lang.Throwable);
						public constructor(message: string);
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module ads {
						export class AdPlaybackState extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ads.AdPlaybackState>;
							public static AD_STATE_UNAVAILABLE: number;
							public static AD_STATE_AVAILABLE: number;
							public static AD_STATE_SKIPPED: number;
							public static AD_STATE_PLAYED: number;
							public static AD_STATE_ERROR: number;
							public static NONE: androidx.media2.exoplayer.external.source.ads.AdPlaybackState;
							public adGroupCount: number;
							public adGroupTimesUs: native.Array<number>;
							public adGroups: native.Array<androidx.media2.exoplayer.external.source.ads.AdPlaybackState.AdGroup>;
							public adResumePositionUs: number;
							public contentDurationUs: number;
							public hashCode(): number;
							public equals(obj: any): boolean;
							public withAdUri(adGroupIndex: number, adIndexInAdGroup: number, uri: globalAndroid.net.Uri): androidx.media2.exoplayer.external.source.ads.AdPlaybackState;
							public withAdCount(adGroupIndex: number, adCount: number): androidx.media2.exoplayer.external.source.ads.AdPlaybackState;
							public withSkippedAdGroup(adGroupIndex: number): androidx.media2.exoplayer.external.source.ads.AdPlaybackState;
							public getAdGroupIndexForPositionUs(positionUs: number): number;
							public constructor(adGroupTimesUs: native.Array<number>);
							public withSkippedAd(adGroupIndex: number, adIndexInAdGroup: number): androidx.media2.exoplayer.external.source.ads.AdPlaybackState;
							public withAdDurationsUs(adDurationUs: native.Array<native.Array<number>>): androidx.media2.exoplayer.external.source.ads.AdPlaybackState;
							public withPlayedAd(adGroupIndex: number, adIndexInAdGroup: number): androidx.media2.exoplayer.external.source.ads.AdPlaybackState;
							public withContentDurationUs(contentDurationUs: number): androidx.media2.exoplayer.external.source.ads.AdPlaybackState;
							public equals(o: any): boolean;
							public withAdResumePositionUs(adResumePositionUs: number): androidx.media2.exoplayer.external.source.ads.AdPlaybackState;
							public withAdLoadError(adGroupIndex: number, adIndexInAdGroup: number): androidx.media2.exoplayer.external.source.ads.AdPlaybackState;
							public getAdGroupIndexAfterPositionUs(positionUs: number, periodDurationUs: number): number;
						}
						export module AdPlaybackState {
							export class AdGroup extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ads.AdPlaybackState.AdGroup>;
								public count: number;
								public uris: native.Array<globalAndroid.net.Uri>;
								public states: native.Array<number>;
								public durationsUs: native.Array<number>;
								public getNextAdIndexToPlay(lastPlayedAdIndex: number): number;
								public withAllAdsSkipped(): androidx.media2.exoplayer.external.source.ads.AdPlaybackState.AdGroup;
								public equals(obj: any): boolean;
								public withAdDurationsUs(durationsUs: native.Array<number>): androidx.media2.exoplayer.external.source.ads.AdPlaybackState.AdGroup;
								public withAdState(state: number, index: number): androidx.media2.exoplayer.external.source.ads.AdPlaybackState.AdGroup;
								public withAdCount(count: number): androidx.media2.exoplayer.external.source.ads.AdPlaybackState.AdGroup;
								public getFirstAdIndexToPlay(): number;
								public hasUnplayedAds(): boolean;
								public constructor();
								public equals(o: any): boolean;
								public hashCode(): number;
								public withAdUri(uri: globalAndroid.net.Uri, index: number): androidx.media2.exoplayer.external.source.ads.AdPlaybackState.AdGroup;
							}
							export class AdState extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ads.AdPlaybackState.AdState>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.source.ads.AdPlaybackState$AdState interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module ads {
						export class AdsLoader extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ads.AdsLoader>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.source.ads.AdsLoader interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								setPlayer(player0: androidx.media2.exoplayer.external.Player): void;
								release(): void;
								setSupportedContentTypes(ints0: native.Array<number>): void;
								start(eventListener0: androidx.media2.exoplayer.external.source.ads.AdsLoader.EventListener, adViewProvider1: androidx.media2.exoplayer.external.source.ads.AdsLoader.AdViewProvider): void;
								stop(): void;
								handlePrepareError(int0: number, int1: number, iOException2: java.io.IOException): void;
							});
							public constructor();
							public setPlayer(player0: androidx.media2.exoplayer.external.Player): void;
							public handlePrepareError(int0: number, int1: number, iOException2: java.io.IOException): void;
							public stop(): void;
							public start(eventListener0: androidx.media2.exoplayer.external.source.ads.AdsLoader.EventListener, adViewProvider1: androidx.media2.exoplayer.external.source.ads.AdsLoader.AdViewProvider): void;
							public release(): void;
							public setSupportedContentTypes(ints0: native.Array<number>): void;
						}
						export module AdsLoader {
							export class AdViewProvider extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ads.AdsLoader.AdViewProvider>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.source.ads.AdsLoader$AdViewProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									getAdViewGroup(): globalAndroid.view.ViewGroup;
									getAdOverlayViews(): native.Array<globalAndroid.view.View>;
								});
								public constructor();
								public getAdViewGroup(): globalAndroid.view.ViewGroup;
								public getAdOverlayViews(): native.Array<globalAndroid.view.View>;
							}
							export class EventListener extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ads.AdsLoader.EventListener>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.source.ads.AdsLoader$EventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									onAdPlaybackState(adPlaybackState0: androidx.media2.exoplayer.external.source.ads.AdPlaybackState): void;
									onAdLoadError(adLoadException0: androidx.media2.exoplayer.external.source.ads.AdsMediaSource.AdLoadException, dataSpec1: androidx.media2.exoplayer.external.upstream.DataSpec): void;
									onAdClicked(): void;
									onAdTapped(): void;
								});
								public constructor();
								public onAdPlaybackState(adPlaybackState0: androidx.media2.exoplayer.external.source.ads.AdPlaybackState): void;
								public onAdClicked(): void;
								public onAdTapped(): void;
								public onAdLoadError(adLoadException0: androidx.media2.exoplayer.external.source.ads.AdsMediaSource.AdLoadException, dataSpec1: androidx.media2.exoplayer.external.upstream.DataSpec): void;
							}
								export module  {
							export module EventListener {
									export abstract class CC extends java.lang.Object {
										public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ads.AdsLoader.EventListener..CC>;
										public static onAdPlaybackState$$dflt$$(this0: androidx.media2.exoplayer.external.source.ads.AdsLoader.EventListener, adPlaybackState: androidx.media2.exoplayer.external.source.ads.AdPlaybackState): void;
										public static onAdLoadError$$dflt$$(this0: androidx.media2.exoplayer.external.source.ads.AdsLoader.EventListener, error: androidx.media2.exoplayer.external.source.ads.AdsMediaSource.AdLoadException, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec): void;
										public static onAdTapped$$dflt$$(this0: androidx.media2.exoplayer.external.source.ads.AdsLoader.EventListener): void;
										public static onAdClicked$$dflt$$(this0: androidx.media2.exoplayer.external.source.ads.AdsLoader.EventListener): void;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module ads {
						export class AdsMediaSource extends androidx.media2.exoplayer.external.source.CompositeMediaSource<androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId> {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ads.AdsMediaSource>;
							public constructor();
							public removeEventListener(eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
							public prepareSource(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller, mediaTransferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
							public createPeriod(id: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, allocator: androidx.media2.exoplayer.external.upstream.Allocator, startPositionUs: number): androidx.media2.exoplayer.external.source.MediaPeriod;
							public onChildSourceInfoRefreshed(mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, mediaSource: androidx.media2.exoplayer.external.source.MediaSource, timeline: androidx.media2.exoplayer.external.Timeline): void;
							public releaseSourceInternal(): void;
							public maybeThrowSourceInfoRefreshError(): void;
							public constructor(contentMediaSource: androidx.media2.exoplayer.external.source.MediaSource, adMediaSourceFactory: androidx.media2.exoplayer.external.source.MediaSourceFactory, adsLoader: androidx.media2.exoplayer.external.source.ads.AdsLoader, adViewProvider: androidx.media2.exoplayer.external.source.ads.AdsLoader.AdViewProvider);
							public addEventListener(handler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
							public onChildSourceInfoRefreshed(object0: any, mediaSource1: androidx.media2.exoplayer.external.source.MediaSource, timeline2: androidx.media2.exoplayer.external.Timeline): void;
							public getMediaPeriodIdForChildMediaPeriodId(childId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId;
							public getTag(): any;
							public getMediaPeriodIdForChildMediaPeriodId(id: any, mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId): androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId;
							public releaseSource(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
							public constructor(contentMediaSource: androidx.media2.exoplayer.external.source.MediaSource, dataSourceFactory: androidx.media2.exoplayer.external.upstream.DataSource.Factory, adsLoader: androidx.media2.exoplayer.external.source.ads.AdsLoader, adViewProvider: androidx.media2.exoplayer.external.source.ads.AdsLoader.AdViewProvider);
							public disable(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
							public releasePeriod(mediaPeriod: androidx.media2.exoplayer.external.source.MediaPeriod): void;
							public prepareSourceInternal(mediaTransferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
							public enable(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						}
						export module AdsMediaSource {
							export class AdLoadException extends java.io.IOException {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ads.AdsMediaSource.AdLoadException>;
								public static TYPE_AD: number;
								public static TYPE_AD_GROUP: number;
								public static TYPE_ALL_ADS: number;
								public static TYPE_UNEXPECTED: number;
								public type: number;
								public static createForAllAds(error: java.lang.Exception): androidx.media2.exoplayer.external.source.ads.AdsMediaSource.AdLoadException;
								public static createForAd(error: java.lang.Exception): androidx.media2.exoplayer.external.source.ads.AdsMediaSource.AdLoadException;
								public static createForUnexpected(error: java.lang.RuntimeException): androidx.media2.exoplayer.external.source.ads.AdsMediaSource.AdLoadException;
								public static createForAdGroup(error: java.lang.Exception, adGroupIndex: number): androidx.media2.exoplayer.external.source.ads.AdsMediaSource.AdLoadException;
								public getRuntimeExceptionForUnexpected(): java.lang.RuntimeException;
							}
							export module AdLoadException {
								export class Type extends java.lang.Object implements java.lang.annotation.Annotation {
									public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ads.AdsMediaSource.AdLoadException.Type>;
									/**
									 * Constructs a new instance of the androidx.media2.exoplayer.external.source.ads.AdsMediaSource$AdLoadException$Type interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
									 */
									public constructor(implementation: {
										equals(object0: any): boolean;
										hashCode(): number;
										toString(): string;
										annotationType(): java.lang.Class<any>;
									});
									public constructor();
									public hashCode(): number;
									public annotationType(): java.lang.Class<any>;
									public equals(obj: any): boolean;
									public toString(): string;
								}
							}
							export class AdPrepareErrorListener extends java.lang.Object implements androidx.media2.exoplayer.external.source.MaskingMediaPeriod.PrepareErrorListener {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ads.AdsMediaSource.AdPrepareErrorListener>;
								public constructor(param0: androidx.media2.exoplayer.external.source.ads.AdsMediaSource, adUri: globalAndroid.net.Uri, adGroupIndex: number, adIndexInAdGroup: number);
								public onPrepareError(mediaPeriodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, exception: java.io.IOException): void;
							}
							export class ComponentListener extends java.lang.Object implements androidx.media2.exoplayer.external.source.ads.AdsLoader.EventListener {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ads.AdsMediaSource.ComponentListener>;
								public onAdLoadError(error: androidx.media2.exoplayer.external.source.ads.AdsMediaSource.AdLoadException, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec): void;
								public constructor(param0: androidx.media2.exoplayer.external.source.ads.AdsMediaSource);
								public onAdPlaybackState(adPlaybackState: androidx.media2.exoplayer.external.source.ads.AdPlaybackState): void;
								public onAdClicked(): void;
								public onAdTapped(): void;
								public release(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module ads {
						export class SinglePeriodAdTimeline extends androidx.media2.exoplayer.external.source.ForwardingTimeline {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.ads.SinglePeriodAdTimeline>;
							public constructor();
							public constructor(timeline: androidx.media2.exoplayer.external.Timeline);
							public getWindow(windowIndex: number, window: androidx.media2.exoplayer.external.Timeline.Window): androidx.media2.exoplayer.external.Timeline.Window;
							public getWindow(windowIndex: number, window: androidx.media2.exoplayer.external.Timeline.Window, setIds: boolean, defaultPositionProjectionUs: number): androidx.media2.exoplayer.external.Timeline.Window;
							/** @deprecated */
							public getWindow(windowIndex: number, window: androidx.media2.exoplayer.external.Timeline.Window, setTag: boolean): androidx.media2.exoplayer.external.Timeline.Window;
							public getPeriod(periodIndex: number, period: androidx.media2.exoplayer.external.Timeline.Period): androidx.media2.exoplayer.external.Timeline.Period;
							public constructor(contentTimeline: androidx.media2.exoplayer.external.Timeline, adPlaybackState: androidx.media2.exoplayer.external.source.ads.AdPlaybackState);
							public getPeriod(periodIndex: number, period: androidx.media2.exoplayer.external.Timeline.Period, setIds: boolean): androidx.media2.exoplayer.external.Timeline.Period;
							public getWindow(windowIndex: number, window: androidx.media2.exoplayer.external.Timeline.Window, defaultPositionProjectionUs: number): androidx.media2.exoplayer.external.Timeline.Window;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module chunk {
						export abstract class BaseMediaChunk extends androidx.media2.exoplayer.external.source.chunk.MediaChunk {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.chunk.BaseMediaChunk>;
							public clippedStartTimeUs: number;
							public clippedEndTimeUs: number;
							public cancelLoad(): void;
							public constructor(dataSource: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, type: number, trackFormat: androidx.media2.exoplayer.external.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number);
							public getFirstSampleIndex(trackIndex: number): number;
							public constructor(dataSource: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, trackFormat: androidx.media2.exoplayer.external.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number, chunkIndex: number);
							public getOutput(): androidx.media2.exoplayer.external.source.chunk.BaseMediaChunkOutput;
							public load(): void;
							public constructor(dataSource: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, trackFormat: androidx.media2.exoplayer.external.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number, clippedStartTimeUs: number, clippedEndTimeUs: number, chunkIndex: number);
							public init(output: androidx.media2.exoplayer.external.source.chunk.BaseMediaChunkOutput): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module chunk {
						export abstract class BaseMediaChunkIterator extends java.lang.Object implements androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.chunk.BaseMediaChunkIterator>;
							public constructor(fromIndex: number, toIndex: number);
							public isEnded(): boolean;
							public checkInBounds(): void;
							public getCurrentIndex(): number;
							public getDataSpec(): androidx.media2.exoplayer.external.upstream.DataSpec;
							public getChunkEndTimeUs(): number;
							public getChunkStartTimeUs(): number;
							public next(): boolean;
							public reset(): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module chunk {
						export class BaseMediaChunkOutput extends java.lang.Object implements androidx.media2.exoplayer.external.source.chunk.ChunkExtractorWrapper.TrackOutputProvider {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.chunk.BaseMediaChunkOutput>;
							public constructor(trackTypes: native.Array<number>, sampleQueues: native.Array<androidx.media2.exoplayer.external.source.SampleQueue>);
							public getWriteIndices(): native.Array<number>;
							public track(id: number, type: number): androidx.media2.exoplayer.external.extractor.TrackOutput;
							public setSampleOffsetUs(sampleOffsetUs: number): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module chunk {
						export abstract class Chunk extends java.lang.Object implements androidx.media2.exoplayer.external.upstream.Loader.Loadable {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.chunk.Chunk>;
							public dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec;
							public type: number;
							public trackFormat: androidx.media2.exoplayer.external.Format;
							public trackSelectionReason: number;
							public trackSelectionData: any;
							public startTimeUs: number;
							public endTimeUs: number;
							public dataSource: androidx.media2.exoplayer.external.upstream.StatsDataSource;
							public cancelLoad(): void;
							public constructor(dataSource: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, type: number, trackFormat: androidx.media2.exoplayer.external.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number);
							public getUri(): globalAndroid.net.Uri;
							public getDurationUs(): number;
							public load(): void;
							public bytesLoaded(): number;
							public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module chunk {
						export class ChunkExtractorWrapper extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.ExtractorOutput {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.chunk.ChunkExtractorWrapper>;
							public extractor: androidx.media2.exoplayer.external.extractor.Extractor;
							public constructor(extractor: androidx.media2.exoplayer.external.extractor.Extractor, primaryTrackType: number, primaryTrackManifestFormat: androidx.media2.exoplayer.external.Format);
							public getSampleFormats(): native.Array<androidx.media2.exoplayer.external.Format>;
							public track(id: number, type: number): androidx.media2.exoplayer.external.extractor.TrackOutput;
							public init(trackOutputProvider: androidx.media2.exoplayer.external.source.chunk.ChunkExtractorWrapper.TrackOutputProvider, startTimeUs: number, endTimeUs: number): void;
							public getSeekMap(): androidx.media2.exoplayer.external.extractor.SeekMap;
							public endTracks(): void;
							public seekMap(seekMap: androidx.media2.exoplayer.external.extractor.SeekMap): void;
						}
						export module ChunkExtractorWrapper {
							export class BindingTrackOutput extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.TrackOutput {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.chunk.ChunkExtractorWrapper.BindingTrackOutput>;
								public sampleFormat: androidx.media2.exoplayer.external.Format;
								public sampleData(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, length: number, allowEndOfInput: boolean): number;
								public constructor(id: number, type: number, manifestFormat: androidx.media2.exoplayer.external.Format);
								public bind(trackOutputProvider: androidx.media2.exoplayer.external.source.chunk.ChunkExtractorWrapper.TrackOutputProvider, endTimeUs: number): void;
								public format(format: androidx.media2.exoplayer.external.Format): void;
								public sampleMetadata(timeUs: number, flags: number, size: number, offset: number, cryptoData: androidx.media2.exoplayer.external.extractor.TrackOutput.CryptoData): void;
								public sampleData(data: androidx.media2.exoplayer.external.util.ParsableByteArray, length: number): void;
							}
							export class TrackOutputProvider extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.chunk.ChunkExtractorWrapper.TrackOutputProvider>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.source.chunk.ChunkExtractorWrapper$TrackOutputProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									track(int0: number, int1: number): androidx.media2.exoplayer.external.extractor.TrackOutput;
								});
								public constructor();
								public track(int0: number, int1: number): androidx.media2.exoplayer.external.extractor.TrackOutput;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module chunk {
						export class ChunkHolder extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.chunk.ChunkHolder>;
							public chunk: androidx.media2.exoplayer.external.source.chunk.Chunk;
							public endOfStream: boolean;
							public constructor();
							public clear(): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module chunk {
						export class ChunkSampleStream<T>  extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.chunk.ChunkSampleStream<any>>;
							public primaryTrackType: number;
							public onLoadCompleted(loadable0: T, long1: number, long2: number): void;
							public constructor(primaryTrackType: number, embeddedTrackTypes: native.Array<number>, embeddedTrackFormats: native.Array<androidx.media2.exoplayer.external.Format>, chunkSource: T, callback: androidx.media2.exoplayer.external.source.SequenceableLoader.Callback<androidx.media2.exoplayer.external.source.chunk.ChunkSampleStream<T>>, allocator: androidx.media2.exoplayer.external.upstream.Allocator, positionUs: number, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<any>, loadErrorHandlingPolicy: androidx.media2.exoplayer.external.upstream.LoadErrorHandlingPolicy, eventDispatcher: androidx.media2.exoplayer.external.source.MediaSourceEventListener.EventDispatcher);
							public selectEmbeddedTrack(positionUs: number, trackType: number): androidx.media2.exoplayer.external.source.chunk.ChunkSampleStream.EmbeddedSampleStream;
							public skipData(positionUs: number): number;
							public reevaluateBuffer(positionUs: number): void;
							public release(callback: androidx.media2.exoplayer.external.source.chunk.ChunkSampleStream.ReleaseCallback<T>): void;
							public isReady(): boolean;
							public onLoadCanceled(loadable: androidx.media2.exoplayer.external.source.chunk.Chunk, elapsedRealtimeMs: number, loadDurationMs: number, released: boolean): void;
							public release(): void;
							public getChunkSource(): T;
							public getBufferedPositionUs(): number;
							public discardBuffer(positionUs: number, toKeyframe: boolean): void;
							public onLoadCompleted(loadable: androidx.media2.exoplayer.external.source.chunk.Chunk, elapsedRealtimeMs: number, loadDurationMs: number): void;
							public getNextLoadPositionUs(): number;
							public onLoadCanceled(loadable0: T, long1: number, long2: number, boolean3: boolean): void;
							public continueLoading(positionUs: number): boolean;
							public seekToUs(positionUs: number): void;
							public onLoadError(loadable: androidx.media2.exoplayer.external.source.chunk.Chunk, elapsedRealtimeMs: number, loadDurationMs: number, error: java.io.IOException, errorCount: number): androidx.media2.exoplayer.external.upstream.Loader.LoadErrorAction;
							public onLoaderReleased(): void;
							public onLoadError(loadable0: T, long1: number, long2: number, iOException3: java.io.IOException, int4: number): androidx.media2.exoplayer.external.upstream.Loader.LoadErrorAction;
							public getAdjustedSeekPositionUs(positionUs: number, seekParameters: androidx.media2.exoplayer.external.SeekParameters): number;
							public maybeThrowError(): void;
							public readData(formatHolder: androidx.media2.exoplayer.external.FormatHolder, buffer: androidx.media2.exoplayer.external.decoder.DecoderInputBuffer, formatRequired: boolean): number;
						}
						export module ChunkSampleStream {
							export class EmbeddedSampleStream extends java.lang.Object implements androidx.media2.exoplayer.external.source.SampleStream {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.chunk.ChunkSampleStream.EmbeddedSampleStream>;
								public parent: androidx.media2.exoplayer.external.source.chunk.ChunkSampleStream<any>;
								public constructor(this0: androidx.media2.exoplayer.external.source.chunk.ChunkSampleStream<any>, parent: androidx.media2.exoplayer.external.source.SampleQueue, sampleQueue: number);
								public isReady(): boolean;
								public readData(formatHolder: androidx.media2.exoplayer.external.FormatHolder, buffer: androidx.media2.exoplayer.external.decoder.DecoderInputBuffer, formatRequired: boolean): number;
								public skipData(positionUs: number): number;
								public release(): void;
								public maybeThrowError(): void;
							}
							export class ReleaseCallback<T>  extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.chunk.ChunkSampleStream.ReleaseCallback<any>>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.source.chunk.ChunkSampleStream$ReleaseCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									onSampleStreamReleased(chunkSampleStream0: androidx.media2.exoplayer.external.source.chunk.ChunkSampleStream<T>): void;
								});
								public constructor();
								public onSampleStreamReleased(chunkSampleStream0: androidx.media2.exoplayer.external.source.chunk.ChunkSampleStream<T>): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module chunk {
						export class ChunkSource extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.chunk.ChunkSource>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.source.chunk.ChunkSource interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getAdjustedSeekPositionUs(long0: number, seekParameters1: androidx.media2.exoplayer.external.SeekParameters): number;
								maybeThrowError(): void;
								getPreferredQueueSize(long0: number, list1: java.util.List<any>): number;
								getNextChunk(long0: number, long1: number, list2: java.util.List<any>, chunkHolder3: androidx.media2.exoplayer.external.source.chunk.ChunkHolder): void;
								onChunkLoadCompleted(chunk0: androidx.media2.exoplayer.external.source.chunk.Chunk): void;
								onChunkLoadError(chunk0: androidx.media2.exoplayer.external.source.chunk.Chunk, boolean1: boolean, exception2: java.lang.Exception, long3: number): boolean;
							});
							public constructor();
							public onChunkLoadCompleted(chunk0: androidx.media2.exoplayer.external.source.chunk.Chunk): void;
							public getNextChunk(long0: number, long1: number, list2: java.util.List<any>, chunkHolder3: androidx.media2.exoplayer.external.source.chunk.ChunkHolder): void;
							public onChunkLoadError(chunk0: androidx.media2.exoplayer.external.source.chunk.Chunk, boolean1: boolean, exception2: java.lang.Exception, long3: number): boolean;
							public getAdjustedSeekPositionUs(long0: number, seekParameters1: androidx.media2.exoplayer.external.SeekParameters): number;
							public maybeThrowError(): void;
							public getPreferredQueueSize(long0: number, list1: java.util.List<any>): number;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module chunk {
						export class ContainerMediaChunk extends androidx.media2.exoplayer.external.source.chunk.BaseMediaChunk {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.chunk.ContainerMediaChunk>;
							public isLoadCompleted(): boolean;
							public cancelLoad(): void;
							public constructor(dataSource: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, type: number, trackFormat: androidx.media2.exoplayer.external.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number);
							public constructor(dataSource: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, trackFormat: androidx.media2.exoplayer.external.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number, chunkIndex: number);
							public load(): void;
							public constructor(dataSource: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, trackFormat: androidx.media2.exoplayer.external.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number, clippedStartTimeUs: number, clippedEndTimeUs: number, chunkIndex: number);
							public getNextChunkIndex(): number;
							public constructor(dataSource: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, trackFormat: androidx.media2.exoplayer.external.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number, clippedStartTimeUs: number, clippedEndTimeUs: number, chunkIndex: number, chunkCount: number, sampleOffsetUs: number, extractorWrapper: androidx.media2.exoplayer.external.source.chunk.ChunkExtractorWrapper);
							public getTrackOutputProvider(baseMediaChunkOutput: androidx.media2.exoplayer.external.source.chunk.BaseMediaChunkOutput): androidx.media2.exoplayer.external.source.chunk.ChunkExtractorWrapper.TrackOutputProvider;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module chunk {
						export abstract class DataChunk extends androidx.media2.exoplayer.external.source.chunk.Chunk {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.chunk.DataChunk>;
							public cancelLoad(): void;
							public consume(bytes0: native.Array<number>, int1: number): void;
							public constructor(dataSource: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, type: number, trackFormat: androidx.media2.exoplayer.external.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number);
							public getDataHolder(): native.Array<number>;
							public constructor(dataSource: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, type: number, trackFormat: androidx.media2.exoplayer.external.Format, trackSelectionReason: number, trackSelectionData: any, data: native.Array<number>);
							public load(): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module chunk {
						export class InitializationChunk extends androidx.media2.exoplayer.external.source.chunk.Chunk {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.chunk.InitializationChunk>;
							public cancelLoad(): void;
							public constructor(dataSource: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, type: number, trackFormat: androidx.media2.exoplayer.external.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number);
							public load(): void;
							public constructor(dataSource: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, trackFormat: androidx.media2.exoplayer.external.Format, trackSelectionReason: number, trackSelectionData: any, extractorWrapper: androidx.media2.exoplayer.external.source.chunk.ChunkExtractorWrapper);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module chunk {
						export abstract class MediaChunk extends androidx.media2.exoplayer.external.source.chunk.Chunk {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.chunk.MediaChunk>;
							public chunkIndex: number;
							public isLoadCompleted(): boolean;
							public cancelLoad(): void;
							public constructor(dataSource: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, type: number, trackFormat: androidx.media2.exoplayer.external.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number);
							public constructor(dataSource: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, trackFormat: androidx.media2.exoplayer.external.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number, chunkIndex: number);
							public load(): void;
							public getNextChunkIndex(): number;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module chunk {
						export class MediaChunkIterator extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								isEnded(): boolean;
								next(): boolean;
								getDataSpec(): androidx.media2.exoplayer.external.upstream.DataSpec;
								getChunkStartTimeUs(): number;
								getChunkEndTimeUs(): number;
								reset(): void;
								<clinit>(): void;
							});
							public constructor();
							public static EMPTY: androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator;
							public isEnded(): boolean;
							public getDataSpec(): androidx.media2.exoplayer.external.upstream.DataSpec;
							public getChunkEndTimeUs(): number;
							public getChunkStartTimeUs(): number;
							public next(): boolean;
							public reset(): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module chunk {
						export class MediaChunkListIterator extends androidx.media2.exoplayer.external.source.chunk.BaseMediaChunkIterator {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.chunk.MediaChunkListIterator>;
							public constructor(fromIndex: number, toIndex: number);
							public isEnded(): boolean;
							public getDataSpec(): androidx.media2.exoplayer.external.upstream.DataSpec;
							public getChunkEndTimeUs(): number;
							public constructor(chunks: java.util.List<any>, reverseOrder: boolean);
							public getChunkStartTimeUs(): number;
							public next(): boolean;
							public reset(): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module chunk {
						export class SingleSampleMediaChunk extends androidx.media2.exoplayer.external.source.chunk.BaseMediaChunk {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.chunk.SingleSampleMediaChunk>;
							public isLoadCompleted(): boolean;
							public cancelLoad(): void;
							public constructor(dataSource: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, type: number, trackFormat: androidx.media2.exoplayer.external.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number);
							public constructor(dataSource: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, trackFormat: androidx.media2.exoplayer.external.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number, chunkIndex: number, trackType: number, sampleFormat: androidx.media2.exoplayer.external.Format);
							public constructor(dataSource: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, trackFormat: androidx.media2.exoplayer.external.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number, chunkIndex: number);
							public load(): void;
							public constructor(dataSource: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, trackFormat: androidx.media2.exoplayer.external.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number, clippedStartTimeUs: number, clippedEndTimeUs: number, chunkIndex: number);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module hls {
						export class Aes128DataSource extends java.lang.Object implements androidx.media2.exoplayer.external.upstream.DataSource {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.Aes128DataSource>;
							public constructor(upstream: androidx.media2.exoplayer.external.upstream.DataSource, encryptionKey: native.Array<number>, encryptionIv: native.Array<number>);
							public getCipherInstance(): javax.crypto.Cipher;
							public getUri(): globalAndroid.net.Uri;
							public close(): void;
							public read(buffer: native.Array<number>, offset: number, readLength: number): number;
							public addTransferListener(transferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
							public open(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec): number;
							public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module hls {
						export class DefaultHlsDataSourceFactory extends java.lang.Object implements androidx.media2.exoplayer.external.source.hls.HlsDataSourceFactory {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.DefaultHlsDataSourceFactory>;
							public constructor(dataSourceFactory: androidx.media2.exoplayer.external.upstream.DataSource.Factory);
							public createDataSource(dataType: number): androidx.media2.exoplayer.external.upstream.DataSource;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module hls {
						export class DefaultHlsExtractorFactory extends java.lang.Object implements androidx.media2.exoplayer.external.source.hls.HlsExtractorFactory {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.DefaultHlsExtractorFactory>;
							public static AAC_FILE_EXTENSION: string;
							public static AC3_FILE_EXTENSION: string;
							public static EC3_FILE_EXTENSION: string;
							public static AC4_FILE_EXTENSION: string;
							public static MP3_FILE_EXTENSION: string;
							public static MP4_FILE_EXTENSION: string;
							public static M4_FILE_EXTENSION_PREFIX: string;
							public static MP4_FILE_EXTENSION_PREFIX: string;
							public static CMF_FILE_EXTENSION_PREFIX: string;
							public static VTT_FILE_EXTENSION: string;
							public static WEBVTT_FILE_EXTENSION: string;
							public constructor();
							public constructor(payloadReaderFactoryFlags: number, exposeCea608WhenMissingDeclarations: boolean);
							public createExtractor(previousExtractor: androidx.media2.exoplayer.external.extractor.Extractor, uri: globalAndroid.net.Uri, format: androidx.media2.exoplayer.external.Format, muxedCaptionFormats: java.util.List<androidx.media2.exoplayer.external.Format>, drmInitData: androidx.media2.exoplayer.external.drm.DrmInitData, timestampAdjuster: androidx.media2.exoplayer.external.util.TimestampAdjuster, responseHeaders: java.util.Map<string,java.util.List<string>>, extractorInput: androidx.media2.exoplayer.external.extractor.ExtractorInput): androidx.media2.exoplayer.external.source.hls.HlsExtractorFactory.Result;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module hls {
						export class HlsChunkSource extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.HlsChunkSource>;
							public getTrackGroup(): androidx.media2.exoplayer.external.source.TrackGroup;
							public setIsTimestampMaster(isTimestampMaster: boolean): void;
							public getTrackSelection(): androidx.media2.exoplayer.external.trackselection.TrackSelection;
							public maybeBlacklistTrack(chunk: androidx.media2.exoplayer.external.source.chunk.Chunk, blacklistDurationMs: number): boolean;
							public onPlaylistError(playlistUrl: globalAndroid.net.Uri, blacklistDurationMs: number): boolean;
							public constructor(extractorFactory: androidx.media2.exoplayer.external.source.hls.HlsExtractorFactory, playlistTracker: androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistTracker, playlistUrls: native.Array<globalAndroid.net.Uri>, playlistFormats: native.Array<androidx.media2.exoplayer.external.Format>, dataSourceFactory: androidx.media2.exoplayer.external.source.hls.HlsDataSourceFactory, mediaTransferListener: androidx.media2.exoplayer.external.upstream.TransferListener, timestampAdjusterProvider: androidx.media2.exoplayer.external.source.hls.TimestampAdjusterProvider, muxedCaptionFormats: java.util.List<androidx.media2.exoplayer.external.Format>);
							public setTrackSelection(trackSelection: androidx.media2.exoplayer.external.trackselection.TrackSelection): void;
							public getNextChunk(playbackPositionUs: number, loadPositionUs: number, queue: java.util.List<androidx.media2.exoplayer.external.source.hls.HlsMediaChunk>, allowEndOfStream: boolean, out: androidx.media2.exoplayer.external.source.hls.HlsChunkSource.HlsChunkHolder): void;
							public createMediaChunkIterators(previous: androidx.media2.exoplayer.external.source.hls.HlsMediaChunk, loadPositionUs: number): native.Array<androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator>;
							public maybeThrowError(): void;
							public reset(): void;
							public onChunkLoadCompleted(chunk: androidx.media2.exoplayer.external.source.chunk.Chunk): void;
						}
						export module HlsChunkSource {
							export class EncryptionKeyChunk extends androidx.media2.exoplayer.external.source.chunk.DataChunk {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.HlsChunkSource.EncryptionKeyChunk>;
								public consume(data: native.Array<number>, limit: number): void;
								public consume(bytes0: native.Array<number>, int1: number): void;
								public getResult(): native.Array<number>;
								public cancelLoad(): void;
								public constructor(dataSource: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, type: number, trackFormat: androidx.media2.exoplayer.external.Format, trackSelectionReason: number, trackSelectionData: any, startTimeUs: number, endTimeUs: number);
								public constructor(dataSource: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, trackFormat: androidx.media2.exoplayer.external.Format, trackSelectionReason: number, trackSelectionData: any, scratchSpace: native.Array<number>);
								public load(): void;
								public constructor(dataSource: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, type: number, trackFormat: androidx.media2.exoplayer.external.Format, trackSelectionReason: number, trackSelectionData: any, data: native.Array<number>);
							}
							export class FullSegmentEncryptionKeyCache extends java.util.LinkedHashMap<globalAndroid.net.Uri,native.Array<number>> {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.HlsChunkSource.FullSegmentEncryptionKeyCache>;
								public size(): number;
								public forEach(action: any /* any<any,any>*/): void;
								public get(keyUri: any): native.Array<number>;
								public replaceAll(function0: any /* any<any,any,any>*/): void;
								public equals(o: any): boolean;
								public merge(key: any, value: any, remappingFunction: any /* any<any,any,any>*/): any;
								public containsKey(key: any): boolean;
								public replace(key: any, value: any): any;
								public containsValue(value: any): boolean;
								public putAll(m: java.util.Map<any,any>): void;
								public replace(key: any, oldValue: any, newValue: any): boolean;
								public remove(key: any, value: any): boolean;
								public keySet(): java.util.Set<any>;
								public constructor(initialCapacity: number, loadFactor: number, accessOrder: boolean);
								public put(key: any, value: any): any;
								public put(keyUri: globalAndroid.net.Uri, key: native.Array<number>): native.Array<number>;
								public constructor(m: java.util.Map<any,any>);
								public computeIfAbsent(key: any, mappingFunction: any /* any<any,any>*/): any;
								public constructor();
								public removeEldestEntry(eldest: java.util.Map.Entry<any,any>): boolean;
								public removeEldestEntry(entry: java.util.Map.Entry<globalAndroid.net.Uri,native.Array<number>>): boolean;
								public computeIfPresent(key: any, remappingFunction: any /* any<any,any,any>*/): any;
								public values(): java.util.Collection<any>;
								public get(key: any): any;
								public clear(): void;
								public constructor(initialCapacity: number, loadFactor: number);
								public remove(key: any): any;
								public getOrDefault(key: any, defaultValue: any): any;
								public constructor(initialCapacity: number);
								public isEmpty(): boolean;
								public entrySet(): java.util.Set<java.util.Map.Entry<any,any>>;
								public putIfAbsent(key: any, value: any): any;
								public compute(key: any, remappingFunction: any /* any<any,any,any>*/): any;
								public hashCode(): number;
							}
							export class HlsChunkHolder extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.HlsChunkSource.HlsChunkHolder>;
								public chunk: androidx.media2.exoplayer.external.source.chunk.Chunk;
								public endOfStream: boolean;
								public playlistUrl: globalAndroid.net.Uri;
								public clear(): void;
								public constructor();
							}
							export class HlsMediaPlaylistSegmentIterator extends androidx.media2.exoplayer.external.source.chunk.BaseMediaChunkIterator {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.HlsChunkSource.HlsMediaPlaylistSegmentIterator>;
								public getDataSpec(): androidx.media2.exoplayer.external.upstream.DataSpec;
								public getChunkStartTimeUs(): number;
								public constructor(fromIndex: number, toIndex: number);
								public reset(): void;
								public getChunkEndTimeUs(): number;
								public next(): boolean;
								public constructor(playlist: androidx.media2.exoplayer.external.source.hls.playlist.HlsMediaPlaylist, startOfPlaylistInPeriodUs: number, chunkIndex: number);
								public isEnded(): boolean;
							}
							export class InitializationTrackSelection extends androidx.media2.exoplayer.external.trackselection.BaseTrackSelection {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.HlsChunkSource.InitializationTrackSelection>;
								public getFormat(index: number): androidx.media2.exoplayer.external.Format;
								public updateSelectedTrack(playbackPositionUs: number, bufferedDurationUs: number, availableDurationUs: number, queue: java.util.List<any>, mediaChunkIterators: native.Array<androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator>): void;
								public length(): number;
								public indexOf(format: androidx.media2.exoplayer.external.Format): number;
								public evaluateQueueSize(playbackPositionUs: number, queue: java.util.List<any>): number;
								public getSelectedIndex(): number;
								public disable(): void;
								public enable(): void;
								public blacklist(index: number, blacklistDurationMs: number): boolean;
								public constructor(group: androidx.media2.exoplayer.external.source.TrackGroup, tracks: native.Array<number>);
								/** @deprecated */
								public updateSelectedTrack(long0: number, long1: number, long2: number): void;
								public indexOf(indexInTrackGroup: number): number;
								public onDiscontinuity(): void;
								public onPlaybackSpeed(playbackSpeed: number): void;
								public updateSelectedTrack(long0: number, long1: number, long2: number, list3: java.util.List<any>, mediaChunkIterators4: native.Array<androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator>): void;
								public getSelectionData(): any;
								public getSelectionReason(): number;
								public getTrackGroup(): androidx.media2.exoplayer.external.source.TrackGroup;
								public getSelectedIndexInTrackGroup(): number;
								public getIndexInTrackGroup(index: number): number;
								public getSelectedFormat(): androidx.media2.exoplayer.external.Format;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module hls {
						export class HlsDataSourceFactory extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.HlsDataSourceFactory>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.source.hls.HlsDataSourceFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								createDataSource(int0: number): androidx.media2.exoplayer.external.upstream.DataSource;
							});
							public constructor();
							public createDataSource(int0: number): androidx.media2.exoplayer.external.upstream.DataSource;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module hls {
						export class HlsExtractorFactory extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.HlsExtractorFactory>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.source.hls.HlsExtractorFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								createExtractor(extractor0: androidx.media2.exoplayer.external.extractor.Extractor, uri1: globalAndroid.net.Uri, format2: androidx.media2.exoplayer.external.Format, list3: java.util.List<androidx.media2.exoplayer.external.Format>, drmInitData4: androidx.media2.exoplayer.external.drm.DrmInitData, timestampAdjuster5: androidx.media2.exoplayer.external.util.TimestampAdjuster, map6: java.util.Map<string,java.util.List<string>>, extractorInput7: androidx.media2.exoplayer.external.extractor.ExtractorInput): androidx.media2.exoplayer.external.source.hls.HlsExtractorFactory.Result;
								<clinit>(): void;
							});
							public constructor();
							public static DEFAULT: androidx.media2.exoplayer.external.source.hls.HlsExtractorFactory;
							public createExtractor(extractor0: androidx.media2.exoplayer.external.extractor.Extractor, uri1: globalAndroid.net.Uri, format2: androidx.media2.exoplayer.external.Format, list3: java.util.List<androidx.media2.exoplayer.external.Format>, drmInitData4: androidx.media2.exoplayer.external.drm.DrmInitData, timestampAdjuster5: androidx.media2.exoplayer.external.util.TimestampAdjuster, map6: java.util.Map<string,java.util.List<string>>, extractorInput7: androidx.media2.exoplayer.external.extractor.ExtractorInput): androidx.media2.exoplayer.external.source.hls.HlsExtractorFactory.Result;
						}
						export module HlsExtractorFactory {
							export class Result extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.HlsExtractorFactory.Result>;
								public extractor: androidx.media2.exoplayer.external.extractor.Extractor;
								public isPackedAudioExtractor: boolean;
								public isReusable: boolean;
								public constructor(extractor: androidx.media2.exoplayer.external.extractor.Extractor, isPackedAudioExtractor: boolean, isReusable: boolean);
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module hls {
						export class HlsManifest extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.HlsManifest>;
							public masterPlaylist: androidx.media2.exoplayer.external.source.hls.playlist.HlsMasterPlaylist;
							public mediaPlaylist: androidx.media2.exoplayer.external.source.hls.playlist.HlsMediaPlaylist;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module hls {
						export class HlsMediaChunk extends androidx.media2.exoplayer.external.source.chunk.MediaChunk {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.HlsMediaChunk>;
							public static PRIV_TIMESTAMP_FRAME_OWNER: string;
							public uid: number;
							public discontinuitySequenceNumber: number;
							public playlistUrl: globalAndroid.net.Uri;
							public isLoadCompleted(): boolean;
							public init(output: androidx.media2.exoplayer.external.source.hls.HlsSampleStreamWrapper): void;
							public cancelLoad(): void;
							public static createInstance(extractorFactory: androidx.media2.exoplayer.external.source.hls.HlsExtractorFactory, dataSource: androidx.media2.exoplayer.external.upstream.DataSource, format: androidx.media2.exoplayer.external.Format, startOfPlaylistInPeriodUs: number, mediaPlaylist: androidx.media2.exoplayer.external.source.hls.playlist.HlsMediaPlaylist, segmentIndexInPlaylist: number, playlistUrl: globalAndroid.net.Uri, muxedCaptionFormats: java.util.List<androidx.media2.exoplayer.external.Format>, trackSelectionReason: number, trackSelectionData: any, isMasterTimestampSource: boolean, timestampAdjusterProvider: androidx.media2.exoplayer.external.source.hls.TimestampAdjusterProvider, previousChunk: androidx.media2.exoplayer.external.source.hls.HlsMediaChunk, mediaSegmentKey: native.Array<number>, initSegmentKey: native.Array<number>): androidx.media2.exoplayer.external.source.hls.HlsMediaChunk;
							public load(): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module hls {
						export class HlsMediaPeriod extends java.lang.Object implements androidx.media2.exoplayer.external.source.MediaPeriod, androidx.media2.exoplayer.external.source.hls.HlsSampleStreamWrapper.Callback, androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistTracker.PlaylistEventListener {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.HlsMediaPeriod>;
							public onPlaylistError(url: globalAndroid.net.Uri, blacklistDurationMs: number): boolean;
							public reevaluateBuffer(positionUs: number): void;
							public onContinueLoadingRequested(sequenceableLoader0: any): void;
							public seekToUs(positionUs: number): number;
							public release(): void;
							public onPlaylistRefreshRequired(url: globalAndroid.net.Uri): void;
							public prepare(callback: androidx.media2.exoplayer.external.source.MediaPeriod.Callback, positionUs: number): void;
							public getStreamKeys(trackSelections: java.util.List<androidx.media2.exoplayer.external.trackselection.TrackSelection>): java.util.List<androidx.media2.exoplayer.external.offline.StreamKey>;
							public onPlaylistChanged(): void;
							public maybeThrowPrepareError(): void;
							public getBufferedPositionUs(): number;
							public discardBuffer(positionUs: number, toKeyframe: boolean): void;
							public getNextLoadPositionUs(): number;
							public continueLoading(positionUs: number): boolean;
							public onContinueLoadingRequested(sampleStreamWrapper: androidx.media2.exoplayer.external.source.hls.HlsSampleStreamWrapper): void;
							public selectTracks(selections: native.Array<androidx.media2.exoplayer.external.trackselection.TrackSelection>, mayRetainStreamFlags: native.Array<boolean>, streams: native.Array<androidx.media2.exoplayer.external.source.SampleStream>, streamResetFlags: native.Array<boolean>, positionUs: number): number;
							public constructor(extractorFactory: androidx.media2.exoplayer.external.source.hls.HlsExtractorFactory, playlistTracker: androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistTracker, dataSourceFactory: androidx.media2.exoplayer.external.source.hls.HlsDataSourceFactory, mediaTransferListener: androidx.media2.exoplayer.external.upstream.TransferListener, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<any>, loadErrorHandlingPolicy: androidx.media2.exoplayer.external.upstream.LoadErrorHandlingPolicy, eventDispatcher: androidx.media2.exoplayer.external.source.MediaSourceEventListener.EventDispatcher, allocator: androidx.media2.exoplayer.external.upstream.Allocator, compositeSequenceableLoaderFactory: androidx.media2.exoplayer.external.source.CompositeSequenceableLoaderFactory, allowChunklessPreparation: boolean, useSessionKeys: boolean);
							public readDiscontinuity(): number;
							public getAdjustedSeekPositionUs(positionUs: number, seekParameters: androidx.media2.exoplayer.external.SeekParameters): number;
							public onPrepared(): void;
							public getTrackGroups(): androidx.media2.exoplayer.external.source.TrackGroupArray;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module hls {
						export class HlsMediaSource extends androidx.media2.exoplayer.external.source.BaseMediaSource implements androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistTracker.PrimaryPlaylistListener {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.HlsMediaSource>;
							public removeEventListener(eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
							public prepareSource(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller, mediaTransferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
							public prepareSourceInternal(transferListener0: androidx.media2.exoplayer.external.upstream.TransferListener): void;
							public createPeriod(id: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, allocator: androidx.media2.exoplayer.external.upstream.Allocator, startPositionUs: number): androidx.media2.exoplayer.external.source.MediaPeriod;
							public releaseSourceInternal(): void;
							public onPrimaryPlaylistRefreshed(playlist: androidx.media2.exoplayer.external.source.hls.playlist.HlsMediaPlaylist): void;
							public maybeThrowSourceInfoRefreshError(): void;
							public addEventListener(handler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): void;
							public getTag(): any;
							public releaseSource(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
							public disable(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
							public releasePeriod(mediaPeriod: androidx.media2.exoplayer.external.source.MediaPeriod): void;
							public prepareSourceInternal(mediaTransferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
							public enable(caller: androidx.media2.exoplayer.external.source.MediaSource.MediaSourceCaller): void;
						}
						export module HlsMediaSource {
							export class Factory extends java.lang.Object implements androidx.media2.exoplayer.external.source.MediaSourceFactory {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.HlsMediaSource.Factory>;
								public getSupportedTypes(): native.Array<number>;
								public setExtractorFactory(extractorFactory: androidx.media2.exoplayer.external.source.hls.HlsExtractorFactory): androidx.media2.exoplayer.external.source.hls.HlsMediaSource.Factory;
								public setLoadErrorHandlingPolicy(loadErrorHandlingPolicy: androidx.media2.exoplayer.external.upstream.LoadErrorHandlingPolicy): androidx.media2.exoplayer.external.source.hls.HlsMediaSource.Factory;
								public setStreamKeys(list0: java.util.List<androidx.media2.exoplayer.external.offline.StreamKey>): androidx.media2.exoplayer.external.source.MediaSourceFactory;
								public constructor(dataSourceFactory: androidx.media2.exoplayer.external.upstream.DataSource.Factory);
								public createMediaSource(uri0: globalAndroid.net.Uri): androidx.media2.exoplayer.external.source.MediaSource;
								public setDrmSessionManager(drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<any>): androidx.media2.exoplayer.external.source.hls.HlsMediaSource.Factory;
								public constructor(hlsDataSourceFactory: androidx.media2.exoplayer.external.source.hls.HlsDataSourceFactory);
								public setPlaylistParserFactory(playlistParserFactory: androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistParserFactory): androidx.media2.exoplayer.external.source.hls.HlsMediaSource.Factory;
								public setStreamKeys(streamKeys: java.util.List<androidx.media2.exoplayer.external.offline.StreamKey>): androidx.media2.exoplayer.external.source.hls.HlsMediaSource.Factory;
								public setUseSessionKeys(useSessionKeys: boolean): androidx.media2.exoplayer.external.source.hls.HlsMediaSource.Factory;
								/** @deprecated */
								public setMinLoadableRetryCount(minLoadableRetryCount: number): androidx.media2.exoplayer.external.source.hls.HlsMediaSource.Factory;
								public setPlaylistTrackerFactory(playlistTrackerFactory: androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistTracker.Factory): androidx.media2.exoplayer.external.source.hls.HlsMediaSource.Factory;
								public setTag(tag: any): androidx.media2.exoplayer.external.source.hls.HlsMediaSource.Factory;
								public setCompositeSequenceableLoaderFactory(compositeSequenceableLoaderFactory: androidx.media2.exoplayer.external.source.CompositeSequenceableLoaderFactory): androidx.media2.exoplayer.external.source.hls.HlsMediaSource.Factory;
								public setAllowChunklessPreparation(allowChunklessPreparation: boolean): androidx.media2.exoplayer.external.source.hls.HlsMediaSource.Factory;
								public createMediaSource(playlistUri: globalAndroid.net.Uri): androidx.media2.exoplayer.external.source.hls.HlsMediaSource;
								/** @deprecated */
								public createMediaSource(playlistUri: globalAndroid.net.Uri, eventHandler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.source.MediaSourceEventListener): androidx.media2.exoplayer.external.source.hls.HlsMediaSource;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module hls {
						export class HlsSampleStream extends java.lang.Object implements androidx.media2.exoplayer.external.source.SampleStream {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.HlsSampleStream>;
							public skipData(positionUs: number): number;
							public isReady(): boolean;
							public readData(formatHolder: androidx.media2.exoplayer.external.FormatHolder, buffer: androidx.media2.exoplayer.external.decoder.DecoderInputBuffer, requireFormat: boolean): number;
							public maybeThrowError(): void;
							public constructor(sampleStreamWrapper: androidx.media2.exoplayer.external.source.hls.HlsSampleStreamWrapper, trackGroupIndex: number);
							public unbindSampleQueue(): void;
							public bindSampleQueue(): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module hls {
						export class HlsSampleStreamWrapper extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.HlsSampleStreamWrapper>;
							public static SAMPLE_QUEUE_INDEX_PENDING: number;
							public static SAMPLE_QUEUE_INDEX_NO_MAPPING_FATAL: number;
							public static SAMPLE_QUEUE_INDEX_NO_MAPPING_NON_FATAL: number;
							public init(chunkUid: number, shouldSpliceIn: boolean, reusingExtractor: boolean): void;
							public onLoadCompleted(loadable0: any, long1: number, long2: number): void;
							public readData(sampleQueueIndex: number, formatHolder: androidx.media2.exoplayer.external.FormatHolder, buffer: androidx.media2.exoplayer.external.decoder.DecoderInputBuffer, requireFormat: boolean): number;
							public onUpstreamFormatChanged(format: androidx.media2.exoplayer.external.Format): void;
							public seekToUs(positionUs: number, forceReset: boolean): boolean;
							public seekMap(seekMap: androidx.media2.exoplayer.external.extractor.SeekMap): void;
							public maybeThrowPrepareError(): void;
							public unbindSampleQueue(trackGroupIndex: number): void;
							public discardBuffer(positionUs: number, toKeyframe: boolean): void;
							public maybeThrowError(sampleQueueIndex: number): void;
							public onLoadCompleted(loadable: androidx.media2.exoplayer.external.source.chunk.Chunk, elapsedRealtimeMs: number, loadDurationMs: number): void;
							public skipData(sampleQueueIndex: number, positionUs: number): number;
							public setIsTimestampMaster(isTimestampMaster: boolean): void;
							public continueLoading(positionUs: number): boolean;
							public prepareWithMasterPlaylistInfo(trackGroups: native.Array<androidx.media2.exoplayer.external.source.TrackGroup>, primaryTrackGroupIndex: number, optionalTrackGroupsIndices: native.Array<number>): void;
							public onLoadError(loadable: androidx.media2.exoplayer.external.source.chunk.Chunk, elapsedRealtimeMs: number, loadDurationMs: number, error: java.io.IOException, errorCount: number): androidx.media2.exoplayer.external.upstream.Loader.LoadErrorAction;
							public track(id: number, type: number): androidx.media2.exoplayer.external.extractor.TrackOutput;
							public selectTracks(selections: native.Array<androidx.media2.exoplayer.external.trackselection.TrackSelection>, mayRetainStreamFlags: native.Array<boolean>, streams: native.Array<androidx.media2.exoplayer.external.source.SampleStream>, streamResetFlags: native.Array<boolean>, positionUs: number, forceReset: boolean): boolean;
							public continuePreparing(): void;
							public reevaluateBuffer(positionUs: number): void;
							public onPlaylistError(playlistUrl: globalAndroid.net.Uri, blacklistDurationMs: number): boolean;
							public isReady(sampleQueueIndex: number): boolean;
							public onLoadCanceled(loadable: androidx.media2.exoplayer.external.source.chunk.Chunk, elapsedRealtimeMs: number, loadDurationMs: number, released: boolean): void;
							public onLoadError(loadable0: any, long1: number, long2: number, iOException3: java.io.IOException, int4: number): androidx.media2.exoplayer.external.upstream.Loader.LoadErrorAction;
							public bindSampleQueueToSampleStream(trackGroupIndex: number): number;
							public release(): void;
							public getPrimaryTrackGroupIndex(): number;
							public setSampleOffsetUs(sampleOffsetUs: number): void;
							public endTracks(): void;
							public getBufferedPositionUs(): number;
							public getNextLoadPositionUs(): number;
							public constructor(trackType: number, callback: androidx.media2.exoplayer.external.source.hls.HlsSampleStreamWrapper.Callback, chunkSource: androidx.media2.exoplayer.external.source.hls.HlsChunkSource, overridingDrmInitData: java.util.Map<string,androidx.media2.exoplayer.external.drm.DrmInitData>, allocator: androidx.media2.exoplayer.external.upstream.Allocator, positionUs: number, muxedAudioFormat: androidx.media2.exoplayer.external.Format, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<any>, loadErrorHandlingPolicy: androidx.media2.exoplayer.external.upstream.LoadErrorHandlingPolicy, eventDispatcher: androidx.media2.exoplayer.external.source.MediaSourceEventListener.EventDispatcher);
							public onLoaderReleased(): void;
							public onLoadCanceled(loadable0: any, long1: number, long2: number, boolean3: boolean): void;
							public maybeThrowError(): void;
							public getTrackGroups(): androidx.media2.exoplayer.external.source.TrackGroupArray;
						}
						export module HlsSampleStreamWrapper {
							export class Callback extends androidx.media2.exoplayer.external.source.SequenceableLoader.Callback<androidx.media2.exoplayer.external.source.hls.HlsSampleStreamWrapper> {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.HlsSampleStreamWrapper.Callback>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.source.hls.HlsSampleStreamWrapper$Callback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									onPrepared(): void;
									onPlaylistRefreshRequired(uri0: globalAndroid.net.Uri): void;
									onContinueLoadingRequested(sequenceableLoader0: any): void;
								});
								public constructor();
								public onContinueLoadingRequested(sequenceableLoader0: any): void;
								public onPrepared(): void;
								public onPlaylistRefreshRequired(uri0: globalAndroid.net.Uri): void;
							}
							export class FormatAdjustingSampleQueue extends androidx.media2.exoplayer.external.source.SampleQueue {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.HlsSampleStreamWrapper.FormatAdjustingSampleQueue>;
								public sampleData(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, length: number, allowEndOfInput: boolean): number;
								public constructor(allocator: androidx.media2.exoplayer.external.upstream.Allocator);
								public format(format: androidx.media2.exoplayer.external.Format): void;
								public sampleData(buffer: androidx.media2.exoplayer.external.util.ParsableByteArray, length: number): void;
								public sampleMetadata(timeUs: number, flags: number, size: number, offset: number, cryptoData: androidx.media2.exoplayer.external.extractor.TrackOutput.CryptoData): void;
								public constructor(allocator: androidx.media2.exoplayer.external.upstream.Allocator, overridingDrmInitData: java.util.Map<string,androidx.media2.exoplayer.external.drm.DrmInitData>);
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module hls {
						export class HlsTrackMetadataEntry extends java.lang.Object implements androidx.media2.exoplayer.external.metadata.Metadata.Entry {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.HlsTrackMetadataEntry>;
							public groupId: string;
							public name: string;
							public variantInfos: java.util.List<androidx.media2.exoplayer.external.source.hls.HlsTrackMetadataEntry.VariantInfo>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.source.hls.HlsTrackMetadataEntry>;
							public hashCode(): number;
							public getWrappedMetadataFormat(): androidx.media2.exoplayer.external.Format;
							public equals(other: any): boolean;
							public describeContents(): number;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public constructor(groupId: string, name: string, variantInfos: java.util.List<androidx.media2.exoplayer.external.source.hls.HlsTrackMetadataEntry.VariantInfo>);
							public getWrappedMetadataBytes(): native.Array<number>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
						export module HlsTrackMetadataEntry {
							export class VariantInfo extends java.lang.Object implements globalAndroid.os.Parcelable {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.HlsTrackMetadataEntry.VariantInfo>;
								public bitrate: number;
								public videoGroupId: string;
								public audioGroupId: string;
								public subtitleGroupId: string;
								public captionGroupId: string;
								public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.source.hls.HlsTrackMetadataEntry.VariantInfo>;
								public constructor(bitrate: number, videoGroupId: string, audioGroupId: string, subtitleGroupId: string, captionGroupId: string);
								public describeContents(): number;
								public equals(obj: any): boolean;
								public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
								public hashCode(): number;
								public equals(other: any): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module hls {
						export class SampleQueueMappingException extends java.io.IOException {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.SampleQueueMappingException>;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(message: string);
							public constructor(mimeType: string);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module hls {
						export class TimestampAdjusterProvider extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.TimestampAdjusterProvider>;
							public constructor();
							public getAdjuster(discontinuitySequence: number): androidx.media2.exoplayer.external.util.TimestampAdjuster;
							public reset(): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module hls {
						export class WebvttExtractor extends java.lang.Object implements androidx.media2.exoplayer.external.extractor.Extractor {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.WebvttExtractor>;
							public sniff(input: androidx.media2.exoplayer.external.extractor.ExtractorInput): boolean;
							public seek(position: number, timeUs: number): void;
							public read(input: androidx.media2.exoplayer.external.extractor.ExtractorInput, seekPosition: androidx.media2.exoplayer.external.extractor.PositionHolder): number;
							public release(): void;
							public constructor(language: string, timestampAdjuster: androidx.media2.exoplayer.external.util.TimestampAdjuster);
							public init(output: androidx.media2.exoplayer.external.extractor.ExtractorOutput): void;
						}
					}
				}
			}
		}
	}
}


declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module hls {
						export module playlist {
							export class DefaultHlsPlaylistParserFactory extends java.lang.Object implements androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistParserFactory {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.playlist.DefaultHlsPlaylistParserFactory>;
								public constructor();
								public createPlaylistParser(): androidx.media2.exoplayer.external.upstream.ParsingLoadable.Parser<androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylist>;
								public createPlaylistParser(masterPlaylist: androidx.media2.exoplayer.external.source.hls.playlist.HlsMasterPlaylist): androidx.media2.exoplayer.external.upstream.ParsingLoadable.Parser<androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylist>;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module hls {
						export module playlist {
							export class DefaultHlsPlaylistTracker extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.playlist.DefaultHlsPlaylistTracker>;
								public static FACTORY: androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistTracker.Factory;
								public static DEFAULT_PLAYLIST_STUCK_TARGET_DURATION_COEFFICIENT: number;
								public onLoadCanceled(loadable: androidx.media2.exoplayer.external.upstream.ParsingLoadable<androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylist>, elapsedRealtimeMs: number, loadDurationMs: number, released: boolean): void;
								public start(initialPlaylistUri: globalAndroid.net.Uri, eventDispatcher: androidx.media2.exoplayer.external.source.MediaSourceEventListener.EventDispatcher, primaryPlaylistListener: androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistTracker.PrimaryPlaylistListener): void;
								public onLoadCompleted(loadable: androidx.media2.exoplayer.external.upstream.ParsingLoadable<androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylist>, elapsedRealtimeMs: number, loadDurationMs: number): void;
								public onLoadCanceled(loadable0: any, long1: number, long2: number, boolean3: boolean): void;
								public constructor(dataSourceFactory: androidx.media2.exoplayer.external.source.hls.HlsDataSourceFactory, loadErrorHandlingPolicy: androidx.media2.exoplayer.external.upstream.LoadErrorHandlingPolicy, playlistParserFactory: androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistParserFactory);
								public addListener(listener: androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistTracker.PlaylistEventListener): void;
								public refreshPlaylist(url: globalAndroid.net.Uri): void;
								public isSnapshotValid(url: globalAndroid.net.Uri): boolean;
								public removeListener(listener: androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistTracker.PlaylistEventListener): void;
								public getMasterPlaylist(): androidx.media2.exoplayer.external.source.hls.playlist.HlsMasterPlaylist;
								public maybeThrowPrimaryPlaylistRefreshError(): void;
								public getInitialStartTimeUs(): number;
								public maybeThrowPlaylistRefreshError(url: globalAndroid.net.Uri): void;
								public onLoadError(loadable: androidx.media2.exoplayer.external.upstream.ParsingLoadable<androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylist>, elapsedRealtimeMs: number, loadDurationMs: number, error: java.io.IOException, errorCount: number): androidx.media2.exoplayer.external.upstream.Loader.LoadErrorAction;
								public onLoadError(loadable0: any, long1: number, long2: number, iOException3: java.io.IOException, int4: number): androidx.media2.exoplayer.external.upstream.Loader.LoadErrorAction;
								public constructor(dataSourceFactory: androidx.media2.exoplayer.external.source.hls.HlsDataSourceFactory, loadErrorHandlingPolicy: androidx.media2.exoplayer.external.upstream.LoadErrorHandlingPolicy, playlistParserFactory: androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistParserFactory, playlistStuckTargetDurationCoefficient: number);
								public isLive(): boolean;
								public getPlaylistSnapshot(url: globalAndroid.net.Uri, isForPlayback: boolean): androidx.media2.exoplayer.external.source.hls.playlist.HlsMediaPlaylist;
								public stop(): void;
								public onLoadCompleted(loadable0: any, long1: number, long2: number): void;
							}
							export module DefaultHlsPlaylistTracker {
								export class MediaPlaylistBundle extends java.lang.Object {
									public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.playlist.DefaultHlsPlaylistTracker.MediaPlaylistBundle>;
									public constructor(param0: androidx.media2.exoplayer.external.source.hls.playlist.DefaultHlsPlaylistTracker, playlistUrl: globalAndroid.net.Uri);
									public onLoadError(loadable: androidx.media2.exoplayer.external.upstream.ParsingLoadable<androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylist>, elapsedRealtimeMs: number, loadDurationMs: number, error: java.io.IOException, errorCount: number): androidx.media2.exoplayer.external.upstream.Loader.LoadErrorAction;
									public release(): void;
									public onLoadCompleted(loadable: androidx.media2.exoplayer.external.upstream.ParsingLoadable<androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylist>, elapsedRealtimeMs: number, loadDurationMs: number): void;
									public onLoadCanceled(loadable: androidx.media2.exoplayer.external.upstream.ParsingLoadable<androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylist>, elapsedRealtimeMs: number, loadDurationMs: number, released: boolean): void;
									public run(): void;
									public onLoadCompleted(loadable0: any, long1: number, long2: number): void;
									public maybeThrowPlaylistRefreshError(): void;
									public onLoadCanceled(loadable0: any, long1: number, long2: number, boolean3: boolean): void;
									public onLoadError(loadable0: any, long1: number, long2: number, iOException3: java.io.IOException, int4: number): androidx.media2.exoplayer.external.upstream.Loader.LoadErrorAction;
									public isSnapshotValid(): boolean;
									public getPlaylistSnapshot(): androidx.media2.exoplayer.external.source.hls.playlist.HlsMediaPlaylist;
									public loadPlaylist(): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module hls {
						export module playlist {
							export class FilteringHlsPlaylistParserFactory extends java.lang.Object implements androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistParserFactory {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.playlist.FilteringHlsPlaylistParserFactory>;
								public constructor(hlsPlaylistParserFactory: androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistParserFactory, streamKeys: java.util.List<androidx.media2.exoplayer.external.offline.StreamKey>);
								public createPlaylistParser(): androidx.media2.exoplayer.external.upstream.ParsingLoadable.Parser<androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylist>;
								public createPlaylistParser(masterPlaylist: androidx.media2.exoplayer.external.source.hls.playlist.HlsMasterPlaylist): androidx.media2.exoplayer.external.upstream.ParsingLoadable.Parser<androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylist>;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module hls {
						export module playlist {
							export class HlsMasterPlaylist extends androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylist {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.playlist.HlsMasterPlaylist>;
								public static EMPTY: androidx.media2.exoplayer.external.source.hls.playlist.HlsMasterPlaylist;
								public static GROUP_INDEX_VARIANT: number;
								public static GROUP_INDEX_AUDIO: number;
								public static GROUP_INDEX_SUBTITLE: number;
								public mediaPlaylistUrls: java.util.List<globalAndroid.net.Uri>;
								public variants: java.util.List<androidx.media2.exoplayer.external.source.hls.playlist.HlsMasterPlaylist.Variant>;
								public videos: java.util.List<androidx.media2.exoplayer.external.source.hls.playlist.HlsMasterPlaylist.Rendition>;
								public audios: java.util.List<androidx.media2.exoplayer.external.source.hls.playlist.HlsMasterPlaylist.Rendition>;
								public subtitles: java.util.List<androidx.media2.exoplayer.external.source.hls.playlist.HlsMasterPlaylist.Rendition>;
								public closedCaptions: java.util.List<androidx.media2.exoplayer.external.source.hls.playlist.HlsMasterPlaylist.Rendition>;
								public muxedAudioFormat: androidx.media2.exoplayer.external.Format;
								public muxedCaptionFormats: java.util.List<androidx.media2.exoplayer.external.Format>;
								public variableDefinitions: java.util.Map<string,string>;
								public sessionKeyDrmInitData: java.util.List<androidx.media2.exoplayer.external.drm.DrmInitData>;
								public copy(streamKeys: java.util.List<androidx.media2.exoplayer.external.offline.StreamKey>): androidx.media2.exoplayer.external.source.hls.playlist.HlsMasterPlaylist;
								public constructor(baseUri: string, tags: java.util.List<string>, hasIndependentSegments: boolean);
								public constructor(baseUri: string, tags: java.util.List<string>, variants: java.util.List<androidx.media2.exoplayer.external.source.hls.playlist.HlsMasterPlaylist.Variant>, videos: java.util.List<androidx.media2.exoplayer.external.source.hls.playlist.HlsMasterPlaylist.Rendition>, audios: java.util.List<androidx.media2.exoplayer.external.source.hls.playlist.HlsMasterPlaylist.Rendition>, subtitles: java.util.List<androidx.media2.exoplayer.external.source.hls.playlist.HlsMasterPlaylist.Rendition>, closedCaptions: java.util.List<androidx.media2.exoplayer.external.source.hls.playlist.HlsMasterPlaylist.Rendition>, muxedAudioFormat: androidx.media2.exoplayer.external.Format, muxedCaptionFormats: java.util.List<androidx.media2.exoplayer.external.Format>, hasIndependentSegments: boolean, variableDefinitions: java.util.Map<string,string>, sessionKeyDrmInitData: java.util.List<androidx.media2.exoplayer.external.drm.DrmInitData>);
								public static createSingleVariantMasterPlaylist(variantUrl: string): androidx.media2.exoplayer.external.source.hls.playlist.HlsMasterPlaylist;
								public copy(list0: java.util.List<androidx.media2.exoplayer.external.offline.StreamKey>): any;
							}
							export module HlsMasterPlaylist {
								export class Rendition extends java.lang.Object {
									public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.playlist.HlsMasterPlaylist.Rendition>;
									public url: globalAndroid.net.Uri;
									public format: androidx.media2.exoplayer.external.Format;
									public groupId: string;
									public name: string;
									public constructor(url: globalAndroid.net.Uri, format: androidx.media2.exoplayer.external.Format, groupId: string, name: string);
								}
								export class Variant extends java.lang.Object {
									public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.playlist.HlsMasterPlaylist.Variant>;
									public url: globalAndroid.net.Uri;
									public format: androidx.media2.exoplayer.external.Format;
									public videoGroupId: string;
									public audioGroupId: string;
									public subtitleGroupId: string;
									public captionGroupId: string;
									public static createMediaPlaylistVariantUrl(url: globalAndroid.net.Uri): androidx.media2.exoplayer.external.source.hls.playlist.HlsMasterPlaylist.Variant;
									public constructor(url: globalAndroid.net.Uri, format: androidx.media2.exoplayer.external.Format, videoGroupId: string, audioGroupId: string, subtitleGroupId: string, captionGroupId: string);
									public copyWithFormat(format: androidx.media2.exoplayer.external.Format): androidx.media2.exoplayer.external.source.hls.playlist.HlsMasterPlaylist.Variant;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module hls {
						export module playlist {
							export class HlsMediaPlaylist extends androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylist {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.playlist.HlsMediaPlaylist>;
								public static PLAYLIST_TYPE_UNKNOWN: number;
								public static PLAYLIST_TYPE_VOD: number;
								public static PLAYLIST_TYPE_EVENT: number;
								public playlistType: number;
								public startOffsetUs: number;
								public startTimeUs: number;
								public hasDiscontinuitySequence: boolean;
								public discontinuitySequence: number;
								public mediaSequence: number;
								public version: number;
								public targetDurationUs: number;
								public hasEndTag: boolean;
								public hasProgramDateTime: boolean;
								public protectionSchemes: androidx.media2.exoplayer.external.drm.DrmInitData;
								public segments: java.util.List<androidx.media2.exoplayer.external.source.hls.playlist.HlsMediaPlaylist.Segment>;
								public durationUs: number;
								public copyWithEndTag(): androidx.media2.exoplayer.external.source.hls.playlist.HlsMediaPlaylist;
								public constructor(playlistType: number, baseUri: string, tags: java.util.List<string>, startOffsetUs: number, startTimeUs: number, hasDiscontinuitySequence: boolean, discontinuitySequence: number, mediaSequence: number, version: number, targetDurationUs: number, hasIndependentSegments: boolean, hasEndTag: boolean, hasProgramDateTime: boolean, protectionSchemes: androidx.media2.exoplayer.external.drm.DrmInitData, segments: java.util.List<androidx.media2.exoplayer.external.source.hls.playlist.HlsMediaPlaylist.Segment>);
								public constructor(baseUri: string, tags: java.util.List<string>, hasIndependentSegments: boolean);
								public copyWith(startTimeUs: number, discontinuitySequence: number): androidx.media2.exoplayer.external.source.hls.playlist.HlsMediaPlaylist;
								public copy(streamKeys: java.util.List<androidx.media2.exoplayer.external.offline.StreamKey>): androidx.media2.exoplayer.external.source.hls.playlist.HlsMediaPlaylist;
								public isNewerThan(other: androidx.media2.exoplayer.external.source.hls.playlist.HlsMediaPlaylist): boolean;
								public getEndTimeUs(): number;
								public copy(list0: java.util.List<androidx.media2.exoplayer.external.offline.StreamKey>): any;
							}
							export module HlsMediaPlaylist {
								export class PlaylistType extends java.lang.Object implements java.lang.annotation.Annotation {
									public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.playlist.HlsMediaPlaylist.PlaylistType>;
									/**
									 * Constructs a new instance of the androidx.media2.exoplayer.external.source.hls.playlist.HlsMediaPlaylist$PlaylistType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
									 */
									public constructor(implementation: {
										equals(object0: any): boolean;
										hashCode(): number;
										toString(): string;
										annotationType(): java.lang.Class<any>;
									});
									public constructor();
									public hashCode(): number;
									public annotationType(): java.lang.Class<any>;
									public equals(obj: any): boolean;
									public toString(): string;
								}
								export class Segment extends java.lang.Comparable<java.lang.Long> {
									public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.playlist.HlsMediaPlaylist.Segment>;
									public url: string;
									public initializationSegment: androidx.media2.exoplayer.external.source.hls.playlist.HlsMediaPlaylist.Segment;
									public durationUs: number;
									public title: string;
									public relativeDiscontinuitySequence: number;
									public relativeStartTimeUs: number;
									public drmInitData: androidx.media2.exoplayer.external.drm.DrmInitData;
									public fullSegmentEncryptionKeyUri: string;
									public encryptionIV: string;
									public byterangeOffset: number;
									public byterangeLength: number;
									public hasGapTag: boolean;
									public compareTo(relativeStartTimeUs: java.lang.Long): number;
									public constructor(uri: string, byterangeOffset: number, byterangeLength: number, fullSegmentEncryptionKeyUri: string, encryptionIV: string);
									public constructor(url: string, initializationSegment: androidx.media2.exoplayer.external.source.hls.playlist.HlsMediaPlaylist.Segment, title: string, durationUs: number, relativeDiscontinuitySequence: number, relativeStartTimeUs: number, drmInitData: androidx.media2.exoplayer.external.drm.DrmInitData, fullSegmentEncryptionKeyUri: string, encryptionIV: string, byterangeOffset: number, byterangeLength: number, hasGapTag: boolean);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module hls {
						export module playlist {
							export abstract class HlsPlaylist extends androidx.media2.exoplayer.external.offline.FilterableManifest<androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylist> {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylist>;
								public baseUri: string;
								public tags: java.util.List<string>;
								public hasIndependentSegments: boolean;
								public constructor(baseUri: string, tags: java.util.List<string>, hasIndependentSegments: boolean);
								public copy(list0: java.util.List<androidx.media2.exoplayer.external.offline.StreamKey>): any;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module hls {
						export module playlist {
							export class HlsPlaylistParser extends androidx.media2.exoplayer.external.upstream.ParsingLoadable.Parser<androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylist> {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistParser>;
								public constructor(masterPlaylist: androidx.media2.exoplayer.external.source.hls.playlist.HlsMasterPlaylist);
								public parse(uri0: globalAndroid.net.Uri, inputStream1: java.io.InputStream): any;
								public constructor();
								public parse(uri: globalAndroid.net.Uri, inputStream: java.io.InputStream): androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylist;
							}
							export module HlsPlaylistParser {
								export class LineIterator extends java.lang.Object {
									public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistParser.LineIterator>;
									public hasNext(): boolean;
									public next(): string;
									public constructor(extraLines: java.util.Queue<string>, reader: java.io.BufferedReader);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module hls {
						export module playlist {
							export class HlsPlaylistParserFactory extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistParserFactory>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistParserFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									createPlaylistParser(): androidx.media2.exoplayer.external.upstream.ParsingLoadable.Parser<androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylist>;
									createPlaylistParser(hlsMasterPlaylist0: androidx.media2.exoplayer.external.source.hls.playlist.HlsMasterPlaylist): androidx.media2.exoplayer.external.upstream.ParsingLoadable.Parser<androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylist>;
								});
								public constructor();
								public createPlaylistParser(hlsMasterPlaylist0: androidx.media2.exoplayer.external.source.hls.playlist.HlsMasterPlaylist): androidx.media2.exoplayer.external.upstream.ParsingLoadable.Parser<androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylist>;
								public createPlaylistParser(): androidx.media2.exoplayer.external.upstream.ParsingLoadable.Parser<androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylist>;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module source {
					export module hls {
						export module playlist {
							export class HlsPlaylistTracker extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistTracker>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistTracker interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									start(uri0: globalAndroid.net.Uri, eventDispatcher1: androidx.media2.exoplayer.external.source.MediaSourceEventListener.EventDispatcher, primaryPlaylistListener2: androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistTracker.PrimaryPlaylistListener): void;
									stop(): void;
									addListener(playlistEventListener0: androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistTracker.PlaylistEventListener): void;
									removeListener(playlistEventListener0: androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistTracker.PlaylistEventListener): void;
									getMasterPlaylist(): androidx.media2.exoplayer.external.source.hls.playlist.HlsMasterPlaylist;
									getPlaylistSnapshot(uri0: globalAndroid.net.Uri, boolean1: boolean): androidx.media2.exoplayer.external.source.hls.playlist.HlsMediaPlaylist;
									getInitialStartTimeUs(): number;
									isSnapshotValid(uri0: globalAndroid.net.Uri): boolean;
									maybeThrowPrimaryPlaylistRefreshError(): void;
									maybeThrowPlaylistRefreshError(uri0: globalAndroid.net.Uri): void;
									refreshPlaylist(uri0: globalAndroid.net.Uri): void;
									isLive(): boolean;
								});
								public constructor();
								public getMasterPlaylist(): androidx.media2.exoplayer.external.source.hls.playlist.HlsMasterPlaylist;
								public getPlaylistSnapshot(uri0: globalAndroid.net.Uri, boolean1: boolean): androidx.media2.exoplayer.external.source.hls.playlist.HlsMediaPlaylist;
								public maybeThrowPrimaryPlaylistRefreshError(): void;
								public removeListener(playlistEventListener0: androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistTracker.PlaylistEventListener): void;
								public getInitialStartTimeUs(): number;
								public maybeThrowPlaylistRefreshError(uri0: globalAndroid.net.Uri): void;
								public isLive(): boolean;
								public stop(): void;
								public addListener(playlistEventListener0: androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistTracker.PlaylistEventListener): void;
								public isSnapshotValid(uri0: globalAndroid.net.Uri): boolean;
								public start(uri0: globalAndroid.net.Uri, eventDispatcher1: androidx.media2.exoplayer.external.source.MediaSourceEventListener.EventDispatcher, primaryPlaylistListener2: androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistTracker.PrimaryPlaylistListener): void;
								public refreshPlaylist(uri0: globalAndroid.net.Uri): void;
							}
							export module HlsPlaylistTracker {
								export class Factory extends java.lang.Object {
									public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistTracker.Factory>;
									/**
									 * Constructs a new instance of the androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistTracker$Factory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
									 */
									public constructor(implementation: {
										createTracker(hlsDataSourceFactory0: androidx.media2.exoplayer.external.source.hls.HlsDataSourceFactory, loadErrorHandlingPolicy1: androidx.media2.exoplayer.external.upstream.LoadErrorHandlingPolicy, hlsPlaylistParserFactory2: androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistParserFactory): androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistTracker;
									});
									public constructor();
									public createTracker(hlsDataSourceFactory0: androidx.media2.exoplayer.external.source.hls.HlsDataSourceFactory, loadErrorHandlingPolicy1: androidx.media2.exoplayer.external.upstream.LoadErrorHandlingPolicy, hlsPlaylistParserFactory2: androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistParserFactory): androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistTracker;
								}
								export class PlaylistEventListener extends java.lang.Object {
									public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistTracker.PlaylistEventListener>;
									/**
									 * Constructs a new instance of the androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistTracker$PlaylistEventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
									 */
									public constructor(implementation: {
										onPlaylistChanged(): void;
										onPlaylistError(uri0: globalAndroid.net.Uri, long1: number): boolean;
									});
									public constructor();
									public onPlaylistError(uri0: globalAndroid.net.Uri, long1: number): boolean;
									public onPlaylistChanged(): void;
								}
								export class PlaylistResetException extends java.io.IOException {
									public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistTracker.PlaylistResetException>;
									public url: globalAndroid.net.Uri;
									public constructor();
									public constructor(cause: java.lang.Throwable);
									public constructor(message: string);
									public constructor(url: globalAndroid.net.Uri);
									public constructor(message: string, cause: java.lang.Throwable);
									public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
								}
								export class PlaylistStuckException extends java.io.IOException {
									public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistTracker.PlaylistStuckException>;
									public url: globalAndroid.net.Uri;
									public constructor();
									public constructor(cause: java.lang.Throwable);
									public constructor(message: string);
									public constructor(url: globalAndroid.net.Uri);
									public constructor(message: string, cause: java.lang.Throwable);
									public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
								}
								export class PrimaryPlaylistListener extends java.lang.Object {
									public static class: java.lang.Class<androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistTracker.PrimaryPlaylistListener>;
									/**
									 * Constructs a new instance of the androidx.media2.exoplayer.external.source.hls.playlist.HlsPlaylistTracker$PrimaryPlaylistListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
									 */
									public constructor(implementation: {
										onPrimaryPlaylistRefreshed(hlsMediaPlaylist0: androidx.media2.exoplayer.external.source.hls.playlist.HlsMediaPlaylist): void;
									});
									public constructor();
									public onPrimaryPlaylistRefreshed(hlsMediaPlaylist0: androidx.media2.exoplayer.external.source.hls.playlist.HlsMediaPlaylist): void;
								}
							}
						}
					}
				}
			}
		}
	}
}


declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export class CaptionStyleCompat extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.text.CaptionStyleCompat>;
						public static EDGE_TYPE_NONE: number;
						public static EDGE_TYPE_OUTLINE: number;
						public static EDGE_TYPE_DROP_SHADOW: number;
						public static EDGE_TYPE_RAISED: number;
						public static EDGE_TYPE_DEPRESSED: number;
						public static USE_TRACK_COLOR_SETTINGS: number;
						public static DEFAULT: androidx.media2.exoplayer.external.text.CaptionStyleCompat;
						public foregroundColor: number;
						public backgroundColor: number;
						public windowColor: number;
						public edgeType: number;
						public edgeColor: number;
						public typeface: globalAndroid.graphics.Typeface;
						public static createFromCaptionStyle(captionStyle: globalAndroid.view.accessibility.CaptioningManager.CaptionStyle): androidx.media2.exoplayer.external.text.CaptionStyleCompat;
						public constructor(foregroundColor: number, backgroundColor: number, windowColor: number, edgeType: number, edgeColor: number, typeface: globalAndroid.graphics.Typeface);
					}
					export module CaptionStyleCompat {
						export class EdgeType extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.CaptionStyleCompat.EdgeType>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.text.CaptionStyleCompat$EdgeType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export class Cue extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.text.Cue>;
						public static EMPTY: androidx.media2.exoplayer.external.text.Cue;
						public static DIMEN_UNSET: number;
						public static TYPE_UNSET: number;
						public static ANCHOR_TYPE_START: number;
						public static ANCHOR_TYPE_MIDDLE: number;
						public static ANCHOR_TYPE_END: number;
						public static LINE_TYPE_FRACTION: number;
						public static LINE_TYPE_NUMBER: number;
						public static TEXT_SIZE_TYPE_FRACTIONAL: number;
						public static TEXT_SIZE_TYPE_FRACTIONAL_IGNORE_PADDING: number;
						public static TEXT_SIZE_TYPE_ABSOLUTE: number;
						public text: string;
						public textAlignment: globalAndroid.text.Layout.Alignment;
						public bitmap: globalAndroid.graphics.Bitmap;
						public line: number;
						public lineType: number;
						public lineAnchor: number;
						public position: number;
						public positionAnchor: number;
						public size: number;
						public bitmapHeight: number;
						public windowColorSet: boolean;
						public windowColor: number;
						public textSizeType: number;
						public textSize: number;
						public constructor(text: string, textAlignment: globalAndroid.text.Layout.Alignment, line: number, lineType: number, lineAnchor: number, position: number, positionAnchor: number, size: number, textSizeType: number, textSize: number);
						public constructor(text: string, textAlignment: globalAndroid.text.Layout.Alignment, line: number, lineType: number, lineAnchor: number, position: number, positionAnchor: number, size: number, windowColorSet: boolean, windowColor: number);
						public constructor(bitmap: globalAndroid.graphics.Bitmap, horizontalPosition: number, horizontalPositionAnchor: number, verticalPosition: number, verticalPositionAnchor: number, width: number, height: number);
						public constructor(text: string, textAlignment: globalAndroid.text.Layout.Alignment, line: number, lineType: number, lineAnchor: number, position: number, positionAnchor: number, size: number);
						public constructor(text: string);
					}
					export module Cue {
						export class AnchorType extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.Cue.AnchorType>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.text.Cue$AnchorType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
						export class LineType extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.Cue.LineType>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.text.Cue$LineType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
						export class TextSizeType extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.Cue.TextSizeType>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.text.Cue$TextSizeType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export abstract class SimpleSubtitleDecoder extends androidx.media2.exoplayer.external.decoder.SimpleDecoder<androidx.media2.exoplayer.external.text.SubtitleInputBuffer,androidx.media2.exoplayer.external.text.SubtitleOutputBuffer,androidx.media2.exoplayer.external.text.SubtitleDecoderException> implements androidx.media2.exoplayer.external.text.SubtitleDecoder  {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.text.SimpleSubtitleDecoder>;
						public decode(bytes0: native.Array<number>, int1: number, boolean2: boolean): androidx.media2.exoplayer.external.text.Subtitle;
						public createUnexpectedDecodeException(throwable0: java.lang.Throwable): any;
						public createOutputBuffer(): any;
						public releaseOutputBuffer(outputBuffer: any): void;
						public constructor(inputBuffers: native.Array<any>, outputBuffers: native.Array<any>);
						public createInputBuffer(): androidx.media2.exoplayer.external.text.SubtitleInputBuffer;
						public dequeueInputBuffer(): any;
						public flush(): void;
						public release(): void;
						public getName(): string;
						public createOutputBuffer(): androidx.media2.exoplayer.external.text.SubtitleOutputBuffer;
						public releaseOutputBuffer(buffer: androidx.media2.exoplayer.external.text.SubtitleOutputBuffer): void;
						public constructor(name: string);
						public createInputBuffer(): any;
						public createUnexpectedDecodeException(error: java.lang.Throwable): androidx.media2.exoplayer.external.text.SubtitleDecoderException;
						public decode(decoderInputBuffer0: any, outputBuffer1: any, boolean2: boolean): any;
						public queueInputBuffer(object0: any): void;
						public queueInputBuffer(inputBuffer: any): void;
						public decode(inputBuffer: androidx.media2.exoplayer.external.text.SubtitleInputBuffer, outputBuffer: androidx.media2.exoplayer.external.text.SubtitleOutputBuffer, reset: boolean): androidx.media2.exoplayer.external.text.SubtitleDecoderException;
						public dequeueOutputBuffer(): any;
						public setPositionUs(timeUs: number): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export class SimpleSubtitleOutputBuffer extends androidx.media2.exoplayer.external.text.SubtitleOutputBuffer {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.text.SimpleSubtitleOutputBuffer>;
						public constructor(owner: androidx.media2.exoplayer.external.text.SimpleSubtitleDecoder);
						public getCues(timeUs: number): java.util.List<androidx.media2.exoplayer.external.text.Cue>;
						public constructor();
						public getEventTimeCount(): number;
						public release(): void;
						public getNextEventTimeIndex(timeUs: number): number;
						public getEventTime(index: number): number;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export class Subtitle extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.text.Subtitle>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.text.Subtitle interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getNextEventTimeIndex(long0: number): number;
							getEventTimeCount(): number;
							getEventTime(int0: number): number;
							getCues(long0: number): java.util.List<androidx.media2.exoplayer.external.text.Cue>;
						});
						public constructor();
						public getNextEventTimeIndex(long0: number): number;
						public getEventTimeCount(): number;
						public getEventTime(int0: number): number;
						public getCues(long0: number): java.util.List<androidx.media2.exoplayer.external.text.Cue>;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export class SubtitleDecoder extends androidx.media2.exoplayer.external.decoder.Decoder<androidx.media2.exoplayer.external.text.SubtitleInputBuffer,androidx.media2.exoplayer.external.text.SubtitleOutputBuffer,androidx.media2.exoplayer.external.text.SubtitleDecoderException> {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.text.SubtitleDecoder>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.text.SubtitleDecoder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setPositionUs(long0: number): void;
							getName(): string;
							dequeueInputBuffer(): any;
							queueInputBuffer(object0: any): void;
							dequeueOutputBuffer(): any;
							flush(): void;
							release(): void;
						});
						public constructor();
						public queueInputBuffer(object0: any): void;
						public dequeueInputBuffer(): any;
						public flush(): void;
						public release(): void;
						public setPositionUs(long0: number): void;
						public getName(): string;
						public dequeueOutputBuffer(): any;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export class SubtitleDecoderException extends java.lang.Exception {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.text.SubtitleDecoderException>;
						public constructor();
						public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						public constructor(message: string, cause: java.lang.Throwable);
						public constructor(cause: java.lang.Throwable);
						public constructor(message: string);
						public constructor(cause: java.lang.Exception);
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export class SubtitleDecoderFactory extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.text.SubtitleDecoderFactory>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.text.SubtitleDecoderFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							supportsFormat(format0: androidx.media2.exoplayer.external.Format): boolean;
							createDecoder(format0: androidx.media2.exoplayer.external.Format): androidx.media2.exoplayer.external.text.SubtitleDecoder;
							<clinit>(): void;
						});
						public constructor();
						public static DEFAULT: androidx.media2.exoplayer.external.text.SubtitleDecoderFactory;
						public createDecoder(format0: androidx.media2.exoplayer.external.Format): androidx.media2.exoplayer.external.text.SubtitleDecoder;
						public supportsFormat(format0: androidx.media2.exoplayer.external.Format): boolean;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export class SubtitleInputBuffer extends androidx.media2.exoplayer.external.decoder.DecoderInputBuffer {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.text.SubtitleInputBuffer>;
						public subsampleOffsetUs: number;
						public constructor();
						public constructor(bufferReplacementMode: number);
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export abstract class SubtitleOutputBuffer extends androidx.media2.exoplayer.external.decoder.OutputBuffer implements androidx.media2.exoplayer.external.text.Subtitle {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.text.SubtitleOutputBuffer>;
						public setContent(timeUs: number, subtitle: androidx.media2.exoplayer.external.text.Subtitle, subsampleOffsetUs: number): void;
						public getCues(timeUs: number): java.util.List<androidx.media2.exoplayer.external.text.Cue>;
						public constructor();
						public getEventTimeCount(): number;
						public clear(): void;
						public getNextEventTimeIndex(timeUs: number): number;
						public release(): void;
						public getEventTime(index: number): number;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export class TextOutput extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.text.TextOutput>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.text.TextOutput interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onCues(list0: java.util.List<androidx.media2.exoplayer.external.text.Cue>): void;
						});
						public constructor();
						public onCues(list0: java.util.List<androidx.media2.exoplayer.external.text.Cue>): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export class TextRenderer extends androidx.media2.exoplayer.external.BaseRenderer implements globalAndroid.os.Handler.Callback {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.text.TextRenderer>;
						public render(positionUs: number, elapsedRealtimeUs: number): void;
						public handleMessage(msg: globalAndroid.os.Message): boolean;
						public isCurrentStreamFinal(): boolean;
						public getStream(): androidx.media2.exoplayer.external.source.SampleStream;
						public resetPosition(positionUs: number): void;
						public constructor(trackType: number);
						public supportsFormat(format: androidx.media2.exoplayer.external.Format): number;
						public setOperatingRate(float0: number): void;
						public onDisabled(): void;
						public isEnded(): boolean;
						public onStreamChanged(formats: native.Array<androidx.media2.exoplayer.external.Format>, offsetUs: number): void;
						public onPositionReset(positionUs: number, joining: boolean): void;
						public setCurrentStreamFinal(): void;
						public constructor(output: androidx.media2.exoplayer.external.text.TextOutput, outputLooper: globalAndroid.os.Looper);
						public getMediaClock(): androidx.media2.exoplayer.external.util.MediaClock;
						public hasReadStreamToEnd(): boolean;
						public isReady(): boolean;
						public getCapabilities(): androidx.media2.exoplayer.external.RendererCapabilities;
						public disable(): void;
						public getTrackType(): number;
						public supportsMixedMimeTypeAdaptation(): number;
						public stop(): void;
						public enable(configuration: androidx.media2.exoplayer.external.RendererConfiguration, formats: native.Array<androidx.media2.exoplayer.external.Format>, stream: androidx.media2.exoplayer.external.source.SampleStream, positionUs: number, joining: boolean, offsetUs: number): void;
						public replaceStream(formats: native.Array<androidx.media2.exoplayer.external.Format>, stream: androidx.media2.exoplayer.external.source.SampleStream, offsetUs: number): void;
						public constructor(output: androidx.media2.exoplayer.external.text.TextOutput, outputLooper: globalAndroid.os.Looper, decoderFactory: androidx.media2.exoplayer.external.text.SubtitleDecoderFactory);
						public start(): void;
						public setIndex(index: number): void;
						public getState(): number;
						public maybeThrowStreamError(): void;
						public getReadingPositionUs(): number;
						public handleMessage(what: number, object: any): void;
						public reset(): void;
					}
					export module TextRenderer {
						export class ReplacementState extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.TextRenderer.ReplacementState>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.text.TextRenderer$ReplacementState interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module cea {
						export class Cea608Decoder extends androidx.media2.exoplayer.external.text.cea.CeaDecoder {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.cea.Cea608Decoder>;
							public constructor();
							public getName(): string;
							public constructor(mimeType: string, accessibilityChannel: number);
							public flush(): void;
							public setPositionUs(positionUs: number): void;
							public release(): void;
							public createSubtitle(): androidx.media2.exoplayer.external.text.Subtitle;
							public decode(subtitleInputBuffer0: androidx.media2.exoplayer.external.text.SubtitleInputBuffer): void;
							public isNewSubtitleDataAvailable(): boolean;
							public decode(inputBuffer: androidx.media2.exoplayer.external.text.SubtitleInputBuffer): void;
						}
						export module Cea608Decoder {
							export class CueBuilder extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.text.cea.Cea608Decoder.CueBuilder>;
								public backspace(): void;
								public reset(captionMode: number): void;
								public setCaptionMode(captionMode: number): void;
								public setCaptionRowCount(captionRowCount: number): void;
								public build(forcedPositionAnchor: number): androidx.media2.exoplayer.external.text.Cue;
								public isEmpty(): boolean;
								public constructor(captionMode: number, captionRowCount: number);
								public append(text: string): void;
								public rollUp(): void;
								public setStyle(style: number, underline: boolean): void;
							}
							export module CueBuilder {
								export class CueStyle extends java.lang.Object {
									public static class: java.lang.Class<androidx.media2.exoplayer.external.text.cea.Cea608Decoder.CueBuilder.CueStyle>;
									public style: number;
									public underline: boolean;
									public start: number;
									public constructor(style: number, underline: boolean, start: number);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module cea {
						export class Cea708Cue extends androidx.media2.exoplayer.external.text.Cue implements java.lang.Comparable<androidx.media2.exoplayer.external.text.cea.Cea708Cue>  {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.cea.Cea708Cue>;
							public static PRIORITY_UNSET: number;
							public priority: number;
							public constructor(text: string, textAlignment: globalAndroid.text.Layout.Alignment, line: number, lineType: number, lineAnchor: number, position: number, positionAnchor: number, size: number, windowColorSet: boolean, windowColor: number, priority: number);
							public constructor(text: string);
							public constructor(text: string, textAlignment: globalAndroid.text.Layout.Alignment, line: number, lineType: number, lineAnchor: number, position: number, positionAnchor: number, size: number);
							public constructor(text: string, textAlignment: globalAndroid.text.Layout.Alignment, line: number, lineType: number, lineAnchor: number, position: number, positionAnchor: number, size: number, textSizeType: number, textSize: number);
							public constructor(bitmap: globalAndroid.graphics.Bitmap, horizontalPosition: number, horizontalPositionAnchor: number, verticalPosition: number, verticalPositionAnchor: number, width: number, height: number);
							public compareTo(other: androidx.media2.exoplayer.external.text.cea.Cea708Cue): number;
							public constructor(text: string, textAlignment: globalAndroid.text.Layout.Alignment, line: number, lineType: number, lineAnchor: number, position: number, positionAnchor: number, size: number, windowColorSet: boolean, windowColor: number);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module cea {
						export class Cea708Decoder extends androidx.media2.exoplayer.external.text.cea.CeaDecoder {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.cea.Cea708Decoder>;
							public constructor();
							public getName(): string;
							public flush(): void;
							public setPositionUs(positionUs: number): void;
							public createSubtitle(): androidx.media2.exoplayer.external.text.Subtitle;
							public decode(subtitleInputBuffer0: androidx.media2.exoplayer.external.text.SubtitleInputBuffer): void;
							public isNewSubtitleDataAvailable(): boolean;
							public decode(inputBuffer: androidx.media2.exoplayer.external.text.SubtitleInputBuffer): void;
							public constructor(accessibilityChannel: number, initializationData: java.util.List<native.Array<number>>);
						}
						export module Cea708Decoder {
							export class CueBuilder extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.text.cea.Cea708Decoder.CueBuilder>;
								public static COLOR_SOLID_WHITE: number;
								public static COLOR_SOLID_BLACK: number;
								public static COLOR_TRANSPARENT: number;
								public setPenColor(foregroundColor: number, backgroundColor: number, edgeColor: number): void;
								public constructor();
								public isDefined(): boolean;
								public append(text: string): void;
								public static getArgbColorFromCeaColor(red: number, green: number, blue: number): number;
								public setPenLocation(row: number, column: number): void;
								public backspace(): void;
								public clear(): void;
								public setWindowAttributes(fillColor: number, borderColor: number, wordWrapToggle: boolean, borderType: number, printDirection: number, scrollDirection: number, justification: number): void;
								public buildSpannableString(): globalAndroid.text.SpannableString;
								public isEmpty(): boolean;
								public reset(): void;
								public setPenAttributes(textTag: number, offset: number, penSize: number, italicsToggle: boolean, underlineToggle: boolean, edgeType: number, fontStyle: number): void;
								public static getArgbColorFromCeaColor(red: number, green: number, blue: number, opacity: number): number;
								public setVisibility(visible: boolean): void;
								public defineWindow(visible: boolean, rowLock: boolean, columnLock: boolean, priority: number, relativePositioning: boolean, verticalAnchor: number, horizontalAnchor: number, rowCount: number, columnCount: number, anchorId: number, windowStyleId: number, penStyleId: number): void;
								public build(): androidx.media2.exoplayer.external.text.cea.Cea708Cue;
								public isVisible(): boolean;
							}
							export class DtvCcPacket extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.text.cea.Cea708Decoder.DtvCcPacket>;
								public sequenceNumber: number;
								public packetSize: number;
								public packetData: native.Array<number>;
								public constructor(sequenceNumber: number, packetSize: number);
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module cea {
						export class Cea708InitializationData extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.cea.Cea708InitializationData>;
							public isWideAspectRatio: boolean;
							public static fromData(initializationData: java.util.List<native.Array<number>>): androidx.media2.exoplayer.external.text.cea.Cea708InitializationData;
							public static buildData(isWideAspectRatio: boolean): java.util.List<native.Array<number>>;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module cea {
						export abstract class CeaDecoder extends java.lang.Object implements androidx.media2.exoplayer.external.text.SubtitleDecoder {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.cea.CeaDecoder>;
							public constructor();
							public dequeueInputBuffer(): any;
							public dequeueInputBuffer(): androidx.media2.exoplayer.external.text.SubtitleInputBuffer;
							public setPositionUs(positionUs: number): void;
							public release(): void;
							public queueInputBuffer(inputBuffer: androidx.media2.exoplayer.external.text.SubtitleInputBuffer): void;
							public createSubtitle(): androidx.media2.exoplayer.external.text.Subtitle;
							public dequeueOutputBuffer(): androidx.media2.exoplayer.external.text.SubtitleOutputBuffer;
							public releaseOutputBuffer(outputBuffer: androidx.media2.exoplayer.external.text.SubtitleOutputBuffer): void;
							public getName(): string;
							public dequeueOutputBuffer(): any;
							public flush(): void;
							public queueInputBuffer(object0: any): void;
							public decode(subtitleInputBuffer0: androidx.media2.exoplayer.external.text.SubtitleInputBuffer): void;
							public isNewSubtitleDataAvailable(): boolean;
						}
						export module CeaDecoder {
							export class CeaInputBuffer extends androidx.media2.exoplayer.external.text.SubtitleInputBuffer implements java.lang.Comparable<androidx.media2.exoplayer.external.text.cea.CeaDecoder.CeaInputBuffer>  {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.text.cea.CeaDecoder.CeaInputBuffer>;
								public compareTo(other: androidx.media2.exoplayer.external.text.cea.CeaDecoder.CeaInputBuffer): number;
							}
							export class CeaOutputBuffer extends androidx.media2.exoplayer.external.text.SubtitleOutputBuffer {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.text.cea.CeaDecoder.CeaOutputBuffer>;
								public getNextEventTimeIndex(timeUs: number): number;
								public getEventTime(index: number): number;
								public getCues(timeUs: number): java.util.List<androidx.media2.exoplayer.external.text.Cue>;
								public getEventTimeCount(): number;
								public release(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module cea {
						export class CeaSubtitle extends java.lang.Object implements androidx.media2.exoplayer.external.text.Subtitle {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.cea.CeaSubtitle>;
							public getNextEventTimeIndex(timeUs: number): number;
							public constructor(cues: java.util.List<androidx.media2.exoplayer.external.text.Cue>);
							public getEventTime(index: number): number;
							public getCues(timeUs: number): java.util.List<androidx.media2.exoplayer.external.text.Cue>;
							public getEventTimeCount(): number;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module cea {
						export class CeaUtil extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.cea.CeaUtil>;
							public static USER_DATA_IDENTIFIER_GA94: number;
							public static USER_DATA_TYPE_CODE_MPEG_CC: number;
							public static consumeCcData(presentationTimeUs: number, ccDataBuffer: androidx.media2.exoplayer.external.util.ParsableByteArray, outputs: native.Array<androidx.media2.exoplayer.external.extractor.TrackOutput>): void;
							public static consume(presentationTimeUs: number, seiBuffer: androidx.media2.exoplayer.external.util.ParsableByteArray, outputs: native.Array<androidx.media2.exoplayer.external.extractor.TrackOutput>): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module dvb {
						export class DvbDecoder extends androidx.media2.exoplayer.external.text.SimpleSubtitleDecoder {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.dvb.DvbDecoder>;
							public dequeueInputBuffer(): any;
							public decode(inputBuffer: androidx.media2.exoplayer.external.text.SubtitleInputBuffer, outputBuffer: androidx.media2.exoplayer.external.text.SubtitleOutputBuffer, reset: boolean): androidx.media2.exoplayer.external.text.SubtitleDecoderException;
							public constructor(name: string);
							public release(): void;
							public setPositionUs(timeUs: number): void;
							public constructor(initializationData: java.util.List<native.Array<number>>);
							public getName(): string;
							public dequeueOutputBuffer(): any;
							public queueInputBuffer(inputBuffer: any): void;
							public queueInputBuffer(object0: any): void;
							public flush(): void;
							public constructor(inputBuffers: native.Array<any>, outputBuffers: native.Array<any>);
							public decode(bytes0: native.Array<number>, int1: number, boolean2: boolean): androidx.media2.exoplayer.external.text.Subtitle;
							public decode(data: native.Array<number>, length: number, reset: boolean): androidx.media2.exoplayer.external.text.Subtitle;
							public decode(decoderInputBuffer0: any, outputBuffer1: any, boolean2: boolean): any;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module dvb {
						export class DvbParser extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.dvb.DvbParser>;
							public decode(data: native.Array<number>, limit: number): java.util.List<androidx.media2.exoplayer.external.text.Cue>;
							public constructor(subtitlePageId: number, ancillaryPageId: number);
							public reset(): void;
						}
						export module DvbParser {
							export class ClutDefinition extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.text.dvb.DvbParser.ClutDefinition>;
								public id: number;
								public clutEntries2Bit: native.Array<number>;
								public clutEntries4Bit: native.Array<number>;
								public clutEntries8Bit: native.Array<number>;
								public constructor(id: number, clutEntries2Bit: native.Array<number>, clutEntries4Bit: native.Array<number>, clutEntries8bit: native.Array<number>);
							}
							export class DisplayDefinition extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.text.dvb.DvbParser.DisplayDefinition>;
								public width: number;
								public height: number;
								public horizontalPositionMinimum: number;
								public horizontalPositionMaximum: number;
								public verticalPositionMinimum: number;
								public verticalPositionMaximum: number;
								public constructor(width: number, height: number, horizontalPositionMinimum: number, horizontalPositionMaximum: number, verticalPositionMinimum: number, verticalPositionMaximum: number);
							}
							export class ObjectData extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.text.dvb.DvbParser.ObjectData>;
								public id: number;
								public nonModifyingColorFlag: boolean;
								public topFieldData: native.Array<number>;
								public bottomFieldData: native.Array<number>;
								public constructor(id: number, nonModifyingColorFlag: boolean, topFieldData: native.Array<number>, bottomFieldData: native.Array<number>);
							}
							export class PageComposition extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.text.dvb.DvbParser.PageComposition>;
								public timeOutSecs: number;
								public version: number;
								public state: number;
								public regions: globalAndroid.util.SparseArray<androidx.media2.exoplayer.external.text.dvb.DvbParser.PageRegion>;
								public constructor(timeoutSecs: number, version: number, state: number, regions: globalAndroid.util.SparseArray<androidx.media2.exoplayer.external.text.dvb.DvbParser.PageRegion>);
							}
							export class PageRegion extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.text.dvb.DvbParser.PageRegion>;
								public horizontalAddress: number;
								public verticalAddress: number;
								public constructor(horizontalAddress: number, verticalAddress: number);
							}
							export class RegionComposition extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.text.dvb.DvbParser.RegionComposition>;
								public id: number;
								public fillFlag: boolean;
								public width: number;
								public height: number;
								public levelOfCompatibility: number;
								public depth: number;
								public clutId: number;
								public pixelCode8Bit: number;
								public pixelCode4Bit: number;
								public pixelCode2Bit: number;
								public regionObjects: globalAndroid.util.SparseArray<androidx.media2.exoplayer.external.text.dvb.DvbParser.RegionObject>;
								public constructor(id: number, fillFlag: boolean, width: number, height: number, levelOfCompatibility: number, depth: number, clutId: number, pixelCode8Bit: number, pixelCode4Bit: number, pixelCode2Bit: number, regionObjects: globalAndroid.util.SparseArray<androidx.media2.exoplayer.external.text.dvb.DvbParser.RegionObject>);
								public mergeFrom(otherRegionComposition: androidx.media2.exoplayer.external.text.dvb.DvbParser.RegionComposition): void;
							}
							export class RegionObject extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.text.dvb.DvbParser.RegionObject>;
								public type: number;
								public provider: number;
								public horizontalPosition: number;
								public verticalPosition: number;
								public foregroundPixelCode: number;
								public backgroundPixelCode: number;
								public constructor(type: number, provider: number, horizontalPosition: number, verticalPosition: number, foregroundPixelCode: number, backgroundPixelCode: number);
							}
							export class SubtitleService extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.text.dvb.DvbParser.SubtitleService>;
								public subtitlePageId: number;
								public ancillaryPageId: number;
								public regions: globalAndroid.util.SparseArray<androidx.media2.exoplayer.external.text.dvb.DvbParser.RegionComposition>;
								public cluts: globalAndroid.util.SparseArray<androidx.media2.exoplayer.external.text.dvb.DvbParser.ClutDefinition>;
								public objects: globalAndroid.util.SparseArray<androidx.media2.exoplayer.external.text.dvb.DvbParser.ObjectData>;
								public ancillaryCluts: globalAndroid.util.SparseArray<androidx.media2.exoplayer.external.text.dvb.DvbParser.ClutDefinition>;
								public ancillaryObjects: globalAndroid.util.SparseArray<androidx.media2.exoplayer.external.text.dvb.DvbParser.ObjectData>;
								public displayDefinition: androidx.media2.exoplayer.external.text.dvb.DvbParser.DisplayDefinition;
								public pageComposition: androidx.media2.exoplayer.external.text.dvb.DvbParser.PageComposition;
								public reset(): void;
								public constructor(subtitlePageId: number, ancillaryPageId: number);
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module dvb {
						export class DvbSubtitle extends java.lang.Object implements androidx.media2.exoplayer.external.text.Subtitle {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.dvb.DvbSubtitle>;
							public getNextEventTimeIndex(timeUs: number): number;
							public constructor(cues: java.util.List<androidx.media2.exoplayer.external.text.Cue>);
							public getEventTime(index: number): number;
							public getCues(timeUs: number): java.util.List<androidx.media2.exoplayer.external.text.Cue>;
							public getEventTimeCount(): number;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module pgs {
						export class PgsDecoder extends androidx.media2.exoplayer.external.text.SimpleSubtitleDecoder {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.pgs.PgsDecoder>;
							public constructor();
							public dequeueInputBuffer(): any;
							public decode(inputBuffer: androidx.media2.exoplayer.external.text.SubtitleInputBuffer, outputBuffer: androidx.media2.exoplayer.external.text.SubtitleOutputBuffer, reset: boolean): androidx.media2.exoplayer.external.text.SubtitleDecoderException;
							public constructor(name: string);
							public release(): void;
							public setPositionUs(timeUs: number): void;
							public getName(): string;
							public dequeueOutputBuffer(): any;
							public decode(data: native.Array<number>, size: number, reset: boolean): androidx.media2.exoplayer.external.text.Subtitle;
							public queueInputBuffer(inputBuffer: any): void;
							public queueInputBuffer(object0: any): void;
							public flush(): void;
							public constructor(inputBuffers: native.Array<any>, outputBuffers: native.Array<any>);
							public decode(bytes0: native.Array<number>, int1: number, boolean2: boolean): androidx.media2.exoplayer.external.text.Subtitle;
							public decode(decoderInputBuffer0: any, outputBuffer1: any, boolean2: boolean): any;
						}
						export module PgsDecoder {
							export class CueBuilder extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.text.pgs.PgsDecoder.CueBuilder>;
								public build(): androidx.media2.exoplayer.external.text.Cue;
								public reset(): void;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module pgs {
						export class PgsSubtitle extends java.lang.Object implements androidx.media2.exoplayer.external.text.Subtitle {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.pgs.PgsSubtitle>;
							public getNextEventTimeIndex(timeUs: number): number;
							public constructor(cues: java.util.List<androidx.media2.exoplayer.external.text.Cue>);
							public getEventTime(index: number): number;
							public getCues(timeUs: number): java.util.List<androidx.media2.exoplayer.external.text.Cue>;
							public getEventTimeCount(): number;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module ssa {
						export class SsaDecoder extends androidx.media2.exoplayer.external.text.SimpleSubtitleDecoder {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.ssa.SsaDecoder>;
							public constructor();
							public dequeueInputBuffer(): any;
							public decode(inputBuffer: androidx.media2.exoplayer.external.text.SubtitleInputBuffer, outputBuffer: androidx.media2.exoplayer.external.text.SubtitleOutputBuffer, reset: boolean): androidx.media2.exoplayer.external.text.SubtitleDecoderException;
							public constructor(name: string);
							public release(): void;
							public decode(bytes: native.Array<number>, length: number, reset: boolean): androidx.media2.exoplayer.external.text.Subtitle;
							public setPositionUs(timeUs: number): void;
							public constructor(initializationData: java.util.List<native.Array<number>>);
							public static parseTimecodeUs(timeString: string): number;
							public getName(): string;
							public dequeueOutputBuffer(): any;
							public queueInputBuffer(inputBuffer: any): void;
							public queueInputBuffer(object0: any): void;
							public flush(): void;
							public constructor(inputBuffers: native.Array<any>, outputBuffers: native.Array<any>);
							public decode(bytes0: native.Array<number>, int1: number, boolean2: boolean): androidx.media2.exoplayer.external.text.Subtitle;
							public decode(decoderInputBuffer0: any, outputBuffer1: any, boolean2: boolean): any;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module ssa {
						export class SsaSubtitle extends java.lang.Object implements androidx.media2.exoplayer.external.text.Subtitle {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.ssa.SsaSubtitle>;
							public getNextEventTimeIndex(timeUs: number): number;
							public getEventTime(index: number): number;
							public getCues(timeUs: number): java.util.List<androidx.media2.exoplayer.external.text.Cue>;
							public getEventTimeCount(): number;
							public constructor(cues: native.Array<androidx.media2.exoplayer.external.text.Cue>, cueTimesUs: native.Array<number>);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module subrip {
						export class SubripDecoder extends androidx.media2.exoplayer.external.text.SimpleSubtitleDecoder {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.subrip.SubripDecoder>;
							public constructor();
							public dequeueInputBuffer(): any;
							public decode(inputBuffer: androidx.media2.exoplayer.external.text.SubtitleInputBuffer, outputBuffer: androidx.media2.exoplayer.external.text.SubtitleOutputBuffer, reset: boolean): androidx.media2.exoplayer.external.text.SubtitleDecoderException;
							public constructor(name: string);
							public release(): void;
							public decode(bytes: native.Array<number>, length: number, reset: boolean): androidx.media2.exoplayer.external.text.Subtitle;
							public setPositionUs(timeUs: number): void;
							public getName(): string;
							public dequeueOutputBuffer(): any;
							public queueInputBuffer(inputBuffer: any): void;
							public queueInputBuffer(object0: any): void;
							public flush(): void;
							public constructor(inputBuffers: native.Array<any>, outputBuffers: native.Array<any>);
							public decode(bytes0: native.Array<number>, int1: number, boolean2: boolean): androidx.media2.exoplayer.external.text.Subtitle;
							public decode(decoderInputBuffer0: any, outputBuffer1: any, boolean2: boolean): any;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module subrip {
						export class SubripSubtitle extends java.lang.Object implements androidx.media2.exoplayer.external.text.Subtitle {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.subrip.SubripSubtitle>;
							public getNextEventTimeIndex(timeUs: number): number;
							public getEventTime(index: number): number;
							public getCues(timeUs: number): java.util.List<androidx.media2.exoplayer.external.text.Cue>;
							public getEventTimeCount(): number;
							public constructor(cues: native.Array<androidx.media2.exoplayer.external.text.Cue>, cueTimesUs: native.Array<number>);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module ttml {
						export class TtmlDecoder extends androidx.media2.exoplayer.external.text.SimpleSubtitleDecoder {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.ttml.TtmlDecoder>;
							public constructor();
							public dequeueInputBuffer(): any;
							public decode(inputBuffer: androidx.media2.exoplayer.external.text.SubtitleInputBuffer, outputBuffer: androidx.media2.exoplayer.external.text.SubtitleOutputBuffer, reset: boolean): androidx.media2.exoplayer.external.text.SubtitleDecoderException;
							public constructor(name: string);
							public release(): void;
							public decode(bytes: native.Array<number>, length: number, reset: boolean): androidx.media2.exoplayer.external.text.Subtitle;
							public setPositionUs(timeUs: number): void;
							public getName(): string;
							public dequeueOutputBuffer(): any;
							public queueInputBuffer(inputBuffer: any): void;
							public queueInputBuffer(object0: any): void;
							public flush(): void;
							public constructor(inputBuffers: native.Array<any>, outputBuffers: native.Array<any>);
							public decode(bytes0: native.Array<number>, int1: number, boolean2: boolean): androidx.media2.exoplayer.external.text.Subtitle;
							public decode(decoderInputBuffer0: any, outputBuffer1: any, boolean2: boolean): any;
						}
						export module TtmlDecoder {
							export class CellResolution extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.text.ttml.TtmlDecoder.CellResolution>;
							}
							export class FrameAndTickRate extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.text.ttml.TtmlDecoder.FrameAndTickRate>;
							}
							export class TtsExtent extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.text.ttml.TtmlDecoder.TtsExtent>;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module ttml {
						export class TtmlNode extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.ttml.TtmlNode>;
							public static TAG_TT: string;
							public static TAG_HEAD: string;
							public static TAG_BODY: string;
							public static TAG_DIV: string;
							public static TAG_P: string;
							public static TAG_SPAN: string;
							public static TAG_BR: string;
							public static TAG_STYLE: string;
							public static TAG_STYLING: string;
							public static TAG_LAYOUT: string;
							public static TAG_REGION: string;
							public static TAG_METADATA: string;
							public static TAG_IMAGE: string;
							public static TAG_DATA: string;
							public static TAG_INFORMATION: string;
							public static ANONYMOUS_REGION_ID: string;
							public static ATTR_ID: string;
							public static ATTR_TTS_ORIGIN: string;
							public static ATTR_TTS_EXTENT: string;
							public static ATTR_TTS_DISPLAY_ALIGN: string;
							public static ATTR_TTS_BACKGROUND_COLOR: string;
							public static ATTR_TTS_FONT_STYLE: string;
							public static ATTR_TTS_FONT_SIZE: string;
							public static ATTR_TTS_FONT_FAMILY: string;
							public static ATTR_TTS_FONT_WEIGHT: string;
							public static ATTR_TTS_COLOR: string;
							public static ATTR_TTS_TEXT_DECORATION: string;
							public static ATTR_TTS_TEXT_ALIGN: string;
							public static LINETHROUGH: string;
							public static NO_LINETHROUGH: string;
							public static UNDERLINE: string;
							public static NO_UNDERLINE: string;
							public static ITALIC: string;
							public static BOLD: string;
							public static LEFT: string;
							public static CENTER: string;
							public static RIGHT: string;
							public static START: string;
							public static END: string;
							public tag: string;
							public text: string;
							public isTextNode: boolean;
							public startTimeUs: number;
							public endTimeUs: number;
							public style: androidx.media2.exoplayer.external.text.ttml.TtmlStyle;
							public regionId: string;
							public imageId: string;
							public addChild(child: androidx.media2.exoplayer.external.text.ttml.TtmlNode): void;
							public getChildCount(): number;
							public getStyleIds(): native.Array<string>;
							public static buildTextNode(text: string): androidx.media2.exoplayer.external.text.ttml.TtmlNode;
							public getCues(timeUs: number, globalStyles: java.util.Map<string,androidx.media2.exoplayer.external.text.ttml.TtmlStyle>, regionMap: java.util.Map<string,androidx.media2.exoplayer.external.text.ttml.TtmlRegion>, imageMap: java.util.Map<string,string>): java.util.List<androidx.media2.exoplayer.external.text.Cue>;
							public static buildNode(tag: string, startTimeUs: number, endTimeUs: number, style: androidx.media2.exoplayer.external.text.ttml.TtmlStyle, styleIds: native.Array<string>, regionId: string, imageId: string): androidx.media2.exoplayer.external.text.ttml.TtmlNode;
							public isActive(timeUs: number): boolean;
							public getEventTimesUs(): native.Array<number>;
							public getChild(index: number): androidx.media2.exoplayer.external.text.ttml.TtmlNode;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module ttml {
						export class TtmlRegion extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.ttml.TtmlRegion>;
							public id: string;
							public position: number;
							public line: number;
							public lineType: number;
							public lineAnchor: number;
							public width: number;
							public height: number;
							public textSizeType: number;
							public textSize: number;
							public constructor(id: string, position: number, line: number, lineType: number, lineAnchor: number, width: number, height: number, textSizeType: number, textSize: number);
							public constructor(id: string);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module ttml {
						export class TtmlRenderUtil extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.ttml.TtmlRenderUtil>;
							public static resolveStyle(style: androidx.media2.exoplayer.external.text.ttml.TtmlStyle, styleIds: native.Array<string>, globalStyles: java.util.Map<string,androidx.media2.exoplayer.external.text.ttml.TtmlStyle>): androidx.media2.exoplayer.external.text.ttml.TtmlStyle;
							public static applyStylesToSpan(builder: globalAndroid.text.SpannableStringBuilder, start: number, end: number, style: androidx.media2.exoplayer.external.text.ttml.TtmlStyle): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module ttml {
						export class TtmlStyle extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.ttml.TtmlStyle>;
							public static UNSPECIFIED: number;
							public static STYLE_NORMAL: number;
							public static STYLE_BOLD: number;
							public static STYLE_ITALIC: number;
							public static STYLE_BOLD_ITALIC: number;
							public static FONT_SIZE_UNIT_PIXEL: number;
							public static FONT_SIZE_UNIT_EM: number;
							public static FONT_SIZE_UNIT_PERCENT: number;
							public setBackgroundColor(backgroundColor: number): androidx.media2.exoplayer.external.text.ttml.TtmlStyle;
							public getId(): string;
							public setFontSizeUnit(fontSizeUnit: number): androidx.media2.exoplayer.external.text.ttml.TtmlStyle;
							public hasFontColor(): boolean;
							public inherit(ancestor: androidx.media2.exoplayer.external.text.ttml.TtmlStyle): androidx.media2.exoplayer.external.text.ttml.TtmlStyle;
							public setFontSize(fontSize: number): androidx.media2.exoplayer.external.text.ttml.TtmlStyle;
							public setBold(bold: boolean): androidx.media2.exoplayer.external.text.ttml.TtmlStyle;
							public setItalic(italic: boolean): androidx.media2.exoplayer.external.text.ttml.TtmlStyle;
							public setLinethrough(linethrough: boolean): androidx.media2.exoplayer.external.text.ttml.TtmlStyle;
							public getTextAlign(): globalAndroid.text.Layout.Alignment;
							public getBackgroundColor(): number;
							public setUnderline(underline: boolean): androidx.media2.exoplayer.external.text.ttml.TtmlStyle;
							public setFontColor(fontColor: number): androidx.media2.exoplayer.external.text.ttml.TtmlStyle;
							public setFontFamily(fontFamily: string): androidx.media2.exoplayer.external.text.ttml.TtmlStyle;
							public constructor();
							public setTextAlign(textAlign: globalAndroid.text.Layout.Alignment): androidx.media2.exoplayer.external.text.ttml.TtmlStyle;
							public chain(ancestor: androidx.media2.exoplayer.external.text.ttml.TtmlStyle): androidx.media2.exoplayer.external.text.ttml.TtmlStyle;
							public isUnderline(): boolean;
							public getFontSizeUnit(): number;
							public hasBackgroundColor(): boolean;
							public isLinethrough(): boolean;
							public setId(id: string): androidx.media2.exoplayer.external.text.ttml.TtmlStyle;
							public getFontSize(): number;
							public getStyle(): number;
							public getFontFamily(): string;
							public getFontColor(): number;
						}
						export module TtmlStyle {
							export class FontSizeUnit extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.text.ttml.TtmlStyle.FontSizeUnit>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.text.ttml.TtmlStyle$FontSizeUnit interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
							export class OptionalBoolean extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.text.ttml.TtmlStyle.OptionalBoolean>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.text.ttml.TtmlStyle$OptionalBoolean interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
							export class StyleFlags extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.text.ttml.TtmlStyle.StyleFlags>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.text.ttml.TtmlStyle$StyleFlags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module ttml {
						export class TtmlSubtitle extends java.lang.Object implements androidx.media2.exoplayer.external.text.Subtitle {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.ttml.TtmlSubtitle>;
							public constructor(root: androidx.media2.exoplayer.external.text.ttml.TtmlNode, globalStyles: java.util.Map<string,androidx.media2.exoplayer.external.text.ttml.TtmlStyle>, regionMap: java.util.Map<string,androidx.media2.exoplayer.external.text.ttml.TtmlRegion>, imageMap: java.util.Map<string,string>);
							public getNextEventTimeIndex(timeUs: number): number;
							public getEventTime(index: number): number;
							public getCues(timeUs: number): java.util.List<androidx.media2.exoplayer.external.text.Cue>;
							public getEventTimeCount(): number;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module tx3g {
						export class Tx3gDecoder extends androidx.media2.exoplayer.external.text.SimpleSubtitleDecoder {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.tx3g.Tx3gDecoder>;
							public dequeueInputBuffer(): any;
							public decode(inputBuffer: androidx.media2.exoplayer.external.text.SubtitleInputBuffer, outputBuffer: androidx.media2.exoplayer.external.text.SubtitleOutputBuffer, reset: boolean): androidx.media2.exoplayer.external.text.SubtitleDecoderException;
							public constructor(name: string);
							public release(): void;
							public decode(bytes: native.Array<number>, length: number, reset: boolean): androidx.media2.exoplayer.external.text.Subtitle;
							public setPositionUs(timeUs: number): void;
							public constructor(initializationData: java.util.List<native.Array<number>>);
							public getName(): string;
							public dequeueOutputBuffer(): any;
							public queueInputBuffer(inputBuffer: any): void;
							public queueInputBuffer(object0: any): void;
							public flush(): void;
							public constructor(inputBuffers: native.Array<any>, outputBuffers: native.Array<any>);
							public decode(bytes0: native.Array<number>, int1: number, boolean2: boolean): androidx.media2.exoplayer.external.text.Subtitle;
							public decode(decoderInputBuffer0: any, outputBuffer1: any, boolean2: boolean): any;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module tx3g {
						export class Tx3gSubtitle extends java.lang.Object implements androidx.media2.exoplayer.external.text.Subtitle {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.tx3g.Tx3gSubtitle>;
							public static EMPTY: androidx.media2.exoplayer.external.text.tx3g.Tx3gSubtitle;
							public getNextEventTimeIndex(timeUs: number): number;
							public getEventTime(index: number): number;
							public constructor(cue: androidx.media2.exoplayer.external.text.Cue);
							public getCues(timeUs: number): java.util.List<androidx.media2.exoplayer.external.text.Cue>;
							public getEventTimeCount(): number;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module webvtt {
						export class CssParser extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.webvtt.CssParser>;
							public constructor();
							public parseBlock(input: androidx.media2.exoplayer.external.util.ParsableByteArray): java.util.List<androidx.media2.exoplayer.external.text.webvtt.WebvttCssStyle>;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module webvtt {
						export class Mp4WebvttDecoder extends androidx.media2.exoplayer.external.text.SimpleSubtitleDecoder {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.webvtt.Mp4WebvttDecoder>;
							public constructor();
							public dequeueInputBuffer(): any;
							public decode(inputBuffer: androidx.media2.exoplayer.external.text.SubtitleInputBuffer, outputBuffer: androidx.media2.exoplayer.external.text.SubtitleOutputBuffer, reset: boolean): androidx.media2.exoplayer.external.text.SubtitleDecoderException;
							public constructor(name: string);
							public release(): void;
							public decode(bytes: native.Array<number>, length: number, reset: boolean): androidx.media2.exoplayer.external.text.Subtitle;
							public setPositionUs(timeUs: number): void;
							public getName(): string;
							public dequeueOutputBuffer(): any;
							public queueInputBuffer(inputBuffer: any): void;
							public queueInputBuffer(object0: any): void;
							public flush(): void;
							public constructor(inputBuffers: native.Array<any>, outputBuffers: native.Array<any>);
							public decode(bytes0: native.Array<number>, int1: number, boolean2: boolean): androidx.media2.exoplayer.external.text.Subtitle;
							public decode(decoderInputBuffer0: any, outputBuffer1: any, boolean2: boolean): any;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module webvtt {
						export class Mp4WebvttSubtitle extends java.lang.Object implements androidx.media2.exoplayer.external.text.Subtitle {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.webvtt.Mp4WebvttSubtitle>;
							public getNextEventTimeIndex(timeUs: number): number;
							public getEventTime(index: number): number;
							public getCues(timeUs: number): java.util.List<androidx.media2.exoplayer.external.text.Cue>;
							public constructor(cueList: java.util.List<androidx.media2.exoplayer.external.text.Cue>);
							public getEventTimeCount(): number;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module webvtt {
						export class WebvttCssStyle extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.webvtt.WebvttCssStyle>;
							public static UNSPECIFIED: number;
							public static STYLE_NORMAL: number;
							public static STYLE_BOLD: number;
							public static STYLE_ITALIC: number;
							public static STYLE_BOLD_ITALIC: number;
							public static FONT_SIZE_UNIT_PIXEL: number;
							public static FONT_SIZE_UNIT_EM: number;
							public static FONT_SIZE_UNIT_PERCENT: number;
							public setBackgroundColor(backgroundColor: number): androidx.media2.exoplayer.external.text.webvtt.WebvttCssStyle;
							public setFontColor(color: number): androidx.media2.exoplayer.external.text.webvtt.WebvttCssStyle;
							public hasFontColor(): boolean;
							public setBold(bold: boolean): androidx.media2.exoplayer.external.text.webvtt.WebvttCssStyle;
							public setTextAlign(textAlign: globalAndroid.text.Layout.Alignment): androidx.media2.exoplayer.external.text.webvtt.WebvttCssStyle;
							public reset(): void;
							public setFontSizeUnit(unit: number): androidx.media2.exoplayer.external.text.webvtt.WebvttCssStyle;
							public setTargetId(targetId: string): void;
							public cascadeFrom(style: androidx.media2.exoplayer.external.text.webvtt.WebvttCssStyle): void;
							public getTextAlign(): globalAndroid.text.Layout.Alignment;
							public getSpecificityScore(id: string, tag: string, classes: native.Array<string>, voice: string): number;
							public setFontFamily(fontFamily: string): androidx.media2.exoplayer.external.text.webvtt.WebvttCssStyle;
							public getBackgroundColor(): number;
							public constructor();
							public setUnderline(underline: boolean): androidx.media2.exoplayer.external.text.webvtt.WebvttCssStyle;
							public setItalic(italic: boolean): androidx.media2.exoplayer.external.text.webvtt.WebvttCssStyle;
							public isUnderline(): boolean;
							public getFontSizeUnit(): number;
							public hasBackgroundColor(): boolean;
							public setTargetTagName(targetTag: string): void;
							public isLinethrough(): boolean;
							public setFontSize(fontSize: number): androidx.media2.exoplayer.external.text.webvtt.WebvttCssStyle;
							public getFontSize(): number;
							public setTargetClasses(targetClasses: native.Array<string>): void;
							public getStyle(): number;
							public setTargetVoice(targetVoice: string): void;
							public setLinethrough(linethrough: boolean): androidx.media2.exoplayer.external.text.webvtt.WebvttCssStyle;
							public getFontFamily(): string;
							public getFontColor(): number;
						}
						export module WebvttCssStyle {
							export class FontSizeUnit extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.text.webvtt.WebvttCssStyle.FontSizeUnit>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.text.webvtt.WebvttCssStyle$FontSizeUnit interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
							export class OptionalBoolean extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.text.webvtt.WebvttCssStyle.OptionalBoolean>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.text.webvtt.WebvttCssStyle$OptionalBoolean interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
							export class StyleFlags extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.text.webvtt.WebvttCssStyle.StyleFlags>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.text.webvtt.WebvttCssStyle$StyleFlags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module webvtt {
						export class WebvttCue extends androidx.media2.exoplayer.external.text.Cue {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.webvtt.WebvttCue>;
							public startTime: number;
							public endTime: number;
							public constructor(text: string);
							public constructor(text: string, textAlignment: globalAndroid.text.Layout.Alignment, line: number, lineType: number, lineAnchor: number, position: number, positionAnchor: number, size: number);
							public constructor(startTime: number, endTime: number, text: string, textAlignment: globalAndroid.text.Layout.Alignment, line: number, lineType: number, lineAnchor: number, position: number, positionAnchor: number, width: number);
							public constructor(text: string, textAlignment: globalAndroid.text.Layout.Alignment, line: number, lineType: number, lineAnchor: number, position: number, positionAnchor: number, size: number, textSizeType: number, textSize: number);
							public constructor(startTime: number, endTime: number, text: string);
							public constructor(bitmap: globalAndroid.graphics.Bitmap, horizontalPosition: number, horizontalPositionAnchor: number, verticalPosition: number, verticalPositionAnchor: number, width: number, height: number);
							public isNormalCue(): boolean;
							public constructor(text: string, textAlignment: globalAndroid.text.Layout.Alignment, line: number, lineType: number, lineAnchor: number, position: number, positionAnchor: number, size: number, windowColorSet: boolean, windowColor: number);
						}
						export module WebvttCue {
							export class Builder extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.text.webvtt.WebvttCue.Builder>;
								public setStartTime(time: number): androidx.media2.exoplayer.external.text.webvtt.WebvttCue.Builder;
								public setLineAnchor(lineAnchor: number): androidx.media2.exoplayer.external.text.webvtt.WebvttCue.Builder;
								public constructor();
								public setLineType(lineType: number): androidx.media2.exoplayer.external.text.webvtt.WebvttCue.Builder;
								public setPosition(position: number): androidx.media2.exoplayer.external.text.webvtt.WebvttCue.Builder;
								public setLine(line: number): androidx.media2.exoplayer.external.text.webvtt.WebvttCue.Builder;
								public setPositionAnchor(positionAnchor: number): androidx.media2.exoplayer.external.text.webvtt.WebvttCue.Builder;
								public build(): androidx.media2.exoplayer.external.text.webvtt.WebvttCue;
								public setTextAlignment(textAlignment: globalAndroid.text.Layout.Alignment): androidx.media2.exoplayer.external.text.webvtt.WebvttCue.Builder;
								public setText(aText: globalAndroid.text.SpannableStringBuilder): androidx.media2.exoplayer.external.text.webvtt.WebvttCue.Builder;
								public setEndTime(time: number): androidx.media2.exoplayer.external.text.webvtt.WebvttCue.Builder;
								public reset(): void;
								public setWidth(width: number): androidx.media2.exoplayer.external.text.webvtt.WebvttCue.Builder;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module webvtt {
						export class WebvttCueParser extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.webvtt.WebvttCueParser>;
							public static CUE_HEADER_PATTERN: java.util.regex.Pattern;
							public constructor();
							public parseCue(webvttData: androidx.media2.exoplayer.external.util.ParsableByteArray, builder: androidx.media2.exoplayer.external.text.webvtt.WebvttCue.Builder, styles: java.util.List<androidx.media2.exoplayer.external.text.webvtt.WebvttCssStyle>): boolean;
						}
						export module WebvttCueParser {
							export class StartTag extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.text.webvtt.WebvttCueParser.StartTag>;
								public name: string;
								public position: number;
								public voice: string;
								public classes: native.Array<string>;
								public static buildWholeCueVirtualTag(): androidx.media2.exoplayer.external.text.webvtt.WebvttCueParser.StartTag;
								public static buildStartTag(fullTagExpression: string, position: number): androidx.media2.exoplayer.external.text.webvtt.WebvttCueParser.StartTag;
							}
							export class StyleMatch extends java.lang.Comparable<androidx.media2.exoplayer.external.text.webvtt.WebvttCueParser.StyleMatch> {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.text.webvtt.WebvttCueParser.StyleMatch>;
								public score: number;
								public style: androidx.media2.exoplayer.external.text.webvtt.WebvttCssStyle;
								public constructor(score: number, style: androidx.media2.exoplayer.external.text.webvtt.WebvttCssStyle);
								public compareTo(another: androidx.media2.exoplayer.external.text.webvtt.WebvttCueParser.StyleMatch): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module webvtt {
						export class WebvttDecoder extends androidx.media2.exoplayer.external.text.SimpleSubtitleDecoder {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.webvtt.WebvttDecoder>;
							public constructor();
							public dequeueInputBuffer(): any;
							public decode(inputBuffer: androidx.media2.exoplayer.external.text.SubtitleInputBuffer, outputBuffer: androidx.media2.exoplayer.external.text.SubtitleOutputBuffer, reset: boolean): androidx.media2.exoplayer.external.text.SubtitleDecoderException;
							public constructor(name: string);
							public release(): void;
							public decode(bytes: native.Array<number>, length: number, reset: boolean): androidx.media2.exoplayer.external.text.Subtitle;
							public setPositionUs(timeUs: number): void;
							public getName(): string;
							public dequeueOutputBuffer(): any;
							public queueInputBuffer(inputBuffer: any): void;
							public queueInputBuffer(object0: any): void;
							public flush(): void;
							public constructor(inputBuffers: native.Array<any>, outputBuffers: native.Array<any>);
							public decode(bytes0: native.Array<number>, int1: number, boolean2: boolean): androidx.media2.exoplayer.external.text.Subtitle;
							public decode(decoderInputBuffer0: any, outputBuffer1: any, boolean2: boolean): any;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module webvtt {
						export class WebvttParserUtil extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.webvtt.WebvttParserUtil>;
							public static parseTimestampUs(timestamp: string): number;
							public static isWebvttHeaderLine(input: androidx.media2.exoplayer.external.util.ParsableByteArray): boolean;
							public static findNextCueHeader(input: androidx.media2.exoplayer.external.util.ParsableByteArray): java.util.regex.Matcher;
							public static parsePercentage(s: string): number;
							public static validateWebvttHeaderLine(input: androidx.media2.exoplayer.external.util.ParsableByteArray): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module text {
					export module webvtt {
						export class WebvttSubtitle extends java.lang.Object implements androidx.media2.exoplayer.external.text.Subtitle {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.text.webvtt.WebvttSubtitle>;
							public constructor(cues: java.util.List<androidx.media2.exoplayer.external.text.webvtt.WebvttCue>);
							public getNextEventTimeIndex(timeUs: number): number;
							public getEventTime(index: number): number;
							public getCues(timeUs: number): java.util.List<androidx.media2.exoplayer.external.text.Cue>;
							public getEventTimeCount(): number;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module trackselection {
					export class AdaptiveTrackSelection extends androidx.media2.exoplayer.external.trackselection.BaseTrackSelection {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.AdaptiveTrackSelection>;
						public static DEFAULT_MIN_DURATION_FOR_QUALITY_INCREASE_MS: number;
						public static DEFAULT_MAX_DURATION_FOR_QUALITY_DECREASE_MS: number;
						public static DEFAULT_MIN_DURATION_TO_RETAIN_AFTER_DISCARD_MS: number;
						public static DEFAULT_BANDWIDTH_FRACTION: number;
						public static DEFAULT_BUFFERED_FRACTION_TO_LIVE_EDGE_FOR_QUALITY_INCREASE: number;
						public static DEFAULT_MIN_TIME_BETWEEN_BUFFER_REEVALUTATION_MS: number;
						public getSelectedIndexInTrackGroup(): number;
						public onPlaybackSpeed(playbackSpeed: number): void;
						public constructor(group: androidx.media2.exoplayer.external.source.TrackGroup, tracks: native.Array<number>, bandwidthMeter: androidx.media2.exoplayer.external.upstream.BandwidthMeter);
						public evaluateQueueSize(playbackPositionUs: number, queue: java.util.List<any>): number;
						public shouldEvaluateQueueSize(nowMs: number): boolean;
						public getSelectionReason(): number;
						public constructor(group: androidx.media2.exoplayer.external.source.TrackGroup, tracks: native.Array<number>, bandwidthMeter: androidx.media2.exoplayer.external.upstream.BandwidthMeter, reservedBandwidth: number, minDurationForQualityIncreaseMs: number, maxDurationForQualityDecreaseMs: number, minDurationToRetainAfterDiscardMs: number, bandwidthFraction: number, bufferedFractionToLiveEdgeForQualityIncrease: number, minTimeBetweenBufferReevaluationMs: number, clock: androidx.media2.exoplayer.external.util.Clock);
						public experimental_setBandwidthAllocationCheckpoints(allocationCheckpoints: native.Array<native.Array<number>>): void;
						public updateSelectedTrack(playbackPositionUs: number, bufferedDurationUs: number, availableDurationUs: number, queue: java.util.List<any>, mediaChunkIterators: native.Array<androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator>): void;
						public blacklist(index: number, blacklistDurationMs: number): boolean;
						public canSelectFormat(format: androidx.media2.exoplayer.external.Format, trackBitrate: number, playbackSpeed: number, effectiveBitrate: number): boolean;
						public onDiscontinuity(): void;
						public getMinDurationToRetainAfterDiscardUs(): number;
						public getSelectionData(): any;
						public length(): number;
						public indexOf(format: androidx.media2.exoplayer.external.Format): number;
						public getSelectedFormat(): androidx.media2.exoplayer.external.Format;
						public disable(): void;
						public enable(): void;
						public getTrackGroup(): androidx.media2.exoplayer.external.source.TrackGroup;
						public getIndexInTrackGroup(index: number): number;
						/** @deprecated */
						public updateSelectedTrack(long0: number, long1: number, long2: number): void;
						public updateSelectedTrack(long0: number, long1: number, long2: number, list3: java.util.List<any>, mediaChunkIterators4: native.Array<androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator>): void;
						public indexOf(indexInTrackGroup: number): number;
						public getSelectedIndex(): number;
						public getFormat(index: number): androidx.media2.exoplayer.external.Format;
						public constructor(group: androidx.media2.exoplayer.external.source.TrackGroup, tracks: native.Array<number>);
					}
					export module AdaptiveTrackSelection {
						export class BandwidthProvider extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.AdaptiveTrackSelection.BandwidthProvider>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.trackselection.AdaptiveTrackSelection$BandwidthProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getAllocatedBandwidth(): number;
							});
							public constructor();
							public getAllocatedBandwidth(): number;
						}
						export class DefaultBandwidthProvider extends java.lang.Object implements androidx.media2.exoplayer.external.trackselection.AdaptiveTrackSelection.BandwidthProvider {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.AdaptiveTrackSelection.DefaultBandwidthProvider>;
							public getAllocatedBandwidth(): number;
						}
						export class Factory extends java.lang.Object implements androidx.media2.exoplayer.external.trackselection.TrackSelection.Factory {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.AdaptiveTrackSelection.Factory>;
							public constructor();
							public constructor(minDurationForQualityIncreaseMs: number, maxDurationForQualityDecreaseMs: number, minDurationToRetainAfterDiscardMs: number, bandwidthFraction: number);
							/** @deprecated */
							public constructor(bandwidthMeter: androidx.media2.exoplayer.external.upstream.BandwidthMeter, minDurationForQualityIncreaseMs: number, maxDurationForQualityDecreaseMs: number, minDurationToRetainAfterDiscardMs: number, bandwidthFraction: number);
							public constructor(minDurationForQualityIncreaseMs: number, maxDurationForQualityDecreaseMs: number, minDurationToRetainAfterDiscardMs: number, bandwidthFraction: number, bufferedFractionToLiveEdgeForQualityIncrease: number, minTimeBetweenBufferReevaluationMs: number, clock: androidx.media2.exoplayer.external.util.Clock);
							/** @deprecated */
							public constructor(bandwidthMeter: androidx.media2.exoplayer.external.upstream.BandwidthMeter, minDurationForQualityIncreaseMs: number, maxDurationForQualityDecreaseMs: number, minDurationToRetainAfterDiscardMs: number, bandwidthFraction: number, bufferedFractionToLiveEdgeForQualityIncrease: number, minTimeBetweenBufferReevaluationMs: number, clock: androidx.media2.exoplayer.external.util.Clock);
							public createTrackSelections(definitions: native.Array<androidx.media2.exoplayer.external.trackselection.TrackSelection.Definition>, bandwidthMeter: androidx.media2.exoplayer.external.upstream.BandwidthMeter): native.Array<androidx.media2.exoplayer.external.trackselection.TrackSelection>;
							/** @deprecated */
							public constructor(bandwidthMeter: androidx.media2.exoplayer.external.upstream.BandwidthMeter);
							public createAdaptiveTrackSelection(group: androidx.media2.exoplayer.external.source.TrackGroup, bandwidthMeter: androidx.media2.exoplayer.external.upstream.BandwidthMeter, tracks: native.Array<number>, totalFixedTrackBandwidth: number): androidx.media2.exoplayer.external.trackselection.AdaptiveTrackSelection;
							/** @deprecated */
							public createTrackSelection(trackGroup0: androidx.media2.exoplayer.external.source.TrackGroup, bandwidthMeter1: androidx.media2.exoplayer.external.upstream.BandwidthMeter, ints2: native.Array<number>): androidx.media2.exoplayer.external.trackselection.TrackSelection;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module trackselection {
					export abstract class BaseTrackSelection extends java.lang.Object implements androidx.media2.exoplayer.external.trackselection.TrackSelection {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.BaseTrackSelection>;
						public group: androidx.media2.exoplayer.external.source.TrackGroup;
						public tracks: native.Array<number>;
						public equals(obj: any): boolean;
						public getSelectionData(): any;
						public length(): number;
						public getSelectedIndexInTrackGroup(): number;
						public indexOf(format: androidx.media2.exoplayer.external.Format): number;
						public onPlaybackSpeed(playbackSpeed: number): void;
						public evaluateQueueSize(playbackPositionUs: number, queue: java.util.List<any>): number;
						public updateSelectedTrack(long0: number, long1: number, long2: number, list3: java.util.List<any>, mediaChunkIterators4: native.Array<androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator>): void;
						public getSelectedFormat(): androidx.media2.exoplayer.external.Format;
						public hashCode(): number;
						public getSelectionReason(): number;
						public disable(): void;
						public enable(): void;
						public getTrackGroup(): androidx.media2.exoplayer.external.source.TrackGroup;
						public getIndexInTrackGroup(index: number): number;
						/** @deprecated */
						public updateSelectedTrack(long0: number, long1: number, long2: number): void;
						public updateSelectedTrack(long0: number, long1: number, long2: number, list3: java.util.List<any>, mediaChunkIterators4: native.Array<androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator>): void;
						public indexOf(indexInTrackGroup: number): number;
						public getSelectedIndex(): number;
						public getFormat(index: number): androidx.media2.exoplayer.external.Format;
						public blacklist(index: number, blacklistDurationMs: number): boolean;
						public isBlacklisted(index: number, nowMs: number): boolean;
						public constructor(group: androidx.media2.exoplayer.external.source.TrackGroup, tracks: native.Array<number>);
						public onDiscontinuity(): void;
					}
					export module BaseTrackSelection {
						export class DecreasingBandwidthComparator extends java.util.Comparator<androidx.media2.exoplayer.external.Format> {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.BaseTrackSelection.DecreasingBandwidthComparator>;
							public static comparingDouble(keyExtractor: any /* any*/): java.util.Comparator<any>;
							public thenComparingDouble(keyExtractor: any /* any*/): java.util.Comparator<any>;
							public equals(obj: any): boolean;
							public thenComparingLong(keyExtractor: any /* any*/): java.util.Comparator<any>;
							public static comparingInt(keyExtractor: any /* any*/): java.util.Comparator<any>;
							public static comparingLong(keyExtractor: any /* any*/): java.util.Comparator<any>;
							public static naturalOrder(): java.util.Comparator<any>;
							public thenComparing(other: java.util.Comparator<any>): java.util.Comparator<any>;
							public thenComparing(keyExtractor: any /* any*/): java.util.Comparator<any>;
							public static comparing(keyExtractor: any /* any*/): java.util.Comparator<any>;
							public static comparing(keyExtractor: any /* any*/, keyComparator: java.util.Comparator<any>): java.util.Comparator<any>;
							public reversed(): java.util.Comparator<any>;
							public static nullsFirst(comparator: java.util.Comparator<any>): java.util.Comparator<any>;
							public compare(object0: any, object1: any): number;
							public static nullsLast(comparator: java.util.Comparator<any>): java.util.Comparator<any>;
							public compare(a: androidx.media2.exoplayer.external.Format, b: androidx.media2.exoplayer.external.Format): number;
							public thenComparing(keyExtractor: any /* any*/, keyComparator: java.util.Comparator<any>): java.util.Comparator<any>;
							public thenComparingInt(keyExtractor: any /* any*/): java.util.Comparator<any>;
							public static reverseOrder(): java.util.Comparator<any>;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module trackselection {
					export class BufferSizeAdaptationBuilder extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.BufferSizeAdaptationBuilder>;
						public static DEFAULT_MIN_BUFFER_MS: number;
						public static DEFAULT_MAX_BUFFER_MS: number;
						public static DEFAULT_BUFFER_FOR_PLAYBACK_MS: number;
						public static DEFAULT_BUFFER_FOR_PLAYBACK_AFTER_REBUFFER_MS: number;
						public static DEFAULT_HYSTERESIS_BUFFER_MS: number;
						public static DEFAULT_START_UP_BANDWIDTH_FRACTION: number;
						public static DEFAULT_START_UP_MIN_BUFFER_FOR_QUALITY_INCREASE_MS: number;
						public setClock(clock: androidx.media2.exoplayer.external.util.Clock): androidx.media2.exoplayer.external.trackselection.BufferSizeAdaptationBuilder;
						public setAllocator(allocator: androidx.media2.exoplayer.external.upstream.DefaultAllocator): androidx.media2.exoplayer.external.trackselection.BufferSizeAdaptationBuilder;
						public constructor();
						public setHysteresisBufferMs(hysteresisBufferMs: number): androidx.media2.exoplayer.external.trackselection.BufferSizeAdaptationBuilder;
						public setDynamicFormatFilter(dynamicFormatFilter: androidx.media2.exoplayer.external.trackselection.BufferSizeAdaptationBuilder.DynamicFormatFilter): androidx.media2.exoplayer.external.trackselection.BufferSizeAdaptationBuilder;
						public setStartUpTrackSelectionParameters(bandwidthFraction: number, minBufferForQualityIncreaseMs: number): androidx.media2.exoplayer.external.trackselection.BufferSizeAdaptationBuilder;
						public setBufferDurationsMs(minBufferMs: number, maxBufferMs: number, bufferForPlaybackMs: number, bufferForPlaybackAfterRebufferMs: number): androidx.media2.exoplayer.external.trackselection.BufferSizeAdaptationBuilder;
						public buildPlayerComponents(): globalAndroid.util.Pair<androidx.media2.exoplayer.external.trackselection.TrackSelection.Factory,androidx.media2.exoplayer.external.LoadControl>;
					}
					export module BufferSizeAdaptationBuilder {
						export class BufferSizeAdaptiveTrackSelection extends androidx.media2.exoplayer.external.trackselection.BaseTrackSelection {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.BufferSizeAdaptationBuilder.BufferSizeAdaptiveTrackSelection>;
							public onDiscontinuity(): void;
							public getSelectedFormat(): androidx.media2.exoplayer.external.Format;
							public getSelectionReason(): number;
							public indexOf(indexInTrackGroup: number): number;
							public onPlaybackSpeed(playbackSpeed: number): void;
							/** @deprecated */
							public updateSelectedTrack(long0: number, long1: number, long2: number): void;
							public getSelectedIndexInTrackGroup(): number;
							public length(): number;
							public getIndexInTrackGroup(index: number): number;
							public evaluateQueueSize(playbackPositionUs: number, queue: java.util.List<any>): number;
							public updateSelectedTrack(playbackPositionUs: number, bufferedDurationUs: number, availableDurationUs: number, queue: java.util.List<any>, mediaChunkIterators: native.Array<androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator>): void;
							public blacklist(index: number, blacklistDurationMs: number): boolean;
							public disable(): void;
							public getFormat(index: number): androidx.media2.exoplayer.external.Format;
							public getSelectionData(): any;
							public getTrackGroup(): androidx.media2.exoplayer.external.source.TrackGroup;
							public getSelectedIndex(): number;
							public enable(): void;
							public updateSelectedTrack(long0: number, long1: number, long2: number, list3: java.util.List<any>, mediaChunkIterators4: native.Array<androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator>): void;
							public indexOf(format: androidx.media2.exoplayer.external.Format): number;
						}
						export class DynamicFormatFilter extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.BufferSizeAdaptationBuilder.DynamicFormatFilter>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.trackselection.BufferSizeAdaptationBuilder$DynamicFormatFilter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								isFormatAllowed(format0: androidx.media2.exoplayer.external.Format, int1: number, boolean2: boolean): boolean;
								<clinit>(): void;
							});
							public constructor();
							public static NO_FILTER: androidx.media2.exoplayer.external.trackselection.BufferSizeAdaptationBuilder.DynamicFormatFilter;
							public isFormatAllowed(format0: androidx.media2.exoplayer.external.Format, int1: number, boolean2: boolean): boolean;
						}
							export module  {
						export module DynamicFormatFilter {
								export abstract class CC extends java.lang.Object {
									public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.BufferSizeAdaptationBuilder.DynamicFormatFilter..CC>;
									public static $$triggerInterfaceInit(): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module trackselection {
					export class DefaultTrackSelector extends androidx.media2.exoplayer.external.trackselection.MappingTrackSelector {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector>;
						/** @deprecated */
						public constructor(bandwidthMeter: androidx.media2.exoplayer.external.upstream.BandwidthMeter);
						/** @deprecated */
						public hasSelectionOverride(rendererIndex: number, groups: androidx.media2.exoplayer.external.source.TrackGroupArray): boolean;
						/** @deprecated */
						public setTunnelingAudioSessionId(tunnelingAudioSessionId: number): void;
						public getParameters(): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.Parameters;
						public buildUponParameters(): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
						public selectTracks(rendererCapabilities: native.Array<androidx.media2.exoplayer.external.RendererCapabilities>, trackGroups: androidx.media2.exoplayer.external.source.TrackGroupArray, periodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, timeline: androidx.media2.exoplayer.external.Timeline): androidx.media2.exoplayer.external.trackselection.TrackSelectorResult;
						public static isSupported(formatSupport: number, allowExceedsCapabilities: boolean): boolean;
						/** @deprecated */
						public clearSelectionOverrides(rendererIndex: number): void;
						public selectTracks(mappedTrackInfo0: androidx.media2.exoplayer.external.trackselection.MappingTrackSelector.MappedTrackInfo, ints1: native.Array<native.Array<native.Array<number>>>, ints2: native.Array<number>): globalAndroid.util.Pair<native.Array<androidx.media2.exoplayer.external.RendererConfiguration>,native.Array<androidx.media2.exoplayer.external.trackselection.TrackSelection>>;
						public selectAllTracks(mappedTrackInfo: androidx.media2.exoplayer.external.trackselection.MappingTrackSelector.MappedTrackInfo, rendererFormatSupports: native.Array<native.Array<native.Array<number>>>, rendererMixedMimeTypeAdaptationSupports: native.Array<number>, params: androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.Parameters): native.Array<androidx.media2.exoplayer.external.trackselection.TrackSelection.Definition>;
						public selectTextTrack(groups: androidx.media2.exoplayer.external.source.TrackGroupArray, formatSupport: native.Array<native.Array<number>>, params: androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.Parameters, selectedAudioLanguage: string): globalAndroid.util.Pair<androidx.media2.exoplayer.external.trackselection.TrackSelection.Definition,androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.TextTrackScore>;
						/** @deprecated */
						public constructor();
						public selectAudioTrack(groups: androidx.media2.exoplayer.external.source.TrackGroupArray, formatSupports: native.Array<native.Array<number>>, mixedMimeTypeAdaptationSupports: number, params: androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.Parameters, enableAdaptiveTrackSelection: boolean): globalAndroid.util.Pair<androidx.media2.exoplayer.external.trackselection.TrackSelection.Definition,androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.AudioTrackScore>;
						/** @deprecated */
						public getSelectionOverride(rendererIndex: number, groups: androidx.media2.exoplayer.external.source.TrackGroupArray): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.SelectionOverride;
						public experimental_allowMultipleAdaptiveSelections(): void;
						public setParameters(parametersBuilder: androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder): void;
						public selectVideoTrack(groups: androidx.media2.exoplayer.external.source.TrackGroupArray, formatSupports: native.Array<native.Array<number>>, mixedMimeTypeAdaptationSupports: number, params: androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.Parameters, enableAdaptiveTrackSelection: boolean): androidx.media2.exoplayer.external.trackselection.TrackSelection.Definition;
						public constructor();
						public constructor(parameters: androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.Parameters, trackSelectionFactory: androidx.media2.exoplayer.external.trackselection.TrackSelection.Factory);
						/** @deprecated */
						public getRendererDisabled(rendererIndex: number): boolean;
						/** @deprecated */
						public clearSelectionOverrides(): void;
						public static normalizeUndeterminedLanguageToNull(language: string): string;
						public static getFormatLanguageScore(format: androidx.media2.exoplayer.external.Format, language: string, allowUndeterminedFormatLanguage: boolean): number;
						/** @deprecated */
						public clearSelectionOverride(rendererIndex: number, groups: androidx.media2.exoplayer.external.source.TrackGroupArray): void;
						/** @deprecated */
						public setSelectionOverride(rendererIndex: number, groups: androidx.media2.exoplayer.external.source.TrackGroupArray, override: androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.SelectionOverride): void;
						public selectTracks(mappedTrackInfo: androidx.media2.exoplayer.external.trackselection.MappingTrackSelector.MappedTrackInfo, rendererFormatSupports: native.Array<native.Array<native.Array<number>>>, rendererMixedMimeTypeAdaptationSupports: native.Array<number>): globalAndroid.util.Pair<native.Array<androidx.media2.exoplayer.external.RendererConfiguration>,native.Array<androidx.media2.exoplayer.external.trackselection.TrackSelection>>;
						public setParameters(parameters: androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.Parameters): void;
						public selectOtherTrack(trackType: number, groups: androidx.media2.exoplayer.external.source.TrackGroupArray, formatSupport: native.Array<native.Array<number>>, params: androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.Parameters): androidx.media2.exoplayer.external.trackselection.TrackSelection.Definition;
						/** @deprecated */
						public constructor(trackSelectionFactory: androidx.media2.exoplayer.external.trackselection.TrackSelection.Factory);
						public constructor(context: globalAndroid.content.Context);
						public constructor(context: globalAndroid.content.Context, trackSelectionFactory: androidx.media2.exoplayer.external.trackselection.TrackSelection.Factory);
						/** @deprecated */
						public setRendererDisabled(rendererIndex: number, disabled: boolean): void;
					}
					export module DefaultTrackSelector {
						export class AudioConfigurationTuple extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.AudioConfigurationTuple>;
							public channelCount: number;
							public sampleRate: number;
							public mimeType: string;
							public constructor(channelCount: number, sampleRate: number, mimeType: string);
							public hashCode(): number;
							public equals(obj: any): boolean;
						}
						export class AudioTrackScore extends java.lang.Comparable<androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.AudioTrackScore> {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.AudioTrackScore>;
							public isWithinConstraints: boolean;
							public compareTo(other: androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.AudioTrackScore): number;
							public constructor(format: androidx.media2.exoplayer.external.Format, parameters: androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.Parameters, formatSupport: number);
						}
						export class Parameters extends androidx.media2.exoplayer.external.trackselection.TrackSelectionParameters {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.Parameters>;
							public static DEFAULT_WITHOUT_VIEWPORT: androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.Parameters;
							public static DEFAULT: androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.Parameters;
							public maxVideoWidth: number;
							public maxVideoHeight: number;
							public maxVideoFrameRate: number;
							public maxVideoBitrate: number;
							public exceedVideoConstraintsIfNecessary: boolean;
							public allowVideoMixedMimeTypeAdaptiveness: boolean;
							public allowVideoNonSeamlessAdaptiveness: boolean;
							public viewportWidth: number;
							public viewportHeight: number;
							public viewportOrientationMayChange: boolean;
							public maxAudioChannelCount: number;
							public maxAudioBitrate: number;
							public exceedAudioConstraintsIfNecessary: boolean;
							public allowAudioMixedMimeTypeAdaptiveness: boolean;
							public allowAudioMixedSampleRateAdaptiveness: boolean;
							public allowAudioMixedChannelCountAdaptiveness: boolean;
							public forceLowestBitrate: boolean;
							public forceHighestSupportedBitrate: boolean;
							public allowMixedMimeAdaptiveness: boolean;
							public allowNonSeamlessAdaptiveness: boolean;
							public exceedRendererCapabilitiesIfNecessary: boolean;
							public tunnelingAudioSessionId: number;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.Parameters>;
							public buildUpon(): androidx.media2.exoplayer.external.trackselection.TrackSelectionParameters.Builder;
							public buildUpon(): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
							public static getDefaults(context: globalAndroid.content.Context): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.Parameters;
							public hashCode(): number;
							public hasSelectionOverride(rendererIndex: number, groups: androidx.media2.exoplayer.external.source.TrackGroupArray): boolean;
							public describeContents(): number;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public equals(obj: any): boolean;
							public getRendererDisabled(rendererIndex: number): boolean;
							public getSelectionOverride(rendererIndex: number, groups: androidx.media2.exoplayer.external.source.TrackGroupArray): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.SelectionOverride;
						}
						export class ParametersBuilder extends androidx.media2.exoplayer.external.trackselection.TrackSelectionParameters.Builder {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder>;
							public setForceLowestBitrate(forceLowestBitrate: boolean): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
							/** @deprecated */
							public setAllowMixedMimeAdaptiveness(allowMixedMimeAdaptiveness: boolean): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setPreferredTextLanguage(preferredTextLanguage: string): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setViewportSize(viewportWidth: number, viewportHeight: number, viewportOrientationMayChange: boolean): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
							public build(): androidx.media2.exoplayer.external.trackselection.TrackSelectionParameters;
							public setPreferredAudioLanguage(preferredAudioLanguage: string): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
							public clearSelectionOverrides(): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setPreferredAudioLanguage(preferredAudioLanguage: string): androidx.media2.exoplayer.external.trackselection.TrackSelectionParameters.Builder;
							public setMaxAudioChannelCount(maxAudioChannelCount: number): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setExceedVideoConstraintsIfNecessary(exceedVideoConstraintsIfNecessary: boolean): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
							public clearViewportSizeConstraints(): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setAllowAudioMixedSampleRateAdaptiveness(allowAudioMixedSampleRateAdaptiveness: boolean): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setMaxAudioBitrate(maxAudioBitrate: number): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
							public clearSelectionOverrides(rendererIndex: number): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setMaxVideoBitrate(maxVideoBitrate: number): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setViewportSizeToPhysicalDisplaySize(context: globalAndroid.content.Context, viewportOrientationMayChange: boolean): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setAllowVideoNonSeamlessAdaptiveness(allowVideoNonSeamlessAdaptiveness: boolean): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
							public clearVideoSizeConstraints(): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setDisabledTextTrackSelectionFlags(disabledTextTrackSelectionFlags: number): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
							public build(): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.Parameters;
							public constructor();
							public setAllowAudioMixedMimeTypeAdaptiveness(allowAudioMixedMimeTypeAdaptiveness: boolean): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setDisabledTextTrackSelectionFlags(disabledTextTrackSelectionFlags: number): androidx.media2.exoplayer.external.trackselection.TrackSelectionParameters.Builder;
							/** @deprecated */
							public setAllowNonSeamlessAdaptiveness(allowNonSeamlessAdaptiveness: boolean): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setMaxVideoFrameRate(maxVideoFrameRate: number): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setRendererDisabled(rendererIndex: number, disabled: boolean): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setAllowAudioMixedChannelCountAdaptiveness(allowAudioMixedChannelCountAdaptiveness: boolean): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setExceedAudioConstraintsIfNecessary(exceedAudioConstraintsIfNecessary: boolean): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
							public clearSelectionOverride(rendererIndex: number, groups: androidx.media2.exoplayer.external.source.TrackGroupArray): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setMaxVideoSizeSd(): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setSelectionOverride(rendererIndex: number, groups: androidx.media2.exoplayer.external.source.TrackGroupArray, override: androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.SelectionOverride): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
							/** @deprecated */
							public constructor();
							public setSelectUndeterminedTextLanguage(selectUndeterminedTextLanguage: boolean): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setAllowVideoMixedMimeTypeAdaptiveness(allowVideoMixedMimeTypeAdaptiveness: boolean): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setExceedRendererCapabilitiesIfNecessary(exceedRendererCapabilitiesIfNecessary: boolean): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setMaxVideoSize(maxVideoWidth: number, maxVideoHeight: number): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setPreferredTextLanguage(preferredTextLanguage: string): androidx.media2.exoplayer.external.trackselection.TrackSelectionParameters.Builder;
							public setForceHighestSupportedBitrate(forceHighestSupportedBitrate: boolean): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setSelectUndeterminedTextLanguage(selectUndeterminedTextLanguage: boolean): androidx.media2.exoplayer.external.trackselection.TrackSelectionParameters.Builder;
							public constructor(context: globalAndroid.content.Context);
							public setTunnelingAudioSessionId(tunnelingAudioSessionId: number): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.ParametersBuilder;
						}
						export class SelectionOverride extends java.lang.Object implements globalAndroid.os.Parcelable {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.SelectionOverride>;
							public groupIndex: number;
							public tracks: native.Array<number>;
							public length: number;
							public reason: number;
							public data: number;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.SelectionOverride>;
							public hashCode(): number;
							public describeContents(): number;
							public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
							public equals(obj: any): boolean;
							public constructor(groupIndex: number, tracks: native.Array<number>, reason: number, data: number);
							public constructor(groupIndex: number, tracks: native.Array<number>);
							public containsTrack(track: number): boolean;
						}
						export class TextTrackScore extends java.lang.Comparable<androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.TextTrackScore> {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.TextTrackScore>;
							public isWithinConstraints: boolean;
							public constructor(format: androidx.media2.exoplayer.external.Format, parameters: androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.Parameters, trackFormatSupport: number, selectedAudioLanguage: string);
							public compareTo(other: androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.TextTrackScore): number;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module trackselection {
					export class FixedTrackSelection extends androidx.media2.exoplayer.external.trackselection.BaseTrackSelection {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.FixedTrackSelection>;
						public getSelectionData(): any;
						public length(): number;
						public getSelectedIndexInTrackGroup(): number;
						public indexOf(format: androidx.media2.exoplayer.external.Format): number;
						public onPlaybackSpeed(playbackSpeed: number): void;
						public evaluateQueueSize(playbackPositionUs: number, queue: java.util.List<any>): number;
						public getSelectedFormat(): androidx.media2.exoplayer.external.Format;
						public getSelectionReason(): number;
						public disable(): void;
						public enable(): void;
						public getTrackGroup(): androidx.media2.exoplayer.external.source.TrackGroup;
						public constructor(group: androidx.media2.exoplayer.external.source.TrackGroup, track: number, reason: number, data: any);
						public getIndexInTrackGroup(index: number): number;
						public updateSelectedTrack(playbackPositionUs: number, bufferedDurationUs: number, availableDurationUs: number, queue: java.util.List<any>, mediaChunkIterators: native.Array<androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator>): void;
						/** @deprecated */
						public updateSelectedTrack(long0: number, long1: number, long2: number): void;
						public updateSelectedTrack(long0: number, long1: number, long2: number, list3: java.util.List<any>, mediaChunkIterators4: native.Array<androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator>): void;
						public indexOf(indexInTrackGroup: number): number;
						public getSelectedIndex(): number;
						public getFormat(index: number): androidx.media2.exoplayer.external.Format;
						public blacklist(index: number, blacklistDurationMs: number): boolean;
						public constructor(group: androidx.media2.exoplayer.external.source.TrackGroup, tracks: native.Array<number>);
						public constructor(group: androidx.media2.exoplayer.external.source.TrackGroup, track: number);
						public onDiscontinuity(): void;
					}
					export module FixedTrackSelection {
						export class Factory extends java.lang.Object implements androidx.media2.exoplayer.external.trackselection.TrackSelection.Factory {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.FixedTrackSelection.Factory>;
							public constructor();
							public constructor(reason: number, data: any);
							public createTrackSelections(definitions: native.Array<androidx.media2.exoplayer.external.trackselection.TrackSelection.Definition>, bandwidthMeter: androidx.media2.exoplayer.external.upstream.BandwidthMeter): native.Array<androidx.media2.exoplayer.external.trackselection.TrackSelection>;
							/** @deprecated */
							public createTrackSelection(trackGroup0: androidx.media2.exoplayer.external.source.TrackGroup, bandwidthMeter1: androidx.media2.exoplayer.external.upstream.BandwidthMeter, ints2: native.Array<number>): androidx.media2.exoplayer.external.trackselection.TrackSelection;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module trackselection {
					export abstract class MappingTrackSelector extends androidx.media2.exoplayer.external.trackselection.TrackSelector {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.MappingTrackSelector>;
						public onSelectionActivated(info: any): void;
						public constructor();
						public onSelectionActivated(object0: any): void;
						public selectTracks(rendererCapabilities: native.Array<androidx.media2.exoplayer.external.RendererCapabilities>, trackGroups: androidx.media2.exoplayer.external.source.TrackGroupArray, periodId: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, timeline: androidx.media2.exoplayer.external.Timeline): androidx.media2.exoplayer.external.trackselection.TrackSelectorResult;
						public getCurrentMappedTrackInfo(): androidx.media2.exoplayer.external.trackselection.MappingTrackSelector.MappedTrackInfo;
						public selectTracks(rendererCapabilitiess0: native.Array<androidx.media2.exoplayer.external.RendererCapabilities>, trackGroupArray1: androidx.media2.exoplayer.external.source.TrackGroupArray, mediaPeriodId2: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, timeline3: androidx.media2.exoplayer.external.Timeline): androidx.media2.exoplayer.external.trackselection.TrackSelectorResult;
						public selectTracks(mappedTrackInfo0: androidx.media2.exoplayer.external.trackselection.MappingTrackSelector.MappedTrackInfo, ints1: native.Array<native.Array<native.Array<number>>>, ints2: native.Array<number>): globalAndroid.util.Pair<native.Array<androidx.media2.exoplayer.external.RendererConfiguration>,native.Array<androidx.media2.exoplayer.external.trackselection.TrackSelection>>;
					}
					export module MappingTrackSelector {
						export class MappedTrackInfo extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.MappingTrackSelector.MappedTrackInfo>;
							public static RENDERER_SUPPORT_NO_TRACKS: number;
							public static RENDERER_SUPPORT_UNSUPPORTED_TRACKS: number;
							public static RENDERER_SUPPORT_EXCEEDS_CAPABILITIES_TRACKS: number;
							public static RENDERER_SUPPORT_PLAYABLE_TRACKS: number;
							public length: number;
							public getRendererCount(): number;
							public getAdaptiveSupport(rendererIndex: number, groupIndex: number, includeCapabilitiesExceededTracks: boolean): number;
							public getTrackSupport(rendererIndex: number, groupIndex: number, trackIndex: number): number;
							/** @deprecated */
							public getUnassociatedTrackGroups(): androidx.media2.exoplayer.external.source.TrackGroupArray;
							public getTrackGroups(rendererIndex: number): androidx.media2.exoplayer.external.source.TrackGroupArray;
							public getRendererType(rendererIndex: number): number;
							public getRendererSupport(rendererIndex: number): number;
							public getUnmappedTrackGroups(): androidx.media2.exoplayer.external.source.TrackGroupArray;
							public getTypeSupport(trackType: number): number;
							public getAdaptiveSupport(rendererIndex: number, groupIndex: number, trackIndices: native.Array<number>): number;
							/** @deprecated */
							public getTrackTypeRendererSupport(trackType: number): number;
							/** @deprecated */
							public getTrackFormatSupport(rendererIndex: number, groupIndex: number, trackIndex: number): number;
						}
						export module MappedTrackInfo {
							export class RendererSupport extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.MappingTrackSelector.MappedTrackInfo.RendererSupport>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.trackselection.MappingTrackSelector$MappedTrackInfo$RendererSupport interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module trackselection {
					export class RandomTrackSelection extends androidx.media2.exoplayer.external.trackselection.BaseTrackSelection {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.RandomTrackSelection>;
						public constructor(group: androidx.media2.exoplayer.external.source.TrackGroup, tracks: native.Array<number>, seed: number);
						public getSelectionData(): any;
						public length(): number;
						public getSelectedIndexInTrackGroup(): number;
						public indexOf(format: androidx.media2.exoplayer.external.Format): number;
						public onPlaybackSpeed(playbackSpeed: number): void;
						public evaluateQueueSize(playbackPositionUs: number, queue: java.util.List<any>): number;
						public getSelectedFormat(): androidx.media2.exoplayer.external.Format;
						public getSelectionReason(): number;
						public disable(): void;
						public enable(): void;
						public getTrackGroup(): androidx.media2.exoplayer.external.source.TrackGroup;
						public getIndexInTrackGroup(index: number): number;
						public updateSelectedTrack(playbackPositionUs: number, bufferedDurationUs: number, availableDurationUs: number, queue: java.util.List<any>, mediaChunkIterators: native.Array<androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator>): void;
						/** @deprecated */
						public updateSelectedTrack(long0: number, long1: number, long2: number): void;
						public updateSelectedTrack(long0: number, long1: number, long2: number, list3: java.util.List<any>, mediaChunkIterators4: native.Array<androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator>): void;
						public indexOf(indexInTrackGroup: number): number;
						public getSelectedIndex(): number;
						public getFormat(index: number): androidx.media2.exoplayer.external.Format;
						public blacklist(index: number, blacklistDurationMs: number): boolean;
						public constructor(group: androidx.media2.exoplayer.external.source.TrackGroup, tracks: native.Array<number>);
						public constructor(group: androidx.media2.exoplayer.external.source.TrackGroup, tracks: native.Array<number>, random: java.util.Random);
						public onDiscontinuity(): void;
					}
					export module RandomTrackSelection {
						export class Factory extends java.lang.Object implements androidx.media2.exoplayer.external.trackselection.TrackSelection.Factory {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.RandomTrackSelection.Factory>;
							public constructor();
							public constructor(seed: number);
							public createTrackSelections(definitions: native.Array<androidx.media2.exoplayer.external.trackselection.TrackSelection.Definition>, bandwidthMeter: androidx.media2.exoplayer.external.upstream.BandwidthMeter): native.Array<androidx.media2.exoplayer.external.trackselection.TrackSelection>;
							/** @deprecated */
							public createTrackSelection(trackGroup0: androidx.media2.exoplayer.external.source.TrackGroup, bandwidthMeter1: androidx.media2.exoplayer.external.upstream.BandwidthMeter, ints2: native.Array<number>): androidx.media2.exoplayer.external.trackselection.TrackSelection;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module trackselection {
					export class TrackSelection extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.TrackSelection>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.trackselection.TrackSelection interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							enable(): void;
							disable(): void;
							getTrackGroup(): androidx.media2.exoplayer.external.source.TrackGroup;
							length(): number;
							getFormat(int0: number): androidx.media2.exoplayer.external.Format;
							getIndexInTrackGroup(int0: number): number;
							indexOf(format0: androidx.media2.exoplayer.external.Format): number;
							indexOf(int0: number): number;
							getSelectedFormat(): androidx.media2.exoplayer.external.Format;
							getSelectedIndexInTrackGroup(): number;
							getSelectedIndex(): number;
							getSelectionReason(): number;
							getSelectionData(): any;
							onPlaybackSpeed(float0: number): void;
							onDiscontinuity(): void;
							updateSelectedTrack(long0: number, long1: number, long2: number): void;
							updateSelectedTrack(long0: number, long1: number, long2: number, list3: java.util.List<any>, mediaChunkIterators4: native.Array<androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator>): void;
							evaluateQueueSize(long0: number, list1: java.util.List<any>): number;
							blacklist(int0: number, long1: number): boolean;
						});
						public constructor();
						public indexOf(format0: androidx.media2.exoplayer.external.Format): number;
						public getSelectionData(): any;
						public length(): number;
						public getSelectedIndexInTrackGroup(): number;
						public updateSelectedTrack(long0: number, long1: number, long2: number, list3: java.util.List<any>, mediaChunkIterators4: native.Array<androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator>): void;
						public getFormat(int0: number): androidx.media2.exoplayer.external.Format;
						public getSelectedFormat(): androidx.media2.exoplayer.external.Format;
						public onPlaybackSpeed(float0: number): void;
						public getSelectionReason(): number;
						public disable(): void;
						public indexOf(int0: number): number;
						public enable(): void;
						public getTrackGroup(): androidx.media2.exoplayer.external.source.TrackGroup;
						public getIndexInTrackGroup(int0: number): number;
						/** @deprecated */
						public updateSelectedTrack(long0: number, long1: number, long2: number): void;
						public evaluateQueueSize(long0: number, list1: java.util.List<any>): number;
						public blacklist(int0: number, long1: number): boolean;
						public getSelectedIndex(): number;
						public onDiscontinuity(): void;
					}
						export module  {
					export module TrackSelection {
							export abstract class CC extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.TrackSelection..CC>;
								public static onDiscontinuity$$dflt$$(this0: androidx.media2.exoplayer.external.trackselection.TrackSelection): void;
								/** @deprecated */
								public static updateSelectedTrack$$dflt$$(this0: androidx.media2.exoplayer.external.trackselection.TrackSelection, playbackPositionUs: number, bufferedDurationUs: number, availableDurationUs: number): void;
								public static updateSelectedTrack$$dflt$$(this0: androidx.media2.exoplayer.external.trackselection.TrackSelection, playbackPositionUs: number, bufferedDurationUs: number, availableDurationUs: number, queue: java.util.List<any>, mediaChunkIterators: native.Array<androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator>): void;
							}
						}
						export class Definition extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.TrackSelection.Definition>;
							public group: androidx.media2.exoplayer.external.source.TrackGroup;
							public tracks: native.Array<number>;
							public reason: number;
							public data: any;
							public constructor(group: androidx.media2.exoplayer.external.source.TrackGroup, tracks: native.Array<number>, reason: number, data: any);
							public constructor(group: androidx.media2.exoplayer.external.source.TrackGroup, tracks: native.Array<number>);
						}
						export class Factory extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.TrackSelection.Factory>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.trackselection.TrackSelection$Factory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								createTrackSelection(trackGroup0: androidx.media2.exoplayer.external.source.TrackGroup, bandwidthMeter1: androidx.media2.exoplayer.external.upstream.BandwidthMeter, ints2: native.Array<number>): androidx.media2.exoplayer.external.trackselection.TrackSelection;
								createTrackSelections(definitions0: native.Array<androidx.media2.exoplayer.external.trackselection.TrackSelection.Definition>, bandwidthMeter1: androidx.media2.exoplayer.external.upstream.BandwidthMeter): native.Array<androidx.media2.exoplayer.external.trackselection.TrackSelection>;
							});
							public constructor();
							public createTrackSelections(definitions0: native.Array<androidx.media2.exoplayer.external.trackselection.TrackSelection.Definition>, bandwidthMeter1: androidx.media2.exoplayer.external.upstream.BandwidthMeter): native.Array<androidx.media2.exoplayer.external.trackselection.TrackSelection>;
							/** @deprecated */
							public createTrackSelection(trackGroup0: androidx.media2.exoplayer.external.source.TrackGroup, bandwidthMeter1: androidx.media2.exoplayer.external.upstream.BandwidthMeter, ints2: native.Array<number>): androidx.media2.exoplayer.external.trackselection.TrackSelection;
						}
							export module  {
						export module Factory {
								export abstract class CC extends java.lang.Object {
									public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.TrackSelection.Factory..CC>;
									public static createTrackSelections$$dflt$$(this0: androidx.media2.exoplayer.external.trackselection.TrackSelection.Factory, definitions: native.Array<androidx.media2.exoplayer.external.trackselection.TrackSelection.Definition>, bandwidthMeter: androidx.media2.exoplayer.external.upstream.BandwidthMeter): native.Array<androidx.media2.exoplayer.external.trackselection.TrackSelection>;
									/** @deprecated */
									public static createTrackSelection$$dflt$$(this0: androidx.media2.exoplayer.external.trackselection.TrackSelection.Factory, group: androidx.media2.exoplayer.external.source.TrackGroup, bandwidthMeter: androidx.media2.exoplayer.external.upstream.BandwidthMeter, tracks: native.Array<number>): androidx.media2.exoplayer.external.trackselection.TrackSelection;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module trackselection {
					export class TrackSelectionArray extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.TrackSelectionArray>;
						public length: number;
						public equals(obj: any): boolean;
						public hashCode(): number;
						public getAll(): native.Array<androidx.media2.exoplayer.external.trackselection.TrackSelection>;
						public get(index: number): androidx.media2.exoplayer.external.trackselection.TrackSelection;
						public constructor(trackSelections: native.Array<androidx.media2.exoplayer.external.trackselection.TrackSelection>);
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module trackselection {
					export class TrackSelectionParameters extends java.lang.Object implements globalAndroid.os.Parcelable {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.TrackSelectionParameters>;
						public static DEFAULT: androidx.media2.exoplayer.external.trackselection.TrackSelectionParameters;
						public preferredAudioLanguage: string;
						public preferredTextLanguage: string;
						public selectUndeterminedTextLanguage: boolean;
						public disabledTextTrackSelectionFlags: number;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.trackselection.TrackSelectionParameters>;
						public equals(obj: any): boolean;
						public describeContents(): number;
						public hashCode(): number;
						public buildUpon(): androidx.media2.exoplayer.external.trackselection.TrackSelectionParameters.Builder;
						public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
					}
					export module TrackSelectionParameters {
						export class Builder extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.TrackSelectionParameters.Builder>;
							public constructor();
							public setDisabledTextTrackSelectionFlags(disabledTextTrackSelectionFlags: number): androidx.media2.exoplayer.external.trackselection.TrackSelectionParameters.Builder;
							public build(): androidx.media2.exoplayer.external.trackselection.TrackSelectionParameters;
							public setPreferredTextLanguage(preferredTextLanguage: string): androidx.media2.exoplayer.external.trackselection.TrackSelectionParameters.Builder;
							public setPreferredAudioLanguage(preferredAudioLanguage: string): androidx.media2.exoplayer.external.trackselection.TrackSelectionParameters.Builder;
							public setSelectUndeterminedTextLanguage(selectUndeterminedTextLanguage: boolean): androidx.media2.exoplayer.external.trackselection.TrackSelectionParameters.Builder;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module trackselection {
					export class TrackSelectionUtil extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.TrackSelectionUtil>;
						public static updateParametersWithOverride(parameters: androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.Parameters, rendererIndex: number, trackGroupArray: androidx.media2.exoplayer.external.source.TrackGroupArray, isDisabled: boolean, override: androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.SelectionOverride): androidx.media2.exoplayer.external.trackselection.DefaultTrackSelector.Parameters;
						public static createTrackSelectionsForDefinitions(definitions: native.Array<androidx.media2.exoplayer.external.trackselection.TrackSelection.Definition>, adaptiveTrackSelectionFactory: androidx.media2.exoplayer.external.trackselection.TrackSelectionUtil.AdaptiveTrackSelectionFactory): native.Array<androidx.media2.exoplayer.external.trackselection.TrackSelection>;
					}
					export module TrackSelectionUtil {
						export class AdaptiveTrackSelectionFactory extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.TrackSelectionUtil.AdaptiveTrackSelectionFactory>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.trackselection.TrackSelectionUtil$AdaptiveTrackSelectionFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								createAdaptiveTrackSelection(definition0: androidx.media2.exoplayer.external.trackselection.TrackSelection.Definition): androidx.media2.exoplayer.external.trackselection.TrackSelection;
							});
							public constructor();
							public createAdaptiveTrackSelection(definition0: androidx.media2.exoplayer.external.trackselection.TrackSelection.Definition): androidx.media2.exoplayer.external.trackselection.TrackSelection;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module trackselection {
					export abstract class TrackSelector extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.TrackSelector>;
						public constructor();
						public invalidate(): void;
						public getBandwidthMeter(): androidx.media2.exoplayer.external.upstream.BandwidthMeter;
						public onSelectionActivated(object0: any): void;
						public selectTracks(rendererCapabilitiess0: native.Array<androidx.media2.exoplayer.external.RendererCapabilities>, trackGroupArray1: androidx.media2.exoplayer.external.source.TrackGroupArray, mediaPeriodId2: androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId, timeline3: androidx.media2.exoplayer.external.Timeline): androidx.media2.exoplayer.external.trackselection.TrackSelectorResult;
						public init(listener: androidx.media2.exoplayer.external.trackselection.TrackSelector.InvalidationListener, bandwidthMeter: androidx.media2.exoplayer.external.upstream.BandwidthMeter): void;
					}
					export module TrackSelector {
						export class InvalidationListener extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.TrackSelector.InvalidationListener>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.trackselection.TrackSelector$InvalidationListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onTrackSelectionsInvalidated(): void;
							});
							public constructor();
							public onTrackSelectionsInvalidated(): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module trackselection {
					export class TrackSelectorResult extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.trackselection.TrackSelectorResult>;
						public length: number;
						public rendererConfigurations: native.Array<androidx.media2.exoplayer.external.RendererConfiguration>;
						public selections: androidx.media2.exoplayer.external.trackselection.TrackSelectionArray;
						public info: any;
						public isRendererEnabled(index: number): boolean;
						public isEquivalent(other: androidx.media2.exoplayer.external.trackselection.TrackSelectorResult): boolean;
						public isEquivalent(other: androidx.media2.exoplayer.external.trackselection.TrackSelectorResult, index: number): boolean;
						public constructor(rendererConfigurations: native.Array<androidx.media2.exoplayer.external.RendererConfiguration>, selections: native.Array<androidx.media2.exoplayer.external.trackselection.TrackSelection>, info: any);
					}
				}
			}
		}
	}
}


declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class Allocation extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.Allocation>;
						public data: native.Array<number>;
						public offset: number;
						public constructor(data: native.Array<number>, offset: number);
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class Allocator extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.Allocator>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.upstream.Allocator interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							allocate(): androidx.media2.exoplayer.external.upstream.Allocation;
							release(allocation0: androidx.media2.exoplayer.external.upstream.Allocation): void;
							release(allocations0: native.Array<androidx.media2.exoplayer.external.upstream.Allocation>): void;
							trim(): void;
							getTotalBytesAllocated(): number;
							getIndividualAllocationLength(): number;
						});
						public constructor();
						public getTotalBytesAllocated(): number;
						public trim(): void;
						public allocate(): androidx.media2.exoplayer.external.upstream.Allocation;
						public release(allocations0: native.Array<androidx.media2.exoplayer.external.upstream.Allocation>): void;
						public release(allocation0: androidx.media2.exoplayer.external.upstream.Allocation): void;
						public getIndividualAllocationLength(): number;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class AssetDataSource extends androidx.media2.exoplayer.external.upstream.BaseDataSource {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.AssetDataSource>;
						public constructor(isNetwork: boolean);
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public open(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec): number;
						public getResponseHeaders(): java.util.Map<any,any>;
						public close(): void;
						public read(buffer: native.Array<number>, offset: number, readLength: number): number;
						public getUri(): globalAndroid.net.Uri;
						public constructor(context: globalAndroid.content.Context);
						public addTransferListener(transferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
					}
					export module AssetDataSource {
						export class AssetDataSourceException extends java.io.IOException {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.AssetDataSource.AssetDataSourceException>;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(message: string);
							public constructor(cause: java.io.IOException);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class BandwidthMeter extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.BandwidthMeter>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.upstream.BandwidthMeter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getBitrateEstimate(): number;
							getTransferListener(): androidx.media2.exoplayer.external.upstream.TransferListener;
							addEventListener(handler0: globalAndroid.os.Handler, eventListener1: androidx.media2.exoplayer.external.upstream.BandwidthMeter.EventListener): void;
							removeEventListener(eventListener0: androidx.media2.exoplayer.external.upstream.BandwidthMeter.EventListener): void;
						});
						public constructor();
						public addEventListener(handler0: globalAndroid.os.Handler, eventListener1: androidx.media2.exoplayer.external.upstream.BandwidthMeter.EventListener): void;
						public getBitrateEstimate(): number;
						public getTransferListener(): androidx.media2.exoplayer.external.upstream.TransferListener;
						public removeEventListener(eventListener0: androidx.media2.exoplayer.external.upstream.BandwidthMeter.EventListener): void;
					}
					export module BandwidthMeter {
						export class EventListener extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.BandwidthMeter.EventListener>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.upstream.BandwidthMeter$EventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onBandwidthSample(int0: number, long1: number, long2: number): void;
							});
							public constructor();
							public onBandwidthSample(int0: number, long1: number, long2: number): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export abstract class BaseDataSource extends java.lang.Object implements androidx.media2.exoplayer.external.upstream.DataSource {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.BaseDataSource>;
						public constructor(isNetwork: boolean);
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public transferEnded(): void;
						public getResponseHeaders(): java.util.Map<any,any>;
						public open(dataSpec0: androidx.media2.exoplayer.external.upstream.DataSpec): number;
						public close(): void;
						public transferInitializing(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec): void;
						public bytesTransferred(bytesTransferred: number): void;
						public transferStarted(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec): void;
						public read(bytes0: native.Array<number>, int1: number, int2: number): number;
						public getUri(): globalAndroid.net.Uri;
						public addTransferListener(transferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class ByteArrayDataSink extends java.lang.Object implements androidx.media2.exoplayer.external.upstream.DataSink {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.ByteArrayDataSink>;
						public constructor();
						public close(): void;
						public getData(): native.Array<number>;
						public write(buffer: native.Array<number>, offset: number, length: number): void;
						public open(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class ByteArrayDataSource extends androidx.media2.exoplayer.external.upstream.BaseDataSource {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.ByteArrayDataSource>;
						public constructor(isNetwork: boolean);
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public open(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec): number;
						public getResponseHeaders(): java.util.Map<any,any>;
						public close(): void;
						public constructor(data: native.Array<number>);
						public read(buffer: native.Array<number>, offset: number, readLength: number): number;
						public getUri(): globalAndroid.net.Uri;
						public addTransferListener(transferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class ContentDataSource extends androidx.media2.exoplayer.external.upstream.BaseDataSource {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.ContentDataSource>;
						public constructor(isNetwork: boolean);
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public open(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec): number;
						public getResponseHeaders(): java.util.Map<any,any>;
						public close(): void;
						public read(buffer: native.Array<number>, offset: number, readLength: number): number;
						public getUri(): globalAndroid.net.Uri;
						public constructor(context: globalAndroid.content.Context);
						public addTransferListener(transferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
					}
					export module ContentDataSource {
						export class ContentDataSourceException extends java.io.IOException {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.ContentDataSource.ContentDataSourceException>;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(message: string);
							public constructor(cause: java.io.IOException);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class DataSchemeDataSource extends androidx.media2.exoplayer.external.upstream.BaseDataSource {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.DataSchemeDataSource>;
						public static SCHEME_DATA: string;
						public constructor(isNetwork: boolean);
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public open(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec): number;
						public getResponseHeaders(): java.util.Map<any,any>;
						public constructor();
						public close(): void;
						public read(buffer: native.Array<number>, offset: number, readLength: number): number;
						public getUri(): globalAndroid.net.Uri;
						public addTransferListener(transferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class DataSink extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.DataSink>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.upstream.DataSink interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							open(dataSpec0: androidx.media2.exoplayer.external.upstream.DataSpec): void;
							write(bytes0: native.Array<number>, int1: number, int2: number): void;
							close(): void;
						});
						public constructor();
						public open(dataSpec0: androidx.media2.exoplayer.external.upstream.DataSpec): void;
						public close(): void;
						public write(bytes0: native.Array<number>, int1: number, int2: number): void;
					}
					export module DataSink {
						export class Factory extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.DataSink.Factory>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.upstream.DataSink$Factory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								createDataSink(): androidx.media2.exoplayer.external.upstream.DataSink;
							});
							public constructor();
							public createDataSink(): androidx.media2.exoplayer.external.upstream.DataSink;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class DataSource extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.DataSource>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.upstream.DataSource interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							addTransferListener(transferListener0: androidx.media2.exoplayer.external.upstream.TransferListener): void;
							open(dataSpec0: androidx.media2.exoplayer.external.upstream.DataSpec): number;
							read(bytes0: native.Array<number>, int1: number, int2: number): number;
							getUri(): globalAndroid.net.Uri;
							getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
							close(): void;
						});
						public constructor();
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public open(dataSpec0: androidx.media2.exoplayer.external.upstream.DataSpec): number;
						public close(): void;
						public read(bytes0: native.Array<number>, int1: number, int2: number): number;
						public addTransferListener(transferListener0: androidx.media2.exoplayer.external.upstream.TransferListener): void;
						public getUri(): globalAndroid.net.Uri;
					}
						export module  {
					export module DataSource {
							export abstract class CC extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.DataSource..CC>;
								public static getResponseHeaders$$dflt$$(this0: androidx.media2.exoplayer.external.upstream.DataSource): java.util.Map<any,any>;
							}
						}
						export class Factory extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.DataSource.Factory>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.upstream.DataSource$Factory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								createDataSource(): androidx.media2.exoplayer.external.upstream.DataSource;
							});
							public constructor();
							public createDataSource(): androidx.media2.exoplayer.external.upstream.DataSource;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class DataSourceException extends java.io.IOException {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.DataSourceException>;
						public static POSITION_OUT_OF_RANGE: number;
						public reason: number;
						public constructor();
						public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						public constructor(message: string, cause: java.lang.Throwable);
						public constructor(cause: java.lang.Throwable);
						public constructor(message: string);
						public constructor(reason: number);
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class DataSourceInputStream extends java.io.InputStream {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.DataSourceInputStream>;
						public read(): number;
						public constructor();
						public read(b: native.Array<number>): number;
						public read(buffer: native.Array<number>, offset: number, length: number): number;
						public close(): void;
						public open(): void;
						public bytesRead(): number;
						public read(b: native.Array<number>, off: number, len: number): number;
						public constructor(dataSource: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec);
						public read(buffer: native.Array<number>): number;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class DataSpec extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.DataSpec>;
						public static FLAG_ALLOW_GZIP: number;
						public static FLAG_ALLOW_ICY_METADATA: number;
						public static FLAG_DONT_CACHE_IF_LENGTH_UNKNOWN: number;
						public static FLAG_ALLOW_CACHE_FRAGMENTATION: number;
						public static HTTP_METHOD_GET: number;
						public static HTTP_METHOD_POST: number;
						public static HTTP_METHOD_HEAD: number;
						public uri: globalAndroid.net.Uri;
						public httpMethod: number;
						public httpBody: native.Array<number>;
						public httpRequestHeaders: java.util.Map<string,string>;
						public absoluteStreamPosition: number;
						public position: number;
						public length: number;
						public key: string;
						public flags: number;
						public getHttpMethodString(): string;
						public subrange(offset: number, length: number): androidx.media2.exoplayer.external.upstream.DataSpec;
						public constructor(uri: globalAndroid.net.Uri);
						public constructor(uri: globalAndroid.net.Uri, absoluteStreamPosition: number, length: number, key: string);
						public constructor(uri: globalAndroid.net.Uri, postBody: native.Array<number>, absoluteStreamPosition: number, position: number, length: number, key: string, flags: number);
						public toString(): string;
						public static getStringForHttpMethod(httpMethod: number): string;
						public constructor(uri: globalAndroid.net.Uri, httpMethod: number, httpBody: native.Array<number>, absoluteStreamPosition: number, position: number, length: number, key: string, flags: number, httpRequestHeaders: java.util.Map<string,string>);
						public constructor(uri: globalAndroid.net.Uri, flags: number);
						public constructor(uri: globalAndroid.net.Uri, httpMethod: number, httpBody: native.Array<number>, absoluteStreamPosition: number, position: number, length: number, key: string, flags: number);
						public constructor(uri: globalAndroid.net.Uri, absoluteStreamPosition: number, position: number, length: number, key: string, flags: number);
						public subrange(offset: number): androidx.media2.exoplayer.external.upstream.DataSpec;
						public constructor(uri: globalAndroid.net.Uri, absoluteStreamPosition: number, length: number, key: string, flags: number);
						public withUri(uri: globalAndroid.net.Uri): androidx.media2.exoplayer.external.upstream.DataSpec;
						public isFlagSet(flag: number): boolean;
					}
					export module DataSpec {
						export class Flags extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.DataSpec.Flags>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.upstream.DataSpec$Flags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
						export class HttpMethod extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.DataSpec.HttpMethod>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.upstream.DataSpec$HttpMethod interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class DefaultAllocator extends java.lang.Object implements androidx.media2.exoplayer.external.upstream.Allocator {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.DefaultAllocator>;
						public getTotalBytesAllocated(): number;
						public setTargetBufferSize(targetBufferSize: number): void;
						public release(allocations: native.Array<androidx.media2.exoplayer.external.upstream.Allocation>): void;
						public trim(): void;
						public constructor(trimOnReset: boolean, individualAllocationSize: number, initialAllocationCount: number);
						public release(allocation: androidx.media2.exoplayer.external.upstream.Allocation): void;
						public allocate(): androidx.media2.exoplayer.external.upstream.Allocation;
						public constructor(trimOnReset: boolean, individualAllocationSize: number);
						public reset(): void;
						public getIndividualAllocationLength(): number;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class DefaultBandwidthMeter extends java.lang.Object implements androidx.media2.exoplayer.external.upstream.BandwidthMeter, androidx.media2.exoplayer.external.upstream.TransferListener {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.DefaultBandwidthMeter>;
						public static DEFAULT_INITIAL_BITRATE_COUNTRY_GROUPS: java.util.Map<string,native.Array<number>>;
						public static DEFAULT_INITIAL_BITRATE_ESTIMATES_WIFI: native.Array<number>;
						public static DEFAULT_INITIAL_BITRATE_ESTIMATES_2G: native.Array<number>;
						public static DEFAULT_INITIAL_BITRATE_ESTIMATES_3G: native.Array<number>;
						public static DEFAULT_INITIAL_BITRATE_ESTIMATES_4G: native.Array<number>;
						public static DEFAULT_INITIAL_BITRATE_ESTIMATE: number;
						public static DEFAULT_SLIDING_WINDOW_MAX_WEIGHT: number;
						public removeEventListener(eventListener: androidx.media2.exoplayer.external.upstream.BandwidthMeter.EventListener): void;
						public addEventListener(eventHandler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.upstream.BandwidthMeter.EventListener): void;
						public onTransferEnd(source: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, isNetwork: boolean): void;
						/** @deprecated */
						public constructor();
						public getBitrateEstimate(): number;
						public getTransferListener(): androidx.media2.exoplayer.external.upstream.TransferListener;
						public static getSingletonInstance(context: globalAndroid.content.Context): androidx.media2.exoplayer.external.upstream.DefaultBandwidthMeter;
						public setNetworkTypeOverride(networkType: number): void;
						public onTransferInitializing(source: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, isNetwork: boolean): void;
						public onTransferStart(source: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, isNetwork: boolean): void;
						public onBytesTransferred(source: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, isNetwork: boolean, bytes: number): void;
					}
					export module DefaultBandwidthMeter {
						export class Builder extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.DefaultBandwidthMeter.Builder>;
							public setClock(clock: androidx.media2.exoplayer.external.util.Clock): androidx.media2.exoplayer.external.upstream.DefaultBandwidthMeter.Builder;
							public build(): androidx.media2.exoplayer.external.upstream.DefaultBandwidthMeter;
							public setSlidingWindowMaxWeight(slidingWindowMaxWeight: number): androidx.media2.exoplayer.external.upstream.DefaultBandwidthMeter.Builder;
							public setInitialBitrateEstimate(networkType: number, initialBitrateEstimate: number): androidx.media2.exoplayer.external.upstream.DefaultBandwidthMeter.Builder;
							public setInitialBitrateEstimate(initialBitrateEstimate: number): androidx.media2.exoplayer.external.upstream.DefaultBandwidthMeter.Builder;
							public setResetOnNetworkTypeChange(resetOnNetworkTypeChange: boolean): androidx.media2.exoplayer.external.upstream.DefaultBandwidthMeter.Builder;
							public setInitialBitrateEstimate(countryCode: string): androidx.media2.exoplayer.external.upstream.DefaultBandwidthMeter.Builder;
							public constructor(context: globalAndroid.content.Context);
						}
						export class ConnectivityActionReceiver extends globalAndroid.content.BroadcastReceiver {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.DefaultBandwidthMeter.ConnectivityActionReceiver>;
							public onReceive(context: globalAndroid.content.Context, intent: globalAndroid.content.Intent): void;
							public static getInstance(context: globalAndroid.content.Context): androidx.media2.exoplayer.external.upstream.DefaultBandwidthMeter.ConnectivityActionReceiver;
							public register(bandwidthMeter: androidx.media2.exoplayer.external.upstream.DefaultBandwidthMeter): void;
							public onReceive(context0: globalAndroid.content.Context, intent1: globalAndroid.content.Intent): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class DefaultDataSource extends java.lang.Object implements androidx.media2.exoplayer.external.upstream.DataSource {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.DefaultDataSource>;
						public constructor(context: globalAndroid.content.Context, userAgent: string, connectTimeoutMillis: number, readTimeoutMillis: number, allowCrossProtocolRedirects: boolean);
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public open(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec): number;
						public constructor(context: globalAndroid.content.Context, userAgent: string, allowCrossProtocolRedirects: boolean);
						public close(): void;
						public read(buffer: native.Array<number>, offset: number, readLength: number): number;
						public getUri(): globalAndroid.net.Uri;
						public constructor(context: globalAndroid.content.Context, baseDataSource: androidx.media2.exoplayer.external.upstream.DataSource);
						public addTransferListener(transferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class DefaultDataSourceFactory extends java.lang.Object implements androidx.media2.exoplayer.external.upstream.DataSource.Factory {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.DefaultDataSourceFactory>;
						public constructor(context: globalAndroid.content.Context, userAgent: string);
						public createDataSource(): androidx.media2.exoplayer.external.upstream.DefaultDataSource;
						public constructor(context: globalAndroid.content.Context, userAgent: string, listener: androidx.media2.exoplayer.external.upstream.TransferListener);
						public constructor(context: globalAndroid.content.Context, baseDataSourceFactory: androidx.media2.exoplayer.external.upstream.DataSource.Factory);
						public constructor(context: globalAndroid.content.Context, listener: androidx.media2.exoplayer.external.upstream.TransferListener, baseDataSourceFactory: androidx.media2.exoplayer.external.upstream.DataSource.Factory);
						public createDataSource(): androidx.media2.exoplayer.external.upstream.DataSource;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class DefaultHttpDataSource extends androidx.media2.exoplayer.external.upstream.BaseDataSource implements androidx.media2.exoplayer.external.upstream.HttpDataSource {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.DefaultHttpDataSource>;
						public static DEFAULT_CONNECT_TIMEOUT_MILLIS: number;
						public static DEFAULT_READ_TIMEOUT_MILLIS: number;
						public constructor(isNetwork: boolean);
						public clearAllRequestProperties(): void;
						public open(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec): number;
						/** @deprecated */
						public constructor(userAgent: string, contentTypePredicate: androidx.media2.exoplayer.external.util.Predicate<string>);
						public close(): void;
						public getResponseCode(): number;
						public setContentTypePredicate(contentTypePredicate: androidx.media2.exoplayer.external.util.Predicate<string>): void;
						public bytesRead(): number;
						public read(buffer: native.Array<number>, offset: number, readLength: number): number;
						public getUri(): globalAndroid.net.Uri;
						public constructor(userAgent: string);
						public addTransferListener(transferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public clearRequestProperty(name: string): void;
						public bytesSkipped(): number;
						public getResponseHeaders(): java.util.Map<any,any>;
						public constructor(userAgent: string, connectTimeoutMillis: number, readTimeoutMillis: number);
						/** @deprecated */
						public constructor(userAgent: string, contentTypePredicate: androidx.media2.exoplayer.external.util.Predicate<string>, connectTimeoutMillis: number, readTimeoutMillis: number);
						public constructor(userAgent: string, connectTimeoutMillis: number, readTimeoutMillis: number, allowCrossProtocolRedirects: boolean, defaultRequestProperties: androidx.media2.exoplayer.external.upstream.HttpDataSource.RequestProperties);
						public bytesRemaining(): number;
						/** @deprecated */
						public constructor(userAgent: string, contentTypePredicate: androidx.media2.exoplayer.external.util.Predicate<string>, connectTimeoutMillis: number, readTimeoutMillis: number, allowCrossProtocolRedirects: boolean, defaultRequestProperties: androidx.media2.exoplayer.external.upstream.HttpDataSource.RequestProperties);
						public getConnection(): java.net.HttpURLConnection;
						public setRequestProperty(name: string, value: string): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class DefaultHttpDataSourceFactory extends androidx.media2.exoplayer.external.upstream.HttpDataSource.BaseFactory {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.DefaultHttpDataSourceFactory>;
						public createDataSource(): androidx.media2.exoplayer.external.upstream.HttpDataSource;
						public constructor();
						/** @deprecated */
						public clearAllDefaultRequestProperties(): void;
						public createDataSourceInternal(requestProperties0: androidx.media2.exoplayer.external.upstream.HttpDataSource.RequestProperties): androidx.media2.exoplayer.external.upstream.HttpDataSource;
						public createDataSourceInternal(defaultRequestProperties: androidx.media2.exoplayer.external.upstream.HttpDataSource.RequestProperties): androidx.media2.exoplayer.external.upstream.DefaultHttpDataSource;
						public getDefaultRequestProperties(): androidx.media2.exoplayer.external.upstream.HttpDataSource.RequestProperties;
						/** @deprecated */
						public setDefaultRequestProperty(name: string, value: string): void;
						/** @deprecated */
						public clearDefaultRequestProperty(name: string): void;
						public constructor(userAgent: string, listener: androidx.media2.exoplayer.external.upstream.TransferListener, connectTimeoutMillis: number, readTimeoutMillis: number, allowCrossProtocolRedirects: boolean);
						public constructor(userAgent: string, connectTimeoutMillis: number, readTimeoutMillis: number, allowCrossProtocolRedirects: boolean);
						public constructor(userAgent: string, listener: androidx.media2.exoplayer.external.upstream.TransferListener);
						public constructor(userAgent: string);
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class DefaultLoadErrorHandlingPolicy extends java.lang.Object implements androidx.media2.exoplayer.external.upstream.LoadErrorHandlingPolicy {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.DefaultLoadErrorHandlingPolicy>;
						public static DEFAULT_MIN_LOADABLE_RETRY_COUNT: number;
						public static DEFAULT_MIN_LOADABLE_RETRY_COUNT_PROGRESSIVE_LIVE: number;
						public static DEFAULT_TRACK_BLACKLIST_MS: number;
						public getBlacklistDurationMsFor(dataType: number, loadDurationMs: number, exception: java.io.IOException, errorCount: number): number;
						public constructor();
						public constructor(minimumLoadableRetryCount: number);
						public getRetryDelayMsFor(dataType: number, loadDurationMs: number, exception: java.io.IOException, errorCount: number): number;
						public getMinimumLoadableRetryCount(dataType: number): number;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class DummyDataSource extends java.lang.Object implements androidx.media2.exoplayer.external.upstream.DataSource {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.DummyDataSource>;
						public static INSTANCE: androidx.media2.exoplayer.external.upstream.DummyDataSource;
						public static FACTORY: androidx.media2.exoplayer.external.upstream.DataSource.Factory;
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public open(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec): number;
						public getResponseHeaders(): java.util.Map<any,any>;
						public close(): void;
						public read(buffer: native.Array<number>, offset: number, readLength: number): number;
						public getUri(): globalAndroid.net.Uri;
						public addTransferListener(transferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class FileDataSource extends androidx.media2.exoplayer.external.upstream.BaseDataSource {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.FileDataSource>;
						public constructor(isNetwork: boolean);
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public open(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec): number;
						public getResponseHeaders(): java.util.Map<any,any>;
						public constructor();
						public close(): void;
						public read(buffer: native.Array<number>, offset: number, readLength: number): number;
						public getUri(): globalAndroid.net.Uri;
						public addTransferListener(transferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
					}
					export module FileDataSource {
						export class FileDataSourceException extends java.io.IOException {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.FileDataSource.FileDataSourceException>;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(message: string);
							public constructor(cause: java.io.IOException);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class FileDataSourceFactory extends java.lang.Object implements androidx.media2.exoplayer.external.upstream.DataSource.Factory {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.FileDataSourceFactory>;
						public constructor();
						public constructor(listener: androidx.media2.exoplayer.external.upstream.TransferListener);
						public createDataSource(): androidx.media2.exoplayer.external.upstream.DataSource;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class HttpDataSource extends java.lang.Object implements androidx.media2.exoplayer.external.upstream.DataSource {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.HttpDataSource>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.upstream.HttpDataSource interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							open(dataSpec0: androidx.media2.exoplayer.external.upstream.DataSpec): number;
							close(): void;
							read(bytes0: native.Array<number>, int1: number, int2: number): number;
							setRequestProperty(string0: string, string1: string): void;
							clearRequestProperty(string0: string): void;
							clearAllRequestProperties(): void;
							getResponseCode(): number;
							getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
							<clinit>(): void;
							addTransferListener(transferListener0: androidx.media2.exoplayer.external.upstream.TransferListener): void;
							open(dataSpec0: androidx.media2.exoplayer.external.upstream.DataSpec): number;
							read(bytes0: native.Array<number>, int1: number, int2: number): number;
							getUri(): globalAndroid.net.Uri;
							getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
							close(): void;
						});
						public constructor();
						public static REJECT_PAYWALL_TYPES: androidx.media2.exoplayer.external.util.Predicate<string>;
						public clearAllRequestProperties(): void;
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public open(dataSpec0: androidx.media2.exoplayer.external.upstream.DataSpec): number;
						public close(): void;
						public getResponseCode(): number;
						public read(bytes0: native.Array<number>, int1: number, int2: number): number;
						public addTransferListener(transferListener0: androidx.media2.exoplayer.external.upstream.TransferListener): void;
						public getUri(): globalAndroid.net.Uri;
						public setRequestProperty(string0: string, string1: string): void;
						public clearRequestProperty(string0: string): void;
					}
						export module  {
					export module HttpDataSource {
							export abstract class CC extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.HttpDataSource..CC>;
								public static $$triggerInterfaceInit(): void;
							}
						}
						export abstract class BaseFactory extends java.lang.Object implements androidx.media2.exoplayer.external.upstream.HttpDataSource.Factory {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.HttpDataSource.BaseFactory>;
							public constructor();
							public createDataSource(): androidx.media2.exoplayer.external.upstream.DataSource;
							/** @deprecated */
							public clearDefaultRequestProperty(name: string): void;
							public createDataSource(): androidx.media2.exoplayer.external.upstream.HttpDataSource;
							public getDefaultRequestProperties(): androidx.media2.exoplayer.external.upstream.HttpDataSource.RequestProperties;
							/** @deprecated */
							public setDefaultRequestProperty(name: string, value: string): void;
							/** @deprecated */
							public clearAllDefaultRequestProperties(): void;
							public createDataSourceInternal(requestProperties0: androidx.media2.exoplayer.external.upstream.HttpDataSource.RequestProperties): androidx.media2.exoplayer.external.upstream.HttpDataSource;
						}
						export class Factory extends java.lang.Object implements androidx.media2.exoplayer.external.upstream.DataSource.Factory {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.HttpDataSource.Factory>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.upstream.HttpDataSource$Factory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								createDataSource(): androidx.media2.exoplayer.external.upstream.HttpDataSource;
								getDefaultRequestProperties(): androidx.media2.exoplayer.external.upstream.HttpDataSource.RequestProperties;
								setDefaultRequestProperty(string0: string, string1: string): void;
								clearDefaultRequestProperty(string0: string): void;
								clearAllDefaultRequestProperties(): void;
								createDataSource(): androidx.media2.exoplayer.external.upstream.DataSource;
							});
							public constructor();
							public createDataSource(): androidx.media2.exoplayer.external.upstream.DataSource;
							/** @deprecated */
							public setDefaultRequestProperty(string0: string, string1: string): void;
							public createDataSource(): androidx.media2.exoplayer.external.upstream.HttpDataSource;
							public getDefaultRequestProperties(): androidx.media2.exoplayer.external.upstream.HttpDataSource.RequestProperties;
							/** @deprecated */
							public clearDefaultRequestProperty(string0: string): void;
							/** @deprecated */
							public clearAllDefaultRequestProperties(): void;
						}
						export class HttpDataSourceException extends java.io.IOException {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.HttpDataSource.HttpDataSourceException>;
							public static TYPE_OPEN: number;
							public static TYPE_READ: number;
							public static TYPE_CLOSE: number;
							public type: number;
							public dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, type: number);
							public constructor(message: string, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, type: number);
							public constructor(message: string);
							public constructor(cause: java.io.IOException, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, type: number);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
							public constructor(message: string, cause: java.io.IOException, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, type: number);
						}
						export module HttpDataSourceException {
							export class Type extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.HttpDataSource.HttpDataSourceException.Type>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.upstream.HttpDataSource$HttpDataSourceException$Type interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
						}
						export class InvalidContentTypeException extends androidx.media2.exoplayer.external.upstream.HttpDataSource.HttpDataSourceException {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.HttpDataSource.InvalidContentTypeException>;
							public contentType: string;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, type: number);
							public constructor(message: string, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, type: number);
							public constructor(contentType: string, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec);
							public constructor(cause: java.io.IOException, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, type: number);
							public constructor(message: string);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
							public constructor(message: string, cause: java.io.IOException, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, type: number);
						}
						export class InvalidResponseCodeException extends androidx.media2.exoplayer.external.upstream.HttpDataSource.HttpDataSourceException {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.HttpDataSource.InvalidResponseCodeException>;
							public responseCode: number;
							public responseMessage: string;
							public headerFields: java.util.Map<string,java.util.List<string>>;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, type: number);
							public constructor(message: string, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, type: number);
							public constructor(cause: java.io.IOException, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, type: number);
							public constructor(message: string);
							/** @deprecated */
							public constructor(responseCode: number, headerFields: java.util.Map<string,java.util.List<string>>, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
							public constructor(responseCode: number, responseMessage: string, headerFields: java.util.Map<string,java.util.List<string>>, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec);
							public constructor(message: string, cause: java.io.IOException, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, type: number);
						}
						export class RequestProperties extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.HttpDataSource.RequestProperties>;
							public constructor();
							public clearAndSet(properties: java.util.Map<string,string>): void;
							public set(name: string, value: string): void;
							public clear(): void;
							public remove(name: string): void;
							public getSnapshot(): java.util.Map<string,string>;
							public set(properties: java.util.Map<string,string>): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class LoadErrorHandlingPolicy extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.LoadErrorHandlingPolicy>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.upstream.LoadErrorHandlingPolicy interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getBlacklistDurationMsFor(int0: number, long1: number, iOException2: java.io.IOException, int3: number): number;
							getRetryDelayMsFor(int0: number, long1: number, iOException2: java.io.IOException, int3: number): number;
							getMinimumLoadableRetryCount(int0: number): number;
						});
						public constructor();
						public getMinimumLoadableRetryCount(int0: number): number;
						public getBlacklistDurationMsFor(int0: number, long1: number, iOException2: java.io.IOException, int3: number): number;
						public getRetryDelayMsFor(int0: number, long1: number, iOException2: java.io.IOException, int3: number): number;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class Loader extends java.lang.Object implements androidx.media2.exoplayer.external.upstream.LoaderErrorThrower {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.Loader>;
						public static RETRY: androidx.media2.exoplayer.external.upstream.Loader.LoadErrorAction;
						public static RETRY_RESET_ERROR_COUNT: androidx.media2.exoplayer.external.upstream.Loader.LoadErrorAction;
						public static DONT_RETRY: androidx.media2.exoplayer.external.upstream.Loader.LoadErrorAction;
						public static DONT_RETRY_FATAL: androidx.media2.exoplayer.external.upstream.Loader.LoadErrorAction;
						public constructor(threadName: string);
						public isLoading(): boolean;
						public static createRetryAction(resetErrorCount: boolean, retryDelayMillis: number): androidx.media2.exoplayer.external.upstream.Loader.LoadErrorAction;
						public startLoading(loadable: androidx.media2.exoplayer.external.upstream.Loader.Loadable, callback: androidx.media2.exoplayer.external.upstream.Loader.Callback<any>, defaultMinRetryCount: number): number;
						public release(): void;
						public maybeThrowError(minRetryCount: number): void;
						public release(callback: androidx.media2.exoplayer.external.upstream.Loader.ReleaseCallback): void;
						public maybeThrowError(): void;
						public cancelLoading(): void;
					}
					export module Loader {
						export class Callback<T>  extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.Loader.Callback<any>>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.upstream.Loader$Callback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onLoadCompleted(loadable0: T, long1: number, long2: number): void;
								onLoadCanceled(loadable0: T, long1: number, long2: number, boolean3: boolean): void;
								onLoadError(loadable0: T, long1: number, long2: number, iOException3: java.io.IOException, int4: number): androidx.media2.exoplayer.external.upstream.Loader.LoadErrorAction;
							});
							public constructor();
							public onLoadCompleted(loadable0: T, long1: number, long2: number): void;
							public onLoadCanceled(loadable0: T, long1: number, long2: number, boolean3: boolean): void;
							public onLoadError(loadable0: T, long1: number, long2: number, iOException3: java.io.IOException, int4: number): androidx.media2.exoplayer.external.upstream.Loader.LoadErrorAction;
						}
						export class LoadErrorAction extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.Loader.LoadErrorAction>;
							public isRetry(): boolean;
						}
						export class LoadTask<T>  extends globalAndroid.os.Handler implements java.lang.Runnable  {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.Loader.LoadTask<any>>;
							public defaultMinRetryCount: number;
							public constructor();
							public maybeThrowError(minRetryCount: number): void;
							public constructor(callback: globalAndroid.os.Handler.Callback);
							public constructor(param0: globalAndroid.os.Looper, looper: any, loadable: androidx.media2.exoplayer.external.upstream.Loader.Callback<any>, callback: number, defaultMinRetryCount: number);
							public start(delayMillis: number): void;
							public cancel(released: boolean): void;
							public handleMessage(msg: globalAndroid.os.Message): void;
							public constructor(looper: globalAndroid.os.Looper);
							public constructor(looper: globalAndroid.os.Looper, callback: globalAndroid.os.Handler.Callback);
							public run(): void;
						}
						export class Loadable extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.Loader.Loadable>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.upstream.Loader$Loadable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								cancelLoad(): void;
								load(): void;
							});
							public constructor();
							public cancelLoad(): void;
							public load(): void;
						}
						export class ReleaseCallback extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.Loader.ReleaseCallback>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.upstream.Loader$ReleaseCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onLoaderReleased(): void;
							});
							public constructor();
							public onLoaderReleased(): void;
						}
						export class ReleaseTask extends java.lang.Object implements java.lang.Runnable {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.Loader.ReleaseTask>;
							public constructor(callback: androidx.media2.exoplayer.external.upstream.Loader.ReleaseCallback);
							public run(): void;
						}
						export class RetryActionType extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.Loader.RetryActionType>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.upstream.Loader$RetryActionType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
						export class UnexpectedLoaderException extends java.io.IOException {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.Loader.UnexpectedLoaderException>;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(message: string);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class LoaderErrorThrower extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.LoaderErrorThrower>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.upstream.LoaderErrorThrower interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							maybeThrowError(): void;
							maybeThrowError(int0: number): void;
						});
						public constructor();
						public maybeThrowError(int0: number): void;
						public maybeThrowError(): void;
					}
					export module LoaderErrorThrower {
						export class Dummy extends java.lang.Object implements androidx.media2.exoplayer.external.upstream.LoaderErrorThrower {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.LoaderErrorThrower.Dummy>;
							public constructor();
							public maybeThrowError(minRetryCount: number): void;
							public maybeThrowError(): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class ParsingLoadable<T>  extends androidx.media2.exoplayer.external.upstream.Loader.Loadable {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.ParsingLoadable<any>>;
						public dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec;
						public type: number;
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public constructor(dataSource: androidx.media2.exoplayer.external.upstream.DataSource, uri: globalAndroid.net.Uri, type: number, parser: androidx.media2.exoplayer.external.upstream.ParsingLoadable.Parser<any>);
						public cancelLoad(): void;
						public getResult(): any;
						public load(): void;
						public bytesLoaded(): number;
						public static load(dataSource: androidx.media2.exoplayer.external.upstream.DataSource, parser: androidx.media2.exoplayer.external.upstream.ParsingLoadable.Parser<any>, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, type: number): any;
						public getUri(): globalAndroid.net.Uri;
						public static load(dataSource: androidx.media2.exoplayer.external.upstream.DataSource, parser: androidx.media2.exoplayer.external.upstream.ParsingLoadable.Parser<any>, uri: globalAndroid.net.Uri, type: number): any;
						public constructor(dataSource: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec, type: number, parser: androidx.media2.exoplayer.external.upstream.ParsingLoadable.Parser<any>);
					}
					export module ParsingLoadable {
						export class Parser<T>  extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.ParsingLoadable.Parser<any>>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.upstream.ParsingLoadable$Parser interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								parse(uri0: globalAndroid.net.Uri, inputStream1: java.io.InputStream): T;
							});
							public constructor();
							public parse(uri0: globalAndroid.net.Uri, inputStream1: java.io.InputStream): T;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class PriorityDataSource extends java.lang.Object implements androidx.media2.exoplayer.external.upstream.DataSource {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.PriorityDataSource>;
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public open(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec): number;
						public close(): void;
						public constructor(upstream: androidx.media2.exoplayer.external.upstream.DataSource, priorityTaskManager: androidx.media2.exoplayer.external.util.PriorityTaskManager, priority: number);
						public read(buffer: native.Array<number>, offset: number, max: number): number;
						public getUri(): globalAndroid.net.Uri;
						public addTransferListener(transferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class PriorityDataSourceFactory extends java.lang.Object implements androidx.media2.exoplayer.external.upstream.DataSource.Factory {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.PriorityDataSourceFactory>;
						public createDataSource(): androidx.media2.exoplayer.external.upstream.DataSource;
						public createDataSource(): androidx.media2.exoplayer.external.upstream.PriorityDataSource;
						public constructor(upstreamFactory: androidx.media2.exoplayer.external.upstream.DataSource.Factory, priorityTaskManager: androidx.media2.exoplayer.external.util.PriorityTaskManager, priority: number);
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class RawResourceDataSource extends androidx.media2.exoplayer.external.upstream.BaseDataSource {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.RawResourceDataSource>;
						public static RAW_RESOURCE_SCHEME: string;
						public constructor(isNetwork: boolean);
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public open(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec): number;
						public getResponseHeaders(): java.util.Map<any,any>;
						public close(): void;
						public read(buffer: native.Array<number>, offset: number, readLength: number): number;
						public getUri(): globalAndroid.net.Uri;
						public static buildRawResourceUri(rawResourceId: number): globalAndroid.net.Uri;
						public constructor(context: globalAndroid.content.Context);
						public addTransferListener(transferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
					}
					export module RawResourceDataSource {
						export class RawResourceDataSourceException extends java.io.IOException {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.RawResourceDataSource.RawResourceDataSourceException>;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(e: java.io.IOException);
							public constructor(message: string);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class ResolvingDataSource extends java.lang.Object implements androidx.media2.exoplayer.external.upstream.DataSource {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.ResolvingDataSource>;
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public open(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec): number;
						public constructor(upstreamDataSource: androidx.media2.exoplayer.external.upstream.DataSource, resolver: androidx.media2.exoplayer.external.upstream.ResolvingDataSource.Resolver);
						public close(): void;
						public read(buffer: native.Array<number>, offset: number, readLength: number): number;
						public getUri(): globalAndroid.net.Uri;
						public addTransferListener(transferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
					}
					export module ResolvingDataSource {
						export class Factory extends java.lang.Object implements androidx.media2.exoplayer.external.upstream.DataSource.Factory {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.ResolvingDataSource.Factory>;
							public createDataSource(): androidx.media2.exoplayer.external.upstream.DataSource;
							public constructor(upstreamFactory: androidx.media2.exoplayer.external.upstream.DataSource.Factory, resolver: androidx.media2.exoplayer.external.upstream.ResolvingDataSource.Resolver);
						}
						export class Resolver extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.ResolvingDataSource.Resolver>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.upstream.ResolvingDataSource$Resolver interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								resolveDataSpec(dataSpec0: androidx.media2.exoplayer.external.upstream.DataSpec): androidx.media2.exoplayer.external.upstream.DataSpec;
								resolveReportedUri(uri0: globalAndroid.net.Uri): globalAndroid.net.Uri;
							});
							public constructor();
							public resolveReportedUri(uri0: globalAndroid.net.Uri): globalAndroid.net.Uri;
							public resolveDataSpec(dataSpec0: androidx.media2.exoplayer.external.upstream.DataSpec): androidx.media2.exoplayer.external.upstream.DataSpec;
						}
							export module  {
						export module Resolver {
								export abstract class CC extends java.lang.Object {
									public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.ResolvingDataSource.Resolver..CC>;
									public static resolveReportedUri$$dflt$$(this0: androidx.media2.exoplayer.external.upstream.ResolvingDataSource.Resolver, uri: globalAndroid.net.Uri): globalAndroid.net.Uri;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class StatsDataSource extends java.lang.Object implements androidx.media2.exoplayer.external.upstream.DataSource {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.StatsDataSource>;
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public open(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec): number;
						public getLastOpenedUri(): globalAndroid.net.Uri;
						public resetBytesRead(): void;
						public getLastResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public close(): void;
						public getBytesRead(): number;
						public constructor(dataSource: androidx.media2.exoplayer.external.upstream.DataSource);
						public read(buffer: native.Array<number>, offset: number, readLength: number): number;
						public getUri(): globalAndroid.net.Uri;
						public addTransferListener(transferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class TeeDataSource extends java.lang.Object implements androidx.media2.exoplayer.external.upstream.DataSource {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.TeeDataSource>;
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public open(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec): number;
						public close(): void;
						public read(buffer: native.Array<number>, offset: number, max: number): number;
						public getUri(): globalAndroid.net.Uri;
						public constructor(upstream: androidx.media2.exoplayer.external.upstream.DataSource, dataSink: androidx.media2.exoplayer.external.upstream.DataSink);
						public addTransferListener(transferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class TransferListener extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.TransferListener>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.upstream.TransferListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onTransferInitializing(dataSource0: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec1: androidx.media2.exoplayer.external.upstream.DataSpec, boolean2: boolean): void;
							onTransferStart(dataSource0: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec1: androidx.media2.exoplayer.external.upstream.DataSpec, boolean2: boolean): void;
							onBytesTransferred(dataSource0: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec1: androidx.media2.exoplayer.external.upstream.DataSpec, boolean2: boolean, int3: number): void;
							onTransferEnd(dataSource0: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec1: androidx.media2.exoplayer.external.upstream.DataSpec, boolean2: boolean): void;
						});
						public constructor();
						public onTransferInitializing(dataSource0: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec1: androidx.media2.exoplayer.external.upstream.DataSpec, boolean2: boolean): void;
						public onTransferStart(dataSource0: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec1: androidx.media2.exoplayer.external.upstream.DataSpec, boolean2: boolean): void;
						public onTransferEnd(dataSource0: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec1: androidx.media2.exoplayer.external.upstream.DataSpec, boolean2: boolean): void;
						public onBytesTransferred(dataSource0: androidx.media2.exoplayer.external.upstream.DataSource, dataSpec1: androidx.media2.exoplayer.external.upstream.DataSpec, boolean2: boolean, int3: number): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export class UdpDataSource extends androidx.media2.exoplayer.external.upstream.BaseDataSource {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.UdpDataSource>;
						public static DEFAULT_MAX_PACKET_SIZE: number;
						public static DEFAULT_SOCKET_TIMEOUT_MILLIS: number;
						public constructor(isNetwork: boolean);
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public open(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec): number;
						public getResponseHeaders(): java.util.Map<any,any>;
						public constructor();
						public close(): void;
						public constructor(maxPacketSize: number);
						public constructor(maxPacketSize: number, socketTimeoutMillis: number);
						public read(buffer: native.Array<number>, offset: number, readLength: number): number;
						public getUri(): globalAndroid.net.Uri;
						public addTransferListener(transferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
					}
					export module UdpDataSource {
						export class UdpDataSourceException extends java.io.IOException {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.UdpDataSource.UdpDataSourceException>;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(message: string);
							public constructor(cause: java.io.IOException);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export module crypto {
						export class AesCipherDataSink extends java.lang.Object implements androidx.media2.exoplayer.external.upstream.DataSink {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.crypto.AesCipherDataSink>;
							public constructor(secretKey: native.Array<number>, wrappedDataSink: androidx.media2.exoplayer.external.upstream.DataSink);
							public open(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec): void;
							public close(): void;
							public constructor(secretKey: native.Array<number>, wrappedDataSink: androidx.media2.exoplayer.external.upstream.DataSink, scratch: native.Array<number>);
							public write(data: native.Array<number>, offset: number, length: number): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export module crypto {
						export class AesCipherDataSource extends java.lang.Object implements androidx.media2.exoplayer.external.upstream.DataSource {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.crypto.AesCipherDataSource>;
							public getUri(): globalAndroid.net.Uri;
							public close(): void;
							public constructor(secretKey: native.Array<number>, upstream: androidx.media2.exoplayer.external.upstream.DataSource);
							public addTransferListener(transferListener: androidx.media2.exoplayer.external.upstream.TransferListener): void;
							public open(dataSpec: androidx.media2.exoplayer.external.upstream.DataSpec): number;
							public read(data: native.Array<number>, offset: number, readLength: number): number;
							public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export module crypto {
						export class AesFlushingCipher extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.crypto.AesFlushingCipher>;
							public updateInPlace(data: native.Array<number>, offset: number, length: number): void;
							public update(in0: native.Array<number>, inOffset: number, length: number, out: native.Array<number>, outOffset: number): void;
							public constructor(mode: number, secretKey: native.Array<number>, nonce: number, offset: number);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module upstream {
					export module crypto {
						export class CryptoUtil extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.upstream.crypto.CryptoUtil>;
							public static getFNV64Hash(input: string): number;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class Assertions extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.Assertions>;
						public static checkNotEmpty(string: string, errorMessage: any): string;
						public static checkArgument(expression: boolean, errorMessage: any): void;
						public static checkNotNull(reference: any, errorMessage: any): any;
						public static checkMainThread(): void;
						public static checkState(expression: boolean): void;
						public static checkState(expression: boolean, errorMessage: any): void;
						public static checkNotEmpty(string: string): string;
						public static checkArgument(expression: boolean): void;
						public static checkNotNull(reference: any): any;
						public static checkIndex(index: number, start: number, limit: number): number;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class AtomicFile extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.AtomicFile>;
						public openRead(): java.io.InputStream;
						public delete(): void;
						public exists(): boolean;
						public constructor(baseName: java.io.File);
						public endWrite(str: java.io.OutputStream): void;
						public startWrite(): java.io.OutputStream;
					}
					export module AtomicFile {
						export class AtomicFileOutputStream extends java.io.OutputStream {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.util.AtomicFile.AtomicFileOutputStream>;
							public constructor();
							public close(): void;
							public constructor(file: java.io.File);
							public write(b: number): void;
							public write(b: native.Array<number>): void;
							public flush(): void;
							public write(int0: number): void;
							public write(b: native.Array<number>, off: number, len: number): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class Clock extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.Clock>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.util.Clock interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							elapsedRealtime(): number;
							uptimeMillis(): number;
							sleep(long0: number): void;
							createHandler(looper0: globalAndroid.os.Looper, callback1: globalAndroid.os.Handler.Callback): androidx.media2.exoplayer.external.util.HandlerWrapper;
							<clinit>(): void;
						});
						public constructor();
						public static DEFAULT: androidx.media2.exoplayer.external.util.Clock;
						public elapsedRealtime(): number;
						public sleep(long0: number): void;
						public uptimeMillis(): number;
						public createHandler(looper0: globalAndroid.os.Looper, callback1: globalAndroid.os.Handler.Callback): androidx.media2.exoplayer.external.util.HandlerWrapper;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class CodecSpecificDataUtil extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.CodecSpecificDataUtil>;
						public static parseAacAudioSpecificConfig(audioSpecificConfig: native.Array<number>): globalAndroid.util.Pair<java.lang.Integer,java.lang.Integer>;
						public static buildAacLcAudioSpecificConfig(sampleRate: number, numChannels: number): native.Array<number>;
						public static parseAacAudioSpecificConfig(bitArray: androidx.media2.exoplayer.external.util.ParsableBitArray, forceReadToEnd: boolean): globalAndroid.util.Pair<java.lang.Integer,java.lang.Integer>;
						public static buildNalUnit(data: native.Array<number>, offset: number, length: number): native.Array<number>;
						public static splitNalUnits(data: native.Array<number>): native.Array<native.Array<number>>;
						public static buildAvcCodecString(profileIdc: number, constraintsFlagsAndReservedZero2Bits: number, levelIdc: number): string;
						public static buildAacAudioSpecificConfig(audioObjectType: number, sampleRateIndex: number, channelConfig: number): native.Array<number>;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class ColorParser extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.ColorParser>;
						public static parseCssColor(colorExpression: string): number;
						public static parseTtmlColor(colorExpression: string): number;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class ConditionVariable extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.ConditionVariable>;
						public block(): void;
						public constructor();
						public open(): boolean;
						public close(): boolean;
						public block(timeout: number): boolean;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class EGLSurfaceTexture extends java.lang.Object implements globalAndroid.graphics.SurfaceTexture.OnFrameAvailableListener, java.lang.Runnable {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.EGLSurfaceTexture>;
						public static SECURE_MODE_NONE: number;
						public static SECURE_MODE_SURFACELESS_CONTEXT: number;
						public static SECURE_MODE_PROTECTED_PBUFFER: number;
						public onFrameAvailable(surfaceTexture: globalAndroid.graphics.SurfaceTexture): void;
						public run(): void;
						public constructor(handler: globalAndroid.os.Handler);
						public getSurfaceTexture(): globalAndroid.graphics.SurfaceTexture;
						public constructor(handler: globalAndroid.os.Handler, callback: androidx.media2.exoplayer.external.util.EGLSurfaceTexture.TextureImageListener);
						public init(secureMode: number): void;
						public release(): void;
					}
					export module EGLSurfaceTexture {
						export class GlException extends java.lang.RuntimeException {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.util.EGLSurfaceTexture.GlException>;
						}
						export class SecureMode extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.util.EGLSurfaceTexture.SecureMode>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.util.EGLSurfaceTexture$SecureMode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
						export class TextureImageListener extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.util.EGLSurfaceTexture.TextureImageListener>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.util.EGLSurfaceTexture$TextureImageListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onFrameAvailable(): void;
							});
							public constructor();
							public onFrameAvailable(): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class ErrorMessageProvider<T>  extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.ErrorMessageProvider<any>>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.util.ErrorMessageProvider<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getErrorMessage(throwable0: T): globalAndroid.util.Pair<java.lang.Integer,string>;
						});
						public constructor();
						public getErrorMessage(throwable0: T): globalAndroid.util.Pair<java.lang.Integer,string>;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class EventDispatcher<T>  extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.EventDispatcher<any>>;
						public constructor();
						public addListener(handler: globalAndroid.os.Handler, eventListener: T): void;
						public dispatch(event: androidx.media2.exoplayer.external.util.EventDispatcher.Event<T>): void;
						public removeListener(eventListener: T): void;
					}
					export module EventDispatcher {
						export class Event<T>  extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.util.EventDispatcher.Event<any>>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.util.EventDispatcher$Event interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								sendTo(object0: T): void;
							});
							public constructor();
							public sendTo(object0: T): void;
						}
						export class HandlerAndListener<T>  extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.util.EventDispatcher.HandlerAndListener<any>>;
							public constructor(handler: globalAndroid.os.Handler, eventListener: T);
							public release(): void;
							public dispatch(event: androidx.media2.exoplayer.external.util.EventDispatcher.Event<T>): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class EventLogger extends java.lang.Object implements androidx.media2.exoplayer.external.analytics.AnalyticsListener {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.EventLogger>;
						public onTracksChanged(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, ignored: androidx.media2.exoplayer.external.source.TrackGroupArray, trackSelections: androidx.media2.exoplayer.external.trackselection.TrackSelectionArray): void;
						public onMediaPeriodCreated(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public constructor(trackSelector: androidx.media2.exoplayer.external.trackselection.MappingTrackSelector, tag: string);
						public onDecoderInitialized(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, trackType: number, decoderName: string, initializationDurationMs: number): void;
						public loge(msg: string, tr: java.lang.Throwable): void;
						public onRepeatModeChanged(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, repeatMode: number): void;
						public onDrmKeysLoaded(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onTimelineChanged(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, reason: number): void;
						public onLoadCanceled(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, loadEventInfo: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public onShuffleModeChanged(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, shuffleModeEnabled: boolean): void;
						public onDecoderDisabled(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, trackType: number, counters: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
						public onDrmKeysRemoved(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onSeekProcessed(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onMetadata(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, metadata: androidx.media2.exoplayer.external.metadata.Metadata): void;
						public onUpstreamDiscarded(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public onLoadStarted(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, loadEventInfo: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public onRenderedFirstFrame(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, surface: globalAndroid.view.Surface): void;
						public onDownstreamFormatChanged(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public onLoadError(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, loadEventInfo: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData, error: java.io.IOException, wasCanceled: boolean): void;
						public onDrmSessionManagerError(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, e: java.lang.Exception): void;
						public onLoadingChanged(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, isLoading: boolean): void;
						public onDrmKeysRestored(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onVideoSizeChanged(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, width: number, height: number, unappliedRotationDegrees: number, pixelWidthHeightRatio: number): void;
						public onBandwidthEstimate(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, totalLoadTimeMs: number, totalBytesLoaded: number, bitrateEstimate: number): void;
						public onPlaybackParametersChanged(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, playbackParameters: androidx.media2.exoplayer.external.PlaybackParameters): void;
						public onPositionDiscontinuity(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, reason: number): void;
						public onDrmSessionAcquired(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public constructor(trackSelector: androidx.media2.exoplayer.external.trackselection.MappingTrackSelector);
						public onDroppedVideoFrames(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, count: number, elapsedMs: number): void;
						public onVolumeChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, float1: number): void;
						public onDecoderEnabled(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, trackType: number, counters: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
						public onReadingStarted(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onDrmSessionReleased(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onAudioSessionId(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, audioSessionId: number): void;
						public onAudioAttributesChanged(eventTime0: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, audioAttributes1: androidx.media2.exoplayer.external.audio.AudioAttributes): void;
						public onMediaPeriodReleased(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onPlayerError(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, e: androidx.media2.exoplayer.external.ExoPlaybackException): void;
						public onLoadCompleted(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, loadEventInfo: androidx.media2.exoplayer.external.source.MediaSourceEventListener.LoadEventInfo, mediaLoadData: androidx.media2.exoplayer.external.source.MediaSourceEventListener.MediaLoadData): void;
						public logd(msg: string): void;
						public onPlayerStateChanged(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, playWhenReady: boolean, state: number): void;
						public onAudioUnderrun(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, bufferSize: number, bufferSizeMs: number, elapsedSinceLastFeedMs: number): void;
						public onSeekStarted(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime): void;
						public onSurfaceSizeChanged(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, width: number, height: number): void;
						public onDecoderInputFormatChanged(eventTime: androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime, trackType: number, format: androidx.media2.exoplayer.external.Format): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class FlacStreamMetadata extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.FlacStreamMetadata>;
						public minBlockSize: number;
						public maxBlockSize: number;
						public minFrameSize: number;
						public maxFrameSize: number;
						public sampleRate: number;
						public channels: number;
						public bitsPerSample: number;
						public totalSamples: number;
						public metadata: androidx.media2.exoplayer.external.metadata.Metadata;
						public getApproxBytesPerFrame(): number;
						public maxDecodedFrameSize(): number;
						public durationUs(): number;
						public bitRate(): number;
						public constructor(data: native.Array<number>, offset: number);
						public getSampleIndex(timeUs: number): number;
						public constructor(minBlockSize: number, maxBlockSize: number, minFrameSize: number, maxFrameSize: number, sampleRate: number, channels: number, bitsPerSample: number, totalSamples: number, vorbisComments: java.util.List<string>, pictureFrames: java.util.List<androidx.media2.exoplayer.external.metadata.flac.PictureFrame>);
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class GlUtil extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.GlUtil>;
						public static compileProgram(vertexCode: string, fragmentCode: string): number;
						public static checkGlError(): void;
						public static createExternalTexture(): number;
						public static createBuffer(capacity: number): java.nio.FloatBuffer;
						public static createBuffer(data: native.Array<number>): java.nio.FloatBuffer;
						public static compileProgram(vertexCode: native.Array<string>, fragmentCode: native.Array<string>): number;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class HandlerWrapper extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.HandlerWrapper>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.util.HandlerWrapper interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getLooper(): globalAndroid.os.Looper;
							obtainMessage(int0: number): globalAndroid.os.Message;
							obtainMessage(int0: number, object1: any): globalAndroid.os.Message;
							obtainMessage(int0: number, int1: number, int2: number): globalAndroid.os.Message;
							obtainMessage(int0: number, int1: number, int2: number, object3: any): globalAndroid.os.Message;
							sendEmptyMessage(int0: number): boolean;
							sendEmptyMessageAtTime(int0: number, long1: number): boolean;
							removeMessages(int0: number): void;
							removeCallbacksAndMessages(object0: any): void;
							post(runnable0: java.lang.Runnable): boolean;
							postDelayed(runnable0: java.lang.Runnable, long1: number): boolean;
						});
						public constructor();
						public sendEmptyMessage(int0: number): boolean;
						public sendEmptyMessageAtTime(int0: number, long1: number): boolean;
						public removeMessages(int0: number): void;
						public removeCallbacksAndMessages(object0: any): void;
						public postDelayed(runnable0: java.lang.Runnable, long1: number): boolean;
						public post(runnable0: java.lang.Runnable): boolean;
						public obtainMessage(int0: number, int1: number, int2: number, object3: any): globalAndroid.os.Message;
						public obtainMessage(int0: number): globalAndroid.os.Message;
						public obtainMessage(int0: number, object1: any): globalAndroid.os.Message;
						public obtainMessage(int0: number, int1: number, int2: number): globalAndroid.os.Message;
						public getLooper(): globalAndroid.os.Looper;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class LibraryLoader extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.LibraryLoader>;
						public constructor(libraries: native.Array<string>);
						public setLibraries(libraries: native.Array<string>): void;
						public isAvailable(): boolean;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class Log extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.Log>;
						public static LOG_LEVEL_ALL: number;
						public static LOG_LEVEL_INFO: number;
						public static LOG_LEVEL_WARNING: number;
						public static LOG_LEVEL_ERROR: number;
						public static LOG_LEVEL_OFF: number;
						public static d(tag: string, message: string): void;
						public static setLogLevel(logLevel: number): void;
						public static i(tag: string, message: string): void;
						public static getLogLevel(): number;
						public static w(tag: string, message: string, throwable: java.lang.Throwable): void;
						public getLogStackTraces(): boolean;
						public static setLogStackTraces(logStackTraces: boolean): void;
						public static i(tag: string, message: string, throwable: java.lang.Throwable): void;
						public static e(tag: string, message: string): void;
						public static d(tag: string, message: string, throwable: java.lang.Throwable): void;
						public static e(tag: string, message: string, throwable: java.lang.Throwable): void;
						public static w(tag: string, message: string): void;
					}
					export module Log {
						export class LogLevel extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.util.Log.LogLevel>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.util.Log$LogLevel interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class LongArray extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.LongArray>;
						public constructor();
						public add(value: number): void;
						public toArray(): native.Array<number>;
						public constructor(initialCapacity: number);
						public get(index: number): number;
						public size(): number;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class MediaClock extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.MediaClock>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.util.MediaClock interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getPositionUs(): number;
							setPlaybackParameters(playbackParameters0: androidx.media2.exoplayer.external.PlaybackParameters): void;
							getPlaybackParameters(): androidx.media2.exoplayer.external.PlaybackParameters;
						});
						public constructor();
						public getPositionUs(): number;
						public setPlaybackParameters(playbackParameters0: androidx.media2.exoplayer.external.PlaybackParameters): void;
						public getPlaybackParameters(): androidx.media2.exoplayer.external.PlaybackParameters;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class MimeTypes extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.MimeTypes>;
						public static BASE_TYPE_VIDEO: string;
						public static BASE_TYPE_AUDIO: string;
						public static BASE_TYPE_TEXT: string;
						public static BASE_TYPE_APPLICATION: string;
						public static VIDEO_MP4: string;
						public static VIDEO_WEBM: string;
						public static VIDEO_H263: string;
						public static VIDEO_H264: string;
						public static VIDEO_H265: string;
						public static VIDEO_VP8: string;
						public static VIDEO_VP9: string;
						public static VIDEO_AV1: string;
						public static VIDEO_MP4V: string;
						public static VIDEO_MPEG: string;
						public static VIDEO_MPEG2: string;
						public static VIDEO_VC1: string;
						public static VIDEO_DIVX: string;
						public static VIDEO_DOLBY_VISION: string;
						public static VIDEO_UNKNOWN: string;
						public static AUDIO_MP4: string;
						public static AUDIO_AAC: string;
						public static AUDIO_WEBM: string;
						public static AUDIO_MPEG: string;
						public static AUDIO_MPEG_L1: string;
						public static AUDIO_MPEG_L2: string;
						public static AUDIO_RAW: string;
						public static AUDIO_ALAW: string;
						public static AUDIO_MLAW: string;
						public static AUDIO_AC3: string;
						public static AUDIO_E_AC3: string;
						public static AUDIO_E_AC3_JOC: string;
						public static AUDIO_AC4: string;
						public static AUDIO_TRUEHD: string;
						public static AUDIO_DTS: string;
						public static AUDIO_DTS_HD: string;
						public static AUDIO_DTS_EXPRESS: string;
						public static AUDIO_VORBIS: string;
						public static AUDIO_OPUS: string;
						public static AUDIO_AMR_NB: string;
						public static AUDIO_AMR_WB: string;
						public static AUDIO_FLAC: string;
						public static AUDIO_ALAC: string;
						public static AUDIO_MSGSM: string;
						public static AUDIO_UNKNOWN: string;
						public static TEXT_VTT: string;
						public static TEXT_SSA: string;
						public static APPLICATION_MP4: string;
						public static APPLICATION_WEBM: string;
						public static APPLICATION_MPD: string;
						public static APPLICATION_M3U8: string;
						public static APPLICATION_SS: string;
						public static APPLICATION_ID3: string;
						public static APPLICATION_CEA608: string;
						public static APPLICATION_CEA708: string;
						public static APPLICATION_SUBRIP: string;
						public static APPLICATION_TTML: string;
						public static APPLICATION_TX3G: string;
						public static APPLICATION_MP4VTT: string;
						public static APPLICATION_MP4CEA608: string;
						public static APPLICATION_RAWCC: string;
						public static APPLICATION_VOBSUB: string;
						public static APPLICATION_PGS: string;
						public static APPLICATION_SCTE35: string;
						public static APPLICATION_CAMERA_MOTION: string;
						public static APPLICATION_EMSG: string;
						public static APPLICATION_DVBSUBS: string;
						public static APPLICATION_EXIF: string;
						public static APPLICATION_ICY: string;
						public static isVideo(mimeType: string): boolean;
						public static registerCustomMimeType(mimeType: string, codecPrefix: string, trackType: number): void;
						public static isApplication(mimeType: string): boolean;
						public static getMediaMimeType(codec: string): string;
						public static getAudioMediaMimeType(codecs: string): string;
						public static isAudio(mimeType: string): boolean;
						public static getVideoMediaMimeType(codecs: string): string;
						public static getMimeTypeFromMp4ObjectType(objectType: number): string;
						public static getTrackType(mimeType: string): number;
						public static isText(mimeType: string): boolean;
						public static getEncoding(mimeType: string): number;
						public static getTrackTypeOfCodec(codec: string): number;
					}
					export module MimeTypes {
						export class CustomMimeType extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.util.MimeTypes.CustomMimeType>;
							public mimeType: string;
							public codecPrefix: string;
							public trackType: number;
							public constructor(mimeType: string, codecPrefix: string, trackType: number);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class NalUnitUtil extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.NalUnitUtil>;
						public static NAL_START_CODE: native.Array<number>;
						public static EXTENDED_SAR: number;
						public static ASPECT_RATIO_IDC_VALUES: native.Array<number>;
						public static unescapeStream(data: native.Array<number>, limit: number): number;
						public static parsePpsNalUnit(nalData: native.Array<number>, nalOffset: number, nalLimit: number): androidx.media2.exoplayer.external.util.NalUnitUtil.PpsData;
						public static clearPrefixFlags(prefixFlags: native.Array<boolean>): void;
						public static isNalUnitSei(mimeType: string, nalUnitHeaderFirstByte: number): boolean;
						public static discardToSps(data: java.nio.ByteBuffer): void;
						public static findNalUnit(data: native.Array<number>, startOffset: number, endOffset: number, prefixFlags: native.Array<boolean>): number;
						public static getNalUnitType(data: native.Array<number>, offset: number): number;
						public static parseSpsNalUnit(nalData: native.Array<number>, nalOffset: number, nalLimit: number): androidx.media2.exoplayer.external.util.NalUnitUtil.SpsData;
						public static getH265NalUnitType(data: native.Array<number>, offset: number): number;
					}
					export module NalUnitUtil {
						export class PpsData extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.util.NalUnitUtil.PpsData>;
							public picParameterSetId: number;
							public seqParameterSetId: number;
							public bottomFieldPicOrderInFramePresentFlag: boolean;
							public constructor(picParameterSetId: number, seqParameterSetId: number, bottomFieldPicOrderInFramePresentFlag: boolean);
						}
						export class SpsData extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.util.NalUnitUtil.SpsData>;
							public profileIdc: number;
							public constraintsFlagsAndReservedZero2Bits: number;
							public levelIdc: number;
							public seqParameterSetId: number;
							public width: number;
							public height: number;
							public pixelWidthAspectRatio: number;
							public separateColorPlaneFlag: boolean;
							public frameMbsOnlyFlag: boolean;
							public frameNumLength: number;
							public picOrderCountType: number;
							public picOrderCntLsbLength: number;
							public deltaPicOrderAlwaysZeroFlag: boolean;
							public constructor(profileIdc: number, constraintsFlagsAndReservedZero2Bits: number, levelIdc: number, seqParameterSetId: number, width: number, height: number, pixelWidthAspectRatio: number, separateColorPlaneFlag: boolean, frameMbsOnlyFlag: boolean, frameNumLength: number, picOrderCountType: number, picOrderCntLsbLength: number, deltaPicOrderAlwaysZeroFlag: boolean);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class NonNullApi extends java.lang.Object implements java.lang.annotation.Annotation {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.NonNullApi>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.util.NonNullApi interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							equals(object0: any): boolean;
							hashCode(): number;
							toString(): string;
							annotationType(): java.lang.Class<any>;
						});
						public constructor();
						public equals(obj: any): boolean;
						public hashCode(): number;
						public toString(): string;
						public annotationType(): java.lang.Class<any>;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class NotificationUtil extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.NotificationUtil>;
						public static IMPORTANCE_UNSPECIFIED: number;
						public static IMPORTANCE_NONE: number;
						public static IMPORTANCE_MIN: number;
						public static IMPORTANCE_LOW: number;
						public static IMPORTANCE_DEFAULT: number;
						public static IMPORTANCE_HIGH: number;
						public static setNotification(context: globalAndroid.content.Context, id: number, notification: globalAndroid.app.Notification): void;
						/** @deprecated */
						public static createNotificationChannel(context: globalAndroid.content.Context, id: string, nameResourceId: number, importance: number): void;
						public static createNotificationChannel(context: globalAndroid.content.Context, id: string, nameResourceId: number, descriptionResourceId: number, importance: number): void;
					}
					export module NotificationUtil {
						export class Importance extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.util.NotificationUtil.Importance>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.util.NotificationUtil$Importance interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class ParsableBitArray extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.ParsableBitArray>;
						public data: native.Array<number>;
						public getBytePosition(): number;
						public constructor();
						public setPosition(position: number): void;
						public getPosition(): number;
						public reset(parsableByteArray: androidx.media2.exoplayer.external.util.ParsableByteArray): void;
						public readBits(numBits: number): number;
						public byteAlign(): void;
						public putInt(value: number, numBits: number): void;
						public readBit(): boolean;
						public bitsLeft(): number;
						public readBits(buffer: native.Array<number>, offset: number, numBits: number): void;
						public reset(data: native.Array<number>): void;
						public reset(data: native.Array<number>, limit: number): void;
						public readBytes(buffer: native.Array<number>, offset: number, length: number): void;
						public skipBits(numBits: number): void;
						public constructor(data: native.Array<number>);
						public skipBytes(length: number): void;
						public constructor(data: native.Array<number>, limit: number);
						public skipBit(): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class ParsableByteArray extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.ParsableByteArray>;
						public data: native.Array<number>;
						public bytesLeft(): number;
						public readLittleEndianUnsignedIntToInt(): number;
						public setPosition(position: number): void;
						public readInt(): number;
						public readUnsignedIntToInt(): number;
						public readUnsignedByte(): number;
						public readNullTerminatedString(length: number): string;
						public readInt24(): number;
						public readLittleEndianInt24(): number;
						public peekChar(): string;
						public readLittleEndianInt(): number;
						public readBytes(buffer: native.Array<number>, offset: number, length: number): void;
						public constructor(limit: number);
						public capacity(): number;
						public readUnsignedShort(): number;
						public limit(): number;
						public readLittleEndianShort(): number;
						public readUnsignedInt24(): number;
						public readLong(): number;
						public readBytes(buffer: java.nio.ByteBuffer, length: number): void;
						public readLine(): string;
						public constructor();
						public readLittleEndianUnsignedShort(): number;
						public getPosition(): number;
						public readBytes(bitArray: androidx.media2.exoplayer.external.util.ParsableBitArray, length: number): void;
						public readDouble(): number;
						public reset(limit: number): void;
						public readUnsignedLongToLong(): number;
						public readNullTerminatedString(): string;
						public readUnsignedInt(): number;
						public readLittleEndianLong(): number;
						public reset(data: native.Array<number>): void;
						public readString(length: number): string;
						public reset(data: native.Array<number>, limit: number): void;
						public readShort(): number;
						public readLittleEndianUnsignedInt24(): number;
						public skipBytes(bytes: number): void;
						public peekUnsignedByte(): number;
						public readString(length: number, charset: java.nio.charset.Charset): string;
						public readSynchSafeInt(): number;
						public readUtf8EncodedLong(): number;
						public constructor(data: native.Array<number>);
						public setLimit(limit: number): void;
						public readFloat(): number;
						public readLittleEndianUnsignedInt(): number;
						public readUnsignedFixedPoint1616(): number;
						public constructor(data: native.Array<number>, limit: number);
						public reset(): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class ParsableNalUnitBitArray extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.ParsableNalUnitBitArray>;
						public skipBits(numBits: number): void;
						public reset(data: native.Array<number>, offset: number, limit: number): void;
						public canReadExpGolombCodedNum(): boolean;
						public readBits(numBits: number): number;
						public constructor(data: native.Array<number>, offset: number, limit: number);
						public readBit(): boolean;
						public readSignedExpGolombCodedInt(): number;
						public skipBit(): void;
						public readUnsignedExpGolombCodedInt(): number;
						public canReadBits(numBits: number): boolean;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class Predicate<T>  extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.Predicate<any>>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.util.Predicate<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							evaluate(object0: T): boolean;
						});
						public constructor();
						public evaluate(object0: T): boolean;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class PriorityTaskManager extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.PriorityTaskManager>;
						public constructor();
						public proceed(priority: number): void;
						public proceedNonBlocking(priority: number): boolean;
						public add(priority: number): void;
						public remove(priority: number): void;
						public proceedOrThrow(priority: number): void;
					}
					export module PriorityTaskManager {
						export class PriorityTooLowException extends java.io.IOException {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.util.PriorityTaskManager.PriorityTooLowException>;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(priority: number, highestPriority: number);
							public constructor(message: string);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class RepeatModeUtil extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.RepeatModeUtil>;
						public static REPEAT_TOGGLE_MODE_NONE: number;
						public static REPEAT_TOGGLE_MODE_ONE: number;
						public static REPEAT_TOGGLE_MODE_ALL: number;
						public static getNextRepeatMode(currentMode: number, enabledModes: number): number;
						public static isRepeatModeEnabled(repeatMode: number, enabledModes: number): boolean;
					}
					export module RepeatModeUtil {
						export class RepeatToggleModes extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.util.RepeatModeUtil.RepeatToggleModes>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.util.RepeatModeUtil$RepeatToggleModes interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class ReusableBufferedOutputStream extends java.io.BufferedOutputStream {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.ReusableBufferedOutputStream>;
						public constructor();
						public constructor(out: java.io.OutputStream, size: number);
						public close(): void;
						public constructor(out: java.io.OutputStream);
						public flush(): void;
						public reset(out: java.io.OutputStream): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class SlidingPercentile extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.SlidingPercentile>;
						public getPercentile(percentile: number): number;
						public constructor(maxWeight: number);
						public addSample(weight: number, value: number): void;
						public reset(): void;
					}
					export module SlidingPercentile {
						export class Sample extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.util.SlidingPercentile.Sample>;
							public index: number;
							public weight: number;
							public value: number;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class StandaloneMediaClock extends java.lang.Object implements androidx.media2.exoplayer.external.util.MediaClock {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.StandaloneMediaClock>;
						public getPositionUs(): number;
						public constructor(clock: androidx.media2.exoplayer.external.util.Clock);
						public resetPosition(positionUs: number): void;
						public start(): void;
						public setPlaybackParameters(playbackParameters: androidx.media2.exoplayer.external.PlaybackParameters): void;
						public stop(): void;
						public getPlaybackParameters(): androidx.media2.exoplayer.external.PlaybackParameters;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class SystemClock extends java.lang.Object implements androidx.media2.exoplayer.external.util.Clock {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.SystemClock>;
						public sleep(sleepTimeMs: number): void;
						public createHandler(looper: globalAndroid.os.Looper, callback: globalAndroid.os.Handler.Callback): androidx.media2.exoplayer.external.util.HandlerWrapper;
						public elapsedRealtime(): number;
						public uptimeMillis(): number;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class SystemHandlerWrapper extends java.lang.Object implements androidx.media2.exoplayer.external.util.HandlerWrapper {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.SystemHandlerWrapper>;
						public obtainMessage(what: number, obj: any): globalAndroid.os.Message;
						public obtainMessage(what: number, int1: number, int2: number): globalAndroid.os.Message;
						public sendEmptyMessageAtTime(what: number, uptimeMs: number): boolean;
						public constructor(handler: globalAndroid.os.Handler);
						public obtainMessage(what: number, int1: number, int2: number, obj: any): globalAndroid.os.Message;
						public sendEmptyMessage(what: number): boolean;
						public removeCallbacksAndMessages(token: any): void;
						public post(runnable: java.lang.Runnable): boolean;
						public postDelayed(runnable: java.lang.Runnable, delayMs: number): boolean;
						public getLooper(): globalAndroid.os.Looper;
						public obtainMessage(what: number): globalAndroid.os.Message;
						public removeMessages(what: number): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class TimedValueQueue<V>  extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.TimedValueQueue<any>>;
						public constructor();
						public poll(timestamp: number): V;
						public constructor(initialBufferSize: number);
						public clear(): void;
						public add(timestamp: number, value: V): void;
						public size(): number;
						public pollFloor(timestamp: number): V;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class TimestampAdjuster extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.TimestampAdjuster>;
						public static DO_NOT_OFFSET: number;
						public adjustTsTimestamp(pts90Khz: number): number;
						public getFirstSampleTimestampUs(): number;
						public waitUntilInitialized(): void;
						public setFirstSampleTimestampUs(firstSampleTimestampUs: number): void;
						public static ptsToUs(pts: number): number;
						public getLastAdjustedTimestampUs(): number;
						public static usToPts(us: number): number;
						public constructor(firstSampleTimestampUs: number);
						public adjustSampleTimestamp(timeUs: number): number;
						public reset(): void;
						public getTimestampOffsetUs(): number;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class TraceUtil extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.TraceUtil>;
						public static beginSection(sectionName: string): void;
						public static endSection(): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class UriUtil extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.UriUtil>;
						public static removeQueryParameter(uri: globalAndroid.net.Uri, queryParameterName: string): globalAndroid.net.Uri;
						public static resolveToUri(baseUri: string, referenceUri: string): globalAndroid.net.Uri;
						public static resolve(baseUri: string, referenceUri: string): string;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class Util extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.Util>;
						public static SDK_INT: number;
						public static DEVICE: string;
						public static MANUFACTURER: string;
						public static MODEL: string;
						public static DEVICE_DEBUG_INFO: string;
						public static EMPTY_BYTE_ARRAY: native.Array<number>;
						public static getUtf8Bytes(value: string): native.Array<number>;
						public static formatInvariant(format: string, objects1: native.Array<any>): string;
						public static isEncodingHighResolutionIntegerPcm(encoding: number): boolean;
						public static getSystemLanguageCodes(): native.Array<string>;
						public static scaleLargeTimestamp(timestamp: number, multiplier: number, divisor: number): number;
						public static getIntegerCodeForString(string: string): number;
						public static inferContentType(fileName: string): number;
						public static parseXsDateTime(value: string): number;
						public static getAudioContentTypeForStreamType(streamType: number): number;
						public static addWithOverflowDefault(x: number, y: number, overflowResult: number): number;
						public static createTempFile(context: globalAndroid.content.Context, prefix: string): java.io.File;
						public static toLowerInvariant(text: string): string;
						public static toArray(list: java.util.List<java.lang.Integer>): native.Array<number>;
						public static closeQuietly(closeable: java.io.Closeable): void;
						public static binarySearchCeil(list: java.util.List<any>, value: java.lang.Comparable<any>, inclusive: boolean, stayInBounds: boolean): number;
						public static startForegroundService(context: globalAndroid.content.Context, intent: globalAndroid.content.Intent): globalAndroid.content.ComponentName;
						public static binarySearchFloor(list: java.util.List<any>, value: java.lang.Comparable<any>, inclusive: boolean, stayInBounds: boolean): number;
						public static getPcmEncoding(bitDepth: number): number;
						public static getPhysicalDisplaySize(context: globalAndroid.content.Context, display: globalAndroid.view.Display): globalAndroid.graphics.Point;
						public static readBoolean(parcel: globalAndroid.os.Parcel): boolean;
						public static binarySearchFloor(array: native.Array<number>, value: number, inclusive: boolean, stayInBounds: boolean): number;
						public static fromUtf8Bytes(bytes: native.Array<number>, offset: number, length: number): string;
						public static resolveSeekPositionUs(positionUs: number, seekParameters: androidx.media2.exoplayer.external.SeekParameters, firstSyncUs: number, secondSyncUs: number): number;
						public static getPhysicalDisplaySize(context: globalAndroid.content.Context): globalAndroid.graphics.Point;
						public static getLooper(): globalAndroid.os.Looper;
						public static isLinebreak(c: number): boolean;
						public static nullSafeArrayConcatenation(first: native.Array<any>, second: native.Array<any>): native.Array<any>;
						public static compareLong(left: number, right: number): number;
						public static areEqual(o1: any, o2: any): boolean;
						public static newSingleThreadExecutor(threadName: string): java.util.concurrent.ExecutorService;
						public static getCodecsOfType(codecs: string, trackType: number): string;
						public static getCountryCode(context: globalAndroid.content.Context): string;
						public static getMediaDurationForPlayoutDuration(playoutDuration: number, speed: number): number;
						public static scaleLargeTimestampsInPlace(timestamps: native.Array<number>, multiplier: number, divisor: number): void;
						public static inflate(input: androidx.media2.exoplayer.external.util.ParsableByteArray, output: androidx.media2.exoplayer.external.util.ParsableByteArray, inflater: java.util.zip.Inflater): boolean;
						public static castNonNull(value: any): any;
						public static unescapeFileName(fileName: string): string;
						public static createHandler(looper: globalAndroid.os.Looper, callback: globalAndroid.os.Handler.Callback): globalAndroid.os.Handler;
						public static removeRange(list: java.util.List<any>, fromIndex: number, toIndex: number): void;
						public static contains(items: native.Array<any>, item: any): boolean;
						public static fromUtf8Bytes(bytes: native.Array<number>): string;
						public static subtractWithOverflowDefault(x: number, y: number, overflowResult: number): number;
						public static getStreamTypeForAudioUsage(usage: number): number;
						public static writeBoolean(parcel: globalAndroid.os.Parcel, value: boolean): void;
						public static getCommaDelimitedSimpleClassNames(objects: native.Array<any>): string;
						public static escapeFileName(fileName: string): string;
						public static crc(bytes: native.Array<number>, start: number, end: number, initialValue: number): number;
						public static isLocalFileUri(uri: globalAndroid.net.Uri): boolean;
						public static splitAtFirst(value: string, regex: string): native.Array<string>;
						public static binarySearchCeil(array: native.Array<number>, value: number, inclusive: boolean, stayInBounds: boolean): number;
						public static recursiveDelete(fileOrDirectory: java.io.File): void;
						public static normalizeLanguageCode(language: string): string;
						public static getNetworkType(context: globalAndroid.content.Context): number;
						public static split(value: string, regex: string): native.Array<string>;
						public static getUserAgent(context: globalAndroid.content.Context, applicationName: string): string;
						public static inferContentType(uri: globalAndroid.net.Uri, overrideExtension: string): number;
						public static getAudioUsageForStreamType(streamType: number): number;
						public static createHandler(callback: globalAndroid.os.Handler.Callback): globalAndroid.os.Handler;
						public static constrainValue(value: number, min: number, max: number): number;
						public static sneakyThrow(t: java.lang.Throwable): void;
						public static checkCleartextTrafficPermitted(uris: native.Array<globalAndroid.net.Uri>): boolean;
						public static castNonNullTypeArray(value: native.Array<any>): native.Array<any>;
						public static isTv(context: globalAndroid.content.Context): boolean;
						public static getRendererCapabilities(renderersFactory: androidx.media2.exoplayer.external.RenderersFactory, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>): native.Array<androidx.media2.exoplayer.external.RendererCapabilities>;
						public static getStringForTime(builder: java.lang.StringBuilder, formatter: java.util.Formatter, timeMs: number): string;
						public static getAudioTrackChannelConfig(channelCount: number): number;
						public static maybeRequestReadExternalStoragePermission(activity: globalAndroid.app.Activity, uris: native.Array<globalAndroid.net.Uri>): boolean;
						public static ceilDivide(numerator: number, denominator: number): number;
						public static getPlayoutDurationForMediaDuration(mediaDuration: number, speed: number): number;
						public static splitCodecs(codecs: string): native.Array<string>;
						public static nullSafeArrayCopy(input: native.Array<any>, length: number): native.Array<any>;
						public static getPcmFrameSize(pcmEncoding: number, channelCount: number): number;
						public static createTempDirectory(context: globalAndroid.content.Context, prefix: string): java.io.File;
						public static toUpperInvariant(text: string): string;
						public static toByteArray(inputStream: java.io.InputStream): native.Array<number>;
						public static scaleLargeTimestamps(timestamps: java.util.List<java.lang.Long>, multiplier: number, divisor: number): native.Array<number>;
						public static inferContentType(uri: globalAndroid.net.Uri): number;
						public static nullSafeArrayCopyOfRange(input: native.Array<any>, from: number, to: number): native.Array<any>;
						public static parseXsDuration(value: string): number;
						public static isEncodingLinearPcm(encoding: number): boolean;
						public static getDrmUuid(drmScheme: string): java.util.UUID;
						public static closeQuietly(dataSource: androidx.media2.exoplayer.external.upstream.DataSource): void;
						public static getBytesFromHexString(hexString: string): native.Array<number>;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module util {
					export class XmlPullParserUtil extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.util.XmlPullParserUtil>;
						public static isStartTag(xpp: org.xmlpull.v1.XmlPullParser): boolean;
						public static isStartTag(xpp: org.xmlpull.v1.XmlPullParser, name: string): boolean;
						public static getAttributeValue(xpp: org.xmlpull.v1.XmlPullParser, attributeName: string): string;
						public static isStartTagIgnorePrefix(xpp: org.xmlpull.v1.XmlPullParser, name: string): boolean;
						public static getAttributeValueIgnorePrefix(xpp: org.xmlpull.v1.XmlPullParser, attributeName: string): string;
						public static isEndTag(xpp: org.xmlpull.v1.XmlPullParser, name: string): boolean;
						public static isEndTag(xpp: org.xmlpull.v1.XmlPullParser): boolean;
					}
				}
			}
		}
	}
}


declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module video {
					export class AvcConfig extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.video.AvcConfig>;
						public initializationData: java.util.List<native.Array<number>>;
						public nalUnitLengthFieldLength: number;
						public width: number;
						public height: number;
						public pixelWidthAspectRatio: number;
						public static parse(data: androidx.media2.exoplayer.external.util.ParsableByteArray): androidx.media2.exoplayer.external.video.AvcConfig;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module video {
					export class ColorInfo extends java.lang.Object implements globalAndroid.os.Parcelable {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.video.ColorInfo>;
						public colorSpace: number;
						public colorRange: number;
						public colorTransfer: number;
						public hdrStaticInfo: native.Array<number>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<androidx.media2.exoplayer.external.video.ColorInfo>;
						public equals(obj: any): boolean;
						public describeContents(): number;
						public hashCode(): number;
						public toString(): string;
						public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
						public constructor(colorSpace: number, colorRange: number, colorTransfer: number, hdrStaticInfo: native.Array<number>);
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module video {
					export class DolbyVisionConfig extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.video.DolbyVisionConfig>;
						public profile: number;
						public level: number;
						public codecs: string;
						public static parse(data: androidx.media2.exoplayer.external.util.ParsableByteArray): androidx.media2.exoplayer.external.video.DolbyVisionConfig;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module video {
					export class DummySurface extends globalAndroid.view.Surface {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.video.DummySurface>;
						public secure: boolean;
						public static newInstanceV17(context: globalAndroid.content.Context, secure: boolean): androidx.media2.exoplayer.external.video.DummySurface;
						public describeContents(): number;
						public release(): void;
						public writeToParcel(dest: globalAndroid.os.Parcel, flags: number): void;
						public static isSecureSupported(context: globalAndroid.content.Context): boolean;
					}
					export module DummySurface {
						export class DummySurfaceThread extends globalAndroid.os.HandlerThread implements globalAndroid.os.Handler.Callback {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.video.DummySurface.DummySurfaceThread>;
							public constructor();
							public constructor(name: string, priority: number);
							public constructor(group: java.lang.ThreadGroup, target: java.lang.Runnable);
							public constructor(group: java.lang.ThreadGroup, target: java.lang.Runnable, name: string);
							public constructor(name: string);
							public release(): void;
							public constructor(group: java.lang.ThreadGroup, name: string);
							public constructor(target: java.lang.Runnable);
							public init(secureMode: number): androidx.media2.exoplayer.external.video.DummySurface;
							public constructor(group: java.lang.ThreadGroup, target: java.lang.Runnable, name: string, stackSize: number);
							public constructor(target: java.lang.Runnable, name: string);
							public handleMessage(msg: globalAndroid.os.Message): boolean;
							public run(): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module video {
					export class HevcConfig extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.video.HevcConfig>;
						public initializationData: java.util.List<native.Array<number>>;
						public nalUnitLengthFieldLength: number;
						public static parse(data: androidx.media2.exoplayer.external.util.ParsableByteArray): androidx.media2.exoplayer.external.video.HevcConfig;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module video {
					export class MediaCodecVideoRenderer extends androidx.media2.exoplayer.external.mediacodec.MediaCodecRenderer {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.video.MediaCodecVideoRenderer>;
						public supportsFormat(mediaCodecSelector: androidx.media2.exoplayer.external.mediacodec.MediaCodecSelector, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>, format: androidx.media2.exoplayer.external.Format): number;
						public render(positionUs: number, elapsedRealtimeUs: number): void;
						public getMediaFormat(format: androidx.media2.exoplayer.external.Format, codecMimeType: string, codecMaxValues: androidx.media2.exoplayer.external.video.MediaCodecVideoRenderer.CodecMaxValues, codecOperatingRate: number, deviceNeedsNoPostProcessWorkaround: boolean, tunnelingAudioSessionId: number): globalAndroid.media.MediaFormat;
						public getDecoderInfos(mediaCodecSelector: androidx.media2.exoplayer.external.mediacodec.MediaCodecSelector, format: androidx.media2.exoplayer.external.Format, requiresSecureDecoder: boolean): java.util.List<androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo>;
						public processOutputBuffer(positionUs: number, elapsedRealtimeUs: number, codec: globalAndroid.media.MediaCodec, buffer: java.nio.ByteBuffer, bufferIndex: number, bufferFlags: number, bufferPresentationTimeUs: number, isDecodeOnlyBuffer: boolean, isLastBuffer: boolean, format: androidx.media2.exoplayer.external.Format): boolean;
						public constructor(context: globalAndroid.content.Context, mediaCodecSelector: androidx.media2.exoplayer.external.mediacodec.MediaCodecSelector, allowedJoiningTimeMs: number, eventHandler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.video.VideoRendererEventListener, maxDroppedFramesToNotify: number);
						public onInputFormatChanged(formatHolder: androidx.media2.exoplayer.external.FormatHolder): void;
						public resetPosition(positionUs: number): void;
						public onEnabled(joining: boolean): void;
						public configureCodec(codecInfo: androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo, codec: globalAndroid.media.MediaCodec, format: androidx.media2.exoplayer.external.Format, crypto: globalAndroid.media.MediaCrypto, codecOperatingRate: number): void;
						public getCodecMaxValues(codecInfo: androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo, format: androidx.media2.exoplayer.external.Format, streamFormats: native.Array<androidx.media2.exoplayer.external.Format>): androidx.media2.exoplayer.external.video.MediaCodecVideoRenderer.CodecMaxValues;
						public onDisabled(): void;
						public isEnded(): boolean;
						public releaseCodec(): void;
						public getSurface(): globalAndroid.view.Surface;
						public canKeepCodec(codec: globalAndroid.media.MediaCodec, codecInfo: androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo, oldFormat: androidx.media2.exoplayer.external.Format, newFormat: androidx.media2.exoplayer.external.Format): number;
						public onStreamChanged(formats: native.Array<androidx.media2.exoplayer.external.Format>, offsetUs: number): void;
						public dropOutputBuffer(codec: globalAndroid.media.MediaCodec, index: number, presentationTimeUs: number): void;
						public handleInputBufferSupplementalData(buffer: androidx.media2.exoplayer.external.decoder.DecoderInputBuffer): void;
						public haveRenderedFirstFrame(): boolean;
						public setCurrentStreamFinal(): void;
						public onQueueInputBuffer(buffer: androidx.media2.exoplayer.external.decoder.DecoderInputBuffer): void;
						public renderOutputBufferV21(codec: globalAndroid.media.MediaCodec, index: number, presentationTimeUs: number, releaseTimeNs: number): void;
						public codecNeedsSetOutputSurfaceWorkaround(name: string): boolean;
						public isReady(): boolean;
						public getCapabilities(): androidx.media2.exoplayer.external.RendererCapabilities;
						public disable(): void;
						public configureCodec(mediaCodecInfo0: androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo, mediaCodec1: globalAndroid.media.MediaCodec, format2: androidx.media2.exoplayer.external.Format, mediaCrypto3: globalAndroid.media.MediaCrypto, float4: number): void;
						public enable(configuration: androidx.media2.exoplayer.external.RendererConfiguration, formats: native.Array<androidx.media2.exoplayer.external.Format>, stream: androidx.media2.exoplayer.external.source.SampleStream, positionUs: number, joining: boolean, offsetUs: number): void;
						public constructor(context: globalAndroid.content.Context, mediaCodecSelector: androidx.media2.exoplayer.external.mediacodec.MediaCodecSelector);
						public shouldDropBuffersToKeyframe(earlyUs: number, elapsedRealtimeUs: number, isLastBuffer: boolean): boolean;
						public constructor(context: globalAndroid.content.Context, mediaCodecSelector: androidx.media2.exoplayer.external.mediacodec.MediaCodecSelector, allowedJoiningTimeMs: number, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>, playClearSamplesWithoutKeys: boolean, eventHandler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.video.VideoRendererEventListener, maxDroppedFramesToNotify: number);
						public supportsFormat(mediaCodecSelector0: androidx.media2.exoplayer.external.mediacodec.MediaCodecSelector, drmSessionManager1: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>, format2: androidx.media2.exoplayer.external.Format): number;
						public replaceStream(formats: native.Array<androidx.media2.exoplayer.external.Format>, stream: androidx.media2.exoplayer.external.source.SampleStream, offsetUs: number): void;
						public onCodecInitialized(name: string, initializedTimestampMs: number, initializationDurationMs: number): void;
						public start(): void;
						public getState(): number;
						public onReset(): void;
						public onStopped(): void;
						public getReadingPositionUs(): number;
						public handleMessage(what: number, object: any): void;
						public shouldForceRenderOutputBuffer(earlyUs: number, elapsedSinceLastRenderUs: number): boolean;
						public reset(): void;
						public renderOutputBuffer(codec: globalAndroid.media.MediaCodec, index: number, presentationTimeUs: number): void;
						public flushOrReleaseCodec(): boolean;
						public getCodecNeedsEosPropagation(): boolean;
						public skipOutputBuffer(codec: globalAndroid.media.MediaCodec, index: number, presentationTimeUs: number): void;
						public setOperatingRate(operatingRate: number): void;
						public onStarted(): void;
						public shouldInitCodec(codecInfo: androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo): boolean;
						public constructor(context: globalAndroid.content.Context, mediaCodecSelector: androidx.media2.exoplayer.external.mediacodec.MediaCodecSelector, allowedJoiningTimeMs: number, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>, playClearSamplesWithoutKeys: boolean, enableDecoderFallback: boolean, eventHandler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.video.VideoRendererEventListener, maxDroppedFramesToNotify: number);
						public onProcessedOutputBuffer(presentationTimeUs: number): void;
						public isCurrentStreamFinal(): boolean;
						public getStream(): androidx.media2.exoplayer.external.source.SampleStream;
						public constructor(trackType: number);
						public processOutputBuffer(long0: number, long1: number, mediaCodec2: globalAndroid.media.MediaCodec, byteBuffer3: java.nio.ByteBuffer, int4: number, int5: number, long6: number, boolean7: boolean, boolean8: boolean, format9: androidx.media2.exoplayer.external.Format): boolean;
						public supportsFormat(format: androidx.media2.exoplayer.external.Format): number;
						public getOutputStreamOffsetUs(): number;
						public onProcessedTunneledBuffer(presentationTimeUs: number): void;
						public updateDroppedBufferCounters(droppedBufferCount: number): void;
						public constructor(trackType: number, mediaCodecSelector: androidx.media2.exoplayer.external.mediacodec.MediaCodecSelector, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.FrameworkMediaCrypto>, playClearSamplesWithoutKeys: boolean, enableDecoderFallback: boolean, assumedMinimumCodecOperatingRate: number);
						public onPositionReset(positionUs: number, joining: boolean): void;
						public createDecoderException(cause: java.lang.Throwable, codecInfo: androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo): androidx.media2.exoplayer.external.mediacodec.MediaCodecRenderer.DecoderException;
						public handleMessage(messageType: number, message: any): void;
						public shouldDropOutputBuffer(earlyUs: number, elapsedRealtimeUs: number, isLastBuffer: boolean): boolean;
						public getCodecOperatingRateV23(operatingRate: number, format: androidx.media2.exoplayer.external.Format, streamFormats: native.Array<androidx.media2.exoplayer.external.Format>): number;
						public constructor(context: globalAndroid.content.Context, mediaCodecSelector: androidx.media2.exoplayer.external.mediacodec.MediaCodecSelector, allowedJoiningTimeMs: number);
						public getMediaClock(): androidx.media2.exoplayer.external.util.MediaClock;
						public hasReadStreamToEnd(): boolean;
						public onOutputFormatChanged(codec: globalAndroid.media.MediaCodec, outputFormat: globalAndroid.media.MediaFormat): void;
						public getTrackType(): number;
						public supportsMixedMimeTypeAdaptation(): number;
						public stop(): void;
						public setIndex(index: number): void;
						public maybeThrowStreamError(): void;
						public getDecoderInfos(mediaCodecSelector0: androidx.media2.exoplayer.external.mediacodec.MediaCodecSelector, format1: androidx.media2.exoplayer.external.Format, boolean2: boolean): java.util.List<androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo>;
						public maybeDropBuffersToKeyframe(codec: globalAndroid.media.MediaCodec, index: number, presentationTimeUs: number, positionUs: number): boolean;
					}
					export module MediaCodecVideoRenderer {
						export class CodecMaxValues extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.video.MediaCodecVideoRenderer.CodecMaxValues>;
							public width: number;
							public height: number;
							public inputSize: number;
							public constructor(width: number, height: number, inputSize: number);
						}
						export class OnFrameRenderedListenerV23 extends java.lang.Object implements globalAndroid.media.MediaCodec.OnFrameRenderedListener {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.video.MediaCodecVideoRenderer.OnFrameRenderedListenerV23>;
							public onFrameRendered(codec: globalAndroid.media.MediaCodec, presentationTimeUs: number, nanoTime: number): void;
						}
						export class VideoDecoderException extends androidx.media2.exoplayer.external.mediacodec.MediaCodecRenderer.DecoderException {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.video.MediaCodecVideoRenderer.VideoDecoderException>;
							public surfaceIdentityHashCode: number;
							public isSurfaceValid: boolean;
							public constructor();
							public constructor(message: string, cause: java.lang.Throwable);
							public constructor(cause: java.lang.Throwable);
							public constructor(message: string);
							public constructor(cause: java.lang.Throwable, codecInfo: androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo, surface: globalAndroid.view.Surface);
							public constructor(cause: java.lang.Throwable, codecInfo: androidx.media2.exoplayer.external.mediacodec.MediaCodecInfo);
							public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module video {
					export abstract class SimpleDecoderVideoRenderer extends androidx.media2.exoplayer.external.BaseRenderer {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.video.SimpleDecoderVideoRenderer>;
						public decoderCounters: androidx.media2.exoplayer.external.decoder.DecoderCounters;
						public supportsFormatInternal(drmSessionManager0: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.ExoMediaCrypto>, format1: androidx.media2.exoplayer.external.Format): number;
						public render(positionUs: number, elapsedRealtimeUs: number): void;
						public onQueueInputBuffer(buffer: androidx.media2.exoplayer.external.video.VideoDecoderInputBuffer): void;
						public onInputFormatChanged(formatHolder: androidx.media2.exoplayer.external.FormatHolder): void;
						public resetPosition(positionUs: number): void;
						public onEnabled(joining: boolean): void;
						public skipOutputBuffer(outputBuffer: androidx.media2.exoplayer.external.video.VideoDecoderOutputBuffer): void;
						public onOutputSurfaceReset(surface: globalAndroid.view.Surface): void;
						public setOperatingRate(float0: number): void;
						public onDisabled(): void;
						public isEnded(): boolean;
						public maybeNotifyVideoSizeChanged(width: number, height: number): void;
						public onStreamChanged(formats: native.Array<androidx.media2.exoplayer.external.Format>, offsetUs: number): void;
						public maybeDropBuffersToKeyframe(positionUs: number): boolean;
						public setCurrentStreamFinal(): void;
						public hasOutputSurface(): boolean;
						public isReady(): boolean;
						public getCapabilities(): androidx.media2.exoplayer.external.RendererCapabilities;
						public disable(): void;
						public constructor(allowedJoiningTimeMs: number, eventHandler: globalAndroid.os.Handler, eventListener: androidx.media2.exoplayer.external.video.VideoRendererEventListener, maxDroppedFramesToNotify: number, drmSessionManager: androidx.media2.exoplayer.external.drm.DrmSessionManager<androidx.media2.exoplayer.external.drm.ExoMediaCrypto>, playClearSamplesWithoutKeys: boolean);
						public enable(configuration: androidx.media2.exoplayer.external.RendererConfiguration, formats: native.Array<androidx.media2.exoplayer.external.Format>, stream: androidx.media2.exoplayer.external.source.SampleStream, positionUs: number, joining: boolean, offsetUs: number): void;
						public shouldDropBuffersToKeyframe(earlyUs: number, elapsedRealtimeUs: number): boolean;
						public replaceStream(formats: native.Array<androidx.media2.exoplayer.external.Format>, stream: androidx.media2.exoplayer.external.source.SampleStream, offsetUs: number): void;
						public start(): void;
						public dequeueOutputBuffer(): androidx.media2.exoplayer.external.video.VideoDecoderOutputBuffer;
						public dropOutputBuffer(outputBuffer: androidx.media2.exoplayer.external.video.VideoDecoderOutputBuffer): void;
						public getState(): number;
						public onStopped(): void;
						public getReadingPositionUs(): number;
						public shouldForceRenderOutputBuffer(earlyUs: number, elapsedSinceLastRenderUs: number): boolean;
						public reset(): void;
						public shouldDropOutputBuffer(earlyUs: number, elapsedRealtimeUs: number): boolean;
						public clearOutputBuffer(): void;
						public renderOutputBuffer(long0: number, format1: androidx.media2.exoplayer.external.Format): void;
						public onStarted(): void;
						public flushDecoder(): void;
						public onOutputSurfaceRemoved(): void;
						public releaseDecoder(): void;
						public onProcessedOutputBuffer(presentationTimeUs: number): void;
						public onOutputSurfaceChanged(): void;
						public isCurrentStreamFinal(): boolean;
						public onFrameRendered(surface: globalAndroid.view.Surface): void;
						public getStream(): androidx.media2.exoplayer.external.source.SampleStream;
						public constructor(trackType: number);
						public supportsFormat(format: androidx.media2.exoplayer.external.Format): number;
						public updateDroppedBufferCounters(droppedBufferCount: number): void;
						public onPositionReset(positionUs: number, joining: boolean): void;
						public onDecoderInitialized(name: string, initializedTimestampMs: number, initializationDurationMs: number): void;
						public createDecoder(format0: androidx.media2.exoplayer.external.Format, exoMediaCrypto1: androidx.media2.exoplayer.external.drm.ExoMediaCrypto): androidx.media2.exoplayer.external.decoder.SimpleDecoder<androidx.media2.exoplayer.external.video.VideoDecoderInputBuffer,any,any>;
						public getMediaClock(): androidx.media2.exoplayer.external.util.MediaClock;
						public hasReadStreamToEnd(): boolean;
						public getTrackType(): number;
						public supportsMixedMimeTypeAdaptation(): number;
						public stop(): void;
						public setIndex(index: number): void;
						public maybeThrowStreamError(): void;
					}
					export module SimpleDecoderVideoRenderer {
						export class ReinitializationState extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.video.SimpleDecoderVideoRenderer.ReinitializationState>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.video.SimpleDecoderVideoRenderer$ReinitializationState interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								equals(object0: any): boolean;
								hashCode(): number;
								toString(): string;
								annotationType(): java.lang.Class<any>;
							});
							public constructor();
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public equals(obj: any): boolean;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module video {
					export class VideoDecoderException extends java.lang.Exception {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.video.VideoDecoderException>;
						public constructor();
						public constructor(message: string, cause: java.lang.Throwable, enableSuppression: boolean, writableStackTrace: boolean);
						public constructor(message: string, cause: java.lang.Throwable);
						public constructor(cause: java.lang.Throwable);
						public constructor(message: string);
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module video {
					export class VideoDecoderInputBuffer extends androidx.media2.exoplayer.external.decoder.DecoderInputBuffer {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.video.VideoDecoderInputBuffer>;
						public colorInfo: androidx.media2.exoplayer.external.video.ColorInfo;
						public constructor();
						public constructor(bufferReplacementMode: number);
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module video {
					export abstract class VideoDecoderOutputBuffer extends androidx.media2.exoplayer.external.decoder.OutputBuffer {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.video.VideoDecoderOutputBuffer>;
						public static COLORSPACE_UNKNOWN: number;
						public static COLORSPACE_BT601: number;
						public static COLORSPACE_BT709: number;
						public static COLORSPACE_BT2020: number;
						public decoderPrivate: number;
						public mode: number;
						public data: java.nio.ByteBuffer;
						public width: number;
						public height: number;
						public colorInfo: androidx.media2.exoplayer.external.video.ColorInfo;
						public yuvPlanes: native.Array<java.nio.ByteBuffer>;
						public yuvStrides: native.Array<number>;
						public colorspace: number;
						public supplementalData: java.nio.ByteBuffer;
						public constructor();
						public init(timeUs: number, mode: number, supplementalData: java.nio.ByteBuffer): void;
						public initForYuvFrame(width: number, height: number, yStride: number, uvStride: number, colorspace: number): boolean;
						public initForPrivateFrame(width: number, height: number): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module video {
					export class VideoFrameMetadataListener extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.video.VideoFrameMetadataListener>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.video.VideoFrameMetadataListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onVideoFrameAboutToBeRendered(long0: number, long1: number, format2: androidx.media2.exoplayer.external.Format): void;
						});
						public constructor();
						public onVideoFrameAboutToBeRendered(long0: number, long1: number, format2: androidx.media2.exoplayer.external.Format): void;
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module video {
					export class VideoFrameReleaseTimeHelper extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.video.VideoFrameReleaseTimeHelper>;
						public constructor();
						public disable(): void;
						public adjustReleaseTime(framePresentationTimeUs: number, unadjustedReleaseTimeNs: number): number;
						public constructor(context: globalAndroid.content.Context);
						public enable(): void;
					}
					export module VideoFrameReleaseTimeHelper {
						export class DefaultDisplayListener extends java.lang.Object implements globalAndroid.hardware.display.DisplayManager.DisplayListener {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.video.VideoFrameReleaseTimeHelper.DefaultDisplayListener>;
							public constructor(param0: androidx.media2.exoplayer.external.video.VideoFrameReleaseTimeHelper, displayManager: globalAndroid.hardware.display.DisplayManager);
							public unregister(): void;
							public onDisplayChanged(displayId: number): void;
							public onDisplayRemoved(displayId: number): void;
							public onDisplayAdded(displayId: number): void;
							public register(): void;
						}
						export class VSyncSampler extends java.lang.Object implements globalAndroid.view.Choreographer.FrameCallback, globalAndroid.os.Handler.Callback {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.video.VideoFrameReleaseTimeHelper.VSyncSampler>;
							public sampledVsyncTimeNs: number;
							public doFrame(vsyncTimeNs: number): void;
							public static getInstance(): androidx.media2.exoplayer.external.video.VideoFrameReleaseTimeHelper.VSyncSampler;
							public addObserver(): void;
							public removeObserver(): void;
							public handleMessage(message: globalAndroid.os.Message): boolean;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module video {
					export class VideoListener extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.video.VideoListener>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.video.VideoListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onVideoSizeChanged(int0: number, int1: number, int2: number, float3: number): void;
							onSurfaceSizeChanged(int0: number, int1: number): void;
							onRenderedFirstFrame(): void;
						});
						public constructor();
						public onRenderedFirstFrame(): void;
						public onVideoSizeChanged(int0: number, int1: number, int2: number, float3: number): void;
						public onSurfaceSizeChanged(int0: number, int1: number): void;
					}
						export module  {
					export module VideoListener {
							export abstract class CC extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.video.VideoListener..CC>;
								public static onSurfaceSizeChanged$$dflt$$(this0: androidx.media2.exoplayer.external.video.VideoListener, width: number, height: number): void;
								public static onVideoSizeChanged$$dflt$$(this0: androidx.media2.exoplayer.external.video.VideoListener, width: number, height: number, unappliedRotationDegrees: number, pixelWidthHeightRatio: number): void;
								public static onRenderedFirstFrame$$dflt$$(this0: androidx.media2.exoplayer.external.video.VideoListener): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module video {
					export class VideoRendererEventListener extends java.lang.Object {
						public static class: java.lang.Class<androidx.media2.exoplayer.external.video.VideoRendererEventListener>;
						/**
						 * Constructs a new instance of the androidx.media2.exoplayer.external.video.VideoRendererEventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onVideoEnabled(decoderCounters0: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
							onVideoDecoderInitialized(string0: string, long1: number, long2: number): void;
							onVideoInputFormatChanged(format0: androidx.media2.exoplayer.external.Format): void;
							onDroppedFrames(int0: number, long1: number): void;
							onVideoSizeChanged(int0: number, int1: number, int2: number, float3: number): void;
							onRenderedFirstFrame(surface0: globalAndroid.view.Surface): void;
							onVideoDisabled(decoderCounters0: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
						});
						public constructor();
						public onVideoEnabled(decoderCounters0: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
						public onRenderedFirstFrame(surface0: globalAndroid.view.Surface): void;
						public onVideoSizeChanged(int0: number, int1: number, int2: number, float3: number): void;
						public onVideoDisabled(decoderCounters0: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
						public onVideoDecoderInitialized(string0: string, long1: number, long2: number): void;
						public onDroppedFrames(int0: number, long1: number): void;
						public onVideoInputFormatChanged(format0: androidx.media2.exoplayer.external.Format): void;
					}
						export module  {
					export module VideoRendererEventListener {
							export abstract class CC extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.video.VideoRendererEventListener..CC>;
								public static onDroppedFrames$$dflt$$(this0: androidx.media2.exoplayer.external.video.VideoRendererEventListener, count: number, elapsedMs: number): void;
								public static onVideoDisabled$$dflt$$(this0: androidx.media2.exoplayer.external.video.VideoRendererEventListener, counters: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
								public static onVideoEnabled$$dflt$$(this0: androidx.media2.exoplayer.external.video.VideoRendererEventListener, counters: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
								public static onRenderedFirstFrame$$dflt$$(this0: androidx.media2.exoplayer.external.video.VideoRendererEventListener, surface: globalAndroid.view.Surface): void;
								public static onVideoDecoderInitialized$$dflt$$(this0: androidx.media2.exoplayer.external.video.VideoRendererEventListener, decoderName: string, initializedTimestampMs: number, initializationDurationMs: number): void;
								public static onVideoInputFormatChanged$$dflt$$(this0: androidx.media2.exoplayer.external.video.VideoRendererEventListener, format: androidx.media2.exoplayer.external.Format): void;
								public static onVideoSizeChanged$$dflt$$(this0: androidx.media2.exoplayer.external.video.VideoRendererEventListener, width: number, height: number, unappliedRotationDegrees: number, pixelWidthHeightRatio: number): void;
							}
						}
						export class EventDispatcher extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.video.VideoRendererEventListener.EventDispatcher>;
							public droppedFrames(droppedFrameCount: number, elapsedMs: number): void;
							public renderedFirstFrame(surface: globalAndroid.view.Surface): void;
							public enabled(decoderCounters: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
							public disabled(counters: androidx.media2.exoplayer.external.decoder.DecoderCounters): void;
							public constructor(handler: globalAndroid.os.Handler, listener: androidx.media2.exoplayer.external.video.VideoRendererEventListener);
							public inputFormatChanged(format: androidx.media2.exoplayer.external.Format): void;
							public videoSizeChanged(width: number, height: number, unappliedRotationDegrees: number, pixelWidthHeightRatio: number): void;
							public decoderInitialized(decoderName: string, initializedTimestampMs: number, initializationDurationMs: number): void;
						}
					}
				}
			}
		}
	}
}


declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module video {
					export module spherical {
						export class CameraMotionListener extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.video.spherical.CameraMotionListener>;
							/**
							 * Constructs a new instance of the androidx.media2.exoplayer.external.video.spherical.CameraMotionListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onCameraMotion(long0: number, floats1: native.Array<number>): void;
								onCameraMotionReset(): void;
							});
							public constructor();
							public onCameraMotion(long0: number, floats1: native.Array<number>): void;
							public onCameraMotionReset(): void;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module video {
					export module spherical {
						export class CameraMotionRenderer extends androidx.media2.exoplayer.external.BaseRenderer {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.video.spherical.CameraMotionRenderer>;
							public isEnded(): boolean;
							public getMediaClock(): androidx.media2.exoplayer.external.util.MediaClock;
							public onStreamChanged(formats: native.Array<androidx.media2.exoplayer.external.Format>, offsetUs: number): void;
							public supportsFormat(format: androidx.media2.exoplayer.external.Format): number;
							public onPositionReset(positionUs: number, joining: boolean): void;
							public reset(): void;
							public resetPosition(positionUs: number): void;
							public disable(): void;
							public setIndex(index: number): void;
							public isCurrentStreamFinal(): boolean;
							public stop(): void;
							public start(): void;
							public getTrackType(): number;
							public constructor();
							public getCapabilities(): androidx.media2.exoplayer.external.RendererCapabilities;
							public render(positionUs: number, elapsedRealtimeUs: number): void;
							public replaceStream(formats: native.Array<androidx.media2.exoplayer.external.Format>, stream: androidx.media2.exoplayer.external.source.SampleStream, offsetUs: number): void;
							public hasReadStreamToEnd(): boolean;
							public setCurrentStreamFinal(): void;
							public handleMessage(what: number, object: any): void;
							public getState(): number;
							public isReady(): boolean;
							public supportsMixedMimeTypeAdaptation(): number;
							public maybeThrowStreamError(): void;
							public handleMessage(messageType: number, message: any): void;
							public getReadingPositionUs(): number;
							public setOperatingRate(float0: number): void;
							public constructor(trackType: number);
							public enable(configuration: androidx.media2.exoplayer.external.RendererConfiguration, formats: native.Array<androidx.media2.exoplayer.external.Format>, stream: androidx.media2.exoplayer.external.source.SampleStream, positionUs: number, joining: boolean, offsetUs: number): void;
							public onDisabled(): void;
							public getStream(): androidx.media2.exoplayer.external.source.SampleStream;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module video {
					export module spherical {
						export class FrameRotationQueue extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.video.spherical.FrameRotationQueue>;
							public constructor();
							public static computeRecenterMatrix(recenterMatrix: native.Array<number>, rotationMatrix: native.Array<number>): void;
							public setRotation(timestampUs: number, angleAxis: native.Array<number>): void;
							public reset(): void;
							public pollRotationMatrix(matrix: native.Array<number>, timestampUs: number): boolean;
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module video {
					export module spherical {
						export class Projection extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.video.spherical.Projection>;
							public static DRAW_MODE_TRIANGLES: number;
							public static DRAW_MODE_TRIANGLES_STRIP: number;
							public static DRAW_MODE_TRIANGLES_FAN: number;
							public static TEXTURE_COORDS_PER_VERTEX: number;
							public static POSITION_COORDS_PER_VERTEX: number;
							public leftMesh: androidx.media2.exoplayer.external.video.spherical.Projection.Mesh;
							public rightMesh: androidx.media2.exoplayer.external.video.spherical.Projection.Mesh;
							public stereoMode: number;
							public singleMesh: boolean;
							public constructor(mesh: androidx.media2.exoplayer.external.video.spherical.Projection.Mesh, stereoMode: number);
							public static createEquirectangular(radius: number, latitudes: number, longitudes: number, verticalFovDegrees: number, horizontalFovDegrees: number, stereoMode: number): androidx.media2.exoplayer.external.video.spherical.Projection;
							public constructor(leftMesh: androidx.media2.exoplayer.external.video.spherical.Projection.Mesh, rightMesh: androidx.media2.exoplayer.external.video.spherical.Projection.Mesh, stereoMode: number);
							public static createEquirectangular(stereoMode: number): androidx.media2.exoplayer.external.video.spherical.Projection;
						}
						export module Projection {
							export class DrawMode extends java.lang.Object implements java.lang.annotation.Annotation {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.video.spherical.Projection.DrawMode>;
								/**
								 * Constructs a new instance of the androidx.media2.exoplayer.external.video.spherical.Projection$DrawMode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									equals(object0: any): boolean;
									hashCode(): number;
									toString(): string;
									annotationType(): java.lang.Class<any>;
								});
								public constructor();
								public toString(): string;
								public equals(obj: any): boolean;
								public annotationType(): java.lang.Class<any>;
								public hashCode(): number;
							}
							export class Mesh extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.video.spherical.Projection.Mesh>;
								public getSubMesh(index: number): androidx.media2.exoplayer.external.video.spherical.Projection.SubMesh;
								public getSubMeshCount(): number;
								public constructor(subMeshes: native.Array<androidx.media2.exoplayer.external.video.spherical.Projection.SubMesh>);
							}
							export class SubMesh extends java.lang.Object {
								public static class: java.lang.Class<androidx.media2.exoplayer.external.video.spherical.Projection.SubMesh>;
								public static VIDEO_TEXTURE_ID: number;
								public textureId: number;
								public mode: number;
								public vertices: native.Array<number>;
								public textureCoords: native.Array<number>;
								public getVertexCount(): number;
								public constructor(textureId: number, vertices: native.Array<number>, textureCoords: native.Array<number>, mode: number);
							}
						}
					}
				}
			}
		}
	}
}

declare module androidx {
	export module media2 {
		export module exoplayer {
			export module external {
				export module video {
					export module spherical {
						export class ProjectionDecoder extends java.lang.Object {
							public static class: java.lang.Class<androidx.media2.exoplayer.external.video.spherical.ProjectionDecoder>;
							public static decode(projectionData: native.Array<number>, stereoMode: number): androidx.media2.exoplayer.external.video.spherical.Projection;
						}
					}
				}
			}
		}
	}
}


//Generics information:
//androidx.media2.exoplayer.external.decoder.Decoder:3
//androidx.media2.exoplayer.external.decoder.SimpleDecoder:3
//androidx.media2.exoplayer.external.drm.DefaultDrmSession:1
//androidx.media2.exoplayer.external.drm.DefaultDrmSession.ProvisioningManager:1
//androidx.media2.exoplayer.external.drm.DefaultDrmSession.ReleaseCallback:1
//androidx.media2.exoplayer.external.drm.DefaultDrmSessionManager:1
//androidx.media2.exoplayer.external.drm.DrmSession:1
//androidx.media2.exoplayer.external.drm.DrmSessionManager:1
//androidx.media2.exoplayer.external.drm.ErrorStateDrmSession:1
//androidx.media2.exoplayer.external.drm.ExoMediaDrm:1
//androidx.media2.exoplayer.external.drm.ExoMediaDrm.OnEventListener:1
//androidx.media2.exoplayer.external.drm.ExoMediaDrm.OnKeyStatusChangeListener:1
//androidx.media2.exoplayer.external.drm.OfflineLicenseHelper:1
//androidx.media2.exoplayer.external.mediacodec.MediaCodecUtil.ScoreProvider:1
//androidx.media2.exoplayer.external.offline.FilterableManifest:1
//androidx.media2.exoplayer.external.offline.FilteringManifestParser:1
//androidx.media2.exoplayer.external.source.CompositeMediaSource:1
//androidx.media2.exoplayer.external.source.ConcatenatingMediaSource.MessageData:1
//androidx.media2.exoplayer.external.source.SequenceableLoader.Callback:1
//androidx.media2.exoplayer.external.source.chunk.ChunkSampleStream:1
//androidx.media2.exoplayer.external.source.chunk.ChunkSampleStream.ReleaseCallback:1
//androidx.media2.exoplayer.external.upstream.Loader.Callback:1
//androidx.media2.exoplayer.external.upstream.Loader.LoadTask:1
//androidx.media2.exoplayer.external.upstream.ParsingLoadable:1
//androidx.media2.exoplayer.external.upstream.ParsingLoadable.Parser:1
//androidx.media2.exoplayer.external.util.ErrorMessageProvider:1
//androidx.media2.exoplayer.external.util.EventDispatcher:1
//androidx.media2.exoplayer.external.util.EventDispatcher.Event:1
//androidx.media2.exoplayer.external.util.EventDispatcher.HandlerAndListener:1
//androidx.media2.exoplayer.external.util.Predicate:1
//androidx.media2.exoplayer.external.util.TimedValueQueue:1

